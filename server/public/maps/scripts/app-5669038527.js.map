{"version":3,"sources":["scripts/app-5669038527.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","name","route","img","copy","explore","tool","timelines","TimelinesController","$scope","$window","moment","d3","draw","data","pfApi","filter","rawdata","p","id","chart","feature","events","sort","align","svgEl","svgWidth","width","svgHeight","height","svgChart","select","append","svgRange","axisStyle","shape-rendering","stroke","style","class","transform","call","svg","axis","scale","linear","domain","range","orient","barBackground","barsFeature","barsTimeline","patientsX","patients","patient","hasOwnProperty","a","b","calcEvents","index","value","forEach","dateEvents","evt","startValue","start","endValue","end","rowHeight","floor","length","drawBackground","drawFeature","drawTimeline","svgFeatures","selectAll","exit","remove","minmax","max","map","transition","duration","x","d","enter","fill","i","features","css","top","filterEventTypes","selected","filterDateEvents","dateEvent","reduce","c","min","Infinity","val","tickFormat","unix","format","rows","cells","opacity","color","round","sorts","getPatientFilterApi","init","onSelect","add","eventClick","eventType","toggleFilter","toggleClass","setBusy","setDataset","then","getTimelines","response","processPatientData","payload","pts","processFeatureData","unshift","processEventData","eventTypes","$watchGroup","status","rv","Object","keys","v","key","m","mf","dateSingle","eventOrder","date","endDates","eventID","startDates","sd","ed","concat","survival","SurvivalController","ids","rawData","getCalculatedSurvivalCurves","r","getPatientHistoryTable","tbl","login","SubnavController","toolsClick","cohortClick","PlsrController","$sce","_","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","xScale","yScale","xMax","yMax","d3Chart","d3Tooltip","mtx","rownames","indexOf","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","$watch","update","setScale","innerWidth","innerHeight","nice","abs","vectors","genes","brush","y","on","bv","extent","classed","circles","cx","cy","html","event","pageX","pageY","modal","url","$apply","trustAsResourceUrl","delay","lines","stroke-width","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","item","loadingNames","vectorNames","maxValue","resize","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","elChart","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","PcaController","dataset","xAxis","ticks","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","rawPatientData","cohort","createCohort","addFilter","__data__","getCalculatedPCA","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","search","csChart","term","toUpperCase","len","nodes","ele","unselect","substr","getPathway","fromJson","container","elements","minZoom","maxZoom","layout","fit","e","cyTarget","pmid","source","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","onDataSource","dispatch","userApi","onLogin","Signal","onLogout","_user","password","authenticated","token","_domains","logout","user","req","method","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataSetNames","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getCohortPatient","_cohortPatient","getCohortGene","_cohortGene","collection","get","_collection","push","onAdd","splice","onRemove","save","load","destroy","_patientFilterApi","_filterTree","localStorage","getItem","_filter","delFilter","children","onChange","setItem","_serialize","getActiveFilter","setActiveFilter","getFilterTree","idFn","o","sb","join","service","markers","MarkersController","cyChart","initializeViewModel","loadData","styles","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","searchGene","geneSearchResult","startBatch","matches","found","deselect","toLowerCase","endBatch","searchGeneResult","searchPatient","searchPatientResult","optInteractiveModes","optInteractiveMode","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","label","line-width","geneOver","geneOut","geneClick","patientOver","patientOut","patientClick","removeAll","over","out","click","hidePatientEdges","$","node","behaviors","showPatientInfo","nodeType","patientChromosomes","neighborhood","hidePatientInfo","showDegreeOne","degmap","batchData","hideDegreeOne","showDegreeTwo","hideDegreeTwo","showOncoPrint","states","register","unregister","edge","off","next","prev","colors","state","colorMap","mutation","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","updateEdge","zoom","font","ceil","sizeBdr","sizeEle","degree","sizeLbl","gender","age","s","split","ii","pow","angle","cos","sin","cb","dataPatients","dataMarkers","hobo","locked","selectable","grabbable","edgeType","MetadataController","colnames","dtTable","dataTable","paging","api","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","apply","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","parseFloat","diagnosis","isNaN","help","HelpController","videos","desc","footer","FooterController","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","filters","FiltersController","DatasourceController","datasets","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","CohortController","cohorts","CompareController","runBlock","$exceptionHandler","log","onerror","message","fileName","lineNumber","columnNumber","Error","$on","toState","run","routerConfig","$stateProvider","$urlRouterProvider","template","authenticate","otherwise","config","constant","prototype","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-5669038527.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui-rangeSlider', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'glyphicon-remove' : 'glyphicon-plus')\n                    .removeClass(isLocked ? 'glyphicon-plus' : 'glyphicon-remove');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, moment, d3) {\n\n            var chart =(function(){\n\n                // SVG Elements + Attributes\n                var svgEl = angular.element(\"#timelines-chart\");\n                var svgWidth = svgEl.width()-100;\n                var svgHeight = svgEl.height();\n                var svgChart = d3.select('#timelines-chart').append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", svgHeight);\n                var svgRange = [0, svgWidth];\n\n                // Axis Elements + Style\n                var axisStyle = {'shape-rendering': 'crispEdges','stroke': 'none'};\n                svgChart.append(\"g\").style(axisStyle)\n                    .attr({\n                        \"class\":\"axisFeature axis\",\n                        \"transform\": \"translate(50, 49)\"\n                    }).call(d3.svg.axis().scale(d3.scale.linear().domain([0, 1]).range([0, svgWidth])).orient('top'));\n                svgChart.append(\"g\").style(axisStyle)\n                    .attr({\n                        \"class\":\"axisTimeline axis\",\n                        \"transform\": \"translate(50, 0)\"\n                    }).call(d3.svg.axis().scale(d3.scale.linear().domain([0, 1]).range([0, svgWidth])).orient('bottom'));\n\n                var barBackground = svgChart.append(\"g\");\n                var barsFeature = svgChart.append(\"g\");\n                var barsTimeline = svgChart.append(\"g\");\n\n\n                // Main Draw Function\n                var draw = function(patientsX, feature, events, sort, align){\n                    \n                    // Filter Patients That Don't Have Alignment Event\n                    var patients = patientsX.filter(function(patient){\n                        return patient.hasOwnProperty(\"__\"+this.name);\n                    }, align);\n\n                    // Sort Patients\n                    patients = patients.sort(function(a,b){\n                        return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? -1 : 1;\n                    }, sort);\n\n                    // Set Event Start + End Dates Based On Alignment Event\n                    patients.forEach(function(patient){\n                        patient.dateEvents.forEach(function(evt){\n\n                            evt.startValue = evt.start + this;\n                            evt.endValue = (evt.end!=null) ? evt.end +this : null;\n                        }, -patient[\"__\"+this.name].start)\n\n                    }, align);\n\n                    // Draw Graphs\n                    var rowHeight = Math.floor( (svgHeight-100) / patients.length);\n                    if (rowHeight<1) rowHeight = 1;\n                    if (rowHeight>20) rowHeight = 20;\n                    \n                    drawBackground(patients, feature, events, sort, align, rowHeight);\n                    drawFeature(patients, feature, events, sort, align, rowHeight);\n                    drawTimeline(patients, feature, events, sort, align, rowHeight);\n                };\n\n                var drawFeature = function(patients, feature, events, sort, align, rowHeight){\n                    var svgFeatures;\n                    if (feature.index==-1){\n                        svgFeatures = svgChart.selectAll(\"rect.feature\")\n                        .data([]);\n                        svgFeatures.exit()\n                        .remove();\n                        return;\n                    }\n                    \n\n                    // Retrieve Min + Max Values\n                    var minmax = [ 0,\n                        d3.max(\n                            patients.map(function(patient){\n                                return patient.calcEvents[this].value\n                            }, feature.index))\n                    ];\n\n                    // Update Axis\n                    var scale = d3.scale.linear()\n                        .domain(minmax)\n                        .range(svgRange);                    \n                    svgChart.transition().duration(750).select('g.axisFeature').call(\n                        d3.svg.axis().scale(scale).orient('top'));\n                    \n                    // Data Bind\n                    svgFeatures = barsFeature.selectAll(\"rect.feature\")\n                        .data(patients);\n\n                    // Update\n                    svgFeatures\n                        .transition()\n                        .duration(300)\n                         .attr({\n                            \"class\": \"feature\",\n                            \"x\": 0,\n                            \"width\": function(d) { return scale(d.calcEvents[feature.index].value); },\n                            \"height\": (rowHeight==1) ? 1 : rowHeight-1\n                        });\n\n                    // Create\n                    svgFeatures\n                        .enter()\n                        .append(\"rect\")\n                        .style( {\"fill\": \"#9AD6F1\"})\n                        .attr({\n                            \"transform\": function(d, i) {return \"translate(50,\" + ((i * rowHeight)+50) + \")\";},\n                            \"class\": \"feature\",\n                            \"x\": 0,\n                            \"width\": function(d) {\n                                return scale(d.calcEvents[feature.index].value);\n                            },\n                            \"height\": (rowHeight==1) ? 1 : rowHeight-1\n                        })\n\n                    // Remove\n                    svgFeatures.exit()\n                      .remove();\n                };\n\n                var drawBackground = function(patients, features, events, sort, align, rowHeight){\n                    angular.element(\".timelines-lbl-events\").css({\"top\": (rowHeight * patients.length) + 100 });\n                    \n                    // Data Bind\n                    var svgFeatures = barBackground.selectAll(\"rect.lines\")\n                        .data(patients);\n\n                    // Create\n                    svgFeatures\n                        .enter()\n                        .append(\"rect\")\n                        .style({'fill':'#EFEFEF'})\n                        .attr({\n                                'width' : svgWidth,\n                                'height' : rowHeight-1,\n                                'class' : 'lines',\n                                'transform': function(d, i) {\n                                 return \"translate(50,\" + ((i * rowHeight)+50) + \")\"; }\n                            });\n\n                    // Remove\n                    svgFeatures\n                        .exit()\n                        .remove();\n                }\n\n                var drawTimeline = function(patients, features, events, sort, align, rowHeight){\n\n                    // Used To Filter Events\n                    var filterEventTypes = events.filter( function(events) { return events.selected; });\n                    var filterDateEvents = function(dateEvents){\n                        return dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<filterEventTypes.length; i++){\n                                if (filterEventTypes[i].name == dateEvent.name) return true;\n                            }\n                            return false;\n                        });\n                    };\n\n                    // Retrive Min + Max Values\n                    var minmax = [\n                        patients\n                        .reduce(function(p, c) {\n                            return Math.min(p, filterDateEvents(c.dateEvents)\n                                .reduce(function(p, c) {\n                                        return Math.min(c.startValue, p)\n                                    },\n                                    Infinity))\n                        }, Infinity),\n\n                        patients\n                        .reduce(function(p, c) {\n                            return Math.max(p, filterDateEvents(c.dateEvents)\n                                .reduce(function(p, c) {\n                                    var val = (c.endValue==null) ? c.startValue : c.endValue;\n                                    return Math.max(val, p)\n                                }, -Infinity))\n                        }, -Infinity)\n                    ];\n\n                    // Update Axis\n                    var scale = \n                        d3.scale.linear()\n                            .domain(minmax)\n                            .range(svgRange);\n                        var axis = svgChart.transition().duration(300).select('g.axisTimeline');\n                        axis.attr({\"transform\": \"translate(50,\"+((rowHeight*patients.length)+49)+\")\"});\n                        axis\n                            .call(d3.svg.axis().scale(scale).orient('bottom')\n                            .tickFormat(function(d) { return moment.unix(d/1000).format(\"MM/DD/YYYY\"); })\n                        );\n                      \n                    // Data Bind Patient\n                    var rows = barsTimeline.selectAll(\"g.timeline\")\n                        .data( patients );\n\n                    rows.enter().append(\"g\")\n                        .attr({\n                                'width' : svgWidth,\n                                'height' : rowHeight-1,\n                                'class' : 'timeline',\n                                'transform': function(d, i) { return \"translate(50,\" + ((i * rowHeight)+50) + \")\"; }\n                            });\n\n                    rows.exit().remove();\n\n                    // Data Bind Event\n                    var cells = rows.selectAll(\"rect.timeline\")\n                        .data( function(d) { return filterDateEvents(d.dateEvents); });\n\n                    cells.enter()\n                        .append(\"rect\")\n                        .style({'opacity':1, 'fill':color})\n                        .attr({\n                            'class':'timeline',\n                            'height': rowHeight,\n                            'width':function(d){ return (d.endValue==null) ? 3 : (scale(d.endValue) - scale(d.startValue)); },\n                            'x': function(d) { return Math.round(scale(d.startValue));}\n                        })\n\n                    cells.transition()\n                        .style({'opacity':1, 'fill':color})\n                        .attr({\n                            'width':function(d){ return (d.endValue==null) ? 3 : (scale(d.endValue) - scale(d.startValue)); },\n                            'x': function(d) { return Math.round(scale(d.startValue));} \n                        });\n\n                    cells.exit().remove();\n\n                }\n                return {\n                    draw:draw\n                }\n            })();\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.features;\n            vm.feature;\n            vm.events;\n            vm.sorts;\n            vm.sort;\n            vm.align;\n\n            // Static Model\n            var rawdata;\n            var pfApi = osApi.getPatientFilterApi();\n            pfApi.init(vm.datasource);\n            pfApi.onSelect.add(draw);\n\n            // Event Handlers\n            vm.eventClick = function(eventType) {\n                eventType.selected = !eventType.selected;\n                draw();\n            };\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            };\n\n            // Global Refresh Function\n            function draw(){ \n                var data = pfApi.filter(rawdata, function(p){ return p.id });\n                chart.draw(data, vm.feature, vm.events, vm.sort, vm.align);\n            }\n\n            // Elements\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getTimelines().then(function(response) {\n\n                    // Clean Data + Set Default VM\n                    rawdata = processPatientData(response.payload.pts);\n                    vm.sorts = processFeatureData(rawdata);\n                    vm.sort = vm.sorts[0];\n                    var features = processFeatureData(rawdata);\n                    features.unshift({index:-1, name:'None'});\n                    vm.features =  features;\n                    vm.feature = vm.features[0];\n                    \n                    vm.events = processEventData(response.payload.eventTypes);\n                    vm.align = vm.events[0];\n\n                    // Trigger Redraw on Property Change\n                    $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align'], draw);\n                    osApi.setBusy(false);\n                });\n            });\n\n            // Color Mapping\n            var color = function(d){\n                var status = d.name;\n                var rv = \n                    (status===\"Birth\") ?  \"DARKBLUE\" : \n                    (status===\"Diagnosis\") ? \"DARKGREEN\" :\n                    (status===\"Pathology\") ? \"DARKMAGENTA\" :\n                    (status===\"Progression\") ? \"DARKORANGE\" :\n                    (status===\"Absent\") ? \"DARKSLATEBLUE\" :\n                    (status===\"Status\") ? \"DEEPPINK\" :\n                    (status===\"Radiation\") ? \"LIMEGREEN\" :\n                    (status===\"Procedure\") ? \"GOLD\" :\n                    (status===\"Encounter\") ? \"MIDNIGHTBLUE\" :\n                    (status===\"Drug\") ? \"MEDIUMSEAGREEN\" :\n                    \"black\";\n                    return rv;\n            };   \n\n            // Data Clean Up Functions\n            var processEventData = function(events){\n                return Object.keys(events).map(function(v) {\n                        var rv =  { \"name\": v, \"selected\": true };\n                        rv.color = color(rv);\n                        return rv;\n                });\n            }\n            var processFeatureData = function(patients){\n                return patients[0].calcEvents.map(function(d, i) {\n                    return { \"name\": d.name, \"index\": i }\n                });\n            }\n            var processPatientData = function(patients){\n\n                 // Load & Normalize Data (Should be done on server)\n                patients = Object.keys(patients).map(function(key) {\n                    var val = patients[key];\n                    val.id = key;\n                    return val;\n                });\n                for (var i = 0; i < patients.length; i++) {\n\n                    // Create References For Faster Subsequent Lookups\n                    var p = patients[i];\n                    var m = moment;\n                    var mf = \"YYYY-MM-DD\"\n\n                    // Map Start Dates\n                    var dateSingle =\n                        p.dateEvents\n                        .filter(function(d) {\n                            return d.eventOrder === 'single'\n                        })\n                        .map(function(d) {\n                            return {\n                                \"start\": m(d.date, mf).unix() * 1000,\n                                \"end\": null,\n                                \"name\": d.name\n                            };\n                        });\n\n                    // Map Start + End Dates\n                    var endDates = p.dateEvents\n                        .filter(function(d) { return d.eventOrder==='end' })\n                        .map(function(d){ return {\"end\":m(d.date, mf).unix()*1000, \"id\":d.eventID}; });\n                    var startDates = p.dateEvents\n                        .filter(function(d) { return d.eventOrder==='start' })\n                        .map(function(d){ return {\"start\":m(d.date, mf).unix()*1000,\"name\":d.name, \"id\":d.eventID}; });\n                    startDates\n                        .forEach(function(sd){ sd.end = endDates\n                            .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                    // Join Single + Multiple Date Events\n                    p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                    p.dateEvents.forEach(function(d){ p[\"__\"+d.name] = d; });\n                }\n                return patients;\n            }\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            \n            // Filter\n            var rawData;\n            var pfApi = osApi.getPatientFilterApi();\n            pfApi.init(vm.datasource);\n            pfApi.onSelect.add(draw);\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    draw();\n                });\n            });\n\n            // Draw\n            function draw(){\n                osApi.setBusy(true);\n                var ids = pfApi.filter(rawData, function(p){ return p; });\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // D3 Scale\n            var width, height, xScale, yScale, xMax, yMax;\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    var brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"pca-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n\n            // D3 Scale\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n\n            // Filters\n            var rawData, rawPatientData;\n            var pfApi = osApi.getPatientFilterApi();\n            pfApi.init(vm.datasource);\n            pfApi.onSelect.add(draw);\n            vm.cohort;\n            vm.createCohort = function() {\n                pfApi.addFilter(vm.cohort, d3.selectAll(\".pca-node-selected\")[0].map(function(data) {\n                    return data.__data__.id\n                }));\n                vm.cohort = \"\";\n            };\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            // $scope.$watch('vm.optNodeColor', function() {\n\n                            // });\n\n                        });\n                    });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                dataset = pfApi.filter(rawData, function(p) {\n                    return p.id\n                });\n\n                var circles = d3Chart.selectAll(\"circle\").data(dataset, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, cytoscape) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null \n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"SCCA\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null \n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n                if (user.domain.name==\"Guest\"){\n                    _user.authenticated = true;\n                    _user.token = \"Guest\";\n                    onLogin.dispatch(_user);\n                    return;\n                }\n                var req = {\n                    method: 'POST',\n                    url: '/login/',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n\n\n/*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n\n\n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        function getDataSetNames() {\n            return osSocket.request({\n                cmd: \"getDataSetNames\"\n            });\n        }\n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n\n        var _cohortPatient = collection(signals);\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals);\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals){\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            var _collection = [];\n            function get() { return _collection; }\n            function add(value){ \n                _collection.push(value); \n                onAdd.dispatch(_collection);\n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n            function save(key){\n\n            }\n            function load(key){\n\n            }\n            function destroy(){\n                // onAdd.removeAll();\n                // onRemove.removeAll();\n            }\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                destroy: destroy\n            }\n        }\n\n\n        /*** Filter Api ***/\n        var _patientFilterApi = filter();\n        function getPatientFilterApi() { return _patientFilterApi; }\n        function filter(){\n\n            var _dataSource = null;\n            var _filterTree = null;\n            var _filter = null;\n            var _serialize = function (o){\n                var sb = \"{\";\n                sb += '\"name\":\"'+o.name+'\"';\n                sb += ',\"ids\":';\n                sb += (typeof(o.ids)==\"string\") ? '\"*\"' : '[\"'+o.ids.join('\",\"')+'\"]';\n                if (o.hasOwnProperty(\"children\")){\n                    sb += ',\"children\":[';\n                    for (var i=0; i<o.children.length; i++){\n                        if (i>0) sb += \",\";\n                        sb += _serialize(o.children[i]);\n                    }\n                    sb += ']';\n                }\n                sb += \"}\";\n                return sb;\n            };\n\n            function init(dataSource){\n                if (_dataSource==dataSource) return;\n                _dataSource = dataSource;\n                 _filterTree = angular.fromJson(localStorage.getItem(dataSource));\n                if (!_filterTree) _filterTree = {name:dataSource, ids:'*' };\n                _filter = _filterTree;\n            }\n            function delFilter(){}\n            function addFilter(name, ids){\n                var filter = {\n                    name:name,\n                    ids:ids\n                };\n                if (!_filter.hasOwnProperty(\"children\")) _filter.children = [];\n                _filter.children.push(filter);\n                _filter = filter;\n                onChange.dispatch(_filterTree);\n                onSelect.dispatch(_filter);\n                localStorage.setItem(_dataSource, _serialize(_filterTree));\n            }\n            function getActiveFilter(){\n                return _filter;\n            }\n\n            function setActiveFilter(filter){\n                _filter = filter;\n                onSelect.dispatch(_filter);\n            }\n\n            function getFilterTree(){\n                return _filterTree;\n            }\n\n            function filter(data, idFn){\n                if (_filter.ids==\"*\") return data;\n\n                return data.filter(function(p){\n                    for (var i=0; i<_filter.ids.length; i++){\n                        if (idFn(p) == _filter.ids[i]) return true;\n                    }\n                    return false;\n                });\n            }\n\n            // Events\n            var onChange = new signals.Signal(); // Fired When Data Changes\n            var onSelect = new signals.Signal(); // Fired When Selection changes\n\n            return {\n                init : init,\n                filter : filter,\n                getActiveFilter : getActiveFilter,\n                setActiveFilter : setActiveFilter,\n                addFilter: addFilter,\n                delFilter: delFilter,\n                getFilterTree : getFilterTree,\n                onChange : onChange,\n                onSelect : onSelect\n            };\n                \n        }\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getPatientFilterApi: getPatientFilterApi,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataSetNames: getDataSetNames,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate\n        }\n\n    }\n})();\n\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            };\n\n            vm.resize = function(){\n                var width = $window.innerWidth\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 145);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initalize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initalize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeViewModel(vm, $stateParams){\n            vm.datasource = $stateParams.datasource;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.frame;\n            return vm;\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: 0.0001,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, .1, 80)\",\n                    'width': \"mapData(sizeEle, 0, 50, .1, 80)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 'data(sizeBdr)',\n                    'border-color': 'data(color)'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': '#FFFFFF',\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'line-width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    geneClick.removeAll();\n                    patientClick.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch);\n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        $scope.$apply(function() {\n                            vm.patient = e.cyTarget.attr('patient');\n                            vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                                .map(function(item) { return item.data().id });\n                        });\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showOncoPrint: function(){\n                    /*\n                    var ds = vm.datasource;\n                    if (ds==\"DEMOdz\") return;\n                    if (ds.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = ds.substr(4) + \"_tcga\";\n                        var genes = e.cyTarget.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $scope.$apply(function() {\n                            $window.open(url);\n                        });\n                    }\n                    */\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [{\n                name: 'Hide All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }, {\n                name: 'Show All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n\n                    // Show all Edges\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(node){\n                            this[node.id()] = { display: 'element' };\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                unregister: function() {\n                    events.removeAll();\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                }\n            },{\n                name: '1° When Selected',\n                register: function(){\n\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n\n\n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },{\n                name: '2° When Selected',\n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('node')\n                                .forEach(function(node){\n                                    node.neighborhood('edge')\n                                        .forEach(function(item){\n                                            this[item.id()] = {display:'element'};\n                                        }, this)\n                                }, this)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    \n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeTwo(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeTwo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },{\n                name: '1° On Mouse Over',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }, {\n                name: '2° On Mouse Over',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeTwo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeTwo(e)                           \n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: '#FFE11A',\n                    state: 'Highlight'\n\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {color:colorMap[edge.data(\"edgeType\")].color};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item){\n                var color, state;\n                switch (item.state){\n                    case \"Highlight\":\n                        item.state = \"Show\";\n                        color = '#3993fa';\n                        state = {color:color};\n                        break;\n                    case \"Show\":\n                        item.state = \"Hide\";\n                        color = '#EEEEEE';\n                        state = {color:'#FFF'};\n                        break;\n                    default:\n                        item.state = \"Highlight\";\n                        color = item.color;\n                        state = {color:color};\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi){\n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'blue'}, {name:'Female', color:'pink'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'rgb(5, 108, 225)' :  'pink' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green'}, {name:'Old', color:'red'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] } });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var degmap = {};\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                                break;\n                                            }\n                                        }\n                                    }\n                                });\n                            break;\n                        }\n                        chart.batchData(degmap);\n                    });\n\n            });\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'},{name: 'Gender'}];\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 30;\n                                var b = 30;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 50;\n                                var b = 50;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 30;\n                                var b = 30;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = true;\n                                value.selectable = true;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 1;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.search = \"\";\n\n            var rawData;\n            var pfApi = osApi.getPatientFilterApi();\n            pfApi.init(vm.datasource);\n            pfApi.onSelect.add(draw);\n\n\n\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            };\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n            vm.cohort;\n            vm.createCohort = function() {\n                pfApi.addFilter(vm.cohort, dtTable._('tr', {\"filter\":\"applied\"}).map(function(data) { return data[0]; }) );\n                vm.cohort = \"\";\n            };\n\n            function draw(){\n                dtTable.fnClearTable();\n                 var data = pfApi.filter(rawData.tbl, function(p){ return p[0] });\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.filter = pfApi.getActiveFilter().name;\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                });\n                dtTable.fnAddData(data);\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n            \n            \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFilters', filters);\n\n    /** @ngInject */\n    function filters() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/filters/filters.html',\n            scope: {},\n            controller: FiltersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FiltersController(osApi, $stateParams, $window, d3) {\n\n\n            \n            // var datasource = $stateParams.datasource || \"DEMOdz\";\n            // var pfApi = osApi.getPatientFilterApi();\n            // pfApi.init(datasource);\n            // pfApi.onChange.add(function(){\n            //     chart.draw();\n            // });\n\n\n            // var chart = (function(pfApi, osApi) {\n\n\n            //     // Size\n            //     var width, height;\n            //     width = height = Math.min($window.innerWidth, $window.innerHeight) - 200;\n\n            //     // Data\n            //     var link, node;\n\n            //     // Animation Length\n            //     var duration = 2000;\n\n            //     var tree = d3.layout.tree()\n            //         .size([height, width - 160]);\n\n            //     var cluster = d3.layout.cluster()\n            //         .size([height, width - 160]);\n\n            //     var diagonal = d3.svg.diagonal()\n            //         .projection(function(d) {\n            //             return [d.y, d.x];\n            //         });\n\n\n            //     var svg = d3.select(\"#filters-chart\").append(\"svg\")\n            //         .attr(\"width\", width)\n            //         .attr(\"height\", height)\n            //         .append(\"g\")\n            //         .attr(\"transform\", \"translate(100,0)\");\n\n\n            //     // LAYOUT OPTIONS + ACCESSOR\n            //     function setDisplay(val) {\n            //         switch (val) {\n            //             case \"Cluster\":\n            //                 transitionToCluster();\n            //                 break;\n            //             case \"Tree\":\n            //                 transitionToTree();\n            //                 break;\n            //         }\n            //     }\n\n            //     function draw(){\n            //         transitionToTree();\n            //     }\n\n\n\n            //     var transitionToCluster = function(){\n            //         var data = pfApi.getFilterTree();\n            //         var nodes = cluster.nodes(data);\n            //         var links = cluster.links(nodes);\n\n            //         svg.transition().duration(duration).attr(\"transform\", \"translate(40,0)\");\n\n            //         link = svg.selectAll(\".filter-link\").data(links);\n\n            //         link\n            //             .enter()\n            //             .append(\"path\")\n            //             .attr(\"class\",\"filter-link\")\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"d\", diagonal); \n\n            //         link\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"d\", diagonal); \n\n            //         link\n            //             .exit()\n            //             .remove();\n\n            //         node = svg.selectAll(\".filter-node\").data(nodes);\n\n                    \n\n            //         var ng = node\n            //             .enter()\n            //             .append(\"g\")\n            //             .attr(\"class\",\"filter-node\")\n            //             .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n            //         ng.append(\"circle\")\n            //             .attr(\"class\",\"filter-node-circle\")\n            //             .attr(\"r\", 10)\n            //             .on('click', function(d){\n            //                 pfApi.setActiveFilter(d);\n            //                 osApi.hideFilter();\n            //             })\n            //             .on(\"mouseover\", function() {\n            //                 d3.select(this).transition()\n            //                     .ease(\"elastic\")\n            //                     .duration(\"500\")\n            //                     .attr(\"r\", 15);\n            //             })\n            //             .on(\"mouseout\", function() {\n            //                 d3.select(this).transition()\n            //                     .ease(\"quad\")\n            //                     .delay(\"100\")\n            //                     .duration(\"200\")\n            //                     .attr(\"r\", 10);\n            //             });\n                        \n\n            //         ng.append(\"text\")\n            //             .attr({\n            //                 \"class\": \"filter-node-text\",\n            //                 \"dy\": 30\n            //             })\n            //             .style({\n            //                 \"fill\": \"#FFF\",\n            //                 \"text-anchor\": \"middle\"\n            //             })\n            //             .text(function(d) { return d.name; });\n\n            //         node\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n                    \n            //         node\n            //             .exit()\n            //             .remove();\n\n            //     }\n\n            //     var transitionToTree = function(){\n            //         var data = pfApi.getFilterTree();\n            //         var nodes = tree.nodes(data);\n            //         var links = tree.links(nodes);\n\n            //        svg.transition().duration(duration).attr(\"transform\", \"translate(40,0)\");\n\n            //         link = svg.selectAll(\".filter-link\").data(links);\n\n            //         link\n            //             .enter()\n            //             .append(\"path\")\n            //             .attr(\"class\",\"filter-link\")\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"d\", diagonal); \n\n            //         link\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"d\", diagonal); \n\n            //         link\n            //             .exit()\n            //             .remove();\n\n\n            //         node = svg.selectAll(\".filter-node\").data(nodes);\n\n\n            //         var ng = node\n            //             .enter()\n            //             .append(\"g\")\n            //             .attr(\"class\",\"filter-node\")\n            //             .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n            //         ng.append(\"circle\")\n            //             .attr(\"class\",\"filter-node-circle\")\n            //             .attr(\"r\", 10)\n            //             .on('click', function(d){\n            //                 pfApi.setActiveFilter(d);\n            //                 osApi.hideFilter();\n            //             })\n            //             .on(\"mouseover\", function() {\n            //                 d3.select(this).transition()\n            //                     .ease(\"elastic\")\n            //                     .duration(\"500\")\n            //                     .attr(\"r\", 15);\n            //             })\n            //             .on(\"mouseout\", function() {\n            //                 d3.select(this).transition()\n            //                     .ease(\"quad\")\n            //                     .delay(\"100\")\n            //                     .duration(\"200\")\n            //                     .attr(\"r\", 10);\n            //             });\n                        \n\n            //         ng.append(\"text\")\n            //             .attr({\n            //                 \"class\": \"filter-node-text\",\n            //                 \"dy\": 30\n            //             })\n            //             .style({\n            //                 \"fill\": \"#FFF\",\n            //                 \"text-anchor\": \"middle\"\n            //             })\n            //             .text(function(d) { return d.name; });\n\n            //         node\n            //             .transition()\n            //             .duration(duration)\n            //             .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n                    \n            //         node\n            //             .exit()\n            //             .remove();\n            //     }\n\n            //   transitionToCluster();\n            //     return {\n            //         setDisplay: setDisplay,\n            //         draw: draw\n            //     }\n            // })(pfApi, osApi);\n\n\n            // // View Model\n            // var vm = this;\n            // vm.setDisplay = chart.setDisplay;\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\"\n            };\n\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response) {\n                var datasets = response.payload.datasets;\n                vm.datasets = datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap)\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osCohort', cohort);\n\n    /** @ngInject */\n    function cohort() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohort/cohort.html',\n            replace: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortController(osApi) {\n            var vm = this;\n            vm.cohorts;\n            vm.cohort;\n           \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi, $log) {\n        $log.log(\"  ___  _ __   ___ ___  ___  ___ __ _ _ __   ___ \\n / _ \\\\| '_ \\\\ / __/ _ \\\\/ __|/ __/ _` | '_ \\\\ / _ \\\\\\n| (_) | | | | (_| (_) \\\\__ \\\\ (_| (_| | |_) |  __/\\n \\\\___/|_| |_|\\\\___\\\\___/|___/\\\\___\\\\__,_| .__/ \\\\___|\\n                                    |_|         \");\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n\n\n\n\n        // Actions To Take On State Change\n        $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            // if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n            //      $state.transitionTo(\"landing\");\n            //      event.preventDefault();\n            // }\n        });\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/cohort/cohort.html\",\"<div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Select Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.cohort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.cohort=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Go</button></span></div></div></div>\");\n$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for the current organ sites including all others can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a></p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h2 class=\\\"datasource-lbl\\\">{{dataset.name}}</h2><nobr><a href=\\\"\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\">Explore</a> &nbsp;|&nbsp; <a href=\\\"\\\" ng-click=\\\"vm.explore(\\'metadata\\',dataset.id)\\\">Learn More</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/filters/filters.html\",\"<section id=\\\"filter-dropdown\\\" class=\\\"filters container\\\"><div class=\\\"filters-tree\\\" id=\\\"filters-chart\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8\\\"><h2 style=\\\"color:#FFF;\\\">My Cohorts</h2><p></p></div><div class=\\\"col-sm-4\\\" style=\\\"text-align: right;margin-top:30px;\\\"><div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.setDisplay(\\'Cluster\\')\\\">Irregular</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.setDisplay(\\'Tree\\')\\\">Normal</button></div></div></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\" ng-if=\\\"vm.showTools\\\"><li><a href=\\\"\\\" ng-click=\\\"vm.toolsClick()\\\"><span class=\\\"glyphicon glyphicon-signal\\\"></span>Analysis Tools</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div><os-cohort></os-cohort></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Patient Data</h2><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape was conceived, and is managed, by a Steering Committee comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Patient Distribution</li><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"vm.optPatientLayout = item\\\" ng-checked=\\\"optPatientLayout==item\\\">{{item.name}}</label></li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Patients Colors</li><li ng-repeat=\\\"item in vm.optNodeColors\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"vm.optNodeColor = item\\\" ng-checked=\\\"vm.optNodeColor==item\\\"> {{item.name}}</label></li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Edge Colors</label> <span ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"vm.updateEdge(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</span></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Enter Patient Id\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Enter Gene Name\\\"></div></div><os-cohort></os-cohort><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\" ng-repeat=\\\"item in vm.legandNodes\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:{{item.color}}\\\"></span> {{item.name}}</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Patients + Markers</h2></div><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF\\\"><div class=\\\"col-xs-12 legend\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">Patient Information</li><li>PID: {{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul><ul><li class=\\\"legend-section\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>{{vm.dataset}} Metadata</h2><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Pathways</h2><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Colors</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"vm.optNodeColor = item\\\" ng-checked=\\\"vm.optNodeColor==item\\\"> {{item.name}}</label></li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div><os-cohort></os-cohort><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Principal Component Analysis</h2><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div></div><os-cohort></os-cohort><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Partial Least Squares Regression</h2><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><os-cohort></os-cohort></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2>Patient Survival</h2><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<section class=\\\"timelines container container-filters\\\"><h2>Timelines</h2><div class=\\\"row\\\"><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Event Visibility</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Select Events <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.eventClick(item)\\\" style=\\\"border:0px solid; border-left-width: 5px;\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\">{{item.name}} ({{item.selected}})</li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Event Alignment</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Feature To Compare</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.feature.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.feature=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Sort Patients By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section class=\\\"timelines container-fluid container-content\\\" style=\\\"position:relative;padding-top:25px;\\\"><h5 class=\\\"timelines-lbl-feature\\\" style=\\\"padding-left:50px;position:absolute;top:20px;\\\"><span class=\\\"glyphicon glyphicon-align-left\\\" style=\\\"color:rgb(89, 165, 251);\\\"></span> {{vm.feature.name}}</h5><h5 style=\\\"padding-left:50px;position:absolute; bottom:50px;\\\" class=\\\"timelines-lbl-events\\\"><ul class=\\\"timeline-events\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.eventClick(item)\\\" ng-style=\\\"item.selected && {\\'border-color\\':item.color}\\\">{{item.name}}</li></ul></h5><div id=\\\"timelines-chart\\\" style=\\\"height:1200px;\\\"></div></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h2 class=\\\"tools-lbl\\\">{{tool.name}}</h2><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div class=\\\"tray {{vm.trayClass}}\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"glyphicon glyphicon-remove tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div>\");}]);"],"sourceRoot":"/source/"}