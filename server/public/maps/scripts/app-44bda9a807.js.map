{"version":3,"sources":["scripts/app-44bda9a807.js"],"names":["angular","module","header","CompareController","directive","restrict","templateUrl","controller","controllerAs","bindToController","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","scope","caption","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","name","route","img","copy","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","$scope","$window","$document","moment","d3","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","selShow","selPatient","selEvent","selFields","optCohortPatients","optCohortPatient","optCohortModes","optCohortMode","timescaleunit","timescales","timescale","features","feature","filters","filter","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","d3Bars","zoomed","event","shiftKey","scale","translate","ch","rh","patients","length","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","onBrushStart","target","clear","call","onBrush","extent","lower","floor","upper","selectAll","each","d","i","e","firstChild","classed","onBrushEnd","draw","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","data","exit","remove","enter","on","transform","ids","selected","indexOf","id","cols","filteredEvents","__data__","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","patient","dead","hasOwnProperty","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","start","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","map","v","__color","processFeatureData","processPatientData","key","val","p","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","duration","asDays","payload","pts","eventTypes","Status","Dead","unshift","$watchGroup","initializeCohort","cohortPatient","getCohortPatient","get","addCohortPatient","cohortName","format","cohortIds","cohort","add","$watch","resize","updateEventColor","item","test","TestController","message","datasets","getDataSetNames","survival","SurvivalController","getCalculatedSurvivalCurves","r","rawData","pids","getPatientHistoryTable","tbl","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","_","xScale","yScale","xMax","yMax","d3Tooltip","cohortGene","getCohortGene","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","optCohortGenes","optCohortGene","frame","tip","addCohortGene","node","toUpperCase","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","applyCohort","getCalculatedPCA","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","search","center","$","ele","startBatch","highlight","degmap","deselect","batchData","endBatch","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","nodeType","open","pmid","source","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","_cohortGene","_cohortPatient","onDataSource","dispatch","userApi","onLogin","Signal","onLogout","_user","password","authenticated","token","_domains","logout","user","req","method","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","collection","defaultValue","_collection","onAdd","splice","onRemove","save","load","service","oncoprint_utils","exports","sign","number","invert_array","arr","curr","next","cssClassToSelector","classes","split","join","mouseY","ifndef","offsetY","originalEvent","layerY","mouseX","offsetX","layerX","replacement","child_class","parent_class","prototype","create","constructor","makeIdCounter","counter","clamp","t","makeD3SVGElement","tag","document","createElementNS","appendD3SVGElement","elt","appendChild","cloneNode","spaceSVGElementsHorizontally","group","padding","d3SelectChildren","tagName","parseFloat","getBBox","textWidth","string","font","obj","css","float","white-space","visibility","appendTo","parent","parentNode","warn","str","context","console","stableSort","cmp","zipped","ind","stable_cmp","lin_interp","parseInt","g","R","G","B","isNaN","A","assert","bool","msg","oncoprint","OncoprintController","displayOncoprint","empty","errorMessage","JSON","parse","setState","processed_data","onc","Oncoprint","suppressRendering","when","data_gene_map","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","elControl","elInstructions","elLegend","geneAndPatients","config","self","getTrackId","utils","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","dir","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","desc","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderLegend","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","resizeCells","LABEL_DRAGGING_CLASS","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","text_elt","weight","size","pos","cell_elt","cell_rect","cell_dim","outline_styles","trim","toLowerCase","drawOncoprint","_state","SORT","SET_CELL_WIDTH","CELL_CLICK","CELL_MOUSEENTER","CELL_MOUSELEAVE","ONCOPRINT_MOUSEENTER","ONCOPRINT_MOUSELEAVE","SET_PRE_TRACK_PADDING","TRACK_INIT","UPDATE_RENDER_RULES","FINISHED_POSITIONING","SET_SORT_DIRECTION","oncoprint_defaults","makeGeneticAlterationComparator","distinguish_mutations","cna_key","cna_order","mut_type_key","mut_order","_order","mrna_key","rppa_key","regulation_order","cna_diff","mut_type_diff","mrna_diff","rppa_diff","genetic_alteration_config_base","default","z_index","altered","cna","AMPLIFIED","legend_label","GAINED","HOMODELETED","HEMIZYGOUSLYDELETED","mrna","UPREGULATED","DOWNREGULATED","rppa","genetic_alteration_config_nondistinct_mutations","mut_type","*","genetic_alteration_config","MISSENSE","INFRAME","TRUNC","FUSION","genetic_alteration_comparator","genetic_alteration_comparator_nondistinct_mutations","D3SVGCategoricalColorRuleSet","D3SVGRuleSet","d3_colors","addColorRule","category","colored_rect","condition","cat","getCategory","addStaticRule","makeNARuleParams","cat1","cat2","NEGATIVE_INFINITY","localeCompare","new_color","pop","createElement","getRules","rule","rule_id","D3SVGGradientColorRuleSet","data_key","addGradientRule","data_range","color_range","na_color","proxy","numericalNaNSort","rule_map","D3SVGBarChartRuleSet","addBarChartRule","D3SVGGeneticAlterationRuleSet","dont_distinguish_mutation_color","defaults","distinguish_mutation_order","makeStaticShapeRule","rule_spec","styles","_key","_value","ANY","points","CELL","outline-color","outline-style","outline-width","new_rule","altered_rules","values","altered_data","getRule","filterData","uniq","D3SVGBarChartRule","D3SVGRule","inferred_data_range","log10","makeDatum","setUpHelperFunctions","scaled_data_range","height_helper","distance","y_function","height_function","inferDataRange","datumIsNaN","getEffectiveDataRange","showInLegend","display_data_range","num_digit_multiplier","legend_num_decimal_digits","mesh","D3SVGGradientRule","fill_function","rgb","D3SVGStaticRule","svg_ctr","f1","f2","f1_isNaN","f2_isNaN","children","getRuleId","addRule","removeRule","rule_ids","rules","sorted_rules","affected_groups","percentToPx","attr_val","attr_name","width_like","height_like","convertAttr","pt","split_pt","pt_x","pt_y","c","elts","makeRuleSet","clipping","upper_padding","track_group_separation","max_label_width","max_percent_altered_width","buffer_width","getTrackCellCtrCSSClass","new_rule_set","getTrackTops","tops","getCellX","track_order","MetadataController","colnames","dtTable","dataTable","paging","api","markers","MarkersController","cyChart","initializeViewModel","optCtxGeneShow","optCtxPatientShow","loadData","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","initializeCommands","chart","searchGene","geneSearchResult","matches","found","searchGeneResult","searchPatient","searchPatientResult","optInteractiveMode","optInteractiveModes","optCommandPatient","neighborhood","cbioDsName","n","optCommandGene","optCommands","zoomReset","zoomFit","showPatientsInCommon","geneNodes","geneNames","patientNodes","patientGeneNames","geneName","showGenesInCommon","patientGenes","showPatientEdges","hidePatientEdges","showGeneEdges","hideGeneEdges","selectConnectedGenes","selectConnectedPatients","selectPatients","selectGenes","deselectPatients","deselectGenes","invertPatientSelection","_private","invertGeneSelection","invertAll","deselectAll","hideAllEdges","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","addCohorts","drawPatients","drawGenes","drawMode","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","geneOver","geneOut","geneClick","geneCtx","patientOver","patientOut","patientClick","patientCtx","removeAll","over","out","behaviors","showGeneCtxMenu","oe","elMenu","showPatientCtxMenu","showPatientInfo","patientChromosomes","mutation","neighbourhood","cnl1","cnl2","cng1","cng2","mutations","hidePatientInfo","showDegreeOne","border-opacity","hideDegreeOne","showDegreeTwo","hideDegreeTwo","states","register","unregister","edge","ui","colors","state","colorMap","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","sizeEle","updateEdge","stateName","sizeBdr","degree","sizeLbl","calculateSelections","selectedNodes","sums","cnt","gender","age","s","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","diagnosis","help","HelpController","videos","HeaderController","showTools","showMenu","logoutClick","transitionTo","footer","FooterController","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","authenticate","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-44bda9a807.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n        \t\t\t'ngAnimate',\n        \t\t\t'ngCookies', \n        \t\t\t'ngTouch', \n        \t\t\t'ngSanitize', \n        \t\t\t'ngMessages', \n        \t\t\t'ngAria', \n        \t\t\t'ngResource', \n        \t\t\t'ui.router', \n        \t\t\t'ui.bootstrap', \n        \t\t\t'ui-rangeSlider', \n        \t\t\t'ui.bootstrap.contextMenu',\n        \t\t\t'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'metadata.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            \n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortPatients;\n                vm.optCohortPatient;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.filters;\n                vm.filter;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n\n            var zoom;\n            var zoomed = function(){\n                if (d3.event.shiftKey) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                  brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var onBrushStart = function(){\n                if (!d3.event.shiftKey) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }\n            }\n            var onBrush = function(){\n          \n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        var e = d3.select(this.firstChild);\n                        e.classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                        \n                    });\n\n            }\n            var onBrushEnd = function(){\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);                \n            }\n\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                        \n                    // rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row',\n                            'width': 0,\n                            'height': hRow\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && vm.optCohortPatient.ids!=\"*\"){\n                        rows\n                            .each( function(d){\n                                var selected = (vm.optCohortPatient.ids.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n\n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        if (vm.filter.name==\"Only Alive\" && patient.dead) return false;\n                        if (vm.filter.name==\"Only Dead\" && !patient.dead) return false;\n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter & this.ids!==\"*\"){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':vm.optCohortPatient.ids});\n\n                    // Sort Patients On Align Property    \n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            if (a.dead==b.dead){\n                                return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                            }else{\n                                return (a.dead) ? 1 : -1;\n                            }\n                            \n                        }, sort);\n                    }else{\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                        }, sort);\n                    }\n\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients, dead){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                            if (d.name==\"Status\"){\n                                p.dead = (dead.indexOf(d.id)!=-1);\n                            }\n                            \n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts, response.payload.eventTypes.Status.status.Dead);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        vm.filters = [\n                            {name:'Alive + Dead'},\n                            {name:'Only Alive'},\n                            {name:'Only Dead'}\n                        ];\n                        vm.filter = vm.filters[0];\n\n\n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale', 'vm.filter'], draw);\n                        angular.element($window).bind('resize', draw);\n                      \n                        initializeCohort(vm, osApi);   \n                        draw();\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n            var initializeCohort = function (vm, osApi){\n                var cohortPatient = osApi.getCohortPatient();\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[1];\n                vm.optCohortPatients = cohortPatient.get();\n                vm.optCohortPatient = vm.optCohortPatients[0];\n                vm.addCohortPatient = function(){\n                    var cohortName = \"TL \" + moment().format('- H:mm - M/D/YY');\n                    var cohortIds = d3Bars.selectAll(\".timeline-selected\")[0]\n                        .map( function (p) { return p.__data__.id; }  )\n                    var cohort = {name:cohortName, ids:cohortIds};\n                    if (cohortIds.length==0) return;\n                    cohortPatient.add(cohort);\n                    vm.optCohortPatient = cohort;\n                }\n                $scope.$watch(\"vm.optCohortMode\", draw );\n                $scope.$watch(\"vm.optCohortPatient\", draw );\n            }\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Data\n            var rawData;\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            \n\n            $scope.$watch('vm.optCohortPatient', function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    ids = rawData;\n                }\n                else{\n                    var pids = vm.optCohortPatient.ids;\n                    if (rawData!=null){\n                        ids = rawData.filter( function(d){\n                            return (pids.indexOf(d)>=0);\n                        });\n                        draw(ids);\n                    }\n                }\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    var data = (vm.optCohortPatient.ids==\"*\") ? rawData : vm.optCohortPatient.ids;\n                    draw(data);\n                });\n            });\n\n            // Draw\n            function draw(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.frame;\n            vm.tip = null;\n\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"PLSR \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ return node.__data__.name.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                var ids = vm.optCohortGene.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.name)>=0)\n                    });\n                }\n            });\n\n            \n\n            \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n\n\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var cohortPatient = osApi.getCohortPatient();\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n\n     \n            // Cohorts\n            vm.addCohortPatient = function(){\n                var cohortName = \"PCA \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node){return node.__data__.id.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n\n            var applyCohort = function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.id)>=0)\n                    });\n                }\n            };\n            $scope.$watch('vm.optCohortPatient', applyCohort);\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                // osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    //rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            \n                        });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    applyCohort();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                \n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            var cohortGene = osApi.getCohortGene();\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"Pathways \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                if (angular.isUndefined(csChart)) return;\n                csChart.startBatch();\n                var highlight = true;\n                var degmap = {};\n                if (vm.optCohortGene.ids==\"*\"){\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                csChart.batchData(degmap);\n                csChart.endBatch();\n            });\n            \n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            //angular.element('#gbm-webpage').modal();\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                            // $scope.$apply(function() {\n                            //     vm.frame = $sce.trustAsResourceUrl(url);\n                            // });\n                        })\n                        .on('click', 'edge', function(e) {\n                            //angular.element('#gbm-webpage').modal();\n                            $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                            $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n                            // $scope.$apply(function() {\n                            //     vm.frame = $sce.trustAsResourceUrl(url);\n                            // });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            _cohortGene.clear();\n            _cohortPatient.clear();\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n\n\n        var history = (function(){\n\n            var _geneSelections = [];\n            var _geneSelection = null;\n            var _patientSelections = [];\n            var _patientSelection = null;\n\n            var addGeneSelection = function(tool, desc, ids){\n                var selection = {name:name, desc:desc, ids:ids, date:moment().unix()};\n                _geneSelection = selection;\n                _geneSelections.unshift(selection);\n                if (_geneSelections.length>0) _geneSelections.pop();\n            };\n            var getGeneSelections = function(){\n                return _geneSelection;\n            };\n            var setGeneSelection = function(selection){\n                _geneSelection = selection;\n            };\n            var getGeneSelection = function(selection){\n                return _geneSelection;\n            };\n\n            var _patientSelections = [];\n            var addPatientSelection = function(name, ids){\n                var selection = {name:name, desc:desc, ids:ids, date:moment().unix()};\n                _geneSelection = selection;\n                _patientSelections.unshift(selection);\n                if (_patientSelections.length>5) _patientSelections.pop()\n\n            };\n            var getPatientSelections = function(){\n                console.log(\"GET PATIENT SELECTION\");\n                return _patientSelections;\n            };\n            var setPatientSelection = function(selection){\n                console.log(\"SET PATIENT SELECTION\");\n                _patientSelection = selection;\n            };\n            var getPatientSelection = function(){\n                console.log(\"GET PATIENT SELECTION\")\n                return _patientSelection;\n            };\n\n            return {\n                addGeneSelection: addGeneSelection,\n                setGeneSelection: setGeneSelection,\n                getGeneSelections: getGeneSelections,\n                addPatientSelection: addPatientSelection,\n                setPatientSelection: setPatientSelection,\n                getPatientSelection: getPatientSelection,\n                getPatientSelections: getPatientSelections\n\n            }\n        });\n\n\n\n\n        var _cohortPatient = collection(signals, {name:'All Patients', ids:'*'}, \"osCohortPatient\");\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals, {name:'All Genes', ids:'*'}, \"osCohortGene\");\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals, defaultValue){ //, collectionName\n\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            //var onSelect = new signals.Signal();\n\n            var _collection = [defaultValue];\n            \n            function get() { return _collection; }\n            \n            function add(value){ \n                _collection.unshift(value); \n                onAdd.dispatch(_collection);\n            }\n            function clear(){\n                _collection = [defaultValue]   \n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n           \n            function save(){\n                \n            }\n\n            function load(){\n            }\n\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                clear:clear\n            }\n        }\n\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n\n    }\n})();\n\n\n\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_utils = (function() {\n\tvar exports = {};\n\n\texports.sign = function(number) {\n\t\treturn number?((number<0)?-1:1):0\n\t};\n\n\texports.invert_array = function invert_array(arr) {\n\t\treturn arr.reduce(function(curr, next, index) {\n\t\t\tcurr[next] = index;\n\t\t\treturn curr;\n\t\t}, {});\n\t};\n\n\texports.cssClassToSelector = function(classes) {\n\t\treturn \".\"+classes.split(\" \").join(\".\");\n\t};\n\texports.mouseY = function(evt) {\n\t\treturn exports.ifndef(evt.offsetY, evt.originalEvent && evt.originalEvent.layerY);\n\t};\n\texports.mouseX = function(evt) {\n\t\treturn exports.ifndef(evt.offsetX, evt.originalEvent && evt.originalEvent.layerX);\n\t};\n\texports.ifndef = function(val, replacement) {\n\t\treturn (typeof val === 'undefined') ? replacement : val;\n\t};\n\texports.extends = function(child_class, parent_class) {\n\t\tchild_class.prototype = Object.create(parent_class.prototype);\n\t\tchild_class.prototype.constructor = child_class;\n\t};\n\n\texports.makeIdCounter = function() {\n\t\tvar counter = 0;\n\t\treturn function() {\n\t\t\tcounter += 1;\n\t\t\treturn counter;\n\t\t};\n\t};\n\n\texports.clamp = function(t, a, b) {\n\t\treturn Math.max(Math.min(b,t), a);\n\t};\n\n\texports.makeD3SVGElement = function(tag) {\n\t\treturn d3.select(document.createElementNS('http://www.w3.org/2000/svg', tag));\n\t};\n\n\texports.appendD3SVGElement = function(elt, target, svg) {\n\t\treturn target.select(function() {\n\t\t\treturn this.appendChild(elt.node().cloneNode(true));\n\t\t});\n\t};\n\n\texports.spaceSVGElementsHorizontally = function(group, padding) {\n\t\tvar x = 0;\n\t\tvar elts = exports.d3SelectChildren(group, '*').each(function() {\n\t\t\tif (this.tagName === 'defs') {\n\t\t\t\t// don't adjust spacing for a defs element\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar transform = d3.select(this).attr('transform');\n\t\t\tvar y = transform && transform.indexOf(\"translate\") > -1 && parseFloat(transform.split(\",\")[1], 10);\n\t\t\ty = y || 0;\n\t\t\td3.select(this).attr('transform', exports.translate(x, y));\n\t\t\tx += this.getBBox().width;\n\t\t\tx += padding;\n\t\t});\n\t\treturn group;\n\t};\n\n\texports.textWidth = function(string, font) {\n\t\tvar obj = $('<div>'+string+'</div>')\n\t\t\t\t.css({position: 'absolute', float: 'left',\n\t\t\t\t\t'white-space':'nowrap', visibility: 'hidden',\n\t\t\t\t\tfont: font})\n\t\t\t\t.appendTo($('body'));\n\t\tvar width = obj.width();\n\t\tobj.remove();\n\t\treturn width;\n\t};\n\n\texports.d3SelectChildren = function(parent, selector) {\n\t\treturn parent.selectAll(selector).filter(function() {\n\t\t\treturn this.parentNode === parent.node();\n\t\t});\n\t};\n\n\texports.warn = function(str, context) {\n\t\tconsole.log(\"Oncoprint error in \"+context+\": \"+str);\n\t};\n\n\texports.stableSort = function(arr, cmp) {\n\t\t// cmp returns something in [-1,0,1]\n\n\t\tvar zipped = [];\n\t\t_.each(arr, function(val, ind) {\n\t\t\tzipped.push([val, ind]);\n\t\t});\n\t\tvar stable_cmp = function(a,b) {\n\t\t\tvar res = cmp(a[0], b[0]);\n\t\t\tif (res === 0) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\tres = -1;\n\t\t\t\t} else if (a[1] > b[1]) {\n\t\t\t\t\tres = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tzipped.sort(stable_cmp);\n\t\treturn _.map(zipped, function(x) { return x[0];});\n\t};\n\n\texports.lin_interp = function(t, a, b) {\n\t\tif (a[0] === '#') {\n\t\t\tvar r = [parseInt(a.substring(1,3), 16), parseInt(b.substring(1,3), 16)];\n\t\t\tvar g = [parseInt(a.substring(3,5), 16), parseInt(b.substring(3,5), 16)];\n\t\t\tvar b = [parseInt(a.substring(5,7), 16), parseInt(b.substring(5,7), 16)];\n\t\t\tvar R = Math.round(r[0]*(1-t) + r[1]*t).toString(16);\n\t\t\tvar G = Math.round(g[0]*(1-t) + g[1]*t).toString(16);\n\t\t\tvar B = Math.round(b[0]*(1-t) + b[1]*t).toString(16);\n\n\t\t\tR = R.length < 2 ? '0'+R : R;\n\t\t\tG = G.length < 2 ? '0'+G : G;\n\t\t\tB = B.length < 2 ? '0'+B : B;\n\n\t\t\treturn '#' + R + G + B;\n\t\t} else if (isNaN(a) && a.indexOf('%') > -1) {\n\t\t\tvar A = parseFloat(a, 10);\n\t\t\tvar B = parseFloat(b, 10);\n\t\t\treturn (A*(1-t) + B*t)+'%';\n\t\t} else {\n\t\t\treturn a*(1-t) + b*t;\n\t\t}\n\t};\n\n\texports.translate = function(x,y) {\n\t\treturn \"translate(\" + x + \",\" + y + \")\";\n\t};\n\n\texports.assert = function(bool, msg) {\n\t\tif (!bool) {\n\t\t\tthrow msg;\n\t\t}\n\t}\n\treturn exports;\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.geneAndPatients = vm.optCohortGene.ids + \",\" + vm.optCohortPatient.ids;\n            vm.errorMessage;\n            \n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.optCohortPatient', 'vm.optCohortGene'], function() {\n                    var msg =  vm.optCohortPatient.ids.toString() + \", \" + vm.optCohortGene.ids.toString();\n                    drawOncoprint(msg);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ( (vm.optCohortPatient.ids == \"*\") || (vm.optCohortGene.ids == \"*\") ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_events = {\n\tADD_TRACK: 'add_track.oncoprint',\n\tREMOVE_TRACK: 'remove_track.oncoprint',\n\tMOVE_TRACK: 'move_track.oncoprint',\n\tSORT: 'sort.oncoprint',\n\tSET_CELL_PADDING: 'set_cell_padding.oncoprint',\n\tSET_CELL_WIDTH: 'set_cell_width.oncoprint',\n\tSET_TRACK_DATA: 'set_track_data.oncoprint',\n\tSET_ID_ORDER: 'set_id_order.oncoprint',\n\tCELL_CLICK: 'cell_click.oncoprint',\n\tCELL_MOUSEENTER: 'cell_mouseenter.oncoprint',\n\tCELL_MOUSELEAVE: 'cell_mouseleave.oncoprint',\n\tONCOPRINT_MOUSEENTER: 'oncoprint_mouseenter.oncoprint',\n\tONCOPRINT_MOUSELEAVE: 'oncoprint_mouseleave.oncoprint',\n\tSET_PRE_TRACK_PADDING: 'set_pre_track_padding.oncoprint',\n\tTRACK_INIT: 'init.track.oncoprint',\n\tUPDATE_RENDER_RULES: 'update_render_rules.cell_renderer.oncoprint',\n\tFINISHED_RENDERING: 'finished_rendering.oncoprint',\n\tFINISHED_POSITIONING: 'finished_positioning.renderer.oncoprint',\n\tSET_ZOOM: 'set_zoom.oncoprint',\n\tSET_SORT_DIRECTION: 'set_sort_direction.oncoprint',\n\tSET_VISIBLE_ID_ORDER: 'set_visible_ids.oncoprint'\n};\noncoprint_defaults = (function() {\n\tvar utils = window.oncoprint_utils;\n\tvar makeGeneticAlterationComparator = function(distinguish_mutations) {\n\t\tvar cna_key = 'cna';\n\t\tvar cna_order = utils.invert_array(['AMPLIFIED', 'HOMODELETED', 'GAINED', 'HEMIZYGOUSLYDELETED', 'DIPLOID', undefined]);\n\t\tvar mut_type_key = 'mut_type';\n\t\tvar mut_order = (function() {\n\t\t\tif (!distinguish_mutations) {\n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn +(typeof m === 'undefined');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _order = utils.invert_array(['TRUNC', 'INFRAME', 'MISSENSE', undefined]); \n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn _order[m];\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tvar mrna_key = 'mrna';\n\t\tvar rppa_key = 'rppa';\n\t\tvar regulation_order = utils.invert_array(['UPREGULATED', 'DOWNREGULATED', undefined]);\n\n\t\treturn function(d1, d2) {\n\t\t\tvar cna_diff = utils.sign(cna_order[d1[cna_key]] - cna_order[d2[cna_key]]);\n\t\t\tif (cna_diff !== 0) {\n\t\t\t\treturn cna_diff;\n\t\t\t}\n\n\t\t\tvar mut_type_diff = utils.sign(mut_order(d1[mut_type_key]) - mut_order(d2[mut_type_key]));\n\t\t\tif (mut_type_diff !== 0) {\n\t\t\t\treturn mut_type_diff;\n\t\t\t}\n\n\t\t\tvar mrna_diff = utils.sign(regulation_order[d1[mrna_key]] - regulation_order[d2[mrna_key]]);\n\t\t\tif (mrna_diff !== 0) {\n\t\t\t\treturn mrna_diff;\n\t\t\t}\n\n\t\t\tvar rppa_diff = utils.sign(regulation_order[d1[rppa_key]] - regulation_order[d2[rppa_key]]);\n\t\t\tif (rppa_diff !== 0) {\n\t\t\t\treturn rppa_diff;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\t};\n\n\tvar genetic_alteration_config_base = {\n\t\tdefault: [{shape: 'full-rect', color: '#D3D3D3', z_index: -1}],\n\t\taltered: {\n\t\t\t'cna': {\n\t\t\t\t'AMPLIFIED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tlegend_label: 'Amplification'\n\t\t\t\t},\n\t\t\t\t'GAINED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#FFB6C1',\n\t\t\t\t\tlegend_label: 'Gain'\n\t\t\t\t},\n\t\t\t\t'HOMODELETED':{\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#0000FF',\n\t\t\t\t\tlegend_label: 'Deep Deletion'\n\t\t\t\t},\n\t\t\t\t'HEMIZYGOUSLYDELETED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#8FD8D8',\n\t\t\t\t\tlegend_label: 'Shallow Deletion'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'mrna': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#FF9999',\n\t\t\t\t\tlegend_label: 'mRNA Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#6699CC',\n\t\t\t\t\tlegend_label: 'mRNA Downregulation'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rppa': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'small-up-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'small-down-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Downregulation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlegend_label: \"Genetic Alteration\",\n\t};\n\tvar genetic_alteration_config_nondistinct_mutations = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config_nondistinct_mutations.altered.mut_type = {\n\t\t'*': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Mutation'\n\t\t}\n\t};\n\tvar genetic_alteration_config = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config.altered.mut_type = {\n\t\t'MISSENSE': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Missense Mutation'\n\t\t},\n\t\t'INFRAME': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: '#9F8170',\n\t\t\tlegend_label: 'Inframe Mutation'\n\t\t},\n\t\t'TRUNC': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Truncating Mutation'\n\t\t},\n\t\t'FUSION':{\n\t\t\tshape: 'large-right-arrow',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Fusion'\n\t\t}\n\t};\n\t\n\treturn {\n\t\tgenetic_alteration_config: genetic_alteration_config,\n\t\tgenetic_alteration_config_nondistinct_mutations: genetic_alteration_config_nondistinct_mutations,\n\t\tgenetic_alteration_comparator: makeGeneticAlterationComparator(true),\n\t\tgenetic_alteration_comparator_nondistinct_mutations: makeGeneticAlterationComparator(false)\n\t};\n})();\noncoprint_RuleSet = (function() {\n\tvar utils = oncoprint_utils;\n\tvar defaults = oncoprint_defaults;\n\n\tvar CATEGORICAL_COLOR = 'categorical_color';\n\tvar GRADIENT_COLOR = 'gradient_color'; \n\tvar GENETIC_ALTERATION = 'genetic_alteration';\n\tvar BAR_CHART = 'bar_chart';\n\n\tvar CELL = \"cell\";\n\tvar ANY = '*';\n\n\tvar getRuleSetId = utils.makeIdCounter();\n\n\tvar numericalNaNSort = function(d1, d2) {\n\t\tvar f1 = parseFloat(d1[this.data_key], 10);\n\t\tvar f2 = parseFloat(d2[this.data_key], 10);\n\t\tvar f1_isNaN = isNaN(f1);\n\t\tvar f2_isNaN = isNaN(f2);\n\t\tif (f1_isNaN && f2_isNaN) {\n\t\t\treturn 0;\n\t\t} else if (!f1_isNaN && !f2_isNaN) {\n\t\t\tif (f1 < f2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (f1 > f2) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t} else if (f1_isNaN) {\n\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t} else {\n\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t}\n\t};\n\tvar makeNARuleParams = function(condition, label) {\n\t\treturn {\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\t\tattrs: {fill: '#eeeeee', width: '100%', height:'100%'},\n\t\t\t\tlegend_label: label,\n\t\t\t\tchildren: [{\n\t\t\t\t\tcondition: condition,\n\t\t\t\t\tshape: utils.makeD3SVGElement('path'),\n\t\t\t\t\tattrs: {d: \"m 0% 0% L 100% 100%\"},\n\t\t\t\t\tstyles: {'stroke-width':'1px', 'stroke':'#555555'},\n\t\t\t\t\tlegend_label: label,\n\t\t\t\t}],\n\t\t\t};\n\t};\n\tvar D3SVGRuleSet = (function() {\n\t\tfunction D3SVGRuleSet(params) {\n\t\t\tthis.rule_map = {};\n\t\t\tthis.rule_set_id = getRuleSetId();\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = false;\n\t\t};\n\t\tvar getRuleId = utils.makeIdCounter();\n\n\t\tD3SVGRuleSet.prototype.getLegendLabel = function() {\n\t\t\treturn this.legend_label;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRuleSetId = function() {\n\t\t\treturn this.rule_set_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t}\n\t\tD3SVGRuleSet.prototype.addStaticRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGStaticRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addGradientRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGGradientRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addBarChartRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGBarChartRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.removeRule = function(rule_id) {\n\t\t\tdelete this.rule_map[rule_id];\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRules = function() {\n\t\t\tvar self = this;\n\t\t\tvar rule_ids = Object.keys(this.rule_map);\n\t\t\tvar rules = _.map(rule_ids, function(id) { return self.rule_map[id]; });\n\t\t\tvar sorted_rules = _.sortBy(rules, function(r) { return r.z_index; });\n\t\t\treturn sorted_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar active_rules = {};\n\t\t\t_.each(this.getRules(), function(rule) {\n\t\t\t\tvar affected_groups = rule.filter(g);\n\t\t\t\tif (affected_groups[0].length > 0) {\n\t\t\t\t\tactive_rules[rule.rule_id] = true;\n\t\t\t\t}\n\t\t\t\trule.apply(affected_groups, cell_width, cell_height);\n\t\t\t});\n\t\t\treturn active_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRule = function(rule_id) {\n\t\t\treturn this.rule_map[rule_id];\n\t\t};\n\t\treturn D3SVGRuleSet;\n\t})();\n\n\tfunction D3SVGCategoricalColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = CATEGORICAL_COLOR;\n\t\tvar self = this;\n\t\tvar d3_colors = [\"#3366cc\",\"#dc3912\",\"#ff9900\",\"#109618\",\n\t\t\t\t\"#990099\",\"#0099c6\",\"#dd4477\",\"#66aa00\",\n\t\t\t\t\"#b82e2e\",\"#316395\",\"#994499\",\"#22aa99\",\n\t\t\t\t\"#aaaa11\",\"#6633cc\",\"#e67300\",\"#8b0707\",\n\t\t\t\t\"#651067\",\"#329262\",\"#5574a6\",\"#3b3eac\",\n\t\t\t\t\"#b77322\",\"#16d620\",\"#b91383\",\"#f4359e\",\n\t\t\t\t\"#9c5935\",\"#a9c413\",\"#2a778d\",\"#668d1c\",\n\t\t\t\t\"#bea413\",\"#0c5922\",\"#743411\"];/*_.shuffle(_.filter(d3.scale.category20().range().concat(d3.scale.category20b().range()).concat(d3.scale.category20c().range()),\n\t\t\t\t\t\t\t\t\tfunction(color) {\n\t\t\t\t\t\t\t\t\t\tvar rgb = d3.rgb(color);\n\t\t\t\t\t\t\t\t\t\treturn !(rgb.r === rgb.g && rgb.g === rgb.b);\n\t\t\t\t\t\t\t\t\t}));*/\n\t\tvar addColorRule = function(color, category) {\n\t\t\tvar colored_rect = utils.makeD3SVGElement('rect').attr('fill', color);\n\t\t\tvar condition = (function(cat) {\n\t\t\t\treturn function(d) {\n\t\t\t\t\treturn params.getCategory(d) === cat;\n\t\t\t\t};\n\t\t\t})(category);\n\t\t\tself.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: colored_rect,\n\t\t\t\tlegend_label: category\n\t\t\t});\n\t\t};\n\t\tparams.color = params.color || {};\n\t\t_.each(params.color, function(color, category) {\n\t\t\taddColorRule(color, category);\n\t\t});\n\t\tself.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn params.getCategory(d) === 'NA';\n\t\t}, 'NA'));\n\n\t\tthis.sort_cmp = params.sort_cmp || function(d1,d2) {\n\t\t\tvar cat1 = params.getCategory(d1);\n\t\t\tvar cat2 = params.getCategory(d2);\n\t\t\tif (typeof cat1 !== 'string') {\n\t\t\t\tcat1 = cat1.toString();\n\t\t\t}\n\t\t\tif (typeof cat2 !== 'string') {\n\t\t\t\tcat2 = cat2.toString();\n\t\t\t}\n\t\t\tif (cat1 === cat2) {\n\t\t\t\treturn 0;\n\t\t\t} else if (cat1 === 'NA') {\n\t\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t\t} else if (cat2 === 'NA') {\n\t\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t\t} else {\n\t\t\t\treturn cat1.localeCompare(cat2);\n\t\t\t}\n\t\t};\n\t\tself.apply = function(g, cell_width, cell_height) {\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar category = params.getCategory(d);\n\t\t\t\tif (!params.color.hasOwnProperty(category) && category !== \"NA\") {\n\t\t\t\t\tvar new_color = d3_colors.pop();\n\t\t\t\t\tparams.color[category] = new_color;\n\t\t\t\t\taddColorRule(new_color, category);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn D3SVGRuleSet.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGCategoricalColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGradientColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = GRADIENT_COLOR;\n\t\tthis.data_key = params.data_key;\n\t\tvar rule = this.addGradientRule({\n\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tcolor_range: params.color_range,\n\t\t\tscale: params.scale,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGGradientColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGBarChartRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar self = this;\n\t\tself.type = BAR_CHART;\n\t\tself.data_key = params.data_key;\n\t\tvar rule = this.addBarChartRule({\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tscale: params.scale,\n\t\t\tfill: params.fill,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGBarChartRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGeneticAlterationRuleSet(params) {\n\t\tif (params && params.dont_distinguish_mutation_color) {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config_nondistinct_mutations);\n\t\t} else {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config);\n\t\t}\n\t\tif (params && params.distinguish_mutation_order) {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator;\n\t\t} else {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator_nondistinct_mutations;\n\t\t}\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar vocab = ['full-rect', 'middle-rect', 'large-right-arrow', 'small-up-arrow', 'small-down-arrow'];\n\t\tvar self = this;\n\t\tself.type = GENETIC_ALTERATION;\n\n\t\tvar makeStaticShapeRule = function(rule_spec, key, value) {\n\t\t\tvar condition = typeof key !== 'undefined' && typeof value !== 'undefined' ? (function(_key, _value) {\n\t\t\t\tif (_value === ANY) {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn typeof d[_key] !== 'undefined';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn d[_key] === _value;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})(key, value) : undefined;\n\t\t\tvar shape, attrs, styles, z_index;\n\t\t\tswitch (rule_spec.shape) {\n\t\t\t\tcase 'full-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '100%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'middle-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '33.33%', y: '33.33%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'large-right-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"0%,0% 100%,50% 0%,100%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-up-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,0% 100%,25% 0%,25%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-down-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,100% 100%,75% 0%,75%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'outline':\n\t\t\t\t\tshape = CELL;\n\t\t\t\t\tstyles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 5);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar new_rule = self.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: shape,\n\t\t\t\tattrs: attrs,\n\t\t\t\tstyles: styles,\n\t\t\t\tz_index: z_index,\n\t\t\t\tlegend_label: rule_spec.legend_label,\n\t\t\t\texclude_from_legend: (typeof rule_spec.legend_label === \"undefined\")\n\t\t\t});\n\t\t\treturn new_rule;\n\t\t};\n\t\tvar altered_rules = [];\n\t\t_.each(params.altered, function(values, key) {\n\t\t\t_.each(values, function(rule_spec, value) {\n\t\t\t\taltered_rules.push(makeStaticShapeRule(rule_spec, key, value));\n\t\t\t});\n\t\t});\n\t\t_.each(params.default, function(rule_spec) {\n\t\t\tmakeStaticShapeRule(rule_spec);\n\t\t});\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t\tself.alteredData = function(data) {\n\t\t\tvar altered_data = [];\n\t\t\t_.each(altered_rules, function(rule_id) {\n\t\t\t\taltered_data = altered_data.concat(self.getRule(rule_id).filterData(data));\n\t\t\t});\n\t\t\treturn _.uniq(altered_data);\n\t\t};\n\t}\n\tD3SVGGeneticAlterationRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tvar D3SVGRule = (function() {\n\t\tfunction D3SVGRule(params, rule_id) {\n\t\t\tthis.rule_id = rule_id;\n\t\t\tthis.condition = params.condition || function(d) { return true; };\n\t\t\tthis.shape = typeof params.shape === 'undefined' ? utils.makeD3SVGElement('rect') : params.shape;\n\t\t\tthis.z_index = typeof params.z_index === 'undefined' ? this.rule_id : params.z_index;\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = params.exclude_from_legend;\n\n\t\t\tthis.attrs = params.attrs || {};\n\t\t\tthis.attrs.width = utils.ifndef(this.attrs.width, '100%');\n\t\t\tthis.attrs.height = utils.ifndef(this.attrs.height, '100%');\n\t\t\tthis.attrs.x = utils.ifndef(this.attrs.x, 0);\n\t\t\tthis.attrs.y = utils.ifndef(this.attrs.y, 0);\n\n\t\t\tthis.styles = params.styles || {};\n\n\t\t\tthis.children = _.map(params.children, function(p) {\n\t\t\t\treturn new D3SVGRule(p);\n\t\t\t});\n\t\t}\n\n\t\tvar percentToPx = function(attr_val, attr_name, cell_width, cell_height) {\n\t\t\t// convert a percentage to a local pixel coordinate\n\t\t\tvar width_like = ['width', 'x'];\n\t\t\tvar height_like = ['height', 'y'];\n\t\t\tattr_val = parseFloat(attr_val, 10)/100;\n\t\t\tif (width_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_width;\n\t\t\t} else if (height_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_height;\n\t\t\t} \n\t\t\treturn attr_val+'';\n\t\t};\n\n\t\tvar convertAttr = function(d, i, attr_val, attr_name, cell_width, cell_height) {\n\t\t\tvar ret = attr_val;\n\t\t\tif (typeof ret === 'function') {\n\t\t\t\tret = ret(d,i);\n\t\t\t}\n\t\t\tif (typeof ret === 'string' && ret.indexOf('%') > -1) {\n\t\t\t\tif (attr_name === 'points') {\n\t\t\t\t\tret = _.map(ret.split(\" \"), function(pt) {\n\t\t\t\t\t\tvar split_pt = pt.split(\",\");\n\t\t\t\t\t\tvar pt_x = percentToPx(split_pt[0], 'x', cell_width, cell_height);\n\t\t\t\t\t\tvar pt_y = percentToPx(split_pt[1], 'y', cell_width, cell_height);\n\t\t\t\t\t\treturn pt_x+\",\"+pt_y;\n\t\t\t\t\t}).join(\" \");\n\t\t\t\t} else if (attr_name === 'd') {\n\t\t\t\t\tvar split = ret.split(/\\s+/);\n\t\t\t\t\tfor (var i=0, _len = split.length; i<_len; i++) {\n\t\t\t\t\t\tvar c = split[i].toLowerCase();\n\t\t\t\t\t\tif (c === 'm' || c === 'l') {\n\t\t\t\t\t\t\tsplit[i+1] = percentToPx(split[i+1], 'x', cell_width, cell_height);\n\t\t\t\t\t\t\tsplit[i+2] = percentToPx(split[i+2], 'y', cell_width, cell_height);\n\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn split.join(\" \");\n\t\t\t\t} else {\n\t\t\t\t\tret = percentToPx(ret, attr_name, cell_width, cell_height);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\n\t\tD3SVGRule.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar shape = this.shape;\n\t\t\tvar elts = shape === CELL ? g : utils.appendD3SVGElement(shape, g);\n\t\t\tvar styles = this.styles;\n\t\t\tvar attrs = this.attrs;\n\t\t\tattrs.x = attrs.x || 0;\n\t\t\tattrs.y = attrs.y || 0;\n\t\t\t_.each(attrs, function(val, key) {\n\t\t\t\telts.attr(key, function(d,i) {\n\t\t\t\t\treturn convertAttr(d, i, val, key, cell_width, cell_height);\n\t\t\t\t});\n\t\t\t});\n\t\t\t_.each(styles, function(val, key) {\n\t\t\t\telts.style(key, val);\n\t\t\t});\n\t\t\t_.each(this.children, function(r) {\n\t\t\t\tr.apply(g, cell_width, cell_height);\n\t\t\t});\n\t\t}\n\t\tD3SVGRule.prototype.filter = function(g) {\n\t\t\treturn g.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.filterData = function(data) {\n\t\t\treturn data.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.showInLegend = function() {\n\t\t\treturn !this.exclude_from_legend;\n\t\t};\n\t\treturn D3SVGRule;\n\t})();\n\t\n\n\tfunction D3SVGBarChartRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.attrs.fill = function(d) {\n\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\treturn params.na_color;\n\t\t\t}  else {\n\t\t\t\treturn params.fill;\n\t\t\t}\n\t\t};\n\t\tthis.na_color = params.na_color;\n\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(Math.abs(x), 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar height_helper = function(d) {\n\t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar distance = Math.abs(datum-scaled_data_range[0]) / Math.abs(scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\treturn distance * 100;\n\t\t\t};\n\t\t\tvar y_function = function(d) {\n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"0\" : (100 - height_helper(d))) + '%';\n\t\t\t};\n\t\t\tvar height_function = function(d) { \n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"100\" : height_helper(d)) + '%';\n\t\t\t};\n\t\t\tthis.attrs.height = height_function;\n\t\t\tthis.attrs.y = y_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getEffectiveDataRange = function() {\n\t\t\tif (typeof this.data_range === \"undefined\") {\n\t\t\t\treturn this.inferred_data_range;\n\t\t\t} else {\n\t\t\t\tvar ret = [];\n\t\t\t\tret[0] = (typeof this.data_range[0] === 'undefined' ? this.inferred_data_range[0] : this.data_range[0]);\n\t\t\t\tret[1] = (typeof this.data_range[1] === 'undefined' ? this.inferred_data_range[1] : this.data_range[1]);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.getEffectiveDataRange();\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', '0px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true)\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tvar height = cell_height*parseInt(this.attrs.height(datum))/100;\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', height+'px')\n\t\t\t\t\t.attr('y', (cell_height-height)+'px')\n\t\t\t\t\t.attr('fill', params.fill)\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tif (g[0].length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inferred_data_range = this.inferDataRange(g);\n\t\t\tthis.setUpHelperFunctions(this.getEffectiveDataRange());\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t}\n\tD3SVGBarChartRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGGradientRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.color_range = params.color_range;\n\t\tthis.na_color = params.na_color;\n\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(x, 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar fill_function = function(d) {\n\t\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\t\treturn params.na_color;\n\t\t\t\t}\n \t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar data_range = [scaled_data_range[0], scaled_data_range[1]];\n\t\t\t\tvar distance = (datum-scaled_data_range[0]) / (scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\tcolor_range = [d3.rgb(params.color_range[0]).toString(),\n\t\t\t\t\t\td3.rgb(params.color_range[1]).toString()];\n\t\t\t\treturn utils.lin_interp(distance, params.color_range[0], params.color_range[1]);\n\t\t\t};\n\t\t\tthis.attrs.fill = fill_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.data_range || this.inferred_data_range;\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', cell_height+'px')\n\t\t\t\t\t.attr('fill', this.attrs.fill(datum))\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tthis.setUpHelperFunctions(this.data_range || (this.inferred_data_range = this.inferDataRange(g)));\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\t}\n\tD3SVGGradientRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGStaticRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar svg_ctr = div.append('div').classed('oncoprint-legend-block', true);\n\t\t\tvar svg = svg_ctr.append('svg').attr('width', cell_width+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tthis.apply(svg, cell_width, cell_height);\n\t\t\tif (this.legend_label) {\n\t\t\t\tdiv.append('span').text(this.legend_label).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\t}\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGStaticRule.prototype = Object.create(D3SVGRule.prototype);\n\n\treturn {\n\t\tCATEGORICAL_COLOR: CATEGORICAL_COLOR,\n\t\tGRADIENT_COLOR: GRADIENT_COLOR,\n\t\tGENETIC_ALTERATION: GENETIC_ALTERATION,\n\t\tBAR_CHART: BAR_CHART,\n\t\tmakeRuleSet: function(type, params) {\n\t\t\tif (type === CATEGORICAL_COLOR) {\n\t\t\t\treturn new D3SVGCategoricalColorRuleSet(params);\n\t\t\t} else if (type === GRADIENT_COLOR) {\n\t\t\t\treturn new D3SVGGradientColorRuleSet(params);\n\t\t\t} else if (type === GENETIC_ALTERATION) {\n\t\t\t\treturn new D3SVGGeneticAlterationRuleSet(params);\n\t\t\t} else if (type === BAR_CHART) {\n\t\t\t\treturn new D3SVGBarChartRuleSet(params);\n\t\t\t} else {\n\t\t\t\treturn new D3SVGRuleSet();\n\t\t\t}\n\t\t}\n\t};\n})();\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nOncoprintRenderer = (function() {\n\tvar events = oncoprint_events;\n\tvar utils = oncoprint_utils;\n\tvar RuleSet = oncoprint_RuleSet;\n\n\tfunction OncoprintRenderer(oncoprint, config) {\n\t\tthis.rule_sets = {};\n\t\tthis.clipping = true;\n\t\tthis.oncoprint = oncoprint;\n\t\tthis.config = config;\n\t\tthis.upper_padding = utils.ifndef(config.upper_padding, 0);\n\t\tthis.max_label_length = utils.ifndef(config.max_label_length, 20);\n\t\tthis.track_group_separation = 12;\n\n\t\t(function computeLabelAreaWidth(self) {\n\t\t\tvar label_font = self.getLabelFont();\n\t\t\tvar max_label_width = utils.textWidth((Math.pow(10,self.max_label_length)-1).toString(), label_font);\n\t\t\tvar max_percent_altered_width = utils.textWidth('100%', label_font);\n\t\t\tvar buffer_width = 20;\n\t\t\tself.label_area_width = max_label_width + buffer_width + max_percent_altered_width;\n\t\t})(this);\n\t};\n\tOncoprintRenderer.prototype.getCellCSSClass = function() {\n\t\treturn 'oncoprint-cell';\t\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCSSClass = function(track_id) {\n\t\treturn this.getCellCSSClass()+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-label oncoprint-track-label'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSSelector = function(track_id) {\n\t\t// TODO: replace with utils.cssClassToSelector\n\t\treturn \".\"+this.getTrackLabelCSSClass(track_id).split(\" \").join(\".\");\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCtrCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-cell-ctr'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getLabelFont = function() {\n\t\treturn this.config.label_font;\n\t};\n\tOncoprintRenderer.prototype.setRuleSet = function(track_id, type, params) {\n\t\tvar new_rule_set = RuleSet.makeRuleSet(type, params);\n\t\tthis.rule_sets[track_id] = new_rule_set;\n\t\tif (new_rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(track_id, new_rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n\t\tvar rule_set = this.rule_sets[source_track_id];\n\t\tthis.rule_sets[target_track_id] = rule_set;\n\t\tif (rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(target_track_id, rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getRuleSet = function(track_id) {\n\t\treturn this.rule_sets[track_id];\n\t};\n\tOncoprintRenderer.prototype.getTrackTops = function() {\n\t\tvar ret = {};\n\t\tvar y = this.upper_padding;\n\t\tvar self = this;\n\t\t_.each(this.oncoprint.getTrackGroups(), function(group) {\n\t\t\tif (group.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_.each(group, function(id) {\n\t\t\t\tret[id] = y;\n\t\t\t\ty+= self.getRenderedTrackHeight(id);\n\t\t\t});\n\t\t\ty += self.track_group_separation;\n\t\t});\n\t\treturn ret;\n\t};\n\tOncoprintRenderer.prototype.getTrackCellTops = function() {\n\t\treturn this.track_cell_tops || this.computeTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.computeTrackCellTops = function() {\n\t\tvar tops = this.getTrackTops();\n\t\tvar self = this;\n\t\t_.each(tops, function(top, id) {\n\t\t\ttops[id] = top + self.oncoprint.getTrackPadding(id);\n\t\t});\n\t\tthis.track_cell_tops = tops;\n\t\treturn tops;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelTops = function() {\n\t\treturn this.getTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.getRenderedTrackHeight = function(track_id) {\n\t\treturn this.oncoprint.getTrackHeight(track_id) + 2*this.oncoprint.getTrackPadding(track_id);\n\t};\n\tOncoprintRenderer.prototype.getCellX = function(index) {\n\t\treturn (typeof index === 'number' ? index*(this.oncoprint.getZoomedCellWidth()+this.oncoprint.getCellPadding()) : -1);\n\t};\n\tOncoprintRenderer.prototype.getCellXArray = function(length) {\n\t\tvar cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n\t\treturn _.map(_.range(0,length), function(x) { return x*cell_unit; });\n\t};\n\tOncoprintRenderer.prototype.getCellAreaWidth = function() {\n\t\treturn this.oncoprint.getVisibleIdOrder().length*(this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding());\n\t};\n\tOncoprintRenderer.prototype.getCellAreaHeight = function() {\n\t\tvar track_tops = this.getTrackTops();\n\t\tvar track_order = this.oncoprint.getTracks();\n\t\tif (track_order.length === 0) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tvar last_track = track_order[track_order.length-1];\n\t\t\treturn track_tops[last_track] + this.getRenderedTrackHeight(last_track);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaWidth = function() {\n\t\treturn this.label_area_width;\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaHeight = function() {\n\t\treturn this.getCellAreaHeight();\n\t};\n\tOncoprintRenderer.prototype.render = function() {\n\t\tthrow \"not implemented in abstract class\";\n\t}\n\treturn OncoprintRenderer;\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n            var cohortPatient = osApi.getCohortPatient();\n            var cohortGene = osApi.getCohortGene();\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Window Listeners // Todo: Need To Remove On $destroy\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n            angular.element($window).bind('click', \n                function(e){\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = false;\n                        vm.optCtxPatientShow = false;\n                    });\n                }\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Cohorts\n                initializeCohort(cyChart, vm, osApi, cohortPatient, cohortGene, $scope, moment);\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi, $timeout);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n\n                // Initialize Commands\n                initializeCommands(cyChart, vm, $window, $scope);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeCommands(chart, vm, $window, $scope){\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n            vm.optCommandPatient = [\n                {name:\"Show Edges\", cmd:function(e){\n                    vm.optCommandPatient.selected.select();\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(e){\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Genes\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected.select();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"Deselect Associated Genes\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Oncoprint\", cmd:function(e){\n\n                    if (vm.datasource==\"DEMOdz\") return;\n                    if (vm.datasource.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = vm.datasource.substr(4) + \"_tcga\";\n                        var genes = vm.optCommandPatient.selected.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $window.open(url);\n                    }\n                    vm.optCtxPatientShow = false;\n                }},\n            ];\n            vm.optCommandGene = [\n                {name:\"Show Edges\", cmd:function(e){\n                    vm.optCommandGene.selected.select();\n                    \n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(e){\n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Patients\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandGene.selected.select();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxGeneShow = false;\n                }},\n                {name:\"Deselect Associated Patients\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Gene Card\", cmd:function(e){\n                    $window.open(\"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+vm.optCommandGene.selected.data().name);\n                    vm.optCtxGeneShow = false;\n                }}\n            ];\n            vm.optCommands = {\n                 \"zoomReset\" : function(){\n                    chart.fit();\n                    chart.center();\n                },\n                \"zoomFit\" : function(){\n                    chart.fit( chart.$(':selected'), 50 )\n                },\n                \"showPatientsInCommon\": function(){\n                    var geneNodes = chart.$('node[nodeType=\"gene\"]:selected');\n                    var geneNames = geneNodes.map(function(item){ return item.data().name; });\n                    var patientNodes = geneNodes.neighborhood(\"node\");\n\n                    chart.startBatch();\n                    patientNodes.filter(function(i, patient){\n                        var patientGeneNames = patient.neighborhood(\"node\").map(function(item){ return item.data().name; })\n                        geneNames.forEach(function(geneName){\n                            if (patientGeneNames.indexOf(geneName)==-1) return false;\n                        })\n                        return true;\n                    }).forEach( function(ele){\n                        ele.select();\n                    });\n                    chart.endBatch();\n                },\n                \"showGenesInCommon\": function(){\n                    var patientNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                    var genes;\n\n                    patientNodes.each(function(i, ele){\n                        var patientGenes = ele.neighborhood(\"node\").map( function(item){ return item.data().name; });\n                        if (i==0) genes = patientGenes;\n                        else{\n                            genes = genes.filter(function(gene){\n                                return patientGenes.indexOf(gene)>=0;\n                            }, patientGenes)\n                        }\n                    })\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach(function(node){\n                            if (genes.indexOf(node.data().name)>=0){\n                                node.select();\n                            }\n                        });\n                    chart.endBatch();\n\n                },\n                \"showPatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hidePatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"showGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hideGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"selectConnectedGenes\" : function(){\n                    console.log(\"SELECT CONNECTED GENES\");\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectConnectedPatients\" : function(){\n                    console.log(\"CONNECTED PTS\");\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"invertPatientSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertGeneSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertAll\": function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectAll\" : function(){\n                    chart.startBatch();\n                    chart.$('node:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"hideAllEdges\" : function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]').forEach(function(item){\n                        this[item.id()] = {display:'none'};\n                    }, degmap);\n                    chart.batchData(degmap);\n                }\n            };\n        }\n        function initializeViewModel(vm, $stateParams){\n\n            vm.datasource = $stateParams.datasource;\n            vm.optCommandGene = false;\n            vm.optCtxGeneShow;\n            vm.optCommandPatient;\n            vm.optCtxPatientShow = false;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.optCommands;\n            vm.patient;\n            vm.gene;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeCohort(chart, vm, osApi, cohortPatient, cohortGene, $scope, moment){\n            vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n            vm.optCohortMode = vm.optCohortModes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n\n            vm.addCohorts = function(){\n                vm.addCohortGene();\n                vm.addCohortPatient();\n            }\n\n            vm.addCohortGene = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            vm.addCohortPatient = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n            var drawPatients = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortPatient.ids==\"*\"){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortPatient.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n            var drawGenes = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortGene.ids==\"*\"){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }\n                else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select()\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' }\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n\n            var drawMode = function(){\n                drawPatients();\n                drawGenes();\n            }\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optCohortPatient\", drawPatients );\n            $scope.$watch(\"vm.optCohortGene\", drawGenes );\n            $scope.$watch(\"vm.optCohortMode\", drawMode );\n\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: .05,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'core',\n                style:{\n                    'selection-box-color': '#3993fa',\n                    'selection-box-border-color': '#3993fa',\n                    'selection-box-border-width': '1px',\n                    'selection-box-opacity': '.2'\n                }\n            },\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 1,\n                    'border-color': '#FFFFFF'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var geneCtx = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var patientCtx = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    geneClick.removeAll();\n                    geneCtx.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    patientClick.removeAll();\n                    patientCtx.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    geneCtx: geneCtx,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    patientCtx: patientCtx,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch)\n                .on('cxttap', 'node[nodeType=\"gene\"]', events.geneCtx.dispatch )\n                .on('cxttap', 'node[nodeType=\"patient\"]', events.patientCtx.dispatch );\n                \n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showGeneCtxMenu: function(e){\n                    vm.optCommandGene.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#gene-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandGene.selected.data().name);\n                    return this;\n                },\n                showPatientCtxMenu: function(e){\n                    vm.optCommandPatient.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#patient-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxPatientShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandPatient.selected.data().name);\n                    return this;\n                },\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        vm.patient = e.cyTarget.attr('patient');\n                        vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                            .map(function(item) { return item.data().id });\n                        $scope.$apply();\n                    }else{\n                        var gene = {\n                            name: e.cyTarget.data().name,\n                            mutation: e.cyTarget.neighbourhood(\"edge[edgeType='mutation']\").length,\n                            cnl1: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.1']\").length,\n                            cnl2: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.2']\").length,\n                            cng1: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.1']\").length,\n                            cng2: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.2']\").length\n                        }\n                        gene.mutations = gene.cnl1 + gene.cnl2 + gene.cng1 + gene.cng2;\n                        vm.gene = gene;\n                        $scope.$apply();\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.gene = vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'element'};\n                            item[this.target]().css({\n                                'background-color':item.data().color,\n                                'border-color': item.data().color,\n                                'border-width': 60,\n                                'border-opacity': .3\n                            });\n                        }, {degmap:degmap, target:target});\n                    chart.endBatch();\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n                    var css = { \n                        'background-color': \"\",\n                        'border-color': \"\",\n                        'border-width': \"\",\n                        'border-opacity': \"\"\n                    }\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'none'};\n                            item[target]().style(this.css);\n                        }, {degmap:degmap, css:css, target:target});\n                    chart.endBatch();                        \n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n            {\n                name: 'Commands', //1° When \n                register: function(){\n                    events.geneCtx.add(behaviors.showGeneCtxMenu);\n                    events.patientCtx.add(behaviors.showPatientCtxMenu);\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    events.removeAll();\n                    chart.batchData(hidePatientEdges);\n                }\n\n            },\n            {\n                name: 'Selection Highlight', //1° When \n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    chart.on('select', 'node', {ui:true}, function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',{ui:true}, function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            {\n                name: 'Roll Over Highlight', //1° On \n                register: function() {\n                    // events.click(function(e) {\n                    //     behaviors\n                    //         .showOncoPrint(e)\n                    // });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }\n          ];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: 'purple', //'#FFE11A',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item, stateName){\n                if (item.state == stateName) return;\n                item.state = stateName;\n                var state;\n                switch(stateName){\n                    case \"Highlight\":\n                        state = {'color':item.color, sizeEle:3};\n                        break;\n                    case \"Hide\":\n                        state = {'color':'#FFFFFF', sizeEle:0};\n                        break;\n                    case \"Show\":\n                        state = {'color':'#3993fa', sizeEle:3};\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", state.color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi, $timeout){\n            function calculateSelections(){\n                var selectedNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                var sums = {};\n                \n                // Calculate Sums\n                selectedNodes.each(function(index, node){\n                    if ( angular.isUndefined(sums[node.data().color]) ) sums[node.data().color] = 1;\n                    else sums[node.data().color] += 1;\n                });\n\n                // Populate Legand\n                $timeout(function(){\n                    for (var i=0; i<vm.legandNodes.length; i++){\n                        var color = vm.legandNodes[i].color;\n                        vm.legandNodes[i].cnt = angular.isDefined(sums[color]) ? sums[color] : 0;\n                    }\n                });\n            }\n            // Debounce To Avoid Multiple Calls\n            chart.on('select', _.debounce(calculateSelections, 300));\n            chart.on('unselect', _.debounce(calculateSelections, 300))\n            \n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple', cnt:0}, {name:'Female', color:'green', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green', cnt:0}, {name:'Old', color:'red', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)'};\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] , cnt:0} });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n                            break;\n                        }\n                        calculateSelections();\n                    });\n            });\n\n            vm.updateNode = function(item, select){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node[(select)?\"select\":\"deselect\"]();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"#FFFF00\"; //\"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = (value.data.nodeType!==\"gene\");\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = (value.data.nodeType===\"gene\");\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, moment, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var dtTable;\n            var cohortPatient = osApi.getCohortPatient();\n            var rawData;\n            var data;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.search = \"\";\n\n            vm.addCohortPatient = function(){\n                var cohortName = \"Patient \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = dtTable._('tr', {\"filter\":\"applied\"}).map( function ( item ){ return item[0].toUpperCase() } );\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n\n            }\n            $scope.$watch('vm.optCohortPatient', draw);\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n\n            function draw(){\n                if (angular.isUndefined(dtTable)) return;\n                dtTable.fnClearTable();\n                data = rawData.tbl;\n                if (vm.optCohortPatient.ids!=\"*\"){\n                    data = data.filter(function(d){\n                        return (vm.optCohortPatient.ids.indexOf(d[0])>=0)\n                    });\n                }\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                    dtTable.fnAddData(data);\n                    dtTable.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n            }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Patients</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Genes\\\" ng-click=\\\"vm.optCommands.selectConnectedGenes()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Patient Selection\\\" ng-click=\\\"vm.optCommands.invertPatientSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Patients\\\" ng-click=\\\"vm.optCommands.selectPatients()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Patients\\\" ng-click=\\\"vm.optCommands.deselectPatients()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Patient Edges\\\" ng-click=\\\"vm.optCommands.showPatientEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Edges\\\" ng-click=\\\"vm.optCommands.hidePatientEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showGenesInCommon()\\\">Select Genes In Common</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Genes</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Patients\\\" ng-click=\\\"vm.optCommands.selectConnectedPatients()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Gene Selection\\\" ng-click=\\\"vm.optCommands.invertGeneSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Genes\\\" ng-click=\\\"vm.optCommands.selectGenes()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Genes\\\" ng-click=\\\"vm.optCommands.deselectGenes()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.showGeneEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.hideGeneEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showPatientsInCommon()\\\">Select Patients In Common</li></ul></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Global</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.invertAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Invert Selections\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.deselectAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Deselect All\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.hideAllEdges()\\\" style=\\\"width:33.333%\\\" title=\\\"Hide All Edges\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomReset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomFit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Fit</button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}};position:relative\\\">{{item.name}} ({{item.cnt}} Selected)<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, true); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};border-color:red;\\\"></div><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, false); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Options</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" style=\\\"position:relative\\\">{{item.name}}<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Highlight\\'); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Show\\'); $event.stopPropagation();\\\" style=\\\"background-color:#3993fa\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Hide\\'); $event.stopPropagation();\\\" style=\\\"background-color:#FFF\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Patient Id\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Gene Name\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-bottom: 100px;\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.gene\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.gene.name}}</li><li>CnGain.1: {{vm.gene.cng1}}</li><li>CnGain.2: {{vm.gene.cng2}}</li><li>CnLoss.1: {{vm.gene.cnl1}}</li><li>CnLoss.2: {{vm.gene.cnl2}}</li></ul></div></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers &amp Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}