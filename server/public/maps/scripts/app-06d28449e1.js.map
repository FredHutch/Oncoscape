{"version":3,"sources":["scripts/app-06d28449e1.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","name","route","img","copy","explore","tool","timelines","TimelinesController","$scope","$window","$document","moment","d3","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","shift","addEventListener","e","keyCode","selShow","selPatient","selEvent","selFields","optCohortPatients","optCohortPatient","optCohortModes","optCohortMode","timescaleunit","timescales","timescale","features","feature","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","d3Bars","zoomed","scale","event","translate","ch","rh","patients","length","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","onBrushStart","target","clear","call","onBrush","extent","lower","floor","upper","selectAll","each","d","i","firstChild","classed","onBrushEnd","draw","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","data","exit","remove","enter","on","transform","ids","selected","indexOf","id","cols","filteredEvents","__data__","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","filter","patient","hasOwnProperty","__Status","start","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","map","v","__color","processFeatureData","processPatientData","key","val","p","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","duration","asDays","payload","pts","unshift","eventTypes","$watchGroup","initializeCohort","cohortPatient","getCohortPatient","get","addCohortPatient","cohortName","format","cohortIds","cohort","add","$watch","resize","updateEventColor","item","toolmenu","ToolMenuController","test","TestController","message","datasets","getDataSetNames","survival","SurvivalController","getCalculatedSurvivalCurves","r","rawData","pids","getPatientHistoryTable","tbl","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","_","xScale","yScale","xMax","yMax","d3Tooltip","cohortGene","getCohortGene","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","optCohortGenes","optCohortGene","frame","tip","addCohortGene","node","toUpperCase","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","applyCohort","getCalculatedPCA","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","search","center","$","ele","startBatch","highlight","degmap","deselect","batchData","endBatch","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","_cohortGene","_cohortPatient","onDataSource","dispatch","userApi","onLogin","Signal","onLogout","_user","password","authenticated","token","_domains","logout","user","req","method","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","collection","defaultValue","_collection","onAdd","splice","onRemove","save","load","service","oncoprint_utils","exports","sign","number","invert_array","arr","curr","next","cssClassToSelector","classes","split","join","mouseY","ifndef","offsetY","originalEvent","layerY","mouseX","offsetX","layerX","replacement","child_class","parent_class","prototype","create","constructor","makeIdCounter","counter","clamp","t","makeD3SVGElement","tag","document","createElementNS","appendD3SVGElement","elt","appendChild","cloneNode","spaceSVGElementsHorizontally","group","padding","d3SelectChildren","tagName","parseFloat","getBBox","textWidth","string","font","obj","css","float","white-space","visibility","appendTo","parent","parentNode","warn","str","context","console","stableSort","cmp","zipped","ind","stable_cmp","lin_interp","parseInt","g","R","G","B","isNaN","A","assert","bool","msg","oncoprint","OncoprintController","displayOncoprint","empty","errorMessage","JSON","parse","setState","processed_data","onc","Oncoprint","suppressRendering","when","data_gene_map","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","elControl","elInstructions","elLegend","geneAndPatients","config","self","getTrackId","utils","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","dir","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","desc","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderLegend","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","resizeCells","LABEL_DRAGGING_CLASS","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","text_elt","weight","size","pos","cell_elt","cell_rect","cell_dim","outline_styles","trim","toLowerCase","drawOncoprint","_state","SORT","SET_CELL_WIDTH","CELL_CLICK","CELL_MOUSEENTER","CELL_MOUSELEAVE","ONCOPRINT_MOUSEENTER","ONCOPRINT_MOUSELEAVE","SET_PRE_TRACK_PADDING","TRACK_INIT","UPDATE_RENDER_RULES","FINISHED_POSITIONING","SET_SORT_DIRECTION","oncoprint_defaults","makeGeneticAlterationComparator","distinguish_mutations","cna_key","cna_order","mut_type_key","mut_order","_order","mrna_key","rppa_key","regulation_order","cna_diff","mut_type_diff","mrna_diff","rppa_diff","genetic_alteration_config_base","default","z_index","altered","cna","AMPLIFIED","legend_label","GAINED","HOMODELETED","HEMIZYGOUSLYDELETED","mrna","UPREGULATED","DOWNREGULATED","rppa","genetic_alteration_config_nondistinct_mutations","mut_type","*","genetic_alteration_config","MISSENSE","INFRAME","TRUNC","FUSION","genetic_alteration_comparator","genetic_alteration_comparator_nondistinct_mutations","D3SVGCategoricalColorRuleSet","D3SVGRuleSet","d3_colors","addColorRule","category","colored_rect","condition","cat","getCategory","addStaticRule","makeNARuleParams","cat1","cat2","NEGATIVE_INFINITY","localeCompare","new_color","pop","createElement","getRules","rule","rule_id","D3SVGGradientColorRuleSet","data_key","addGradientRule","data_range","color_range","na_color","proxy","numericalNaNSort","rule_map","D3SVGBarChartRuleSet","addBarChartRule","D3SVGGeneticAlterationRuleSet","dont_distinguish_mutation_color","defaults","distinguish_mutation_order","makeStaticShapeRule","rule_spec","styles","_key","_value","ANY","points","CELL","outline-color","outline-style","outline-width","new_rule","altered_rules","values","altered_data","getRule","filterData","uniq","D3SVGBarChartRule","D3SVGRule","inferred_data_range","log10","makeDatum","setUpHelperFunctions","scaled_data_range","height_helper","distance","y_function","height_function","inferDataRange","datumIsNaN","getEffectiveDataRange","showInLegend","display_data_range","num_digit_multiplier","legend_num_decimal_digits","mesh","D3SVGGradientRule","fill_function","rgb","D3SVGStaticRule","svg_ctr","f1","f2","f1_isNaN","f2_isNaN","children","getRuleId","addRule","removeRule","rule_ids","rules","sorted_rules","affected_groups","percentToPx","attr_val","attr_name","width_like","height_like","convertAttr","pt","split_pt","pt_x","pt_y","c","elts","makeRuleSet","clipping","upper_padding","track_group_separation","max_label_width","max_percent_altered_width","buffer_width","getTrackCellCtrCSSClass","new_rule_set","getTrackTops","tops","getCellX","track_order","MetadataController","colnames","dtTable","dataTable","paging","api","markers","MarkersController","cyChart","initializeViewModel","optCtxGeneShow","optCtxPatientShow","loadData","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","initializeCommands","chart","searchGene","geneSearchResult","matches","found","searchGeneResult","searchPatient","searchPatientResult","optInteractiveMode","optInteractiveModes","optCommandPatient","neighborhood","cbioDsName","n","open","optCommandGene","optCommands","_private","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","addCohorts","drawPatients","drawGenes","drawMode","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","geneOver","geneOut","geneClick","geneCtx","patientOver","patientOut","patientClick","patientCtx","removeAll","over","out","hidePatientEdges","behaviors","showGeneCtxMenu","oe","elMenu","showPatientCtxMenu","showPatientInfo","patientChromosomes","hidePatientInfo","showDegreeOne","hideDegreeOne","showDegreeTwo","hideDegreeTwo","states","register","unregister","edge","ui","showOncoPrint","colors","state","colorMap","mutation","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","sizeEle","updateEdge","stateName","sizeBdr","degree","sizeLbl","calculateSelections","selectedNodes","sums","cnt","gender","age","s","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","diagnosis","help","HelpController","videos","footer","FooterController","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","CompareController","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","authenticate","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-06d28449e1.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n        \t\t\t'ngAnimate',\n        \t\t\t'ngCookies', \n        \t\t\t'ngTouch', \n        \t\t\t'ngSanitize', \n        \t\t\t'ngMessages', \n        \t\t\t'ngAria', \n        \t\t\t'ngResource', \n        \t\t\t'ui.router', \n        \t\t\t'ui.bootstrap', \n        \t\t\t'ui-rangeSlider', \n        \t\t\t'ui.bootstrap.contextMenu',\n        \t\t\t'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'metadata.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            var shift = false;\n            $window.addEventListener (\"keydown\",  function(e) { if (e.keyCode==16) shift = true;  }, false);\n            $window.addEventListener (\"keyup\",    function(e) { if (e.keyCode==16) shift = false; }, false);\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortPatients;\n                vm.optCohortPatient;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n\n            var zoom;\n            var zoomed = function(){\n                if (shift) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var onBrushStart = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }\n            }\n            var onBrush = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                    return;\n                }\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        var e = d3.select(this.firstChild);\n                        e.classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                        \n                    });\n\n            }\n            var onBrushEnd = function(){\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);                \n            }\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                    rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row-selected',\n                            'width': '0px',\n                            'height': hRow\n                        })\n                        .style({\n                            'fill': '#EEEEEE'\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && vm.optCohortPatient.ids!=\"*\"){\n                        rows\n                            .each( function(d){\n                                var selected = (vm.optCohortPatient.ids.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n                \n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        \n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter & this.ids!==\"*\"){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':vm.optCohortPatient.ids});\n                \n                    // Remove Patients That Don't Have A Death Date If Sort by Survival\n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.filter(function(patient){\n                            if (angular.isUndefined(patient.__Status)) return false;\n                            if (angular.isUndefined(patient.__Status.start)) return false;\n                            return true;\n                        });\n                    }\n\n                    // Sort Patients On Align Property    \n                    processedData.patients = processedData.patients.sort(function(a,b){\n                        return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                    }, sort);\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale'], draw);\n                        angular.element($window).bind('resize', draw);\n                      \n                        initializeCohort(vm, osApi);   \n                        draw();\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n            var initializeCohort = function (vm, osApi){\n                var cohortPatient = osApi.getCohortPatient();\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[1];\n                vm.optCohortPatients = cohortPatient.get();\n                vm.optCohortPatient = vm.optCohortPatients[0];\n                vm.addCohortPatient = function(){\n                    var cohortName = \"TL \" + moment().format('- H:mm - M/D/YY');\n                    var cohortIds = d3Bars.selectAll(\".timeline-selected\")[0]\n                        .map( function (p) { return p.__data__.id; }  )\n                    var cohort = {name:cohortName, ids:cohortIds};\n                    if (cohortIds.length==0) return;\n                    cohortPatient.add(cohort);\n                    vm.optCohortPatient = cohort;\n                }\n                $scope.$watch(\"vm.optCohortMode\", draw );\n                $scope.$watch(\"vm.optCohortPatient\", draw );\n            }\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Data\n            var rawData;\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            \n\n            $scope.$watch('vm.optCohortPatient', function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    ids = rawData;\n                }\n                else{\n                    var pids = vm.optCohortPatient.ids;\n                    if (rawData!=null){\n                        ids = rawData.filter( function(d){\n                            return (pids.indexOf(d)>=0);\n                        });\n                        draw(ids);\n                    }\n                }\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    var data = (vm.optCohortPatient.ids==\"*\") ? rawData : vm.optCohortPatient.ids;\n                    draw(data);\n                });\n            });\n\n            // Draw\n            function draw(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.frame;\n            vm.tip = null;\n\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"PLSR \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ return node.__data__.name.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                var ids = vm.optCohortGene.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.name)>=0)\n                    });\n                }\n            });\n\n            \n\n            \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n\n\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var cohortPatient = osApi.getCohortPatient();\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n\n     \n            // Cohorts\n            vm.addCohortPatient = function(){\n                var cohortName = \"PCA \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node){return node.__data__.id.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n\n            var applyCohort = function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.id)>=0)\n                    });\n                }\n            };\n            $scope.$watch('vm.optCohortPatient', applyCohort);\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                // osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    //rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            \n                        });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    applyCohort();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                \n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            var cohortGene = osApi.getCohortGene();\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"Pathways \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                if (angular.isUndefined(csChart)) return;\n                csChart.startBatch();\n                var highlight = true;\n                var degmap = {};\n                if (vm.optCohortGene.ids==\"*\"){\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                csChart.batchData(degmap);\n                csChart.endBatch();\n            });\n            \n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            _cohortGene.clear();\n            _cohortPatient.clear();\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n\n\n        var history = (function(){\n\n            var _geneSelections = [];\n            var _geneSelection = null;\n            var _patientSelections = [];\n            var _patientSelection = null;\n\n            var addGeneSelection = function(name, ids){\n                _geneSelections.push({name:name, ids:ids})\n            };\n            var getGeneSelections = function(){\n                return _geneSelection;\n            };\n            var setGeneSelection = function(selection){\n                _geneSelection = selection;\n            };\n\n            var getGeneSelection = function(selection){\n                return _geneSelection;\n            };\n\n            var _patientSelections = [];\n            var addPatientSelection = function(name, ids){\n                console.log(\"ADD PATIENT SELECTION\");\n                _patientSelections.push({name:name, ids:ids})\n\n            };\n            var getPatientSelections = function(){\n                console.log(\"GET PATIENT SELECTION\");\n                return _patientSelections;\n            };\n            var setPatientSelection = function(selection){\n                console.log(\"SET PATIENT SELECTION\");\n                _patientSelection = selection;\n            };\n            var getPatientSelection = function(){\n                console.log(\"GET PATIENT SELECTION\")\n                return _patientSelection;\n            };\n\n            return {\n                addGeneSelection: addGeneSelection,\n                setGeneSelection: setGeneSelection,\n                getGeneSelections: getGeneSelections,\n                addPatientSelection: addPatientSelection,\n                setPatientSelection: setPatientSelection,\n                getPatientSelection: getPatientSelection,\n                getPatientSelections: getPatientSelections\n\n            }\n        });\n\n\n\n\n        var _cohortPatient = collection(signals, {name:'All Patients', ids:'*'}, \"osCohortPatient\");\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals, {name:'All Genes', ids:'*'}, \"osCohortGene\");\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals, defaultValue){ //, collectionName\n\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            //var onSelect = new signals.Signal();\n\n            var _collection = [defaultValue];\n            \n            function get() { return _collection; }\n            \n            function add(value){ \n                _collection.unshift(value); \n                onAdd.dispatch(_collection);\n            }\n            function clear(){\n                _collection = [defaultValue]   \n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n           \n            function save(){\n                \n            }\n\n            function load(){\n            }\n\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                clear:clear\n            }\n        }\n\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n\n    }\n})();\n\n\n\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_utils = (function() {\n\tvar exports = {};\n\n\texports.sign = function(number) {\n\t\treturn number?((number<0)?-1:1):0\n\t};\n\n\texports.invert_array = function invert_array(arr) {\n\t\treturn arr.reduce(function(curr, next, index) {\n\t\t\tcurr[next] = index;\n\t\t\treturn curr;\n\t\t}, {});\n\t};\n\n\texports.cssClassToSelector = function(classes) {\n\t\treturn \".\"+classes.split(\" \").join(\".\");\n\t};\n\texports.mouseY = function(evt) {\n\t\treturn exports.ifndef(evt.offsetY, evt.originalEvent && evt.originalEvent.layerY);\n\t};\n\texports.mouseX = function(evt) {\n\t\treturn exports.ifndef(evt.offsetX, evt.originalEvent && evt.originalEvent.layerX);\n\t};\n\texports.ifndef = function(val, replacement) {\n\t\treturn (typeof val === 'undefined') ? replacement : val;\n\t};\n\texports.extends = function(child_class, parent_class) {\n\t\tchild_class.prototype = Object.create(parent_class.prototype);\n\t\tchild_class.prototype.constructor = child_class;\n\t};\n\n\texports.makeIdCounter = function() {\n\t\tvar counter = 0;\n\t\treturn function() {\n\t\t\tcounter += 1;\n\t\t\treturn counter;\n\t\t};\n\t};\n\n\texports.clamp = function(t, a, b) {\n\t\treturn Math.max(Math.min(b,t), a);\n\t};\n\n\texports.makeD3SVGElement = function(tag) {\n\t\treturn d3.select(document.createElementNS('http://www.w3.org/2000/svg', tag));\n\t};\n\n\texports.appendD3SVGElement = function(elt, target, svg) {\n\t\treturn target.select(function() {\n\t\t\treturn this.appendChild(elt.node().cloneNode(true));\n\t\t});\n\t};\n\n\texports.spaceSVGElementsHorizontally = function(group, padding) {\n\t\tvar x = 0;\n\t\tvar elts = exports.d3SelectChildren(group, '*').each(function() {\n\t\t\tif (this.tagName === 'defs') {\n\t\t\t\t// don't adjust spacing for a defs element\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar transform = d3.select(this).attr('transform');\n\t\t\tvar y = transform && transform.indexOf(\"translate\") > -1 && parseFloat(transform.split(\",\")[1], 10);\n\t\t\ty = y || 0;\n\t\t\td3.select(this).attr('transform', exports.translate(x, y));\n\t\t\tx += this.getBBox().width;\n\t\t\tx += padding;\n\t\t});\n\t\treturn group;\n\t};\n\n\texports.textWidth = function(string, font) {\n\t\tvar obj = $('<div>'+string+'</div>')\n\t\t\t\t.css({position: 'absolute', float: 'left',\n\t\t\t\t\t'white-space':'nowrap', visibility: 'hidden',\n\t\t\t\t\tfont: font})\n\t\t\t\t.appendTo($('body'));\n\t\tvar width = obj.width();\n\t\tobj.remove();\n\t\treturn width;\n\t};\n\n\texports.d3SelectChildren = function(parent, selector) {\n\t\treturn parent.selectAll(selector).filter(function() {\n\t\t\treturn this.parentNode === parent.node();\n\t\t});\n\t};\n\n\texports.warn = function(str, context) {\n\t\tconsole.log(\"Oncoprint error in \"+context+\": \"+str);\n\t};\n\n\texports.stableSort = function(arr, cmp) {\n\t\t// cmp returns something in [-1,0,1]\n\n\t\tvar zipped = [];\n\t\t_.each(arr, function(val, ind) {\n\t\t\tzipped.push([val, ind]);\n\t\t});\n\t\tvar stable_cmp = function(a,b) {\n\t\t\tvar res = cmp(a[0], b[0]);\n\t\t\tif (res === 0) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\tres = -1;\n\t\t\t\t} else if (a[1] > b[1]) {\n\t\t\t\t\tres = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tzipped.sort(stable_cmp);\n\t\treturn _.map(zipped, function(x) { return x[0];});\n\t};\n\n\texports.lin_interp = function(t, a, b) {\n\t\tif (a[0] === '#') {\n\t\t\tvar r = [parseInt(a.substring(1,3), 16), parseInt(b.substring(1,3), 16)];\n\t\t\tvar g = [parseInt(a.substring(3,5), 16), parseInt(b.substring(3,5), 16)];\n\t\t\tvar b = [parseInt(a.substring(5,7), 16), parseInt(b.substring(5,7), 16)];\n\t\t\tvar R = Math.round(r[0]*(1-t) + r[1]*t).toString(16);\n\t\t\tvar G = Math.round(g[0]*(1-t) + g[1]*t).toString(16);\n\t\t\tvar B = Math.round(b[0]*(1-t) + b[1]*t).toString(16);\n\n\t\t\tR = R.length < 2 ? '0'+R : R;\n\t\t\tG = G.length < 2 ? '0'+G : G;\n\t\t\tB = B.length < 2 ? '0'+B : B;\n\n\t\t\treturn '#' + R + G + B;\n\t\t} else if (isNaN(a) && a.indexOf('%') > -1) {\n\t\t\tvar A = parseFloat(a, 10);\n\t\t\tvar B = parseFloat(b, 10);\n\t\t\treturn (A*(1-t) + B*t)+'%';\n\t\t} else {\n\t\t\treturn a*(1-t) + b*t;\n\t\t}\n\t};\n\n\texports.translate = function(x,y) {\n\t\treturn \"translate(\" + x + \",\" + y + \")\";\n\t};\n\n\texports.assert = function(bool, msg) {\n\t\tif (!bool) {\n\t\t\tthrow msg;\n\t\t}\n\t}\n\treturn exports;\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.geneAndPatients = vm.optCohortGene.ids + \",\" + vm.optCohortPatient.ids;\n            vm.errorMessage;\n            \n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.optCohortPatient', 'vm.optCohortGene'], function() {\n                    var msg =  vm.optCohortPatient.ids.toString() + \", \" + vm.optCohortGene.ids.toString();\n                    drawOncoprint(msg);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ( (vm.optCohortPatient.ids == \"*\") || (vm.optCohortGene.ids == \"*\") ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_events = {\n\tADD_TRACK: 'add_track.oncoprint',\n\tREMOVE_TRACK: 'remove_track.oncoprint',\n\tMOVE_TRACK: 'move_track.oncoprint',\n\tSORT: 'sort.oncoprint',\n\tSET_CELL_PADDING: 'set_cell_padding.oncoprint',\n\tSET_CELL_WIDTH: 'set_cell_width.oncoprint',\n\tSET_TRACK_DATA: 'set_track_data.oncoprint',\n\tSET_ID_ORDER: 'set_id_order.oncoprint',\n\tCELL_CLICK: 'cell_click.oncoprint',\n\tCELL_MOUSEENTER: 'cell_mouseenter.oncoprint',\n\tCELL_MOUSELEAVE: 'cell_mouseleave.oncoprint',\n\tONCOPRINT_MOUSEENTER: 'oncoprint_mouseenter.oncoprint',\n\tONCOPRINT_MOUSELEAVE: 'oncoprint_mouseleave.oncoprint',\n\tSET_PRE_TRACK_PADDING: 'set_pre_track_padding.oncoprint',\n\tTRACK_INIT: 'init.track.oncoprint',\n\tUPDATE_RENDER_RULES: 'update_render_rules.cell_renderer.oncoprint',\n\tFINISHED_RENDERING: 'finished_rendering.oncoprint',\n\tFINISHED_POSITIONING: 'finished_positioning.renderer.oncoprint',\n\tSET_ZOOM: 'set_zoom.oncoprint',\n\tSET_SORT_DIRECTION: 'set_sort_direction.oncoprint',\n\tSET_VISIBLE_ID_ORDER: 'set_visible_ids.oncoprint'\n};\noncoprint_defaults = (function() {\n\tvar utils = window.oncoprint_utils;\n\tvar makeGeneticAlterationComparator = function(distinguish_mutations) {\n\t\tvar cna_key = 'cna';\n\t\tvar cna_order = utils.invert_array(['AMPLIFIED', 'HOMODELETED', 'GAINED', 'HEMIZYGOUSLYDELETED', 'DIPLOID', undefined]);\n\t\tvar mut_type_key = 'mut_type';\n\t\tvar mut_order = (function() {\n\t\t\tif (!distinguish_mutations) {\n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn +(typeof m === 'undefined');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _order = utils.invert_array(['TRUNC', 'INFRAME', 'MISSENSE', undefined]); \n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn _order[m];\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tvar mrna_key = 'mrna';\n\t\tvar rppa_key = 'rppa';\n\t\tvar regulation_order = utils.invert_array(['UPREGULATED', 'DOWNREGULATED', undefined]);\n\n\t\treturn function(d1, d2) {\n\t\t\tvar cna_diff = utils.sign(cna_order[d1[cna_key]] - cna_order[d2[cna_key]]);\n\t\t\tif (cna_diff !== 0) {\n\t\t\t\treturn cna_diff;\n\t\t\t}\n\n\t\t\tvar mut_type_diff = utils.sign(mut_order(d1[mut_type_key]) - mut_order(d2[mut_type_key]));\n\t\t\tif (mut_type_diff !== 0) {\n\t\t\t\treturn mut_type_diff;\n\t\t\t}\n\n\t\t\tvar mrna_diff = utils.sign(regulation_order[d1[mrna_key]] - regulation_order[d2[mrna_key]]);\n\t\t\tif (mrna_diff !== 0) {\n\t\t\t\treturn mrna_diff;\n\t\t\t}\n\n\t\t\tvar rppa_diff = utils.sign(regulation_order[d1[rppa_key]] - regulation_order[d2[rppa_key]]);\n\t\t\tif (rppa_diff !== 0) {\n\t\t\t\treturn rppa_diff;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\t};\n\n\tvar genetic_alteration_config_base = {\n\t\tdefault: [{shape: 'full-rect', color: '#D3D3D3', z_index: -1}],\n\t\taltered: {\n\t\t\t'cna': {\n\t\t\t\t'AMPLIFIED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tlegend_label: 'Amplification'\n\t\t\t\t},\n\t\t\t\t'GAINED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#FFB6C1',\n\t\t\t\t\tlegend_label: 'Gain'\n\t\t\t\t},\n\t\t\t\t'HOMODELETED':{\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#0000FF',\n\t\t\t\t\tlegend_label: 'Deep Deletion'\n\t\t\t\t},\n\t\t\t\t'HEMIZYGOUSLYDELETED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#8FD8D8',\n\t\t\t\t\tlegend_label: 'Shallow Deletion'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'mrna': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#FF9999',\n\t\t\t\t\tlegend_label: 'mRNA Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#6699CC',\n\t\t\t\t\tlegend_label: 'mRNA Downregulation'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rppa': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'small-up-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'small-down-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Downregulation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlegend_label: \"Genetic Alteration\",\n\t};\n\tvar genetic_alteration_config_nondistinct_mutations = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config_nondistinct_mutations.altered.mut_type = {\n\t\t'*': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Mutation'\n\t\t}\n\t};\n\tvar genetic_alteration_config = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config.altered.mut_type = {\n\t\t'MISSENSE': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Missense Mutation'\n\t\t},\n\t\t'INFRAME': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: '#9F8170',\n\t\t\tlegend_label: 'Inframe Mutation'\n\t\t},\n\t\t'TRUNC': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Truncating Mutation'\n\t\t},\n\t\t'FUSION':{\n\t\t\tshape: 'large-right-arrow',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Fusion'\n\t\t}\n\t};\n\t\n\treturn {\n\t\tgenetic_alteration_config: genetic_alteration_config,\n\t\tgenetic_alteration_config_nondistinct_mutations: genetic_alteration_config_nondistinct_mutations,\n\t\tgenetic_alteration_comparator: makeGeneticAlterationComparator(true),\n\t\tgenetic_alteration_comparator_nondistinct_mutations: makeGeneticAlterationComparator(false)\n\t};\n})();\noncoprint_RuleSet = (function() {\n\tvar utils = oncoprint_utils;\n\tvar defaults = oncoprint_defaults;\n\n\tvar CATEGORICAL_COLOR = 'categorical_color';\n\tvar GRADIENT_COLOR = 'gradient_color'; \n\tvar GENETIC_ALTERATION = 'genetic_alteration';\n\tvar BAR_CHART = 'bar_chart';\n\n\tvar CELL = \"cell\";\n\tvar ANY = '*';\n\n\tvar getRuleSetId = utils.makeIdCounter();\n\n\tvar numericalNaNSort = function(d1, d2) {\n\t\tvar f1 = parseFloat(d1[this.data_key], 10);\n\t\tvar f2 = parseFloat(d2[this.data_key], 10);\n\t\tvar f1_isNaN = isNaN(f1);\n\t\tvar f2_isNaN = isNaN(f2);\n\t\tif (f1_isNaN && f2_isNaN) {\n\t\t\treturn 0;\n\t\t} else if (!f1_isNaN && !f2_isNaN) {\n\t\t\tif (f1 < f2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (f1 > f2) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t} else if (f1_isNaN) {\n\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t} else {\n\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t}\n\t};\n\tvar makeNARuleParams = function(condition, label) {\n\t\treturn {\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\t\tattrs: {fill: '#eeeeee', width: '100%', height:'100%'},\n\t\t\t\tlegend_label: label,\n\t\t\t\tchildren: [{\n\t\t\t\t\tcondition: condition,\n\t\t\t\t\tshape: utils.makeD3SVGElement('path'),\n\t\t\t\t\tattrs: {d: \"m 0% 0% L 100% 100%\"},\n\t\t\t\t\tstyles: {'stroke-width':'1px', 'stroke':'#555555'},\n\t\t\t\t\tlegend_label: label,\n\t\t\t\t}],\n\t\t\t};\n\t};\n\tvar D3SVGRuleSet = (function() {\n\t\tfunction D3SVGRuleSet(params) {\n\t\t\tthis.rule_map = {};\n\t\t\tthis.rule_set_id = getRuleSetId();\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = false;\n\t\t};\n\t\tvar getRuleId = utils.makeIdCounter();\n\n\t\tD3SVGRuleSet.prototype.getLegendLabel = function() {\n\t\t\treturn this.legend_label;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRuleSetId = function() {\n\t\t\treturn this.rule_set_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t}\n\t\tD3SVGRuleSet.prototype.addStaticRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGStaticRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addGradientRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGGradientRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addBarChartRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGBarChartRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.removeRule = function(rule_id) {\n\t\t\tdelete this.rule_map[rule_id];\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRules = function() {\n\t\t\tvar self = this;\n\t\t\tvar rule_ids = Object.keys(this.rule_map);\n\t\t\tvar rules = _.map(rule_ids, function(id) { return self.rule_map[id]; });\n\t\t\tvar sorted_rules = _.sortBy(rules, function(r) { return r.z_index; });\n\t\t\treturn sorted_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar active_rules = {};\n\t\t\t_.each(this.getRules(), function(rule) {\n\t\t\t\tvar affected_groups = rule.filter(g);\n\t\t\t\tif (affected_groups[0].length > 0) {\n\t\t\t\t\tactive_rules[rule.rule_id] = true;\n\t\t\t\t}\n\t\t\t\trule.apply(affected_groups, cell_width, cell_height);\n\t\t\t});\n\t\t\treturn active_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRule = function(rule_id) {\n\t\t\treturn this.rule_map[rule_id];\n\t\t};\n\t\treturn D3SVGRuleSet;\n\t})();\n\n\tfunction D3SVGCategoricalColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = CATEGORICAL_COLOR;\n\t\tvar self = this;\n\t\tvar d3_colors = [\"#3366cc\",\"#dc3912\",\"#ff9900\",\"#109618\",\n\t\t\t\t\"#990099\",\"#0099c6\",\"#dd4477\",\"#66aa00\",\n\t\t\t\t\"#b82e2e\",\"#316395\",\"#994499\",\"#22aa99\",\n\t\t\t\t\"#aaaa11\",\"#6633cc\",\"#e67300\",\"#8b0707\",\n\t\t\t\t\"#651067\",\"#329262\",\"#5574a6\",\"#3b3eac\",\n\t\t\t\t\"#b77322\",\"#16d620\",\"#b91383\",\"#f4359e\",\n\t\t\t\t\"#9c5935\",\"#a9c413\",\"#2a778d\",\"#668d1c\",\n\t\t\t\t\"#bea413\",\"#0c5922\",\"#743411\"];/*_.shuffle(_.filter(d3.scale.category20().range().concat(d3.scale.category20b().range()).concat(d3.scale.category20c().range()),\n\t\t\t\t\t\t\t\t\tfunction(color) {\n\t\t\t\t\t\t\t\t\t\tvar rgb = d3.rgb(color);\n\t\t\t\t\t\t\t\t\t\treturn !(rgb.r === rgb.g && rgb.g === rgb.b);\n\t\t\t\t\t\t\t\t\t}));*/\n\t\tvar addColorRule = function(color, category) {\n\t\t\tvar colored_rect = utils.makeD3SVGElement('rect').attr('fill', color);\n\t\t\tvar condition = (function(cat) {\n\t\t\t\treturn function(d) {\n\t\t\t\t\treturn params.getCategory(d) === cat;\n\t\t\t\t};\n\t\t\t})(category);\n\t\t\tself.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: colored_rect,\n\t\t\t\tlegend_label: category\n\t\t\t});\n\t\t};\n\t\tparams.color = params.color || {};\n\t\t_.each(params.color, function(color, category) {\n\t\t\taddColorRule(color, category);\n\t\t});\n\t\tself.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn params.getCategory(d) === 'NA';\n\t\t}, 'NA'));\n\n\t\tthis.sort_cmp = params.sort_cmp || function(d1,d2) {\n\t\t\tvar cat1 = params.getCategory(d1);\n\t\t\tvar cat2 = params.getCategory(d2);\n\t\t\tif (typeof cat1 !== 'string') {\n\t\t\t\tcat1 = cat1.toString();\n\t\t\t}\n\t\t\tif (typeof cat2 !== 'string') {\n\t\t\t\tcat2 = cat2.toString();\n\t\t\t}\n\t\t\tif (cat1 === cat2) {\n\t\t\t\treturn 0;\n\t\t\t} else if (cat1 === 'NA') {\n\t\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t\t} else if (cat2 === 'NA') {\n\t\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t\t} else {\n\t\t\t\treturn cat1.localeCompare(cat2);\n\t\t\t}\n\t\t};\n\t\tself.apply = function(g, cell_width, cell_height) {\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar category = params.getCategory(d);\n\t\t\t\tif (!params.color.hasOwnProperty(category) && category !== \"NA\") {\n\t\t\t\t\tvar new_color = d3_colors.pop();\n\t\t\t\t\tparams.color[category] = new_color;\n\t\t\t\t\taddColorRule(new_color, category);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn D3SVGRuleSet.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGCategoricalColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGradientColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = GRADIENT_COLOR;\n\t\tthis.data_key = params.data_key;\n\t\tvar rule = this.addGradientRule({\n\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tcolor_range: params.color_range,\n\t\t\tscale: params.scale,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGGradientColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGBarChartRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar self = this;\n\t\tself.type = BAR_CHART;\n\t\tself.data_key = params.data_key;\n\t\tvar rule = this.addBarChartRule({\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tscale: params.scale,\n\t\t\tfill: params.fill,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGBarChartRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGeneticAlterationRuleSet(params) {\n\t\tif (params && params.dont_distinguish_mutation_color) {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config_nondistinct_mutations);\n\t\t} else {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config);\n\t\t}\n\t\tif (params && params.distinguish_mutation_order) {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator;\n\t\t} else {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator_nondistinct_mutations;\n\t\t}\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar vocab = ['full-rect', 'middle-rect', 'large-right-arrow', 'small-up-arrow', 'small-down-arrow'];\n\t\tvar self = this;\n\t\tself.type = GENETIC_ALTERATION;\n\n\t\tvar makeStaticShapeRule = function(rule_spec, key, value) {\n\t\t\tvar condition = typeof key !== 'undefined' && typeof value !== 'undefined' ? (function(_key, _value) {\n\t\t\t\tif (_value === ANY) {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn typeof d[_key] !== 'undefined';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn d[_key] === _value;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})(key, value) : undefined;\n\t\t\tvar shape, attrs, styles, z_index;\n\t\t\tswitch (rule_spec.shape) {\n\t\t\t\tcase 'full-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '100%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'middle-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '33.33%', y: '33.33%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'large-right-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"0%,0% 100%,50% 0%,100%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-up-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,0% 100%,25% 0%,25%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-down-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,100% 100%,75% 0%,75%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'outline':\n\t\t\t\t\tshape = CELL;\n\t\t\t\t\tstyles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 5);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar new_rule = self.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: shape,\n\t\t\t\tattrs: attrs,\n\t\t\t\tstyles: styles,\n\t\t\t\tz_index: z_index,\n\t\t\t\tlegend_label: rule_spec.legend_label,\n\t\t\t\texclude_from_legend: (typeof rule_spec.legend_label === \"undefined\")\n\t\t\t});\n\t\t\treturn new_rule;\n\t\t};\n\t\tvar altered_rules = [];\n\t\t_.each(params.altered, function(values, key) {\n\t\t\t_.each(values, function(rule_spec, value) {\n\t\t\t\taltered_rules.push(makeStaticShapeRule(rule_spec, key, value));\n\t\t\t});\n\t\t});\n\t\t_.each(params.default, function(rule_spec) {\n\t\t\tmakeStaticShapeRule(rule_spec);\n\t\t});\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t\tself.alteredData = function(data) {\n\t\t\tvar altered_data = [];\n\t\t\t_.each(altered_rules, function(rule_id) {\n\t\t\t\taltered_data = altered_data.concat(self.getRule(rule_id).filterData(data));\n\t\t\t});\n\t\t\treturn _.uniq(altered_data);\n\t\t};\n\t}\n\tD3SVGGeneticAlterationRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tvar D3SVGRule = (function() {\n\t\tfunction D3SVGRule(params, rule_id) {\n\t\t\tthis.rule_id = rule_id;\n\t\t\tthis.condition = params.condition || function(d) { return true; };\n\t\t\tthis.shape = typeof params.shape === 'undefined' ? utils.makeD3SVGElement('rect') : params.shape;\n\t\t\tthis.z_index = typeof params.z_index === 'undefined' ? this.rule_id : params.z_index;\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = params.exclude_from_legend;\n\n\t\t\tthis.attrs = params.attrs || {};\n\t\t\tthis.attrs.width = utils.ifndef(this.attrs.width, '100%');\n\t\t\tthis.attrs.height = utils.ifndef(this.attrs.height, '100%');\n\t\t\tthis.attrs.x = utils.ifndef(this.attrs.x, 0);\n\t\t\tthis.attrs.y = utils.ifndef(this.attrs.y, 0);\n\n\t\t\tthis.styles = params.styles || {};\n\n\t\t\tthis.children = _.map(params.children, function(p) {\n\t\t\t\treturn new D3SVGRule(p);\n\t\t\t});\n\t\t}\n\n\t\tvar percentToPx = function(attr_val, attr_name, cell_width, cell_height) {\n\t\t\t// convert a percentage to a local pixel coordinate\n\t\t\tvar width_like = ['width', 'x'];\n\t\t\tvar height_like = ['height', 'y'];\n\t\t\tattr_val = parseFloat(attr_val, 10)/100;\n\t\t\tif (width_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_width;\n\t\t\t} else if (height_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_height;\n\t\t\t} \n\t\t\treturn attr_val+'';\n\t\t};\n\n\t\tvar convertAttr = function(d, i, attr_val, attr_name, cell_width, cell_height) {\n\t\t\tvar ret = attr_val;\n\t\t\tif (typeof ret === 'function') {\n\t\t\t\tret = ret(d,i);\n\t\t\t}\n\t\t\tif (typeof ret === 'string' && ret.indexOf('%') > -1) {\n\t\t\t\tif (attr_name === 'points') {\n\t\t\t\t\tret = _.map(ret.split(\" \"), function(pt) {\n\t\t\t\t\t\tvar split_pt = pt.split(\",\");\n\t\t\t\t\t\tvar pt_x = percentToPx(split_pt[0], 'x', cell_width, cell_height);\n\t\t\t\t\t\tvar pt_y = percentToPx(split_pt[1], 'y', cell_width, cell_height);\n\t\t\t\t\t\treturn pt_x+\",\"+pt_y;\n\t\t\t\t\t}).join(\" \");\n\t\t\t\t} else if (attr_name === 'd') {\n\t\t\t\t\tvar split = ret.split(/\\s+/);\n\t\t\t\t\tfor (var i=0, _len = split.length; i<_len; i++) {\n\t\t\t\t\t\tvar c = split[i].toLowerCase();\n\t\t\t\t\t\tif (c === 'm' || c === 'l') {\n\t\t\t\t\t\t\tsplit[i+1] = percentToPx(split[i+1], 'x', cell_width, cell_height);\n\t\t\t\t\t\t\tsplit[i+2] = percentToPx(split[i+2], 'y', cell_width, cell_height);\n\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn split.join(\" \");\n\t\t\t\t} else {\n\t\t\t\t\tret = percentToPx(ret, attr_name, cell_width, cell_height);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\n\t\tD3SVGRule.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar shape = this.shape;\n\t\t\tvar elts = shape === CELL ? g : utils.appendD3SVGElement(shape, g);\n\t\t\tvar styles = this.styles;\n\t\t\tvar attrs = this.attrs;\n\t\t\tattrs.x = attrs.x || 0;\n\t\t\tattrs.y = attrs.y || 0;\n\t\t\t_.each(attrs, function(val, key) {\n\t\t\t\telts.attr(key, function(d,i) {\n\t\t\t\t\treturn convertAttr(d, i, val, key, cell_width, cell_height);\n\t\t\t\t});\n\t\t\t});\n\t\t\t_.each(styles, function(val, key) {\n\t\t\t\telts.style(key, val);\n\t\t\t});\n\t\t\t_.each(this.children, function(r) {\n\t\t\t\tr.apply(g, cell_width, cell_height);\n\t\t\t});\n\t\t}\n\t\tD3SVGRule.prototype.filter = function(g) {\n\t\t\treturn g.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.filterData = function(data) {\n\t\t\treturn data.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.showInLegend = function() {\n\t\t\treturn !this.exclude_from_legend;\n\t\t};\n\t\treturn D3SVGRule;\n\t})();\n\t\n\n\tfunction D3SVGBarChartRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.attrs.fill = function(d) {\n\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\treturn params.na_color;\n\t\t\t}  else {\n\t\t\t\treturn params.fill;\n\t\t\t}\n\t\t};\n\t\tthis.na_color = params.na_color;\n\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(Math.abs(x), 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar height_helper = function(d) {\n\t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar distance = Math.abs(datum-scaled_data_range[0]) / Math.abs(scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\treturn distance * 100;\n\t\t\t};\n\t\t\tvar y_function = function(d) {\n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"0\" : (100 - height_helper(d))) + '%';\n\t\t\t};\n\t\t\tvar height_function = function(d) { \n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"100\" : height_helper(d)) + '%';\n\t\t\t};\n\t\t\tthis.attrs.height = height_function;\n\t\t\tthis.attrs.y = y_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getEffectiveDataRange = function() {\n\t\t\tif (typeof this.data_range === \"undefined\") {\n\t\t\t\treturn this.inferred_data_range;\n\t\t\t} else {\n\t\t\t\tvar ret = [];\n\t\t\t\tret[0] = (typeof this.data_range[0] === 'undefined' ? this.inferred_data_range[0] : this.data_range[0]);\n\t\t\t\tret[1] = (typeof this.data_range[1] === 'undefined' ? this.inferred_data_range[1] : this.data_range[1]);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.getEffectiveDataRange();\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', '0px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true)\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tvar height = cell_height*parseInt(this.attrs.height(datum))/100;\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', height+'px')\n\t\t\t\t\t.attr('y', (cell_height-height)+'px')\n\t\t\t\t\t.attr('fill', params.fill)\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tif (g[0].length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inferred_data_range = this.inferDataRange(g);\n\t\t\tthis.setUpHelperFunctions(this.getEffectiveDataRange());\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t}\n\tD3SVGBarChartRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGGradientRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.color_range = params.color_range;\n\t\tthis.na_color = params.na_color;\n\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(x, 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar fill_function = function(d) {\n\t\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\t\treturn params.na_color;\n\t\t\t\t}\n \t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar data_range = [scaled_data_range[0], scaled_data_range[1]];\n\t\t\t\tvar distance = (datum-scaled_data_range[0]) / (scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\tcolor_range = [d3.rgb(params.color_range[0]).toString(),\n\t\t\t\t\t\td3.rgb(params.color_range[1]).toString()];\n\t\t\t\treturn utils.lin_interp(distance, params.color_range[0], params.color_range[1]);\n\t\t\t};\n\t\t\tthis.attrs.fill = fill_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.data_range || this.inferred_data_range;\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', cell_height+'px')\n\t\t\t\t\t.attr('fill', this.attrs.fill(datum))\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tthis.setUpHelperFunctions(this.data_range || (this.inferred_data_range = this.inferDataRange(g)));\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\t}\n\tD3SVGGradientRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGStaticRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar svg_ctr = div.append('div').classed('oncoprint-legend-block', true);\n\t\t\tvar svg = svg_ctr.append('svg').attr('width', cell_width+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tthis.apply(svg, cell_width, cell_height);\n\t\t\tif (this.legend_label) {\n\t\t\t\tdiv.append('span').text(this.legend_label).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\t}\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGStaticRule.prototype = Object.create(D3SVGRule.prototype);\n\n\treturn {\n\t\tCATEGORICAL_COLOR: CATEGORICAL_COLOR,\n\t\tGRADIENT_COLOR: GRADIENT_COLOR,\n\t\tGENETIC_ALTERATION: GENETIC_ALTERATION,\n\t\tBAR_CHART: BAR_CHART,\n\t\tmakeRuleSet: function(type, params) {\n\t\t\tif (type === CATEGORICAL_COLOR) {\n\t\t\t\treturn new D3SVGCategoricalColorRuleSet(params);\n\t\t\t} else if (type === GRADIENT_COLOR) {\n\t\t\t\treturn new D3SVGGradientColorRuleSet(params);\n\t\t\t} else if (type === GENETIC_ALTERATION) {\n\t\t\t\treturn new D3SVGGeneticAlterationRuleSet(params);\n\t\t\t} else if (type === BAR_CHART) {\n\t\t\t\treturn new D3SVGBarChartRuleSet(params);\n\t\t\t} else {\n\t\t\t\treturn new D3SVGRuleSet();\n\t\t\t}\n\t\t}\n\t};\n})();\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nOncoprintRenderer = (function() {\n\tvar events = oncoprint_events;\n\tvar utils = oncoprint_utils;\n\tvar RuleSet = oncoprint_RuleSet;\n\n\tfunction OncoprintRenderer(oncoprint, config) {\n\t\tthis.rule_sets = {};\n\t\tthis.clipping = true;\n\t\tthis.oncoprint = oncoprint;\n\t\tthis.config = config;\n\t\tthis.upper_padding = utils.ifndef(config.upper_padding, 0);\n\t\tthis.max_label_length = utils.ifndef(config.max_label_length, 20);\n\t\tthis.track_group_separation = 12;\n\n\t\t(function computeLabelAreaWidth(self) {\n\t\t\tvar label_font = self.getLabelFont();\n\t\t\tvar max_label_width = utils.textWidth((Math.pow(10,self.max_label_length)-1).toString(), label_font);\n\t\t\tvar max_percent_altered_width = utils.textWidth('100%', label_font);\n\t\t\tvar buffer_width = 20;\n\t\t\tself.label_area_width = max_label_width + buffer_width + max_percent_altered_width;\n\t\t})(this);\n\t};\n\tOncoprintRenderer.prototype.getCellCSSClass = function() {\n\t\treturn 'oncoprint-cell';\t\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCSSClass = function(track_id) {\n\t\treturn this.getCellCSSClass()+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-label oncoprint-track-label'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSSelector = function(track_id) {\n\t\t// TODO: replace with utils.cssClassToSelector\n\t\treturn \".\"+this.getTrackLabelCSSClass(track_id).split(\" \").join(\".\");\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCtrCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-cell-ctr'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getLabelFont = function() {\n\t\treturn this.config.label_font;\n\t};\n\tOncoprintRenderer.prototype.setRuleSet = function(track_id, type, params) {\n\t\tvar new_rule_set = RuleSet.makeRuleSet(type, params);\n\t\tthis.rule_sets[track_id] = new_rule_set;\n\t\tif (new_rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(track_id, new_rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n\t\tvar rule_set = this.rule_sets[source_track_id];\n\t\tthis.rule_sets[target_track_id] = rule_set;\n\t\tif (rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(target_track_id, rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getRuleSet = function(track_id) {\n\t\treturn this.rule_sets[track_id];\n\t};\n\tOncoprintRenderer.prototype.getTrackTops = function() {\n\t\tvar ret = {};\n\t\tvar y = this.upper_padding;\n\t\tvar self = this;\n\t\t_.each(this.oncoprint.getTrackGroups(), function(group) {\n\t\t\tif (group.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_.each(group, function(id) {\n\t\t\t\tret[id] = y;\n\t\t\t\ty+= self.getRenderedTrackHeight(id);\n\t\t\t});\n\t\t\ty += self.track_group_separation;\n\t\t});\n\t\treturn ret;\n\t};\n\tOncoprintRenderer.prototype.getTrackCellTops = function() {\n\t\treturn this.track_cell_tops || this.computeTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.computeTrackCellTops = function() {\n\t\tvar tops = this.getTrackTops();\n\t\tvar self = this;\n\t\t_.each(tops, function(top, id) {\n\t\t\ttops[id] = top + self.oncoprint.getTrackPadding(id);\n\t\t});\n\t\tthis.track_cell_tops = tops;\n\t\treturn tops;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelTops = function() {\n\t\treturn this.getTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.getRenderedTrackHeight = function(track_id) {\n\t\treturn this.oncoprint.getTrackHeight(track_id) + 2*this.oncoprint.getTrackPadding(track_id);\n\t};\n\tOncoprintRenderer.prototype.getCellX = function(index) {\n\t\treturn (typeof index === 'number' ? index*(this.oncoprint.getZoomedCellWidth()+this.oncoprint.getCellPadding()) : -1);\n\t};\n\tOncoprintRenderer.prototype.getCellXArray = function(length) {\n\t\tvar cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n\t\treturn _.map(_.range(0,length), function(x) { return x*cell_unit; });\n\t};\n\tOncoprintRenderer.prototype.getCellAreaWidth = function() {\n\t\treturn this.oncoprint.getVisibleIdOrder().length*(this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding());\n\t};\n\tOncoprintRenderer.prototype.getCellAreaHeight = function() {\n\t\tvar track_tops = this.getTrackTops();\n\t\tvar track_order = this.oncoprint.getTracks();\n\t\tif (track_order.length === 0) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tvar last_track = track_order[track_order.length-1];\n\t\t\treturn track_tops[last_track] + this.getRenderedTrackHeight(last_track);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaWidth = function() {\n\t\treturn this.label_area_width;\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaHeight = function() {\n\t\treturn this.getCellAreaHeight();\n\t};\n\tOncoprintRenderer.prototype.render = function() {\n\t\tthrow \"not implemented in abstract class\";\n\t}\n\treturn OncoprintRenderer;\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n            var cohortPatient = osApi.getCohortPatient();\n            var cohortGene = osApi.getCohortGene();\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Window Listeners // Todo: Need To Remove On $destroy\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n            angular.element($window).bind('click', \n                function(e){\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = false;\n                        vm.optCtxPatientShow = false;\n                    });\n                }\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Cohorts\n                initializeCohort(cyChart, vm, osApi, cohortPatient, cohortGene, $scope, moment);\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi, $timeout);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n\n                // Initialize Commands\n                initializeCommands(cyChart, vm, $window, $scope);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeCommands(chart, vm, $window, $scope){\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n            vm.optCommandPatient = [\n                {name:\"Show Edges\", cmd:function(e){\n                    vm.optCommandPatient.selected.select();\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(e){\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Genes\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected.select();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"Deselect Associated Genes\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Oncoprint\", cmd:function(e){\n\n                    if (vm.datasource==\"DEMOdz\") return;\n                    if (vm.datasource.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = vm.datasource.substr(4) + \"_tcga\";\n                        var genes = vm.optCommandPatient.selected.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $window.open(url);\n                    }\n                    vm.optCtxPatientShow = false;\n                }},\n            ];\n            vm.optCommandGene = [\n                {name:\"Show Edges\", cmd:function(e){\n                    vm.optCommandGene.selected.select();\n                    \n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(e){\n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Patients\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandGene.selected.select();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxGeneShow = false;\n                }},\n                {name:\"Deselect Associated Patients\", cmd:function(e){\n                    chart.startBatch();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Gene Card\", cmd:function(e){\n                    $window.open(\"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+vm.optCommandGene.selected.data().name);\n                    vm.optCtxGeneShow = false;\n                }}\n            ];\n            vm.optCommands = [\n                {name:\"Show Edges Of Selected Patient\", cmd:function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Show Edges Of Selected Genes\", cmd:function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Show All Edges\", cmd:function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide All Edges\", cmd:function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},{name:\"Select Connected Genes\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Select Connected Patients\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Deselect All Patients\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Deselect All Genes\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Invert Patient Selection\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Invert Gene Selection\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                }},\n                {name: \"Reset Zoom\", cmd:function(){\n                    chart.fit();\n                    chart.center();\n                }}\n            ]\n        }\n        function initializeViewModel(vm, $stateParams){\n\n            vm.datasource = $stateParams.datasource;\n            vm.optCommandGene = false;\n            vm.optCtxGeneShow;\n            vm.optCommandPatient;\n            vm.optCtxPatientShow = false;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.optCommands;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeCohort(chart, vm, osApi, cohortPatient, cohortGene, $scope, moment){\n            vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n            vm.optCohortMode = vm.optCohortModes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n\n            vm.addCohorts = function(){\n                vm.addCohortGene();\n                vm.addCohortPatient();\n            }\n\n            vm.addCohortGene = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            vm.addCohortPatient = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n            var drawPatients = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortPatient.ids==\"*\"){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortPatient.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n            var drawGenes = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortGene.ids==\"*\"){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }\n                else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select()\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' }\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n\n            var drawMode = function(){\n                drawPatients();\n                drawGenes();\n            }\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optCohortPatient\", drawPatients );\n            $scope.$watch(\"vm.optCohortGene\", drawGenes );\n            $scope.$watch(\"vm.optCohortMode\", drawMode );\n\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: 0.0001,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'core',\n                style:{\n                    'selection-box-color': '#3993fa',\n                    'selection-box-border-color': '#3993fa',\n                    'selection-box-border-width': '1px',\n                    'selection-box-opacity': '.2'\n                }\n            },\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 1,\n                    'border-color': '#FFFFFF'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var geneCtx = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var patientCtx = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    geneClick.removeAll();\n                    geneCtx.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    patientClick.removeAll();\n                    patientCtx.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    geneCtx: geneCtx,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    patientCtx: patientCtx,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch)\n                .on('cxttap', 'node[nodeType=\"gene\"]', events.geneCtx.dispatch )\n                .on('cxttap', 'node[nodeType=\"patient\"]', events.patientCtx.dispatch );\n                \n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showGeneCtxMenu: function(e){\n                    vm.optCommandGene.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#gene-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandGene.selected.data().name);\n                    return this;\n                },\n                showPatientCtxMenu: function(e){\n                    vm.optCommandPatient.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#patient-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxPatientShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandPatient.selected.data().name);\n                    return this;\n                },\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        $scope.$apply(function() {\n                            vm.patient = e.cyTarget.attr('patient');\n                            vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                                .map(function(item) { return item.data().id });\n                        });\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                // showDegreeOneConnected: function(e){\n                    \n                //     var degmap = {};\n                //     chart.off('select', 'node');\n                //     e.cyTarget.neighborhood('node').select();\n                //     e.cyTarget.neighborhood('edge')\n                //         .forEach(function(edge){\n                //             if (\n                //                 edge._private.source.selected() &&\n                //                 edge._private.target.selected()\n                //             ) this[edge.id()] = {display:'element'};\n                //         }, degmap);\n                //     chart.batchData(degmap);  \n                //     chart.on('select', 'node', {ui:true}, function(e){\n                //         behaviors.showDegreeOne(e);\n                //     });            \n                // },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n            {\n                name: 'Commands', //1° When \n                register: function(){\n                    events.geneCtx.add(behaviors.showGeneCtxMenu);\n                    events.patientCtx.add(behaviors.showPatientCtxMenu);\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    events.removeAll();\n                    chart.batchData(hidePatientEdges);\n                }\n\n            },\n            {\n                name: 'Selection Highlight', //1° When \n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    chart.on('select', 'node', {ui:true}, function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',{ui:true}, function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            {\n                name: 'Roll Over Highlight', //1° On \n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }\n          ];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: 'purple', //'#FFE11A',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item, stateName){\n                if (item.state == stateName) return;\n                item.state = stateName;\n                var state;\n                switch(stateName){\n                    case \"Highlight\":\n                        state = {'color':item.color, sizeEle:3};\n                        break;\n                    case \"Hide\":\n                        state = {'color':'#FFFFFF', sizeEle:0};\n                        break;\n                    case \"Show\":\n                        state = {'color':'#3993fa', sizeEle:3};\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", state.color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi, $timeout){\n            function calculateSelections(){\n                var selectedNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                var sums = {};\n                \n                // Calculate Sums\n                selectedNodes.each(function(index, node){\n                    if ( angular.isUndefined(sums[node.data().color]) ) sums[node.data().color] = 1;\n                    else sums[node.data().color] += 1;\n                });\n\n                // Populate Legand\n                $timeout(function(){\n                    for (var i=0; i<vm.legandNodes.length; i++){\n                        var color = vm.legandNodes[i].color;\n                        vm.legandNodes[i].cnt = angular.isDefined(sums[color]) ? sums[color] : 0;\n                    }\n                });\n            }\n            // Debounce To Avoid Multiple Calls\n            chart.on('select', _.debounce(calculateSelections, 300));\n            chart.on('unselect', _.debounce(calculateSelections, 300))\n            \n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple', cnt:0}, {name:'Female', color:'green', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green', cnt:0}, {name:'Old', color:'red', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)'};\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] , cnt:0} });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n                            break;\n                        }\n                        calculateSelections();\n                    });\n            });\n\n            vm.updateNode = function(item, select){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node[(select)?\"select\":\"deselect\"]();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"#FFFF00\"; //\"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = true;\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, moment, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var dtTable;\n            var cohortPatient = osApi.getCohortPatient();\n            var rawData;\n            var data;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.search = \"\";\n\n            vm.addCohortPatient = function(){\n                var cohortName = \"Patient \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = dtTable._('tr', {\"filter\":\"applied\"}).map( function ( item ){ return item[0].toUpperCase() } );\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n\n            }\n            $scope.$watch('vm.optCohortPatient', draw);\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n\n            function draw(){\n                if (angular.isUndefined(dtTable)) return;\n                dtTable.fnClearTable();\n                data = rawData.tbl;\n                if (vm.optCohortPatient.ids!=\"*\"){\n                    data = data.filter(function(d){\n                        return (vm.optCohortPatient.ids.indexOf(d[0])>=0)\n                    });\n                }\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                    dtTable.fnAddData(data);\n                    dtTable.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n            }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Command Menu</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Select One <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommands\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Patient Id\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Gene Name\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}};position:relative\\\">{{item.name}} ({{item.cnt}} Selected)<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, true); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};border-color:red;\\\"></div><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, false); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Options</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" style=\\\"position:relative\\\">{{item.name}}<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Highlight\\'); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Show\\'); $event.stopPropagation();\\\" style=\\\"background-color:#3993fa\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Hide\\'); $event.stopPropagation();\\\" style=\\\"background-color:#FFF\\\"></div></div></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-bottom: 100px;\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF\\\"><div class=\\\"col-xs-12 legend\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">Patient Information</li><li>PID: {{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul><ul><li class=\\\"legend-section\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers &amp Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}