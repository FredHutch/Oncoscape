{"version":3,"sources":["scripts/app-2febf9032f.js"],"names":["angular","module","footer","FooterController","directive","restrict","templateUrl","controller","controllerAs","bindToController","header","HeaderController","osApi","$stateParams","$state","$timeout","onDataSource","add","vm","showTools","userApi","getUserApi","onLogin","showMenu","onLogout","this","toolsClick","go","datasource","getDataSource","cohortClick","toggleFilter","logoutClick","logout","transitionTo","$inject","scope","tray","TrayController","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","caption","replace","transclude","tools","ToolsController","isUndefined","name","route","img","copy","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","$scope","$window","$document","moment","d3","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","shift","addEventListener","e","keyCode","selShow","selPatient","selEvent","selFields","optCohortPatients","optCohortPatient","optCohortModes","optCohortMode","timescaleunit","timescales","timescale","features","feature","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","d3Bars","zoomed","scale","max","event","translate","ch","rh","patients","length","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","onBrushStart","target","clear","call","onBrush","extent","lower","floor","upper","selectAll","each","d","i","firstChild","classed","onBrushEnd","draw","hRow","hChart","wChart","innerWidth","processData","bounds","rows","data","exit","remove","enter","on","transform","ids","selected","indexOf","id","cols","filteredEvents","__data__","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","tlScale","svg","axis","orient","ticks","tickFormat","Dir","pow","behavior","processedData","filter","patient","hasOwnProperty","__Status","start","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","end","reduce","prev","current","patientMinMax","min","Infinity","status","rv","processEventData","Object","keys","map","v","__color","processFeatureData","processPatientData","key","val","p","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","payload","pts","unshift","eventTypes","$watchGroup","initializeCohort","cohortPatient","getCohortPatient","get","addCohortPatient","cohortName","format","cohortIds","cohort","$watch","resize","updateEventColor","item","test","TestController","message","datasets","getDataSetNames","survival","SurvivalController","getCalculatedSurvivalCurves","r","rawData","pids","getPatientHistoryTable","tbl","login","SubnavController","PlsrController","$sce","_","xScale","yScale","xMax","yMax","d3Tooltip","cohortGene","getCohortGene","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","optCohortGenes","optCohortGene","frame","tip","addCohortGene","node","toUpperCase","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","setScale","nice","vectors","genes","bv","duration","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","applyCohort","getCalculatedPCA","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","search","center","$","ele","startBatch","highlight","degmap","deselect","batchData","endBatch","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","_cohortGene","_cohortPatient","dispatch","Signal","_user","password","authenticated","token","_domains","user","req","method","username","res","success","getDomains","getUser","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","collection","defaultValue","_collection","onAdd","splice","onRemove","save","load","service","oncoprint","OncoprintController","initializeViewModel","MetadataController","colnames","dtTable","dataTable","paging","api","markers","MarkersController","cyChart","loadData","styles","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","chart","searchGene","geneSearchResult","matches","found","toLowerCase","searchGeneResult","searchPatient","searchPatientResult","optInteractiveModes","optInteractiveMode","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","addCohorts","drawPatients","drawGenes","drawMode","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","label","geneOver","geneOut","geneClick","patientOver","patientOut","patientClick","removeAll","over","out","click","hidePatientEdges","behaviors","showPatientInfo","patientChromosomes","neighborhood","hidePatientInfo","showDegreeOne","hideDegreeOne","showDegreeTwo","hideDegreeTwo","showOncoPrint","states","register","edge","unregister","off","next","colors","state","colorMap","mutation","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","css","edges","sizeEle","updateEdge","font","ceil","sizeBdr","degree","sizeLbl","gender","age","s","split","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","apply","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","parseFloat","diagnosis","isNaN","help","HelpController","videos","desc","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","CompareController","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","config","constant","prototype","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-2febf9032f.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui-rangeSlider', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            var shift = false;\n            $window.addEventListener (\"keydown\",  function(e) { if (e.keyCode==16) shift = true;  }, false);\n            $window.addEventListener (\"keyup\",    function(e) { if (e.keyCode==16) shift = false; }, false);\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortPatients;\n                vm.optCohortPatient;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n\n            var zoom;\n            var zoomed = function(){\n                if (shift) return;\n                var scale = Math.max(minZoom, d3.event.scale);\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var onBrushStart = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }\n            }\n            var onBrush = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                    return;\n                }\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        var e = d3.select(this.firstChild);\n                        e.classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                        \n                    });\n\n            }\n            var onBrushEnd = function(){\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);                \n            }\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-rt\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n     \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( [dataProcessed.bounds[0],dataProcessed.bounds[1]] ).range([10, wChart-10]);\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50);\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                    rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row-selected',\n                            'width': '0px',\n                            'height': hRow\n                        })\n                        .style({\n                            'fill': '#EEEEEE'\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && vm.optCohortPatient.ids!=\"*\"){\n                        rows\n                            .each( function(d){\n                                var selected = (vm.optCohortPatient.ids.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(5);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            \n                            var Dir = (d<0 ? -1 : 1); \n                            return Math.round(Dir * (Math.pow(2, (Math.abs(d)))-1) *100)/100;\n                        \n                        });\n                        vm.timescaleunit = \"Days\";\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return d;\n                        });\n                        vm.timescaleunit = \"Days\";\n                    }\n                \n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale( minZoom, 1 )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        \n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter & this.ids!==\"*\"){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':vm.optCohortPatient.ids});\n                \n                    // Remove Patients That Don't Have A Death Date If Sort by Survival\n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.filter(function(patient){\n                            if (angular.isUndefined(patient.__Status)) return false;\n                            if (angular.isUndefined(patient.__Status.start)) return false;\n                            return true;\n                        });\n                    }\n\n                    // Sort Patients On Align Property    \n                    processedData.patients = processedData.patients.sort(function(a,b){\n                        return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                    }, sort);\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return val;\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale'], draw);\n                        angular.element($window).bind('resize', draw);\n                      \n                        initializeCohort(vm, osApi);   \n                        draw();\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n            var initializeCohort = function (vm, osApi){\n                var cohortPatient = osApi.getCohortPatient();\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[1];\n                vm.optCohortPatients = cohortPatient.get();\n                vm.optCohortPatient = vm.optCohortPatients[0];\n                vm.addCohortPatient = function(){\n                    var cohortName = \"TL \" + moment().format('- H:mm - M/D/YY');\n                    var cohortIds = d3Bars.selectAll(\".timeline-selected\")[0]\n                        .map( function (p) { return p.__data__.id; }  )\n                    var cohort = {name:cohortName, ids:cohortIds};\n                    if (cohortIds.length==0) return;\n                    cohortPatient.add(cohort);\n                    vm.optCohortPatient = cohort;\n                }\n                $scope.$watch(\"vm.optCohortMode\", draw );\n                $scope.$watch(\"vm.optCohortPatient\", draw );\n            }\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Data\n            var rawData;\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            \n\n            $scope.$watch('vm.optCohortPatient', function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    ids = rawData;\n                }\n                else{\n                    var pids = vm.optCohortPatient.ids;\n                    if (rawData!=null){\n                        ids = rawData.filter( function(d){\n                            return (pids.indexOf(d)>=0);\n                        });\n                        draw(ids);\n                    }\n                }\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    var data = (vm.optCohortPatient.ids==\"*\") ? rawData : vm.optCohortPatient.ids;\n                    draw(data);\n                });\n            });\n\n            // Draw\n            function draw(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.frame;\n            vm.tip = null;\n\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"PLSR \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ return node.__data__.name.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                var ids = vm.optCohortGene.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.name)>=0)\n                    });\n                }\n            });\n\n            \n\n            \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n\n\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var cohortPatient = osApi.getCohortPatient();\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n\n     \n            // Cohorts\n            vm.addCohortPatient = function(){\n                var cohortName = \"PCA \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node){return node.__data__.id.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n\n            var applyCohort = function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.id)>=0)\n                    });\n                }\n            };\n            $scope.$watch('vm.optCohortPatient', applyCohort);\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                // osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    //rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            \n                        });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    applyCohort();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                \n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            var cohortGene = osApi.getCohortGene();\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"Pathways \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                if (angular.isUndefined(csChart)) return;\n                csChart.startBatch();\n                var highlight = true;\n                var degmap = {};\n                if (vm.optCohortGene.ids==\"*\"){\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                csChart.batchData(degmap);\n                csChart.endBatch();\n            });\n            \n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            _cohortGene.clear();\n            _cohortPatient.clear();\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            //console.log(\"***** within osApi.getOncoprint: \", geneSetAndPatients);\n            //debugger;\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n        var _cohortPatient = collection(signals, {name:'All Patients', ids:'*'}, \"osCohortPatient\");\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals, {name:'All Genes', ids:'*'}, \"osCohortGene\");\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals, defaultValue){ //, collectionName\n\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            //var onSelect = new signals.Signal();\n\n            var _collection = [defaultValue];\n            \n            function get() { return _collection; }\n            \n            function add(value){ \n                _collection.unshift(value); \n                onAdd.dispatch(_collection);\n            }\n            function clear(){\n                _collection = [defaultValue]   \n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n           \n            function save(){\n                \n            }\n\n            function load(){\n            }\n\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                clear:clear\n            }\n        }\n\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n\n    }\n})();\n\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var cohortPatient = osApi.getCohortPatient();\n            var dataGene;\n            var dataPatientGene;\n\n\n            // View Model\n            var vm = initializeViewModel(this, $stateParams);\n            function initializeViewModel(vm, $stateParams){\n              vm.datasource = $stateParams.datasource;\n              vm.optCohortGenes = cohortGene.get();\n              vm.optCohortGene = vm.optCohortGenes[0];\n              vm.optCohortPatients = cohortPatient.get();\n              vm.optCohortPatient = vm.optCohortPatients[0];\n              //vm.geneSetAndPatients = vm.optCohortGenes + vm.optCohortPatients;         \n              return vm;\n            }\n\n            var draw = function(){\n\n            };\n\n            (function(osApi,vm){\n\n            })()\n          /*\n            var draw = function(){}\n\n\n            // Initialize + Load Data\n            (function(osApi, vm){\n              // osApi.setBusy(true)(\"Loading Dataset\");\n              // osApi.setDataset(vm.datasource).then(function(response) {\n\n              //   var demoOncoString = [\"TCGA.02.0001\", \"TCGA.02.0003\", \"TCGA.02.0006\", \"TCGA.02.0007\",\n              //                   \"TCGA.02.0009\", \"TCGA.02.0010\", \"TCGA.02.0011\", \"TCGA.02.0014\",\n              //                   \"TCGA.02.0021\", \"TCGA.02.0024\", \"TCGA.02.0027\", \"TCGA.02.0028\",\n              //                   \"TCGA.02.0033\", \"TCGA.02.0034\", \"TCGA.02.0037\", \"TCGA.02.0038\",\n              //                   \"TCGA.02.0043\", \"TCGA.02.0046\", \"TCGA.02.0047\", \"TCGA.02.0052\",\n              //                   \"TCGA.02.0054\", \"TCGA.02.0055\", \"TCGA.02.0057\", \"TCGA.02.0058\",\n              //                   \"TCGA.02.0060\", \"TCGA.06.0875\", \"TCGA.06.0876\", \"TCGA.06.0877\",\n              //                   \"TCGA.06.0878\", \"TCGA.06.0879\", \"TCGA.06.0881\", \"TCGA.06.0882\",\n              //                   \"TCGA.12.0670\", \"TCGA.12.0818\", \"TCGA.12.0819\", \"TCGA.12.0820\",\n              //                   \"TCGA.12.0821\", \"TCGA.12.0822\", \"TCGA.12.0826\", \"TCGA.12.0827\", \"EGFR\", \"PTEN\"];\n\n              //   osApi.getOncoprint(demoOncoString).then(function(response){\n              //     dataPatientGene = response.payload[0];\n              //     dataGene = angular.isArray(response.payload[1]) ? response.payload[1] : [response.payload[1]];\n              //     debugger;\n              //     draw();\n\n              //   });\n              // });\n            })(osApi, vm);\n            */\n        }\n    }\n})();\n\n\n\n\n            // Cohorts\n            // vm.addCohortGene = function(){\n            //     var cohortName = \"Oncoprint \" + moment().format('- H:mm:ss - M/D/YY');\n            //     var cohortIds = d3Chart.selectAll(\".oncoprint-track-label-main\")[0].map(function(node){ return node.innerText; });\n            //     var cohort = {name:cohortName, ids:cohortIds};\n            //     vm.optCohortPatients.push(cohort);\n            //     vm.optCohortPatinet = cohort;\n            // }\n            // $scope.$watch('vm.optCohortGene', function() {\n            //     var ids = vm.optCohortGene.ids;\n            //     if (ids == \"*\"){\n            //         d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n            //     }\n            //     else{\n            //         d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n            //             return (ids.indexOf(this.__data__.name)>=0)\n            //         });\n            //     }\n            // });\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n            var cohortPatient = osApi.getCohortPatient();\n            var cohortGene = osApi.getCohortGene();\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n            vm.resize = function(){\n                var width = $window.innerWidth\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Cohorts\n                initializeCohort(cyChart, vm, osApi, cohortPatient, cohortGene, $scope, moment);\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeViewModel(vm, $stateParams){\n            vm.datasource = $stateParams.datasource;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeCohort(chart, vm, osApi, cohortPatient, cohortGene, $scope, moment){\n            vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n            vm.optCohortMode = vm.optCohortModes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n\n            vm.addCohorts = function(){\n                vm.addCohortGene();\n                vm.addCohortPatient();\n            }\n\n            vm.addCohortGene = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            vm.addCohortPatient = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n            var drawPatients = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortPatient.ids==\"*\"){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortPatient.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n            var drawGenes = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortGene.ids==\"*\"){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }\n                else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select()\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' }\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n\n            var drawMode = function(){\n                drawPatients();\n                drawGenes();\n            }\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optCohortPatient\", drawPatients );\n            $scope.$watch(\"vm.optCohortGene\", drawGenes );\n            $scope.$watch(\"vm.optCohortMode\", drawMode );\n\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: 0.0001,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 'data(sizeBdr)',\n                    'border-color': 'data(color)'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    geneClick.removeAll();\n                    patientClick.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch);\n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        $scope.$apply(function() {\n                            vm.patient = e.cyTarget.attr('patient');\n                            vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                                .map(function(item) { return item.data().id });\n                        });\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showOncoPrint: function(){\n                    /*\n                    var ds = vm.datasource;\n                    if (ds==\"DEMOdz\") return;\n                    if (ds.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = ds.substr(4) + \"_tcga\";\n                        var genes = e.cyTarget.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $scope.$apply(function() {\n                            $window.open(url);\n                        });\n                    }\n                    */\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n\n/*\n            {\n                name: 'Hide All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }, {\n                name: 'Show All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n\n                    // Show all Edges\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(node){\n                            this[node.id()] = { display: 'element' };\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                unregister: function() {\n                    events.removeAll();\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                }\n            },*/{\n                name: 'Selected', //1° When \n                register: function(){\n\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n\n\n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            /*\n            ,{\n                name: '2° When Selected',\n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('node')\n                                .forEach(function(node){\n                                    node.neighborhood('edge')\n                                        .forEach(function(item){\n                                            this[item.id()] = {display:'element'};\n                                        }, this)\n                                }, this)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    \n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeTwo(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeTwo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            */\n            {\n                name: 'Moused Over', //1° On \n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            } /*{\n                name: '2° On Mouse Over',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeTwo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeTwo(e)                           \n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }*/];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: '#FFE11A',\n                    state: 'Highlight'\n\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item){\n                var color, state;\n                switch (item.state){\n                    case \"Highlight\":\n                        item.state = \"Show\";\n                        color = '#3993fa';\n                        state = {'color':color, sizeEle:3};\n                        break;\n                    case \"Show\":\n                        item.state = \"Hide\";\n                        color = '#EEEEEE';\n                        state = {'color':'#FF0000', sizeEle:0 };\n                        break;\n                    default:\n                        item.state = \"Highlight\";\n                        color = item.color;\n                        state = {'color':color, sizeEle:3 };\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi){\n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple'}, {name:'Female', color:'green'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green'}, {name:'Old', color:'red'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] } });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n            \n                            break;\n                        }\n                    });\n            });\n\n            vm.updateNode = function(item){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node.select();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = true;\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, moment, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var dtTable;\n            var cohortPatient = osApi.getCohortPatient();\n            var rawData;\n            var data;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.search = \"\";\n\n            vm.addCohortPatient = function(){\n                var cohortName = \"Patient \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = dtTable._('tr', {\"filter\":\"applied\"}).map( function ( item ){ return item[0].toUpperCase() } );\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n\n            }\n            $scope.$watch('vm.optCohortPatient', draw);\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n\n            function draw(){\n                if (angular.isUndefined(dtTable)) return;\n                dtTable.fnClearTable();\n                data = rawData.tbl;\n                if (vm.optCohortPatient.ids!=\"*\"){\n                    data = data.filter(function(d){\n                        return (vm.optCohortPatient.ids.indexOf(d[0])>=0)\n                    });\n                }\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                    dtTable.fnAddData(data);\n                    dtTable.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n            }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\">Explore</a> &nbsp;|&nbsp; <a href=\\\"\\\" ng-click=\\\"vm.explore(\\'metadata\\',dataset.id)\\\">Learn More</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Show Edges When</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-5 form-item\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-2 form-item\\\" style=\\\"text-align: center;padding-top:30px;\\\"></div><div class=\\\"col-sm-5 form-item\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Enter Patient Id\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Enter Gene Name\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Colors</label> <span ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}}\\\" ng-click=\\\"vm.updateNode(item); $event.stopPropagation();\\\">{{item.name}} (Select)</span></div><div class=\\\"col-sm-12 form-item\\\"><label>Edge Colors</label> <span ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"vm.updateEdge(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\" style=\\\"padding-bottom: 100px;\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF\\\"><div class=\\\"col-xs-12 legend\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">Patient Information</li><li>PID: {{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul><ul><li class=\\\"legend-section\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"display: block\\\">Please select and send up to 350 genes and patients from another tab, such as Markers &amp Patients, to populate the display.</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray class=\\\"tray-rt\\\" content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div><div class=\\\"timeline-legend-scale\\\" style=\\\"position:relative;top:-30px;width: 100%;text-align: center; font-weight: 500;\\\">{{vm.timescaleunit}}</div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div class=\\\"tray {{vm.trayClass}}\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div>\");}]);"],"sourceRoot":"/source/"}