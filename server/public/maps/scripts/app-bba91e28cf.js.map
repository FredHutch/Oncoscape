{"version":3,"sources":["scripts/app-bba91e28cf.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","name","route","img","copy","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","$scope","$window","$document","moment","d3","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","shift","addEventListener","e","keyCode","selShow","selPatient","selEvent","selFields","optCohortPatients","optCohortPatient","optCohortModes","optCohortMode","timescaleunit","timescales","timescale","features","feature","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","d3Bars","zoomed","scale","max","event","translate","ch","rh","patients","length","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","onBrushStart","target","clear","call","onBrush","extent","lower","floor","upper","selectAll","each","d","i","firstChild","classed","onBrushEnd","draw","hRow","hChart","wChart","innerWidth","processData","bounds","rows","data","exit","remove","enter","on","transform","ids","selected","indexOf","id","cols","filteredEvents","__data__","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","tlScale","svg","axis","orient","ticks","tickFormat","Dir","pow","behavior","processedData","filter","patient","hasOwnProperty","__Status","start","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","end","reduce","prev","current","patientMinMax","min","Infinity","status","rv","processEventData","Object","keys","map","v","__color","processFeatureData","processPatientData","key","val","p","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","payload","pts","unshift","eventTypes","$watchGroup","initializeCohort","cohortPatient","getCohortPatient","get","addCohortPatient","cohortName","format","cohortIds","cohort","add","$watch","resize","updateEventColor","item","test","TestController","message","datasets","getDataSetNames","survival","SurvivalController","getCalculatedSurvivalCurves","r","rawData","pids","getPatientHistoryTable","tbl","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","_","xScale","yScale","xMax","yMax","d3Tooltip","cohortGene","getCohortGene","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","optCohortGenes","optCohortGene","frame","tip","addCohortGene","node","toUpperCase","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","setScale","nice","vectors","genes","bv","duration","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","applyCohort","getCalculatedPCA","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","search","center","$","ele","startBatch","highlight","degmap","deselect","batchData","endBatch","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","_cohortGene","_cohortPatient","onDataSource","dispatch","userApi","onLogin","Signal","onLogout","_user","password","authenticated","token","_domains","logout","user","req","method","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","collection","defaultValue","_collection","onAdd","splice","onRemove","save","load","service","oncoprint","OncoprintController","initializeViewModel","MetadataController","colnames","dtTable","dataTable","paging","api","markers","MarkersController","cyChart","loadData","styles","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","chart","searchGene","geneSearchResult","matches","found","toLowerCase","searchGeneResult","searchPatient","searchPatientResult","optInteractiveModes","optInteractiveMode","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","addCohorts","drawPatients","drawGenes","drawMode","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","label","geneOver","geneOut","geneClick","patientOver","patientOut","patientClick","removeAll","over","out","click","hidePatientEdges","behaviors","showPatientInfo","patientChromosomes","neighborhood","hidePatientInfo","showDegreeOne","hideDegreeOne","showDegreeTwo","hideDegreeTwo","showOncoPrint","states","register","edge","unregister","off","next","colors","state","colorMap","mutation","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","css","edges","sizeEle","updateEdge","font","ceil","sizeBdr","degree","sizeLbl","gender","age","s","split","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","apply","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","parseFloat","diagnosis","isNaN","help","HelpController","videos","desc","header","CompareController","footer","FooterController","HeaderController","showTools","showMenu","logoutClick","transitionTo","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","config","constant","prototype","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-bba91e28cf.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui-rangeSlider', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            var shift = false;\n            $window.addEventListener (\"keydown\",  function(e) { if (e.keyCode==16) shift = true;  }, false);\n            $window.addEventListener (\"keyup\",    function(e) { if (e.keyCode==16) shift = false; }, false);\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortPatients;\n                vm.optCohortPatient;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n\n            var zoom;\n            var zoomed = function(){\n                if (shift) return;\n                var scale = Math.max(minZoom, d3.event.scale);\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var onBrushStart = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }\n            }\n            var onBrush = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                    return;\n                }\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        var e = d3.select(this.firstChild);\n                        e.classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                        \n                    });\n\n            }\n            var onBrushEnd = function(){\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);                \n            }\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-rt\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n     \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( [dataProcessed.bounds[0],dataProcessed.bounds[1]] ).range([10, wChart-10]);\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50);\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                    rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row-selected',\n                            'width': '0px',\n                            'height': hRow\n                        })\n                        .style({\n                            'fill': '#EEEEEE'\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && vm.optCohortPatient.ids!=\"*\"){\n                        rows\n                            .each( function(d){\n                                var selected = (vm.optCohortPatient.ids.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(5);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            \n                            var Dir = (d<0 ? -1 : 1); \n                            return Math.round(Dir * (Math.pow(2, (Math.abs(d)))-1) *100)/100;\n                        \n                        });\n                        vm.timescaleunit = \"Days\";\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return d;\n                        });\n                        vm.timescaleunit = \"Days\";\n                    }\n                \n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale( minZoom, 1 )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        \n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter & this.ids!==\"*\"){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':vm.optCohortPatient.ids});\n                \n                    // Remove Patients That Don't Have A Death Date If Sort by Survival\n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.filter(function(patient){\n                            if (angular.isUndefined(patient.__Status)) return false;\n                            if (angular.isUndefined(patient.__Status.start)) return false;\n                            return true;\n                        });\n                    }\n\n                    // Sort Patients On Align Property    \n                    processedData.patients = processedData.patients.sort(function(a,b){\n                        return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                    }, sort);\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return val;\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale'], draw);\n                        angular.element($window).bind('resize', draw);\n                      \n                        initializeCohort(vm, osApi);   \n                        draw();\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n            var initializeCohort = function (vm, osApi){\n                var cohortPatient = osApi.getCohortPatient();\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[1];\n                vm.optCohortPatients = cohortPatient.get();\n                vm.optCohortPatient = vm.optCohortPatients[0];\n                vm.addCohortPatient = function(){\n                    var cohortName = \"TL \" + moment().format('- H:mm - M/D/YY');\n                    var cohortIds = d3Bars.selectAll(\".timeline-selected\")[0]\n                        .map( function (p) { return p.__data__.id; }  )\n                    var cohort = {name:cohortName, ids:cohortIds};\n                    if (cohortIds.length==0) return;\n                    cohortPatient.add(cohort);\n                    vm.optCohortPatient = cohort;\n                }\n                $scope.$watch(\"vm.optCohortMode\", draw );\n                $scope.$watch(\"vm.optCohortPatient\", draw );\n            }\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Data\n            var rawData;\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            \n\n            $scope.$watch('vm.optCohortPatient', function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    ids = rawData;\n                }\n                else{\n                    var pids = vm.optCohortPatient.ids;\n                    if (rawData!=null){\n                        ids = rawData.filter( function(d){\n                            return (pids.indexOf(d)>=0);\n                        });\n                        draw(ids);\n                    }\n                }\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    var data = (vm.optCohortPatient.ids==\"*\") ? rawData : vm.optCohortPatient.ids;\n                    draw(data);\n                });\n            });\n\n            // Draw\n            function draw(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.frame;\n            vm.tip = null;\n\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"PLSR \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ return node.__data__.name.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                var ids = vm.optCohortGene.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.name)>=0)\n                    });\n                }\n            });\n\n            \n\n            \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n\n\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var cohortPatient = osApi.getCohortPatient();\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n\n     \n            // Cohorts\n            vm.addCohortPatient = function(){\n                var cohortName = \"PCA \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node){return node.__data__.id.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n\n            var applyCohort = function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.id)>=0)\n                    });\n                }\n            };\n            $scope.$watch('vm.optCohortPatient', applyCohort);\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                // osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    //rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            \n                        });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    applyCohort();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                \n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            var cohortGene = osApi.getCohortGene();\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"Pathways \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                if (angular.isUndefined(csChart)) return;\n                csChart.startBatch();\n                var highlight = true;\n                var degmap = {};\n                if (vm.optCohortGene.ids==\"*\"){\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                csChart.batchData(degmap);\n                csChart.endBatch();\n            });\n            \n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            _cohortGene.clear();\n            _cohortPatient.clear();\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            //console.log(\"***** within osApi.getOncoprint: \", geneSetAndPatients);\n            //debugger;\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n        var _cohortPatient = collection(signals, {name:'All Patients', ids:'*'}, \"osCohortPatient\");\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals, {name:'All Genes', ids:'*'}, \"osCohortGene\");\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals, defaultValue){ //, collectionName\n\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            //var onSelect = new signals.Signal();\n\n            var _collection = [defaultValue];\n            \n            function get() { return _collection; }\n            \n            function add(value){ \n                _collection.unshift(value); \n                onAdd.dispatch(_collection);\n            }\n            function clear(){\n                _collection = [defaultValue]   \n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n           \n            function save(){\n                \n            }\n\n            function load(){\n            }\n\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                clear:clear\n            }\n        }\n\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n\n    }\n})();\n\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var cohortPatient = osApi.getCohortPatient();\n            var dataGene;\n            var dataPatientGene;\n\n\n            // View Model\n            var vm = initializeViewModel(this, $stateParams);\n            function initializeViewModel(vm, $stateParams){\n              vm.datasource = $stateParams.datasource;\n              vm.optCohortGenes = cohortGene.get();\n              vm.optCohortGene = vm.optCohortGenes[0];\n              vm.optCohortPatients = cohortPatient.get();\n              vm.optCohortPatient = vm.optCohortPatients[0];\n              //vm.geneSetAndPatients = vm.optCohortGenes + vm.optCohortPatients;         \n              return vm;\n            }\n\n            var draw = function(){\n\n            };\n\n            (function(osApi,vm){\n\n            })()\n          /*\n            var draw = function(){}\n\n\n            // Initialize + Load Data\n            (function(osApi, vm){\n              // osApi.setBusy(true)(\"Loading Dataset\");\n              // osApi.setDataset(vm.datasource).then(function(response) {\n\n              //   var demoOncoString = [\"TCGA.02.0001\", \"TCGA.02.0003\", \"TCGA.02.0006\", \"TCGA.02.0007\",\n              //                   \"TCGA.02.0009\", \"TCGA.02.0010\", \"TCGA.02.0011\", \"TCGA.02.0014\",\n              //                   \"TCGA.02.0021\", \"TCGA.02.0024\", \"TCGA.02.0027\", \"TCGA.02.0028\",\n              //                   \"TCGA.02.0033\", \"TCGA.02.0034\", \"TCGA.02.0037\", \"TCGA.02.0038\",\n              //                   \"TCGA.02.0043\", \"TCGA.02.0046\", \"TCGA.02.0047\", \"TCGA.02.0052\",\n              //                   \"TCGA.02.0054\", \"TCGA.02.0055\", \"TCGA.02.0057\", \"TCGA.02.0058\",\n              //                   \"TCGA.02.0060\", \"TCGA.06.0875\", \"TCGA.06.0876\", \"TCGA.06.0877\",\n              //                   \"TCGA.06.0878\", \"TCGA.06.0879\", \"TCGA.06.0881\", \"TCGA.06.0882\",\n              //                   \"TCGA.12.0670\", \"TCGA.12.0818\", \"TCGA.12.0819\", \"TCGA.12.0820\",\n              //                   \"TCGA.12.0821\", \"TCGA.12.0822\", \"TCGA.12.0826\", \"TCGA.12.0827\", \"EGFR\", \"PTEN\"];\n\n              //   osApi.getOncoprint(demoOncoString).then(function(response){\n              //     dataPatientGene = response.payload[0];\n              //     dataGene = angular.isArray(response.payload[1]) ? response.payload[1] : [response.payload[1]];\n              //     debugger;\n              //     draw();\n\n              //   });\n              // });\n            })(osApi, vm);\n            */\n        }\n    }\n})();\n\n\n\n\n            // Cohorts\n            // vm.addCohortGene = function(){\n            //     var cohortName = \"Oncoprint \" + moment().format('- H:mm:ss - M/D/YY');\n            //     var cohortIds = d3Chart.selectAll(\".oncoprint-track-label-main\")[0].map(function(node){ return node.innerText; });\n            //     var cohort = {name:cohortName, ids:cohortIds};\n            //     vm.optCohortPatients.push(cohort);\n            //     vm.optCohortPatinet = cohort;\n            // }\n            // $scope.$watch('vm.optCohortGene', function() {\n            //     var ids = vm.optCohortGene.ids;\n            //     if (ids == \"*\"){\n            //         d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n            //     }\n            //     else{\n            //         d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n            //             return (ids.indexOf(this.__data__.name)>=0)\n            //         });\n            //     }\n            // });\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n            var cohortPatient = osApi.getCohortPatient();\n            var cohortGene = osApi.getCohortGene();\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n            vm.resize = function(){\n                var width = $window.innerWidth\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Cohorts\n                initializeCohort(cyChart, vm, osApi, cohortPatient, cohortGene, $scope, moment);\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeViewModel(vm, $stateParams){\n            vm.datasource = $stateParams.datasource;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeCohort(chart, vm, osApi, cohortPatient, cohortGene, $scope, moment){\n            vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n            vm.optCohortMode = vm.optCohortModes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n\n            vm.addCohorts = function(){\n                vm.addCohortGene();\n                vm.addCohortPatient();\n            }\n\n            vm.addCohortGene = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            vm.addCohortPatient = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n            var drawPatients = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortPatient.ids==\"*\"){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortPatient.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n            var drawGenes = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortGene.ids==\"*\"){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }\n                else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select()\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' }\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n\n            var drawMode = function(){\n                drawPatients();\n                drawGenes();\n            }\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optCohortPatient\", drawPatients );\n            $scope.$watch(\"vm.optCohortGene\", drawGenes );\n            $scope.$watch(\"vm.optCohortMode\", drawMode );\n\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: 0.0001,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 'data(sizeBdr)',\n                    'border-color': 'data(color)'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\"\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    geneClick.removeAll();\n                    patientClick.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch);\n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        $scope.$apply(function() {\n                            vm.patient = e.cyTarget.attr('patient');\n                            vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                                .map(function(item) { return item.data().id });\n                        });\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showOncoPrint: function(){\n                    /*\n                    var ds = vm.datasource;\n                    if (ds==\"DEMOdz\") return;\n                    if (ds.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = ds.substr(4) + \"_tcga\";\n                        var genes = e.cyTarget.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $scope.$apply(function() {\n                            $window.open(url);\n                        });\n                    }\n                    */\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n\n/*\n            {\n                name: 'Hide All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }, {\n                name: 'Show All',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                    });\n\n                    // Show all Edges\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(node){\n                            this[node.id()] = { display: 'element' };\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                unregister: function() {\n                    events.removeAll();\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                }\n            },*/{\n                name: 'Selected', //1° When \n                register: function(){\n\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n\n\n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            /*\n            ,{\n                name: '2° When Selected',\n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('node')\n                                .forEach(function(node){\n                                    node.neighborhood('edge')\n                                        .forEach(function(item){\n                                            this[item.id()] = {display:'element'};\n                                        }, this)\n                                }, this)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    \n                    chart.on('select', 'node', function(e){\n                        behaviors.showDegreeTwo(e);\n                    });\n                    chart.on('unselect','node',function(e){\n                        behaviors.hideDegreeTwo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            */\n            {\n                name: 'Moused Over', //1° On \n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            } /*{\n                name: '2° On Mouse Over',\n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeTwo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeTwo(e)                           \n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }*/];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: '#FFE11A',\n                    state: 'Highlight'\n\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item){\n                var color, state;\n                switch (item.state){\n                    case \"Highlight\":\n                        item.state = \"Show\";\n                        color = '#3993fa';\n                        state = {'color':color, sizeEle:3};\n                        break;\n                    case \"Show\":\n                        item.state = \"Hide\";\n                        color = '#EEEEEE';\n                        state = {'color':'#FF0000', sizeEle:0 };\n                        break;\n                    default:\n                        item.state = \"Highlight\";\n                        color = item.color;\n                        state = {'color':color, sizeEle:3 };\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi){\n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple'}, {name:'Female', color:'green'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green'}, {name:'Old', color:'red'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] } });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n            \n                            break;\n                        }\n                    });\n            });\n\n            vm.updateNode = function(item){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node.select();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = true;\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, moment, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var dtTable;\n            var cohortPatient = osApi.getCohortPatient();\n            var rawData;\n            var data;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.search = \"\";\n\n            vm.addCohortPatient = function(){\n                var cohortName = \"Patient \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = dtTable._('tr', {\"filter\":\"applied\"}).map( function ( item ){ return item[0].toUpperCase() } );\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n\n            }\n            $scope.$watch('vm.optCohortPatient', draw);\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n\n            function draw(){\n                if (angular.isUndefined(dtTable)) return;\n                dtTable.fnClearTable();\n                data = rawData.tbl;\n                if (vm.optCohortPatient.ids!=\"*\"){\n                    data = data.filter(function(d){\n                        return (vm.optCohortPatient.ids.indexOf(d[0])>=0)\n                    });\n                }\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                    dtTable.fnAddData(data);\n                    dtTable.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n            }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\">Explore</a> &nbsp;|&nbsp; <a href=\\\"\\\" ng-click=\\\"vm.explore(\\'metadata\\',dataset.id)\\\">Learn More</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Show Edges When</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-5 form-item\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-2 form-item\\\" style=\\\"text-align: center;padding-top:30px;\\\"></div><div class=\\\"col-sm-5 form-item\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Enter Patient Id\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Enter Gene Name\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Colors</label> <span ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}}\\\" ng-click=\\\"vm.updateNode(item); $event.stopPropagation();\\\">{{item.name}} (Select)</span></div><div class=\\\"col-sm-12 form-item\\\"><label>Edge Colors</label> <span ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"vm.updateEdge(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\" style=\\\"padding-bottom: 100px;\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF\\\"><div class=\\\"col-xs-12 legend\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">Patient Information</li><li>PID: {{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul><ul><li class=\\\"legend-section\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"display: block\\\">Please select and send up to 350 genes and patients from another tab, such as Markers &amp Patients, to populate the display.</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray class=\\\"tray-rt\\\" content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div><div class=\\\"timeline-legend-scale\\\" style=\\\"position:relative;top:-30px;width: 100%;text-align: center; font-weight: 500;\\\">{{vm.timescaleunit}}</div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div class=\\\"tray {{vm.trayClass}}\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div>\");}]);"],"sourceRoot":"/source/"}