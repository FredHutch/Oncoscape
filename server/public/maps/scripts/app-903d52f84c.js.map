{"version":3,"sources":["scripts/app-903d52f84c.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","name","route","img","copy","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","$scope","$window","$document","moment","d3","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","shift","addEventListener","e","keyCode","selShow","selPatient","selEvent","selFields","optCohortPatients","optCohortPatient","optCohortModes","optCohortMode","timescaleunit","timescales","timescale","features","feature","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","d3Bars","zoomed","scale","event","translate","ch","rh","patients","length","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","onBrushStart","target","clear","call","onBrush","extent","lower","floor","upper","selectAll","each","d","i","firstChild","classed","onBrushEnd","draw","hRow","hChart","wChart","innerWidth","processData","bounds","rows","data","exit","remove","enter","on","transform","ids","selected","indexOf","id","cols","filteredEvents","__data__","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","tlScale","svg","axis","orient","ticks","tickFormat","dir","pow","behavior","processedData","filter","patient","hasOwnProperty","__Status","start","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","map","v","__color","processFeatureData","processPatientData","key","val","p","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","duration","asDays","payload","pts","unshift","eventTypes","$watchGroup","initializeCohort","cohortPatient","getCohortPatient","get","addCohortPatient","cohortName","format","cohortIds","cohort","add","$watch","resize","updateEventColor","item","test","TestController","message","datasets","getDataSetNames","survival","SurvivalController","getCalculatedSurvivalCurves","r","rawData","pids","getPatientHistoryTable","tbl","PlsrController","$sce","_","xScale","yScale","xMax","yMax","d3Tooltip","cohortGene","getCohortGene","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","optCohortGenes","optCohortGene","frame","tip","addCohortGene","node","toUpperCase","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","setScale","nice","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","login","SubnavController","toolsClick","cohortClick","toggleFilter","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","search","center","$","ele","startBatch","highlight","degmap","deselect","batchData","endBatch","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","optNodeColors","optNodeColor","applyCohort","getCalculatedPCA","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","signals","_dataSource","_cohortGene","_cohortPatient","onDataSource","dispatch","userApi","onLogin","Signal","onLogout","_user","password","authenticated","token","_domains","logout","user","req","method","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","collection","defaultValue","_collection","onAdd","splice","onRemove","save","load","service","MetadataController","colnames","dtTable","dataTable","paging","api","oncoprint_utils","exports","sign","number","invert_array","arr","curr","next","cssClassToSelector","classes","split","join","mouseY","ifndef","offsetY","originalEvent","layerY","mouseX","offsetX","layerX","replacement","child_class","parent_class","prototype","create","constructor","makeIdCounter","counter","clamp","t","makeD3SVGElement","tag","document","createElementNS","appendD3SVGElement","elt","appendChild","cloneNode","spaceSVGElementsHorizontally","group","padding","d3SelectChildren","tagName","parseFloat","getBBox","textWidth","string","font","obj","css","float","white-space","visibility","appendTo","parent","parentNode","warn","str","context","console","stableSort","cmp","zipped","ind","stable_cmp","lin_interp","parseInt","g","R","G","B","isNaN","A","assert","bool","msg","oncoprint","OncoprintController","displayOncoprint","empty","errorMessage","JSON","parse","setState","processed_data","onc","Oncoprint","suppressRendering","when","data_gene_map","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","elControl","elInstructions","elLegend","geneAndPatients","config","self","getTrackId","utils","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","desc","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderLegend","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","resizeCells","LABEL_DRAGGING_CLASS","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","text_elt","weight","size","pos","cell_elt","cell_rect","cell_dim","outline_styles","trim","toLowerCase","drawOncoprint","_state","SORT","SET_CELL_WIDTH","CELL_CLICK","CELL_MOUSEENTER","CELL_MOUSELEAVE","ONCOPRINT_MOUSEENTER","ONCOPRINT_MOUSELEAVE","SET_PRE_TRACK_PADDING","TRACK_INIT","UPDATE_RENDER_RULES","FINISHED_POSITIONING","SET_SORT_DIRECTION","oncoprint_defaults","makeGeneticAlterationComparator","distinguish_mutations","cna_key","cna_order","mut_type_key","mut_order","_order","mrna_key","rppa_key","regulation_order","cna_diff","mut_type_diff","mrna_diff","rppa_diff","genetic_alteration_config_base","default","z_index","altered","cna","AMPLIFIED","legend_label","GAINED","HOMODELETED","HEMIZYGOUSLYDELETED","mrna","UPREGULATED","DOWNREGULATED","rppa","genetic_alteration_config_nondistinct_mutations","mut_type","*","genetic_alteration_config","MISSENSE","INFRAME","TRUNC","FUSION","genetic_alteration_comparator","genetic_alteration_comparator_nondistinct_mutations","D3SVGCategoricalColorRuleSet","D3SVGRuleSet","d3_colors","addColorRule","category","colored_rect","condition","cat","getCategory","addStaticRule","makeNARuleParams","cat1","cat2","NEGATIVE_INFINITY","localeCompare","new_color","pop","createElement","getRules","rule","rule_id","D3SVGGradientColorRuleSet","data_key","addGradientRule","data_range","color_range","na_color","proxy","numericalNaNSort","rule_map","D3SVGBarChartRuleSet","addBarChartRule","D3SVGGeneticAlterationRuleSet","dont_distinguish_mutation_color","defaults","distinguish_mutation_order","makeStaticShapeRule","rule_spec","styles","_key","_value","ANY","points","CELL","outline-color","outline-style","outline-width","new_rule","altered_rules","values","altered_data","getRule","filterData","uniq","D3SVGBarChartRule","D3SVGRule","inferred_data_range","log10","makeDatum","setUpHelperFunctions","scaled_data_range","height_helper","distance","y_function","height_function","inferDataRange","datumIsNaN","getEffectiveDataRange","showInLegend","display_data_range","num_digit_multiplier","legend_num_decimal_digits","mesh","D3SVGGradientRule","fill_function","rgb","D3SVGStaticRule","svg_ctr","f1","f2","f1_isNaN","f2_isNaN","children","getRuleId","addRule","removeRule","rule_ids","rules","sorted_rules","affected_groups","percentToPx","attr_val","attr_name","width_like","height_like","convertAttr","pt","split_pt","pt_x","pt_y","c","elts","makeRuleSet","clipping","upper_padding","track_group_separation","max_label_width","max_percent_altered_width","buffer_width","getTrackCellCtrCSSClass","new_rule_set","getTrackTops","tops","getCellX","track_order","markers","MarkersController","cyChart","initializeViewModel","loadData","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","initializeCommands","chart","searchGene","geneSearchResult","matches","found","searchGeneResult","searchPatient","searchPatientResult","optInteractiveMode","optInteractiveModes","optCommands","neighborhood","_private","optPatientLayouts","optPatientLayout","optEdgeColors","legandNodes","legandPatient","legandChromosomes","addCohorts","drawPatients","drawGenes","drawMode","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","geneOver","geneOut","geneClick","patientOver","patientOut","patientClick","removeAll","over","out","hidePatientEdges","behaviors","showPatientInfo","patientChromosomes","hidePatientInfo","showDegreeOne","hideDegreeOne","showDegreeTwo","hideDegreeTwo","showOncoPrint","states","register","unregister","edge","ui","colors","state","colorMap","mutation","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","sizeEle","updateEdge","sizeBdr","degree","sizeLbl","gender","age","s","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","fnClearTable","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","fnAddData","applyFilter","fn","DataTable","ext","settings","diagnosis","help","HelpController","videos","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","footer","FooterController","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","CompareController","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","authenticate","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-903d52f84c.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui-rangeSlider', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'metadata.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'history.png',\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            var shift = false;\n            $window.addEventListener (\"keydown\",  function(e) { if (e.keyCode==16) shift = true;  }, false);\n            $window.addEventListener (\"keyup\",    function(e) { if (e.keyCode==16) shift = false; }, false);\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortPatients;\n                vm.optCohortPatient;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n\n            var zoom;\n            var zoomed = function(){\n                if (shift) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var onBrushStart = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }\n            }\n            var onBrush = function(){\n                if (!shift) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                    return;\n                }\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        var e = d3.select(this.firstChild);\n                        e.classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                        \n                    });\n\n            }\n            var onBrushEnd = function(){\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);                \n            }\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]);\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50);\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                    rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row-selected',\n                            'width': '0px',\n                            'height': hRow\n                        })\n                        .style({\n                            'fill': '#EEEEEE'\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && vm.optCohortPatient.ids!=\"*\"){\n                        rows\n                            .each( function(d){\n                                var selected = (vm.optCohortPatient.ids.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(5);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            var dir = (d<0 ? -1 : 1); \n                            return Math.round(dir * (Math.pow(2, (Math.abs(d)))-1) *100)/100;\n                        \n                        });\n                        vm.timescaleunit = \"Days\";\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return d;\n                        });\n                        vm.timescaleunit = \"Days\";\n                    }\n                \n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!shift) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        \n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter & this.ids!==\"*\"){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':vm.optCohortPatient.ids});\n                \n                    // Remove Patients That Don't Have A Death Date If Sort by Survival\n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.filter(function(patient){\n                            if (angular.isUndefined(patient.__Status)) return false;\n                            if (angular.isUndefined(patient.__Status.start)) return false;\n                            return true;\n                        });\n                    }\n\n                    // Sort Patients On Align Property    \n                    processedData.patients = processedData.patients.sort(function(a,b){\n                        return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                    }, sort);\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale'], draw);\n                        angular.element($window).bind('resize', draw);\n                      \n                        initializeCohort(vm, osApi);   \n                        draw();\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n            var initializeCohort = function (vm, osApi){\n                var cohortPatient = osApi.getCohortPatient();\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[1];\n                vm.optCohortPatients = cohortPatient.get();\n                vm.optCohortPatient = vm.optCohortPatients[0];\n                vm.addCohortPatient = function(){\n                    var cohortName = \"TL \" + moment().format('- H:mm - M/D/YY');\n                    var cohortIds = d3Bars.selectAll(\".timeline-selected\")[0]\n                        .map( function (p) { return p.__data__.id; }  )\n                    var cohort = {name:cohortName, ids:cohortIds};\n                    if (cohortIds.length==0) return;\n                    cohortPatient.add(cohort);\n                    vm.optCohortPatient = cohort;\n                }\n                $scope.$watch(\"vm.optCohortMode\", draw );\n                $scope.$watch(\"vm.optCohortPatient\", draw );\n            }\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Data\n            var rawData;\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            \n\n            $scope.$watch('vm.optCohortPatient', function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    ids = rawData;\n                }\n                else{\n                    var pids = vm.optCohortPatient.ids;\n                    if (rawData!=null){\n                        ids = rawData.filter( function(d){\n                            return (pids.indexOf(d)>=0);\n                        });\n                        draw(ids);\n                    }\n                }\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload.tbl.map( function (d) { return d[0]; });\n                    var data = (vm.optCohortPatient.ids==\"*\") ? rawData : vm.optCohortPatient.ids;\n                    draw(data);\n                });\n            });\n\n            // Draw\n            function draw(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                        angular.element(\"#survival-img\").attr('src',r.payload);\n                        osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.frame;\n            vm.tip = null;\n\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"PLSR \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ return node.__data__.name.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                var ids = vm.optCohortGene.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.name)>=0)\n                    });\n                }\n            });\n\n            \n\n            \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n\n\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 100; \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            var cohortGene = osApi.getCohortGene();\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            // Cohorts\n            vm.addCohortGene = function(){\n                var cohortName = \"Pathways \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            $scope.$watch('vm.optCohortGene', function() {\n                if (angular.isUndefined(csChart)) return;\n                csChart.startBatch();\n                var highlight = true;\n                var degmap = {};\n                if (vm.optCohortGene.ids==\"*\"){\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                csChart.batchData(degmap);\n                csChart.endBatch();\n            });\n            \n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var cohortPatient = osApi.getCohortPatient();\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optNodeColors = [{name: 'Default'}, {name: 'Gender'}, {name: 'Age At Diagnosis'}];\n            vm.optNodeColor = vm.optNodeColors[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n\n     \n            // Cohorts\n            vm.addCohortPatient = function(){\n                var cohortName = \"PCA \" + moment().format('- H:mm:ss - M/D/YY');\n                var cohortIds = d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node){return node.__data__.id.toUpperCase(); });\n                if (cohortIds.length==0) return;\n                var cohort = {name:cohortName, ids:cohortIds};\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n\n            var applyCohort = function() {\n                var ids = vm.optCohortPatient.ids;\n                if (ids == \"*\"){\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                }\n                else{\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function(){\n                        return (ids.indexOf(this.__data__.id)>=0)\n                    });\n                }\n            };\n            $scope.$watch('vm.optCohortPatient', applyCohort);\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                // Patient Data\n                // osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n\n                    //rawPatientData = response.payload.tbl;\n                    mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                    osApi.setBusyMessage(\"Creating PCA Matrix\");\n                    osApi.getPCA(vm.datasource, mtx).then(function() {\n\n\n                        osApi.setBusyMessage(\"Loading Gene Sets\");\n                        osApi.getGeneSetNames().then(function(response) {\n\n                            // Load Gene Sets\n                            vm.geneSets = response.payload;\n                            vm.geneSet = vm.geneSets[0];\n                            $scope.$watch('vm.geneSet', function() {\n                                update();\n                            });\n                            \n                        });\n                });\n            });\n\n\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    applyCohort();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                width = $window.innerWidth - 100; \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                    });\n\n                d3Chart.call(brush);\n\n                \n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) { return d; });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\":  width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n            }\n\n\n            vm.resize = function () {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) { return xScale(d[0]); })\n                    .attr(\"cy\", function(d) { return yScale(d[1]); })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            _cohortGene.clear();\n            _cohortPatient.clear();\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n\n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        \n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n\n\n        var history = (function(){\n\n            var _geneSelections = [];\n            var _geneSelection = null;\n            var _patientSelections = [];\n            var _patientSelection = null;\n\n            var addGeneSelection = function(name, ids){\n                _geneSelections.push({name:name, ids:ids})\n            };\n            var getGeneSelections = function(){\n                return _geneSelection;\n            };\n            var setGeneSelection = function(selection){\n                _geneSelection = selection;\n            };\n\n            var getGeneSelection = function(selection){\n                return _geneSelection;\n            };\n\n            var _patientSelections = [];\n            var addPatientSelection = function(name, ids){\n                console.log(\"ADD PATIENT SELECTION\");\n                _patientSelections.push({name:name, ids:ids})\n\n            };\n            var getPatientSelections = function(){\n                console.log(\"GET PATIENT SELECTION\");\n                return _patientSelections;\n            };\n            var setPatientSelection = function(selection){\n                console.log(\"SET PATIENT SELECTION\");\n                _patientSelection = selection;\n            };\n            var getPatientSelection = function(){\n                console.log(\"GET PATIENT SELECTION\")\n                return _patientSelection;\n            };\n\n            return {\n                addGeneSelection: addGeneSelection,\n                setGeneSelection: setGeneSelection,\n                getGeneSelections: getGeneSelections,\n                addPatientSelection: addPatientSelection,\n                setPatientSelection: setPatientSelection,\n                getPatientSelection: getPatientSelection,\n                getPatientSelections: getPatientSelections\n\n            }\n        });\n\n\n\n\n        var _cohortPatient = collection(signals, {name:'All Patients', ids:'*'}, \"osCohortPatient\");\n        function getCohortPatient(){ return _cohortPatient; }\n\n        var _cohortGene = collection(signals, {name:'All Genes', ids:'*'}, \"osCohortGene\");\n        function getCohortGene(){ return _cohortGene; }\n\n        function collection(signals, defaultValue){ //, collectionName\n\n            var onAdd = new signals.Signal();\n            var onRemove = new signals.Signal();\n            //var onSelect = new signals.Signal();\n\n            var _collection = [defaultValue];\n            \n            function get() { return _collection; }\n            \n            function add(value){ \n                _collection.unshift(value); \n                onAdd.dispatch(_collection);\n            }\n            function clear(){\n                _collection = [defaultValue]   \n            }\n            function remove(value){\n                _collection.splice(_collection.indexOf(value)); \n                onRemove.dispatch(_collection);\n            }\n           \n            function save(){\n                \n            }\n\n            function load(){\n            }\n\n            return{\n                get: get,\n                add: add,\n                remove: remove,\n                onAdd: onAdd,\n                onRemove: onRemove,\n                save: save,\n                load:load,\n                clear:clear\n            }\n        }\n\n  \n        return {\n            getCohortPatient: getCohortPatient,\n            getCohortGene: getCohortGene,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n\n    }\n})();\n\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_utils = (function() {\n\tvar exports = {};\n\n\texports.sign = function(number) {\n\t\treturn number?((number<0)?-1:1):0\n\t};\n\n\texports.invert_array = function invert_array(arr) {\n\t\treturn arr.reduce(function(curr, next, index) {\n\t\t\tcurr[next] = index;\n\t\t\treturn curr;\n\t\t}, {});\n\t};\n\n\texports.cssClassToSelector = function(classes) {\n\t\treturn \".\"+classes.split(\" \").join(\".\");\n\t};\n\texports.mouseY = function(evt) {\n\t\treturn exports.ifndef(evt.offsetY, evt.originalEvent && evt.originalEvent.layerY);\n\t};\n\texports.mouseX = function(evt) {\n\t\treturn exports.ifndef(evt.offsetX, evt.originalEvent && evt.originalEvent.layerX);\n\t};\n\texports.ifndef = function(val, replacement) {\n\t\treturn (typeof val === 'undefined') ? replacement : val;\n\t};\n\texports.extends = function(child_class, parent_class) {\n\t\tchild_class.prototype = Object.create(parent_class.prototype);\n\t\tchild_class.prototype.constructor = child_class;\n\t};\n\n\texports.makeIdCounter = function() {\n\t\tvar counter = 0;\n\t\treturn function() {\n\t\t\tcounter += 1;\n\t\t\treturn counter;\n\t\t};\n\t};\n\n\texports.clamp = function(t, a, b) {\n\t\treturn Math.max(Math.min(b,t), a);\n\t};\n\n\texports.makeD3SVGElement = function(tag) {\n\t\treturn d3.select(document.createElementNS('http://www.w3.org/2000/svg', tag));\n\t};\n\n\texports.appendD3SVGElement = function(elt, target, svg) {\n\t\treturn target.select(function() {\n\t\t\treturn this.appendChild(elt.node().cloneNode(true));\n\t\t});\n\t};\n\n\texports.spaceSVGElementsHorizontally = function(group, padding) {\n\t\tvar x = 0;\n\t\tvar elts = exports.d3SelectChildren(group, '*').each(function() {\n\t\t\tif (this.tagName === 'defs') {\n\t\t\t\t// don't adjust spacing for a defs element\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar transform = d3.select(this).attr('transform');\n\t\t\tvar y = transform && transform.indexOf(\"translate\") > -1 && parseFloat(transform.split(\",\")[1], 10);\n\t\t\ty = y || 0;\n\t\t\td3.select(this).attr('transform', exports.translate(x, y));\n\t\t\tx += this.getBBox().width;\n\t\t\tx += padding;\n\t\t});\n\t\treturn group;\n\t};\n\n\texports.textWidth = function(string, font) {\n\t\tvar obj = $('<div>'+string+'</div>')\n\t\t\t\t.css({position: 'absolute', float: 'left',\n\t\t\t\t\t'white-space':'nowrap', visibility: 'hidden',\n\t\t\t\t\tfont: font})\n\t\t\t\t.appendTo($('body'));\n\t\tvar width = obj.width();\n\t\tobj.remove();\n\t\treturn width;\n\t};\n\n\texports.d3SelectChildren = function(parent, selector) {\n\t\treturn parent.selectAll(selector).filter(function() {\n\t\t\treturn this.parentNode === parent.node();\n\t\t});\n\t};\n\n\texports.warn = function(str, context) {\n\t\tconsole.log(\"Oncoprint error in \"+context+\": \"+str);\n\t};\n\n\texports.stableSort = function(arr, cmp) {\n\t\t// cmp returns something in [-1,0,1]\n\n\t\tvar zipped = [];\n\t\t_.each(arr, function(val, ind) {\n\t\t\tzipped.push([val, ind]);\n\t\t});\n\t\tvar stable_cmp = function(a,b) {\n\t\t\tvar res = cmp(a[0], b[0]);\n\t\t\tif (res === 0) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\tres = -1;\n\t\t\t\t} else if (a[1] > b[1]) {\n\t\t\t\t\tres = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tzipped.sort(stable_cmp);\n\t\treturn _.map(zipped, function(x) { return x[0];});\n\t};\n\n\texports.lin_interp = function(t, a, b) {\n\t\tif (a[0] === '#') {\n\t\t\tvar r = [parseInt(a.substring(1,3), 16), parseInt(b.substring(1,3), 16)];\n\t\t\tvar g = [parseInt(a.substring(3,5), 16), parseInt(b.substring(3,5), 16)];\n\t\t\tvar b = [parseInt(a.substring(5,7), 16), parseInt(b.substring(5,7), 16)];\n\t\t\tvar R = Math.round(r[0]*(1-t) + r[1]*t).toString(16);\n\t\t\tvar G = Math.round(g[0]*(1-t) + g[1]*t).toString(16);\n\t\t\tvar B = Math.round(b[0]*(1-t) + b[1]*t).toString(16);\n\n\t\t\tR = R.length < 2 ? '0'+R : R;\n\t\t\tG = G.length < 2 ? '0'+G : G;\n\t\t\tB = B.length < 2 ? '0'+B : B;\n\n\t\t\treturn '#' + R + G + B;\n\t\t} else if (isNaN(a) && a.indexOf('%') > -1) {\n\t\t\tvar A = parseFloat(a, 10);\n\t\t\tvar B = parseFloat(b, 10);\n\t\t\treturn (A*(1-t) + B*t)+'%';\n\t\t} else {\n\t\t\treturn a*(1-t) + b*t;\n\t\t}\n\t};\n\n\texports.translate = function(x,y) {\n\t\treturn \"translate(\" + x + \",\" + y + \")\";\n\t};\n\n\texports.assert = function(bool, msg) {\n\t\tif (!bool) {\n\t\t\tthrow msg;\n\t\t}\n\t}\n\treturn exports;\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n\n            // Properties\n            var cohortGene = osApi.getCohortGene();\n            var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.geneAndPatients = vm.optCohortGene.ids + \",\" + vm.optCohortPatient.ids;\n            vm.errorMessage;\n            \n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.optCohortPatient', 'vm.optCohortGene'], function() {\n                    var msg =  vm.optCohortPatient.ids.toString() + \", \" + vm.optCohortGene.ids.toString();\n                    drawOncoprint(msg);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ( (vm.optCohortPatient.ids == \"*\") || (vm.optCohortGene.ids == \"*\") ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\noncoprint_events = {\n\tADD_TRACK: 'add_track.oncoprint',\n\tREMOVE_TRACK: 'remove_track.oncoprint',\n\tMOVE_TRACK: 'move_track.oncoprint',\n\tSORT: 'sort.oncoprint',\n\tSET_CELL_PADDING: 'set_cell_padding.oncoprint',\n\tSET_CELL_WIDTH: 'set_cell_width.oncoprint',\n\tSET_TRACK_DATA: 'set_track_data.oncoprint',\n\tSET_ID_ORDER: 'set_id_order.oncoprint',\n\tCELL_CLICK: 'cell_click.oncoprint',\n\tCELL_MOUSEENTER: 'cell_mouseenter.oncoprint',\n\tCELL_MOUSELEAVE: 'cell_mouseleave.oncoprint',\n\tONCOPRINT_MOUSEENTER: 'oncoprint_mouseenter.oncoprint',\n\tONCOPRINT_MOUSELEAVE: 'oncoprint_mouseleave.oncoprint',\n\tSET_PRE_TRACK_PADDING: 'set_pre_track_padding.oncoprint',\n\tTRACK_INIT: 'init.track.oncoprint',\n\tUPDATE_RENDER_RULES: 'update_render_rules.cell_renderer.oncoprint',\n\tFINISHED_RENDERING: 'finished_rendering.oncoprint',\n\tFINISHED_POSITIONING: 'finished_positioning.renderer.oncoprint',\n\tSET_ZOOM: 'set_zoom.oncoprint',\n\tSET_SORT_DIRECTION: 'set_sort_direction.oncoprint',\n\tSET_VISIBLE_ID_ORDER: 'set_visible_ids.oncoprint'\n};\noncoprint_defaults = (function() {\n\tvar utils = window.oncoprint_utils;\n\tvar makeGeneticAlterationComparator = function(distinguish_mutations) {\n\t\tvar cna_key = 'cna';\n\t\tvar cna_order = utils.invert_array(['AMPLIFIED', 'HOMODELETED', 'GAINED', 'HEMIZYGOUSLYDELETED', 'DIPLOID', undefined]);\n\t\tvar mut_type_key = 'mut_type';\n\t\tvar mut_order = (function() {\n\t\t\tif (!distinguish_mutations) {\n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn +(typeof m === 'undefined');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _order = utils.invert_array(['TRUNC', 'INFRAME', 'MISSENSE', undefined]); \n\t\t\t\treturn function(m) {\n\t\t\t\t\treturn _order[m];\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tvar mrna_key = 'mrna';\n\t\tvar rppa_key = 'rppa';\n\t\tvar regulation_order = utils.invert_array(['UPREGULATED', 'DOWNREGULATED', undefined]);\n\n\t\treturn function(d1, d2) {\n\t\t\tvar cna_diff = utils.sign(cna_order[d1[cna_key]] - cna_order[d2[cna_key]]);\n\t\t\tif (cna_diff !== 0) {\n\t\t\t\treturn cna_diff;\n\t\t\t}\n\n\t\t\tvar mut_type_diff = utils.sign(mut_order(d1[mut_type_key]) - mut_order(d2[mut_type_key]));\n\t\t\tif (mut_type_diff !== 0) {\n\t\t\t\treturn mut_type_diff;\n\t\t\t}\n\n\t\t\tvar mrna_diff = utils.sign(regulation_order[d1[mrna_key]] - regulation_order[d2[mrna_key]]);\n\t\t\tif (mrna_diff !== 0) {\n\t\t\t\treturn mrna_diff;\n\t\t\t}\n\n\t\t\tvar rppa_diff = utils.sign(regulation_order[d1[rppa_key]] - regulation_order[d2[rppa_key]]);\n\t\t\tif (rppa_diff !== 0) {\n\t\t\t\treturn rppa_diff;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t};\n\t};\n\n\tvar genetic_alteration_config_base = {\n\t\tdefault: [{shape: 'full-rect', color: '#D3D3D3', z_index: -1}],\n\t\taltered: {\n\t\t\t'cna': {\n\t\t\t\t'AMPLIFIED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tlegend_label: 'Amplification'\n\t\t\t\t},\n\t\t\t\t'GAINED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#FFB6C1',\n\t\t\t\t\tlegend_label: 'Gain'\n\t\t\t\t},\n\t\t\t\t'HOMODELETED':{\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#0000FF',\n\t\t\t\t\tlegend_label: 'Deep Deletion'\n\t\t\t\t},\n\t\t\t\t'HEMIZYGOUSLYDELETED': {\n\t\t\t\t\tshape: 'full-rect',\n\t\t\t\t\tcolor: '#8FD8D8',\n\t\t\t\t\tlegend_label: 'Shallow Deletion'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'mrna': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#FF9999',\n\t\t\t\t\tlegend_label: 'mRNA Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'outline',\n\t\t\t\t\tcolor: '#6699CC',\n\t\t\t\t\tlegend_label: 'mRNA Downregulation'\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rppa': {\n\t\t\t\t'UPREGULATED': {\n\t\t\t\t\tshape: 'small-up-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Upregulation'\n\t\t\t\t},\n\t\t\t\t'DOWNREGULATED': {\n\t\t\t\t\tshape: 'small-down-arrow',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tlegend_label: 'Protein Downregulation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlegend_label: \"Genetic Alteration\",\n\t};\n\tvar genetic_alteration_config_nondistinct_mutations = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config_nondistinct_mutations.altered.mut_type = {\n\t\t'*': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Mutation'\n\t\t}\n\t};\n\tvar genetic_alteration_config = $.extend(true,{},genetic_alteration_config_base);\n\tgenetic_alteration_config.altered.mut_type = {\n\t\t'MISSENSE': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'green',\n\t\t\tlegend_label: 'Missense Mutation'\n\t\t},\n\t\t'INFRAME': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: '#9F8170',\n\t\t\tlegend_label: 'Inframe Mutation'\n\t\t},\n\t\t'TRUNC': {\n\t\t\tshape: 'middle-rect',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Truncating Mutation'\n\t\t},\n\t\t'FUSION':{\n\t\t\tshape: 'large-right-arrow',\n\t\t\tcolor: 'black',\n\t\t\tlegend_label: 'Fusion'\n\t\t}\n\t};\n\t\n\treturn {\n\t\tgenetic_alteration_config: genetic_alteration_config,\n\t\tgenetic_alteration_config_nondistinct_mutations: genetic_alteration_config_nondistinct_mutations,\n\t\tgenetic_alteration_comparator: makeGeneticAlterationComparator(true),\n\t\tgenetic_alteration_comparator_nondistinct_mutations: makeGeneticAlterationComparator(false)\n\t};\n})();\noncoprint_RuleSet = (function() {\n\tvar utils = oncoprint_utils;\n\tvar defaults = oncoprint_defaults;\n\n\tvar CATEGORICAL_COLOR = 'categorical_color';\n\tvar GRADIENT_COLOR = 'gradient_color'; \n\tvar GENETIC_ALTERATION = 'genetic_alteration';\n\tvar BAR_CHART = 'bar_chart';\n\n\tvar CELL = \"cell\";\n\tvar ANY = '*';\n\n\tvar getRuleSetId = utils.makeIdCounter();\n\n\tvar numericalNaNSort = function(d1, d2) {\n\t\tvar f1 = parseFloat(d1[this.data_key], 10);\n\t\tvar f2 = parseFloat(d2[this.data_key], 10);\n\t\tvar f1_isNaN = isNaN(f1);\n\t\tvar f2_isNaN = isNaN(f2);\n\t\tif (f1_isNaN && f2_isNaN) {\n\t\t\treturn 0;\n\t\t} else if (!f1_isNaN && !f2_isNaN) {\n\t\t\tif (f1 < f2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (f1 > f2) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\t\n\t\t} else if (f1_isNaN) {\n\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t} else {\n\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t}\n\t};\n\tvar makeNARuleParams = function(condition, label) {\n\t\treturn {\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\t\tattrs: {fill: '#eeeeee', width: '100%', height:'100%'},\n\t\t\t\tlegend_label: label,\n\t\t\t\tchildren: [{\n\t\t\t\t\tcondition: condition,\n\t\t\t\t\tshape: utils.makeD3SVGElement('path'),\n\t\t\t\t\tattrs: {d: \"m 0% 0% L 100% 100%\"},\n\t\t\t\t\tstyles: {'stroke-width':'1px', 'stroke':'#555555'},\n\t\t\t\t\tlegend_label: label,\n\t\t\t\t}],\n\t\t\t};\n\t};\n\tvar D3SVGRuleSet = (function() {\n\t\tfunction D3SVGRuleSet(params) {\n\t\t\tthis.rule_map = {};\n\t\t\tthis.rule_set_id = getRuleSetId();\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = false;\n\t\t};\n\t\tvar getRuleId = utils.makeIdCounter();\n\n\t\tD3SVGRuleSet.prototype.getLegendLabel = function() {\n\t\t\treturn this.legend_label;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRuleSetId = function() {\n\t\t\treturn this.rule_set_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t}\n\t\tD3SVGRuleSet.prototype.addStaticRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGStaticRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addGradientRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGGradientRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.addBarChartRule = function(params) {\n\t\t\tvar rule_id = getRuleId();\n\t\t\tthis.rule_map[rule_id] = new D3SVGBarChartRule(params, rule_id);\n\t\t\treturn rule_id;\n\t\t};\n\t\tD3SVGRuleSet.prototype.removeRule = function(rule_id) {\n\t\t\tdelete this.rule_map[rule_id];\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRules = function() {\n\t\t\tvar self = this;\n\t\t\tvar rule_ids = Object.keys(this.rule_map);\n\t\t\tvar rules = _.map(rule_ids, function(id) { return self.rule_map[id]; });\n\t\t\tvar sorted_rules = _.sortBy(rules, function(r) { return r.z_index; });\n\t\t\treturn sorted_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar active_rules = {};\n\t\t\t_.each(this.getRules(), function(rule) {\n\t\t\t\tvar affected_groups = rule.filter(g);\n\t\t\t\tif (affected_groups[0].length > 0) {\n\t\t\t\t\tactive_rules[rule.rule_id] = true;\n\t\t\t\t}\n\t\t\t\trule.apply(affected_groups, cell_width, cell_height);\n\t\t\t});\n\t\t\treturn active_rules;\n\t\t};\n\t\tD3SVGRuleSet.prototype.getRule = function(rule_id) {\n\t\t\treturn this.rule_map[rule_id];\n\t\t};\n\t\treturn D3SVGRuleSet;\n\t})();\n\n\tfunction D3SVGCategoricalColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = CATEGORICAL_COLOR;\n\t\tvar self = this;\n\t\tvar d3_colors = [\"#3366cc\",\"#dc3912\",\"#ff9900\",\"#109618\",\n\t\t\t\t\"#990099\",\"#0099c6\",\"#dd4477\",\"#66aa00\",\n\t\t\t\t\"#b82e2e\",\"#316395\",\"#994499\",\"#22aa99\",\n\t\t\t\t\"#aaaa11\",\"#6633cc\",\"#e67300\",\"#8b0707\",\n\t\t\t\t\"#651067\",\"#329262\",\"#5574a6\",\"#3b3eac\",\n\t\t\t\t\"#b77322\",\"#16d620\",\"#b91383\",\"#f4359e\",\n\t\t\t\t\"#9c5935\",\"#a9c413\",\"#2a778d\",\"#668d1c\",\n\t\t\t\t\"#bea413\",\"#0c5922\",\"#743411\"];/*_.shuffle(_.filter(d3.scale.category20().range().concat(d3.scale.category20b().range()).concat(d3.scale.category20c().range()),\n\t\t\t\t\t\t\t\t\tfunction(color) {\n\t\t\t\t\t\t\t\t\t\tvar rgb = d3.rgb(color);\n\t\t\t\t\t\t\t\t\t\treturn !(rgb.r === rgb.g && rgb.g === rgb.b);\n\t\t\t\t\t\t\t\t\t}));*/\n\t\tvar addColorRule = function(color, category) {\n\t\t\tvar colored_rect = utils.makeD3SVGElement('rect').attr('fill', color);\n\t\t\tvar condition = (function(cat) {\n\t\t\t\treturn function(d) {\n\t\t\t\t\treturn params.getCategory(d) === cat;\n\t\t\t\t};\n\t\t\t})(category);\n\t\t\tself.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: colored_rect,\n\t\t\t\tlegend_label: category\n\t\t\t});\n\t\t};\n\t\tparams.color = params.color || {};\n\t\t_.each(params.color, function(color, category) {\n\t\t\taddColorRule(color, category);\n\t\t});\n\t\tself.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn params.getCategory(d) === 'NA';\n\t\t}, 'NA'));\n\n\t\tthis.sort_cmp = params.sort_cmp || function(d1,d2) {\n\t\t\tvar cat1 = params.getCategory(d1);\n\t\t\tvar cat2 = params.getCategory(d2);\n\t\t\tif (typeof cat1 !== 'string') {\n\t\t\t\tcat1 = cat1.toString();\n\t\t\t}\n\t\t\tif (typeof cat2 !== 'string') {\n\t\t\t\tcat2 = cat2.toString();\n\t\t\t}\n\t\t\tif (cat1 === cat2) {\n\t\t\t\treturn 0;\n\t\t\t} else if (cat1 === 'NA') {\n\t\t\t\treturn Number.POSITIVE_INFINITY;\n\t\t\t} else if (cat2 === 'NA') {\n\t\t\t\treturn Number.NEGATIVE_INFINITY;\n\t\t\t} else {\n\t\t\t\treturn cat1.localeCompare(cat2);\n\t\t\t}\n\t\t};\n\t\tself.apply = function(g, cell_width, cell_height) {\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar category = params.getCategory(d);\n\t\t\t\tif (!params.color.hasOwnProperty(category) && category !== \"NA\") {\n\t\t\t\t\tvar new_color = d3_colors.pop();\n\t\t\t\t\tparams.color[category] = new_color;\n\t\t\t\t\taddColorRule(new_color, category);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn D3SVGRuleSet.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGCategoricalColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGradientColorRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tthis.type = GRADIENT_COLOR;\n\t\tthis.data_key = params.data_key;\n\t\tvar rule = this.addGradientRule({\n\t\t\tshape: utils.makeD3SVGElement('rect'),\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tcolor_range: params.color_range,\n\t\t\tscale: params.scale,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGGradientColorRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGBarChartRuleSet(params) {\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar self = this;\n\t\tself.type = BAR_CHART;\n\t\tself.data_key = params.data_key;\n\t\tvar rule = this.addBarChartRule({\n\t\t\tdata_key: params.data_key,\n\t\t\tdata_range: params.data_range,\n\t\t\tscale: params.scale,\n\t\t\tfill: params.fill,\n\t\t\tna_color: params.na_color\n\t\t});\n\t\tthis.addStaticRule(makeNARuleParams(function(d) {\n\t\t\treturn isNaN(d[params.data_key]);\n\t\t}, 'NA'));\n\t\tthis.sort_cmp = params.sort_cmp || $.proxy(numericalNaNSort, this);\n\t\tthis.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\treturn (active_rules[rule] && this.rule_map[rule].getLegendDiv(cell_width, cell_height)) || $('<div>')[0];\n\t\t};\n\t}\n\tD3SVGBarChartRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tfunction D3SVGGeneticAlterationRuleSet(params) {\n\t\tif (params && params.dont_distinguish_mutation_color) {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config_nondistinct_mutations);\n\t\t} else {\n\t\t\tparams = $.extend({}, params, defaults.genetic_alteration_config);\n\t\t}\n\t\tif (params && params.distinguish_mutation_order) {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator;\n\t\t} else {\n\t\t\tthis.sort_cmp = defaults.genetic_alteration_comparator_nondistinct_mutations;\n\t\t}\n\t\tD3SVGRuleSet.call(this, params);\n\t\tvar vocab = ['full-rect', 'middle-rect', 'large-right-arrow', 'small-up-arrow', 'small-down-arrow'];\n\t\tvar self = this;\n\t\tself.type = GENETIC_ALTERATION;\n\n\t\tvar makeStaticShapeRule = function(rule_spec, key, value) {\n\t\t\tvar condition = typeof key !== 'undefined' && typeof value !== 'undefined' ? (function(_key, _value) {\n\t\t\t\tif (_value === ANY) {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn typeof d[_key] !== 'undefined';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn function(d) {\n\t\t\t\t\t\treturn d[_key] === _value;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})(key, value) : undefined;\n\t\t\tvar shape, attrs, styles, z_index;\n\t\t\tswitch (rule_spec.shape) {\n\t\t\t\tcase 'full-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '100%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'middle-rect':\n\t\t\t\t\tshape = utils.makeD3SVGElement('rect');\n\t\t\t\t\tattrs = {fill: rule_spec.color, width: '100%', height: '33.33%', y: '33.33%'};\n\t\t\t\t\tstyles = {};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'large-right-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"0%,0% 100%,50% 0%,100%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-up-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,0% 100%,25% 0%,25%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'small-down-arrow':\n\t\t\t\t\tshape = utils.makeD3SVGElement('polygon');\n\t\t\t\t\tattrs = {points: \"50%,100% 100%,75% 0%,75%\"};\n\t\t\t\t\tstyles = {'stroke-width':'0px', 'fill': rule_spec.color};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 4);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'outline':\n\t\t\t\t\tshape = CELL;\n\t\t\t\t\tstyles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n\t\t\t\t\tz_index = utils.ifndef(rule_spec.z_index, 5);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar new_rule = self.addStaticRule({\n\t\t\t\tcondition: condition,\n\t\t\t\tshape: shape,\n\t\t\t\tattrs: attrs,\n\t\t\t\tstyles: styles,\n\t\t\t\tz_index: z_index,\n\t\t\t\tlegend_label: rule_spec.legend_label,\n\t\t\t\texclude_from_legend: (typeof rule_spec.legend_label === \"undefined\")\n\t\t\t});\n\t\t\treturn new_rule;\n\t\t};\n\t\tvar altered_rules = [];\n\t\t_.each(params.altered, function(values, key) {\n\t\t\t_.each(values, function(rule_spec, value) {\n\t\t\t\taltered_rules.push(makeStaticShapeRule(rule_spec, key, value));\n\t\t\t});\n\t\t});\n\t\t_.each(params.default, function(rule_spec) {\n\t\t\tmakeStaticShapeRule(rule_spec);\n\t\t});\n\t\tself.getLegendDiv = function(active_rules, cell_width, cell_height) {\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\t_.each(self.getRules(), function(rule) {\n\t\t\t\tif (active_rules[rule.rule_id]) {\n\t\t\t\t\tvar legend_div = rule.getLegendDiv(cell_width, cell_height);\n\t\t\t\t\tif (legend_div) {\n\t\t\t\t\t\tdiv.node().appendChild(legend_div);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '20px');\n\t\t\treturn div.node();\n\t\t};\n\t\tself.alteredData = function(data) {\n\t\t\tvar altered_data = [];\n\t\t\t_.each(altered_rules, function(rule_id) {\n\t\t\t\taltered_data = altered_data.concat(self.getRule(rule_id).filterData(data));\n\t\t\t});\n\t\t\treturn _.uniq(altered_data);\n\t\t};\n\t}\n\tD3SVGGeneticAlterationRuleSet.prototype = Object.create(D3SVGRuleSet.prototype);\n\n\tvar D3SVGRule = (function() {\n\t\tfunction D3SVGRule(params, rule_id) {\n\t\t\tthis.rule_id = rule_id;\n\t\t\tthis.condition = params.condition || function(d) { return true; };\n\t\t\tthis.shape = typeof params.shape === 'undefined' ? utils.makeD3SVGElement('rect') : params.shape;\n\t\t\tthis.z_index = typeof params.z_index === 'undefined' ? this.rule_id : params.z_index;\n\t\t\tthis.legend_label = params.legend_label;\n\t\t\tthis.exclude_from_legend = params.exclude_from_legend;\n\n\t\t\tthis.attrs = params.attrs || {};\n\t\t\tthis.attrs.width = utils.ifndef(this.attrs.width, '100%');\n\t\t\tthis.attrs.height = utils.ifndef(this.attrs.height, '100%');\n\t\t\tthis.attrs.x = utils.ifndef(this.attrs.x, 0);\n\t\t\tthis.attrs.y = utils.ifndef(this.attrs.y, 0);\n\n\t\t\tthis.styles = params.styles || {};\n\n\t\t\tthis.children = _.map(params.children, function(p) {\n\t\t\t\treturn new D3SVGRule(p);\n\t\t\t});\n\t\t}\n\n\t\tvar percentToPx = function(attr_val, attr_name, cell_width, cell_height) {\n\t\t\t// convert a percentage to a local pixel coordinate\n\t\t\tvar width_like = ['width', 'x'];\n\t\t\tvar height_like = ['height', 'y'];\n\t\t\tattr_val = parseFloat(attr_val, 10)/100;\n\t\t\tif (width_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_width;\n\t\t\t} else if (height_like.indexOf(attr_name) > -1) {\n\t\t\t\tattr_val = attr_val*cell_height;\n\t\t\t} \n\t\t\treturn attr_val+'';\n\t\t};\n\n\t\tvar convertAttr = function(d, i, attr_val, attr_name, cell_width, cell_height) {\n\t\t\tvar ret = attr_val;\n\t\t\tif (typeof ret === 'function') {\n\t\t\t\tret = ret(d,i);\n\t\t\t}\n\t\t\tif (typeof ret === 'string' && ret.indexOf('%') > -1) {\n\t\t\t\tif (attr_name === 'points') {\n\t\t\t\t\tret = _.map(ret.split(\" \"), function(pt) {\n\t\t\t\t\t\tvar split_pt = pt.split(\",\");\n\t\t\t\t\t\tvar pt_x = percentToPx(split_pt[0], 'x', cell_width, cell_height);\n\t\t\t\t\t\tvar pt_y = percentToPx(split_pt[1], 'y', cell_width, cell_height);\n\t\t\t\t\t\treturn pt_x+\",\"+pt_y;\n\t\t\t\t\t}).join(\" \");\n\t\t\t\t} else if (attr_name === 'd') {\n\t\t\t\t\tvar split = ret.split(/\\s+/);\n\t\t\t\t\tfor (var i=0, _len = split.length; i<_len; i++) {\n\t\t\t\t\t\tvar c = split[i].toLowerCase();\n\t\t\t\t\t\tif (c === 'm' || c === 'l') {\n\t\t\t\t\t\t\tsplit[i+1] = percentToPx(split[i+1], 'x', cell_width, cell_height);\n\t\t\t\t\t\t\tsplit[i+2] = percentToPx(split[i+2], 'y', cell_width, cell_height);\n\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn split.join(\" \");\n\t\t\t\t} else {\n\t\t\t\t\tret = percentToPx(ret, attr_name, cell_width, cell_height);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t};\n\n\t\tD3SVGRule.prototype.apply = function(g, cell_width, cell_height) {\n\t\t\tvar shape = this.shape;\n\t\t\tvar elts = shape === CELL ? g : utils.appendD3SVGElement(shape, g);\n\t\t\tvar styles = this.styles;\n\t\t\tvar attrs = this.attrs;\n\t\t\tattrs.x = attrs.x || 0;\n\t\t\tattrs.y = attrs.y || 0;\n\t\t\t_.each(attrs, function(val, key) {\n\t\t\t\telts.attr(key, function(d,i) {\n\t\t\t\t\treturn convertAttr(d, i, val, key, cell_width, cell_height);\n\t\t\t\t});\n\t\t\t});\n\t\t\t_.each(styles, function(val, key) {\n\t\t\t\telts.style(key, val);\n\t\t\t});\n\t\t\t_.each(this.children, function(r) {\n\t\t\t\tr.apply(g, cell_width, cell_height);\n\t\t\t});\n\t\t}\n\t\tD3SVGRule.prototype.filter = function(g) {\n\t\t\treturn g.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.filterData = function(data) {\n\t\t\treturn data.filter(this.condition);\n\t\t};\n\t\tD3SVGRule.prototype.showInLegend = function() {\n\t\t\treturn !this.exclude_from_legend;\n\t\t};\n\t\treturn D3SVGRule;\n\t})();\n\t\n\n\tfunction D3SVGBarChartRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.attrs.fill = function(d) {\n\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\treturn params.na_color;\n\t\t\t}  else {\n\t\t\t\treturn params.fill;\n\t\t\t}\n\t\t};\n\t\tthis.na_color = params.na_color;\n\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(Math.abs(x), 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar height_helper = function(d) {\n\t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar distance = Math.abs(datum-scaled_data_range[0]) / Math.abs(scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\treturn distance * 100;\n\t\t\t};\n\t\t\tvar y_function = function(d) {\n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"0\" : (100 - height_helper(d))) + '%';\n\t\t\t};\n\t\t\tvar height_function = function(d) { \n\t\t\t\treturn (isNaN(d[params.data_key]) ? \"100\" : height_helper(d)) + '%';\n\t\t\t};\n\t\t\tthis.attrs.height = height_function;\n\t\t\tthis.attrs.y = y_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getEffectiveDataRange = function() {\n\t\t\tif (typeof this.data_range === \"undefined\") {\n\t\t\t\treturn this.inferred_data_range;\n\t\t\t} else {\n\t\t\t\tvar ret = [];\n\t\t\t\tret[0] = (typeof this.data_range[0] === 'undefined' ? this.inferred_data_range[0] : this.data_range[0]);\n\t\t\t\tret[1] = (typeof this.data_range[1] === 'undefined' ? this.inferred_data_range[1] : this.data_range[1]);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t};\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.getEffectiveDataRange();\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', '0px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true)\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tvar height = cell_height*parseInt(this.attrs.height(datum))/100;\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', height+'px')\n\t\t\t\t\t.attr('y', (cell_height-height)+'px')\n\t\t\t\t\t.attr('fill', params.fill)\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tif (g[0].length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inferred_data_range = this.inferDataRange(g);\n\t\t\tthis.setUpHelperFunctions(this.getEffectiveDataRange());\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\n\t}\n\tD3SVGBarChartRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGGradientRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\t\tthis.data_key = params.data_key;\n\t\tthis.data_range = params.data_range;\n\t\tthis.inferred_data_range;\n\t\tthis.color_range = params.color_range;\n\t\tthis.na_color = params.na_color;\n\n\t\tvar makeDatum = function(x) {\n\t\t\tvar ret = {};\n\t\t\tret[params.data_key] = x;\n\t\t\treturn ret;\n\t\t};\n\t\tvar scale = function(x) {\n\t\t\tif (params.scale === 'log') {\n\t\t\t\treturn Math.log10(Math.max(x, 0.1)); \n\t\t\t} else {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t};\n\n\t\tthis.setUpHelperFunctions = function(data_range) {\n\t\t\tvar scaled_data_range = _.map(data_range, scale);\n\t\t\tvar fill_function = function(d) {\n\t\t\t\tif (isNaN(d[params.data_key])) {\n\t\t\t\t\treturn params.na_color;\n\t\t\t\t}\n \t\t\t\tvar datum = scale(d[params.data_key]);\n\t\t\t\tvar data_range = [scaled_data_range[0], scaled_data_range[1]];\n\t\t\t\tvar distance = (datum-scaled_data_range[0]) / (scaled_data_range[1]-scaled_data_range[0]);\n\t\t\t\tcolor_range = [d3.rgb(params.color_range[0]).toString(),\n\t\t\t\t\t\td3.rgb(params.color_range[1]).toString()];\n\t\t\t\treturn utils.lin_interp(distance, params.color_range[0], params.color_range[1]);\n\t\t\t};\n\t\t\tthis.attrs.fill = fill_function;\n\t\t};\n\n\t\tthis.inferDataRange = function(g) {\n\t\t\tvar self = this;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\t\t\tg.each(function(d,i) {\n\t\t\t\tvar datum = d[self.data_key];\n\t\t\t\tvar datumIsNaN = isNaN(datum);\n\t\t\t\tmin = Math.min(min, datumIsNaN ? Number.POSITIVE_INFINITY : datum);\n\t\t\t\tmax = Math.max(max, datumIsNaN ? Number.NEGATIVE_INFINITY : datum);\n\t\t\t});\n\t\t\treturn [min, max];\n\t\t};\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar data_range = this.data_range || this.inferred_data_range;\n\t\t\tif (!data_range) {\n\t\t\t\treturn div.node();\n\t\t\t}\n\t\t\tvar display_data_range = _.map(data_range, function(x) { \n\t\t\t\tvar num_digit_multiplier = Math.pow(10, utils.ifndef(params.legend_num_decimal_digits,2));\n\t\t\t\treturn Math.round(x * num_digit_multiplier) / num_digit_multiplier;\n\t\t\t});\n\t\t\tdiv.append('span').text(display_data_range[0]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tvar mesh = 50;\n\t\t\tvar svg = div.append('svg').attr('width', mesh+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tfor (var i=0; i<=mesh; i++) {\n\t\t\t\tvar t = i/mesh;\n\t\t\t\tvar d = (1-t)*data_range[0] + t*data_range[1];\n\t\t\t\tvar datum = makeDatum(d);\n\t\t\t\tsvg.append('rect')\n\t\t\t\t\t.attr('width', '1px')\n\t\t\t\t\t.attr('height', cell_height+'px')\n\t\t\t\t\t.attr('fill', this.attrs.fill(datum))\n\t\t\t\t\t.attr('x', i+'px');\n\t\t\t}\n\t\t\tdiv.append('span').text(display_data_range[1]).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t\tthis.apply = function(g, cell_width, cell_height) {\n\t\t\tthis.setUpHelperFunctions(this.data_range || (this.inferred_data_range = this.inferDataRange(g)));\n\t\t\tD3SVGRule.prototype.apply.call(this, g, cell_width, cell_height);\n\t\t};\n\t}\n\tD3SVGGradientRule.prototype = Object.create(D3SVGRule.prototype);\n\n\tfunction D3SVGStaticRule(params, rule_id) {\n\t\tD3SVGRule.call(this, params, rule_id);\n\n\t\tthis.getLegendDiv = function(cell_width, cell_height) {\n\t\t\tif (!this.showInLegend()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar div = d3.select(document.createElement('div'));\n\t\t\tvar svg_ctr = div.append('div').classed('oncoprint-legend-block', true);\n\t\t\tvar svg = svg_ctr.append('svg').attr('width', cell_width+'px').attr('height', cell_height+'px').classed('oncoprint-legend-element', true);\n\t\t\tthis.apply(svg, cell_width, cell_height);\n\t\t\tif (this.legend_label) {\n\t\t\t\tdiv.append('span').text(this.legend_label).classed('oncoprint-legend-label oncoprint-legend-element', true)\n\t\t\t\t\t\t.style('position', 'relative').style('bottom', cell_height / 2 - 3 + 'px');\n\t\t\t}\n\t\t\tutils.d3SelectChildren(div, '*').style('padding-right', '10px');\n\t\t\treturn div.node();\n\t\t};\n\t}\n\tD3SVGStaticRule.prototype = Object.create(D3SVGRule.prototype);\n\n\treturn {\n\t\tCATEGORICAL_COLOR: CATEGORICAL_COLOR,\n\t\tGRADIENT_COLOR: GRADIENT_COLOR,\n\t\tGENETIC_ALTERATION: GENETIC_ALTERATION,\n\t\tBAR_CHART: BAR_CHART,\n\t\tmakeRuleSet: function(type, params) {\n\t\t\tif (type === CATEGORICAL_COLOR) {\n\t\t\t\treturn new D3SVGCategoricalColorRuleSet(params);\n\t\t\t} else if (type === GRADIENT_COLOR) {\n\t\t\t\treturn new D3SVGGradientColorRuleSet(params);\n\t\t\t} else if (type === GENETIC_ALTERATION) {\n\t\t\t\treturn new D3SVGGeneticAlterationRuleSet(params);\n\t\t\t} else if (type === BAR_CHART) {\n\t\t\t\treturn new D3SVGBarChartRuleSet(params);\n\t\t\t} else {\n\t\t\t\treturn new D3SVGRuleSet();\n\t\t\t}\n\t\t}\n\t};\n})();\n/*\n * Copyright (c) 2015 Memorial Sloan-Kettering Cancer Center.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS\n * FOR A PARTICULAR PURPOSE. The software and documentation provided hereunder\n * is on an \"as is\" basis, and Memorial Sloan-Kettering Cancer Center has no\n * obligations to provide maintenance, support, updates, enhancements or\n * modifications. In no event shall Memorial Sloan-Kettering Cancer Center be\n * liable to any party for direct, indirect, special, incidental or\n * consequential damages, including lost profits, arising out of the use of this\n * software and its documentation, even if Memorial Sloan-Kettering Cancer\n * Center has been advised of the possibility of such damage.\n */\n\n/*\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nOncoprintRenderer = (function() {\n\tvar events = oncoprint_events;\n\tvar utils = oncoprint_utils;\n\tvar RuleSet = oncoprint_RuleSet;\n\n\tfunction OncoprintRenderer(oncoprint, config) {\n\t\tthis.rule_sets = {};\n\t\tthis.clipping = true;\n\t\tthis.oncoprint = oncoprint;\n\t\tthis.config = config;\n\t\tthis.upper_padding = utils.ifndef(config.upper_padding, 0);\n\t\tthis.max_label_length = utils.ifndef(config.max_label_length, 20);\n\t\tthis.track_group_separation = 12;\n\n\t\t(function computeLabelAreaWidth(self) {\n\t\t\tvar label_font = self.getLabelFont();\n\t\t\tvar max_label_width = utils.textWidth((Math.pow(10,self.max_label_length)-1).toString(), label_font);\n\t\t\tvar max_percent_altered_width = utils.textWidth('100%', label_font);\n\t\t\tvar buffer_width = 20;\n\t\t\tself.label_area_width = max_label_width + buffer_width + max_percent_altered_width;\n\t\t})(this);\n\t};\n\tOncoprintRenderer.prototype.getCellCSSClass = function() {\n\t\treturn 'oncoprint-cell';\t\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCSSClass = function(track_id) {\n\t\treturn this.getCellCSSClass()+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-label oncoprint-track-label'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelCSSSelector = function(track_id) {\n\t\t// TODO: replace with utils.cssClassToSelector\n\t\treturn \".\"+this.getTrackLabelCSSClass(track_id).split(\" \").join(\".\");\n\t};\n\tOncoprintRenderer.prototype.getTrackCellCtrCSSClass = function(track_id) {\n\t\treturn 'oncoprint-track-cell-ctr'+track_id;\n\t};\n\tOncoprintRenderer.prototype.getLabelFont = function() {\n\t\treturn this.config.label_font;\n\t};\n\tOncoprintRenderer.prototype.setRuleSet = function(track_id, type, params) {\n\t\tvar new_rule_set = RuleSet.makeRuleSet(type, params);\n\t\tthis.rule_sets[track_id] = new_rule_set;\n\t\tif (new_rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(track_id, new_rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n\t\tvar rule_set = this.rule_sets[source_track_id];\n\t\tthis.rule_sets[target_track_id] = rule_set;\n\t\tif (rule_set.sort_cmp) {\n\t\t\tthis.oncoprint.setTrackSortComparator(target_track_id, rule_set.sort_cmp);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getRuleSet = function(track_id) {\n\t\treturn this.rule_sets[track_id];\n\t};\n\tOncoprintRenderer.prototype.getTrackTops = function() {\n\t\tvar ret = {};\n\t\tvar y = this.upper_padding;\n\t\tvar self = this;\n\t\t_.each(this.oncoprint.getTrackGroups(), function(group) {\n\t\t\tif (group.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_.each(group, function(id) {\n\t\t\t\tret[id] = y;\n\t\t\t\ty+= self.getRenderedTrackHeight(id);\n\t\t\t});\n\t\t\ty += self.track_group_separation;\n\t\t});\n\t\treturn ret;\n\t};\n\tOncoprintRenderer.prototype.getTrackCellTops = function() {\n\t\treturn this.track_cell_tops || this.computeTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.computeTrackCellTops = function() {\n\t\tvar tops = this.getTrackTops();\n\t\tvar self = this;\n\t\t_.each(tops, function(top, id) {\n\t\t\ttops[id] = top + self.oncoprint.getTrackPadding(id);\n\t\t});\n\t\tthis.track_cell_tops = tops;\n\t\treturn tops;\n\t};\n\tOncoprintRenderer.prototype.getTrackLabelTops = function() {\n\t\treturn this.getTrackCellTops();\n\t};\n\tOncoprintRenderer.prototype.getRenderedTrackHeight = function(track_id) {\n\t\treturn this.oncoprint.getTrackHeight(track_id) + 2*this.oncoprint.getTrackPadding(track_id);\n\t};\n\tOncoprintRenderer.prototype.getCellX = function(index) {\n\t\treturn (typeof index === 'number' ? index*(this.oncoprint.getZoomedCellWidth()+this.oncoprint.getCellPadding()) : -1);\n\t};\n\tOncoprintRenderer.prototype.getCellXArray = function(length) {\n\t\tvar cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n\t\treturn _.map(_.range(0,length), function(x) { return x*cell_unit; });\n\t};\n\tOncoprintRenderer.prototype.getCellAreaWidth = function() {\n\t\treturn this.oncoprint.getVisibleIdOrder().length*(this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding());\n\t};\n\tOncoprintRenderer.prototype.getCellAreaHeight = function() {\n\t\tvar track_tops = this.getTrackTops();\n\t\tvar track_order = this.oncoprint.getTracks();\n\t\tif (track_order.length === 0) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tvar last_track = track_order[track_order.length-1];\n\t\t\treturn track_tops[last_track] + this.getRenderedTrackHeight(last_track);\n\t\t}\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaWidth = function() {\n\t\treturn this.label_area_width;\n\t};\n\tOncoprintRenderer.prototype.getLabelAreaHeight = function() {\n\t\treturn this.getCellAreaHeight();\n\t};\n\tOncoprintRenderer.prototype.render = function() {\n\t\tthrow \"not implemented in abstract class\";\n\t}\n\treturn OncoprintRenderer;\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n            var cohortPatient = osApi.getCohortPatient();\n            var cohortGene = osApi.getCohortGene();\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n            vm.resize = function(){\n                var width = $window.innerWidth\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Cohorts\n                initializeCohort(cyChart, vm, osApi, cohortPatient, cohortGene, $scope, moment);\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n\n                // Initialize Commands\n                initializeCommands(cyChart, vm);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }\n            \n        function initializeCommands(chart, vm){\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n            vm.optCommands = [\n                \n                {name:\"Show Edges Of Selected Patient\", cmd:function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Show Edges Of Selected Genes\", cmd:function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Show All Edges\", cmd:function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide All Edges\", cmd:function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},{name:\"Select Connected Genes\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Select Connected Patients\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Deselect All Patients\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Deselect All Genes\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Invert Patient Selection\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                }},\n                {name:\"Invert Gene Selection\", cmd:function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                }},\n\n            ]\n                \n        }\n        function initializeViewModel(vm, $stateParams){\n            vm.datasource = $stateParams.datasource;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.optCommands;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeCohort(chart, vm, osApi, cohortPatient, cohortGene, $scope, moment){\n            vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n            vm.optCohortMode = vm.optCohortModes[0];\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.optCohortGenes = cohortGene.get();\n            vm.optCohortGene = vm.optCohortGenes[0];\n\n            vm.addCohorts = function(){\n                vm.addCohortGene();\n                vm.addCohortPatient();\n            }\n\n            vm.addCohortGene = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortGene.add(cohort);\n                vm.optCohortGene = cohort;\n            }\n            vm.addCohortPatient = function(){\n                var cohortName = \"P+M \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n            }\n\n            var drawPatients = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortPatient.ids==\"*\"){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select();\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' };\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortPatient.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n            var drawGenes = function(){\n                var degmap = {};\n                var highlight = (vm.optCohortMode.name==\"Highlight\");\n                chart.startBatch();\n\n                if (vm.optCohortGene.ids==\"*\"){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                            degmap[ele.id()] = {display:'element'};\n                        }, degmap);\n                }\n                else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            if (this.ids.indexOf(ele.id())>=0){\n                                ele.select()\n                                this.degmap[ele.id()] = {display:'element'};\n                            }else{\n                                ele.deselect();\n                                this.degmap[ele.id()] = {display: (highlight) ? 'element' : 'none' }\n                            }\n                        }, {degmap:degmap, ids:vm.optCohortGene.ids} );\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            };\n\n            var drawMode = function(){\n                drawPatients();\n                drawGenes();\n            }\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optCohortPatient\", drawPatients );\n            $scope.$watch(\"vm.optCohortGene\", drawGenes );\n            $scope.$watch(\"vm.optCohortMode\", drawMode );\n\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: 0.0001,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 'data(sizeBdr)',\n                    'border-color': 'data(color)'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    geneClick.removeAll();\n                    patientClick.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch);\n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        $scope.$apply(function() {\n                            vm.patient = e.cyTarget.attr('patient');\n                            vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                                .map(function(item) { return item.data().id });\n                        });\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                // showDegreeOneConnected: function(e){\n                    \n                //     var degmap = {};\n                //     chart.off('select', 'node');\n                //     e.cyTarget.neighborhood('node').select();\n                //     e.cyTarget.neighborhood('edge')\n                //         .forEach(function(edge){\n                //             if (\n                //                 edge._private.source.selected() &&\n                //                 edge._private.target.selected()\n                //             ) this[edge.id()] = {display:'element'};\n                //         }, degmap);\n                //     chart.batchData(degmap);  \n                //     chart.on('select', 'node', {ui:true}, function(e){\n                //         behaviors.showDegreeOne(e);\n                //     });            \n                // },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                showOncoPrint: function(){\n                    /*\n                    var ds = vm.datasource;\n                    if (ds==\"DEMOdz\") return;\n                    if (ds.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = ds.substr(4) + \"_tcga\";\n                        var genes = e.cyTarget.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $scope.$apply(function() {\n                            $window.open(url);\n                        });\n                    }\n                    */\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n            {\n                name: 'Commands', //1° When \n                register: function(){},\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                }\n\n            },\n            {\n                name: 'Selection Highlight', //1° When \n                register: function(){\n\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n\n\n                    chart.on('select', 'node', {ui:true}, function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',{ui:true}, function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            {\n                name: 'Roll Over Highlight', //1° On \n                register: function() {\n                    events.click(function(e) {\n                        behaviors\n                            .showOncoPrint(e)\n                    });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }\n          ];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: '#FFE11A',\n                    state: 'Highlight'\n\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item){\n                var color, state;\n                switch (item.state){\n                    case \"Highlight\":\n                        item.state = \"Show\";\n                        color = '#3993fa';\n                        state = {'color':color, sizeEle:3};\n                        break;\n                    case \"Show\":\n                        item.state = \"Hide\";\n                        color = '#EEEEEE';\n                        state = {'color':'#FF0000', sizeEle:0 };\n                        break;\n                    default:\n                        item.state = \"Highlight\";\n                        color = item.color;\n                        state = {'color':color, sizeEle:3 };\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi){\n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple'}, {name:'Female', color:'green'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green'}, {name:'Old', color:'red'}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] } });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n            \n                            break;\n                        }\n                    });\n            });\n\n            vm.updateNode = function(item){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node.select();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = true;\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, $state, $timeout, $scope, moment, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var dtTable;\n            var cohortPatient = osApi.getCohortPatient();\n            var rawData;\n            var data;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.filter;\n            vm.colnames = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.optCohortPatients = cohortPatient.get();\n            vm.optCohortPatient = vm.optCohortPatients[0];\n            vm.search = \"\";\n\n            vm.addCohortPatient = function(){\n                var cohortName = \"Patient \" + moment().format('- H:mm - M/D/YY');\n                var cohortIds = dtTable._('tr', {\"filter\":\"applied\"}).map( function ( item ){ return item[0].toUpperCase() } );\n                var cohort = {name:cohortName, ids:cohortIds};\n                if (cohortIds.length==0) return;\n                cohortPatient.add(cohort);\n                vm.optCohortPatient = cohort;\n\n            }\n            $scope.$watch('vm.optCohortPatient', draw);\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n\n            function draw(){\n                if (angular.isUndefined(dtTable)) return;\n                dtTable.fnClearTable();\n                data = rawData.tbl;\n                if (vm.optCohortPatient.ids!=\"*\"){\n                    data = data.filter(function(d){\n                        return (vm.optCohortPatient.ids.indexOf(d[0])>=0)\n                    });\n                }\n                if (data.length==0) return;\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                $timeout(function() {\n                    vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                    vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                    vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                    vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                    dtTable.fnAddData(data);\n                    dtTable.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            //\"scrollY\": \"500px\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        draw();\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n            }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\">Explore</a> &nbsp;|&nbsp; <a href=\\\"\\\" ng-click=\\\"vm.explore(\\'metadata\\',dataset.id)\\\">Learn More</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Command Menu</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Select One <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommands\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-5 form-item\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-2 form-item\\\" style=\\\"text-align: center;padding-top:30px;\\\"></div><div class=\\\"col-sm-5 form-item\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Enter Patient Id\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Enter Gene Name\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Colors</label> <span ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}}\\\" ng-click=\\\"vm.updateNode(item); $event.stopPropagation();\\\">{{item.name}} (Select)</span></div><div class=\\\"col-sm-12 form-item\\\"><label>Edge Colors</label> <span ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"vm.updateEdge(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\" style=\\\"padding-bottom: 100px;\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF\\\"><div class=\\\"col-xs-12 legend\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">Patient Information</li><li>PID: {{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul><ul><li class=\\\"legend-section\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers &amp Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-sm-12 form-item\\\"><label>Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Gene Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortGene()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortGene.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortGenes\\\" ng-click=\\\"vm.optCohortGene=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Patient Cohort</h2></div><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Display Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohorts</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" style=\\\"width: 34px;display: inline-block; margin-right:0px; float:right\\\" ng-click=\\\"vm.addCohortPatient()\\\">+</button> <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"width: 220px;display: inline-block; margin-right:0px;\\\">{{vm.optCohortPatient.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortPatients\\\" ng-click=\\\"vm.optCohortPatient=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div><div class=\\\"timeline-legend-scale\\\">Days To {{vm.align.name}}</div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}