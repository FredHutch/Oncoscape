{"version":3,"sources":["scripts/app-b125911485.js"],"names":["angular","module","tray","TrayController","osApi","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","$inject","directive","restrict","templateUrl","scope","caption","content","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","$state","query","then","response","getDataSource","data","filter","item","indexOf","route","sort","a","b","name","explore","tool","go","datasource","disease","timelines","TimelinesController","osCohortService","$scope","$stateParams","$window","$document","moment","d3","_","resize","debounce","update","setBusy","scaleX","xZoom","yZoom","xTran","yTran","axis","selectBox","patientsAll","patientsFiltered","patientsDomain","heightRow","baseZoomX","baseZoomY","brushY","brushX","brushSelect","pc","getPatientCohort","setPatientCohort","selectedIds","ids","onPatientsSelect","patients","add","mouseOverRow","select","mouseOutRow","e","selected","timescales","valFn","val","log","abs","duration","asDays","timescale","filters","modes","mode","displayModes","displayMode","resetZoom","chart","d3ScrollY","call","move","d3ScrollX","elTip","elChart","d3Chart","append","rPatients","gPatients","rAxis","gAxis","updateData","align","events","map","toLowerCase","Infinity","forEach","patient","hash","hasOwnProperty","status","visible","length","id","offset","tsStart","event","tsStartAligned","tsEndAligned","tsEnd","domain","min","max","p","v","aTime","order","bTime","updateEvents","height","width","scaleLinear","range","nice","selectAll","remove","rows","exit","transition","delay","style","rowEnter","enter","d","i","on","cols","color","datum","html","Object","keys","reduce","c","selection","lowerIndex","floor","upperIndex","ceil","push","target","updateZoom","configSize","layout","css","left","right","daysToUnit","round","updateAxis","axisBottom","ticks","tickFormat","pow","configScrollbars","lower","upper","lowerPercent","upperPercent","deltaPercent","st","zoomIdentity","translate","scale","rescaleX","getLayout","innerHeight","innerWidth","clinical","colorFn","key","evtArray","start","unix","end","evtHash","groups","groupBy","prop","$on","survival","SurvivalController","cohorts","fromJson","toJson","getPatientCohorts","time","Date","all","show","colors","getSurvivalData","elXAxis","elYAxis","xScale","yScale","xAxis","yAxis","axisLeft","setScale","timelineDomain","osLayout","onSurvivalData","result","cmd","correlationId","draw","onMessage","addCurve","points","valueline","line","x","y","tick","sunburst","SunburstController","colorMap","charts","getColorMap","tags","union","object","barcharts","bars","arc","radius","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","w","window","init","text","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","t","attrTween","drawSunburst","g","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","innerRadius","outerRadius","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","concat","apply","value","bar","values","difference","tree","barNode","reverse","tag","tagIndex","drawTree","el","chartLayer","yMax","yMin","barWidth","chartHeight","nodes","node","each","PlsrController","osHistory","$sce","saveSelected","addGeneSelection","__data__","toUpperCase","setSelected","classed","isUndefined","xMax","brush","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","$watch","onGeneSelectionChange","linear","vectors","genes","bv","extent","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","lines","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","loadings","index","loadingNames","vectorNames","maxValue","PcaController","$q","d3Points","setColors","legendCaption","legendNodes","degMap","undefined","padding-left","d3Brush","minMax","xMin","scaleY","axisX","axisTop","axisY","d3xAxis","d3yAxis","osCohortServiceUpdate","dataset","type","search","selectColor","allIds","deselectColor","$fields","geneset","source","memo","tmp","fldr","has","sources","types","pcaTypes","pcaType","pc1","pc2","onPatientColorChange","showPanelColor","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","substr","endBatch","container","elements","minZoom","maxZoom","zoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","protocol","host","queryString","req","table","isDefined","encodeURIComponent","method","headers","apikey","factory","signals","localStorage","Signal","onGenesSelect","onCohortsChange","worker","Worker","addEventListener","msg","addPatientCohort","activePatientCohort","activeGeneCohort","allGeneCohorts","allPatientCohorts","onDataSource","postMessage","getItem","_patientColor","setPatientColor","getPatientMetric","setItem","importPatientCohort","delPatientCohort","obj","splice","S4","isArray","filterActivePatientCohort","bounds","getGeneMetric","getGeneCohorts","getGeneCohort","addGeneCohort","delGeneCohort","setGeneCohort","api","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","loginGuest","network","thumb","login","response_type","force","logout","prev","curr","oauth_proxy","redirect_uri","thumbnail","$","resolve","reject","beta","_dataSources","img","trim","_dataSource","_cpuApi","rt","hide","getDataSources","setDataSource","isObject","isString","serviceEndpoint","server","createMethod","fnName","charAt","slice","options","Promise","ajax","contentType","dataType","beforeSend","xhr","settings","xhrFields","withCredentials","crossDomain","done","split","get","methods","getEndpoint","getCpuApi","markers","MarkersController","setPatientCohortUpdate","cyChart","tmpdata","signal","over","out","edges","clear","removeAll","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","label","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","group","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","position","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","showPanelLayout","showPanelColorRna","optCommandModes","optCommandMode","hideModal","filterModelEdge","vals","optEdgeColors","edge","cn","edgeToggle","lockPatients","lockGenes","lock","unselectify","selectify","abv","count","results","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","toArray","weight","sizeNode","setOptions","items","getElementById","collection","patients_html","patients_resize","patients_delete","patients_insert","degrees","patients_layout","annotation","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","total","edgeCounts","mouseIsOver","geneColors","createOptions","f","opts","patientWeights","geneWeights","genesWeights","watches","firstTime","hydrate","needle","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","deselect","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","hydrateDisease","load","dehydrate","json","terminate","LoginController","networks","loginSuccess","landing","LandingController","getStarted","history","HistoryController","Handsontable","elGrid","htGrid","filteredData","queryMethod","queryStr","manualColumnResize","manualColumnMove","fixedRowsTop","fixedColumnsLeft","readOnly","contextMenu","columnSorting","sortIndicator","comments","allowEmpty","disableVisualSelection","currentRowClassName","autoColumnSize","samplingRatio","mergeCells","cohortMode","collections","o","exportCsv","getData","tmpColDelim","String","fromCharCode","tmpRowDelim","colDelim","rowDelim","csv","rval","cval","join","encodedUri","encodeURI","open","filterData","patient_ID","loadData","render","setData","cr","instance","td","row","col","cellProperties","console","innerHTML","columns","field","displayName","unshift","renderer","startCols","setColumns","setSize","rowRenderer","TextRenderer","exeRender","colHeaders","cells","cellProps","updateSettings","resetFilter","onPatientSelect","heatmap","HeatmapController","rotated","colLabels","rowLabels","textAnchor","textX","labels","dendrogram","xPos","yPos","colDendrogram","rowDendrogram","cluster","separation","l","edgePar","dendrG","transform","brushend","sourceEvent","invert","coords","minValue","colorScheme","dim","grid","boxW","boxH","boxes","gridlines","colorSchemes","scales","dendrogramClusters","dendrogramCluster","args","colDend","rowDend","colmap","xaxis","yaxis","$limit","loadHeatmap","kcol","krow","getHeatmap","hmWidth","hmHeight","matrix","header","HeaderController","$rootScope","datasets","allCohorts","importPatientIds","showImport","showTools","showDatasets","showCohorts","showHelp","showLogout","currentTool","onStateChangeStart","toState","loadDataset","collapse","loadTool","logoutClick","transitionTo","DatasourceController","compareCluster","CompareClusterController","plot","rect","cell","h","xDomain","yDomain","create","clusters","category","molecular","followUp-v1p0","drug","newTumor","otherMalignancy-v4p0","calculated","allClusters","pop","_brushes","destory","rv","parseInt","xVal","yVal","colorPanel","ColorPanelController","colorScales","colorScale","colorBins","colorBin","colorOptions","colorOption","tbl","subtype","optPatientColors","setColor","close","aname","isNaN","bname","setGeneColor","geneColor","match","op","gene","message","symbols","$in","s","hugo","msgs","sortBy","Removed","Converted","alert","fn","lookup","pids","pid","iv","output","scaleQuantile","scaleQuantize","quantiles","parseFloat","toFixed","zip","names","cohortMenu","CohortMenuController","patientChartOption","cohortName","addCohort","setCohort","removeCohort","editItem","editCohort","edit","showPatientHistory","onStateChange","elTabPatients","elTabGenes","showGeneHistory","barClick","bins","histRange","hist","sChart","sElXAxis","sElYAxis","sLayout","patientTotal","patientSelected","patientChartOptions","features","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","j","rangeBand","n","yStackMax","bumpLayer","bump","z","exp","m","stack","layers","layer","margin","top","bottom","rangeRoundBands","tickSize","tickPadding","orient","property","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","error","Error","off","toParams","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","config","constant","hello","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-b125911485.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n\n            var vm = this;\n            //osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n            osApi.query(\"lookup_oncoscape_tools\").then(function(response) {\n                var tools = osApi.getDataSource().tools;\n                vm.tools = response.data.filter(function(item){\n                    return (tools.indexOf(item.route)!=-1);\n                }).sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n            });\n\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osCohortService, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // Data\n            var patientsAll = [];\n            var patientsFiltered = [];\n            var patientsDomain = [];\n            var scaleX;\n            var heightRow = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var axis;\n            var brushY = d3.brushY();\n            var brushX = d3.brushX();\n            var brushSelect = d3.brushY();\n            var selectBox;\n            \n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\");\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var onPatientsSelect = function(patients) {\n                selectedIds = patients.ids;\n                vm.update();\n            }\n            osCohortService.onPatientsSelect.add(onPatientsSelect);\n\n            // var setSelected = function() {\n            //     selectedIds = chart.bars.selectAll(\".timeline-selected\")[0].map(function(p) {\n            //         return p.__data__.id;\n            //     })\n            //     osCohortService.setPatientCohort(selectedIds, \"Timelines\");\n            // }\n\n            var mouseOverRow = function(){\n                d3.select(this).attr('fill', \"#000\")\n            }\n            var mouseOutRow = function(e){\n                d3.select(this).attr('fill', e.selected ? \"#DDD\" : \"#FFF\");\n            }\n        \n\n            // View Model\n            var vm = (function(vm) {\n                vm.timescales = [{\n                    name: 'Log',\n                    valFn: function(val) {\n                        return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2)\n                    }\n                }, {\n                    name: 'Linear',\n                    valFn: function(val) {\n                        return moment.duration(val * 1000).asDays()\n                    }\n                }];\n                vm.timescale = vm.timescales[0];\n                vm.filters = [{\n                    name: 'Alive + Dead'\n                }, {\n                    name: 'Only Alive'\n                }, {\n                    name: 'Only Dead'\n                }];\n                vm.filter = vm.filters[2];\n                vm.modes = [{\n                    name: \"Highlight\"\n                }, {\n                    name: \"Filter\"\n                }];\n                vm.mode = vm.modes[0];\n                vm.displayModes = [{\n                    name: 'Selected Patients'\n                }, {\n                    name: 'All Patients'\n                }];\n                vm.displayMode = vm.displayModes[0];\n                vm.datasource = osApi.getDataSource();\n                return vm;\n            })(this);\n\n            vm.resetZoom = function() {\n                selectedIds = [];\n                osCohortService.setPatientCohort([], \"All Patients\");\n                chart.d3ScrollY.call(brushY.move, null);\n                chart.d3ScrollX.call(brushY.move, null);\n                vm.update();\n\n            };\n\n            // Chart Container Components\n            var chart = (function(angular, d3) {\n                var elTip = null;\n                var elChart = d3.select(\".timelines-content\");\n\n                var d3Chart = elChart.append(\"svg\");\n                d3Chart.attr(\"class\", \"timeline-chart\");\n\n                var d3ScrollY = elChart.append(\"svg\");\n                d3ScrollY.attr(\"class\", \"timeline-scroll-y\");\n\n                var d3ScrollX = elChart.append(\"svg\");\n                d3ScrollX.attr(\"class\", \"timeline-scroll-x\");\n\n                var rPatients = d3Chart.append(\"g\");\n                rPatients.attr(\"class\", \"timeline-patients-hitarea\");\n                var gPatients = d3Chart.append(\"g\");\n\n                selectBox = rPatients.append(\"rect\");\n                selectBox.attr(\"class\", \"timeline-select\");\n\n\n                var rAxis = d3Chart.append(\"rect\");\n                rAxis.attr(\"class\", \"timeline-axis-bg\");\n                var gAxis = d3Chart.append(\"g\");\n\n\n                return {\n                    elChart: angular.element(\".timelines-content\"),\n                    elTip: elTip,\n                    d3Chart: d3Chart,\n                    d3ScrollY: d3ScrollY,\n                    d3ScrollX: d3ScrollX,\n                    gPatients: gPatients,\n                    rPatients: rPatients,\n                    gAxis: gAxis,\n                    rAxis: rAxis\n                };\n\n            })(angular, d3);\n\n            var updateData = function() {\n\n                // Retrieve State\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Event Data\n                patientsFiltered = patientsAll;\n\n                // Filter\n                patientsDomain = [Infinity, -Infinity];\n                patientsFiltered.forEach(function(patient) {\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                    } else {\n\n                        // Filter Alive + Dead\n                        var status = patient.hash[\"Status\"].data.status;\n                        if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                            patient.visible = false;\n                        } else {\n                            if (vm.displayMode.name == \"Selected Patients\" && selectedIds.length > 0) {\n                                patient.visible = (selectedIds.indexOf(patient.id) != -1);\n                            } else {\n                                patient.visible = true;\n                            }\n                            if (patient.visible) {\n                                this.offset = 0 - patient.hash[this.align].tsStart;\n                                // Filter Events\n                                patient.events.forEach(function(event) {\n                                    event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                                    // Calculate Start + End Based On Alignment\n                                    if (event.visible) {\n                                        event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                                        event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                                        this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                                        this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                                    }\n                                }, this);\n                            }\n                        }\n                    }\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Remove Patients That Do Not Have Alignment Property\n                patientsFiltered = patientsFiltered.filter(function(p) {\n                    return p.visible;\n                });\n\n                // Set Selected\n                patientsFiltered.forEach(function(v) {\n                    v.selected = (selectedIds.indexOf(v.id) != -1);\n                });\n\n                // Sort Patients\n                patientsFiltered = patientsFiltered.sort(function(a, b) {\n                    \n                    if (a.status == b.status) {\n                        \n                        var aTime = a.events.filter(function(e){ return (e.name==sort && e.order==1)})[0].tsStartAligned;\n                        var bTime = b.events.filter(function(e){ return (e.name==sort && e.order==1)})[0].tsStartAligned;\n\n                        \n                        \n                        if (aTime > bTime) return 1;\n                        if (bTime > aTime) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            };\n\n            var updateEvents = function(height, width) {\n                height -= 70;\n                width -= 20+15;\n\n                // Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n\n                chart.gPatients.selectAll(\"*\").remove();\n\n                var rows = chart.gPatients.selectAll(\"g.patient\").data(patientsFiltered);\n                rows.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n                var rowEnter = rows.enter()\n                    .append('g')\n                    .attr(\"class\",\"patient\")\n                    .attr('transform', function(d, i) {\n                        return \"translate(0,\" + (i * heightRow) + \")\";\n                    });\n\n                rowEnter.append(\"rect\")\n                    .attr('class','highlight')\n                    .attr('height', heightRow+1)\n                    .attr('width',width)\n                    .attr('fill',function(d){\n                        return d.selected ? \"#DDD\" : \"#FFF\";\n                    })\n                    .on('mouseover', mouseOverRow)\n                    .on('mouseout', mouseOutRow)\n                    \n            \n               \n                var cols = rowEnter.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) {\n                        return v.visible;\n                    });\n                });\n                cols.exit().remove();\n                cols.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 3);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n                    .on(\"mouseover\", function() {\n                        var datum = d3.select(this).datum();\n\n                        if (datum.html == null) {\n                            var data = datum.data;\n                            datum.html =\n                                Object.keys(data).reduce(function(p, c) {\n                                    p.html += \"<li>\" + c + \":\" + p.data[c] + \"</li>\";\n                                    return p;\n                                }, {\n                                    html: \"<b>\" + datum.name + \"</b>\",\n                                    data: data\n                                }).html;\n                        }\n                        if (chart.elTip == null) chart.elTip = angular.element(\"#timelines-tip\");\n                        chart.elTip.html(datum.html);\n\n                    }).on(\"mouseout\", function() {\n                        chart.elTip.html(\"<b>Rollover Event For Details</b>\");\n                    });\n                cols\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n\n                // Brush\n                chart.rPatients.call(brushSelect);\n                brushSelect.on(\"end\", function() {\n                    if (d3.event.selection == null) {\n                        return;\n                    }\n                    var lowerIndex = Math.floor(d3.event.selection[0] / yZoom / 20);\n                    var upperIndex = Math.ceil(d3.event.selection[1] / yZoom / 20);\n                    var ids = [];\n                    for (var i = lowerIndex; i <= upperIndex; i++) {\n                        ids.push(patientsFiltered[i].id);\n                    }\n                    osCohortService.setPatientCohort(ids, \"All Patients\");\n                    chart.rPatients.call(d3.event.target.move, null);\n                });\n            };\n\n            var updateZoom = function(height) {\n                height -= 70;\n                baseZoomY = height / (patientsFiltered.length * heightRow);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                chart.gPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            };\n\n            var configSize = function(height, width, layout) {\n                height -= 70;\n                width -= 20;\n                selectBox.attr(\"height\", height).attr(\"width\", 15).attr(\"transform\", function(){\n                    return \"translate(\" + (width-15)+ \",0)\";\n                });\n                chart.elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.d3ScrollY.attr(\"height\", height);\n                chart.d3ScrollX.attr(\"width\", width-15);\n                chart.d3Chart.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.rPatients.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.gAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                });\n                chart.rAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                }).attr(\"width\", width).attr(\"fill\", \"#FFF\");\n            };\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n            var updateAxis = function() {\n                axis = d3.axisBottom(scaleX).ticks(7);\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                chart.gAxis.call(axis);\n            };\n\n            var configScrollbars = function(height, width) {\n                chart.d3ScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height - 70;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (20 * patientsFiltered.length * yZoom) * -lowerPercent;\n                        } else {\n\n                            if (yZoom == baseZoomY && yTran == 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            chart.d3ScrollY.call(brushY.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                chart.d3ScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran == 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            chart.d3ScrollX.call(brushX.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        var st = d3.zoomIdentity.translate(xTran).scale(xZoom).rescaleX(scaleX);\n                        var axis = d3.axisBottom(st).ticks(7);\n                        if (vm.timescale.name == 'Linear') {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(d);\n                            });\n                        } else {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                            });\n                        }\n                        chart.gAxis.call(axis);\n\n                    })\n                );\n            };\n\n            vm.update = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                updateData();\n                configSize(height, width, layout);\n                configScrollbars(height, width);\n                updateEvents(height, width);\n                updateZoom(height, width);\n                updateAxis(height, width);\n            }\n\n            osApi.onResize.add(vm.update);\n\n            function resize() {\n                _.debounce(vm.update, 300);\n            }\n            angular.element($window).bind('resize', resize);\n\n            /* Init Data */\n            osApi.setBusy(true);\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start != null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end == null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end == null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            v.order = 1;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        p[c.name] = c;\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n\n\n                data.forEach(function(patient){\n                    var groups = _.groupBy(patient.events,'name');\n                    var keys = Object.keys(groups).filter(function(prop){\n                        return (this[prop].length>1);\n                    }, groups);\n                    keys.forEach(function(v){\n                        var i = 1;\n                        patient.events\n                        .filter(function(e){ return e.name==v; })\n                        .sort(function(a,b){\n                            return a.tsStart - b.tsStart;\n                        }).forEach(function(v){\n                            v.order = i;\n                            i++;\n                        })\n                    })\n                });\n\n\n                patientsAll = data.filter(function(v) {\n                    try {\n                        v.status = v.hash[\"Status\"].data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                    return false;\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n                vm.update();\n                osApi.setBusy(false);\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osApi.onResize.remove(vm.update);\n                angular.element($window).unbind('resize', resize);\n                brushY.on(\"end\", null);\n                brushX.on(\"end\", null);\n\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            var cohorts = angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            } else {\n                if (pc.ids.length > 0) {\n                    cohorts.push({\n                        id: \"Last Selection\",\n                        ids: pc.ids,\n                        name: \"Last Selection\",\n                        time: new Date()\n                    });\n                }\n            }\n            // var selectedIds = (pc==null) ? [] : pc.ids;\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohorts = cohorts;\n\n            vm.all = {\n                show: true,\n                color: '#000'\n            };\n\n            var colors = [\"#E91E63\", \"#673AB7\", \"#2196F3\", \"#00BCD4\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\"]; //['#004358','#800080','#BEDB39','#FD7400','#1F8A70'];\n            for (var i = 0; i < vm.cohorts.length; i++) {\n                vm.cohorts[i].show = true;\n                vm.cohorts[i].color = colors[i];\n            }\n\n            vm.toggle = function() {\n                osCohortService.getSurvivalData(vm.cohorts.filter(function(c) {\n                    return c.show;\n                }), vm.all.show, \"SurvivalController\");\n            };\n\n            // Create D3 Elements\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n\n            // Create D3 Axis Objects + Layout\n            var data = {};\n\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n\n            var setScale = function(timelineDomain) {\n                var osLayout = osApi.getLayout();\n\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - 60;\n                layout.height = $window.innerHeight - 160;\n                angular.element(\"#survival-chart\").css(\"margin-left\", osLayout.left + 20);\n                elChart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", layout.height);\n\n                layout.xScale = d3.scaleLinear()\n                    .domain(timelineDomain)\n                    .range([50, layout.width]);\n\n                layout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([layout.height - 50, 0]);\n\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n\n                elYAxis.attr(\"transform\", \"translate(50, 10)\").call(layout.yAxis);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.yScale(0) + 10) + \")\").call(layout.xAxis);\n            }\n\n            var onSurvivalData = function(result) {\n                if (result.data.cmd == \"getSurvivalData\") {\n                    if (result.data.data.correlationId == \"SurvivalController\") {\n                        data = result.data.data;\n                        draw();\n                    }\n                }\n            }\n            osCohortService.onMessage.add(onSurvivalData);\n\n            var addCurve = function(points) {\n\n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) {\n                        return layout.xScale(d[0]);\n                    })\n                    .y(function(d) {\n                        return layout.yScale(d[2]) + 10;\n                    });\n\n                elChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", 1.5)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"d\", valueline(points.data.line))\n                    .on(\"mouseover\", function() {\n                        d3.select(this).attr(\"stroke-width\", 3)\n                    })\n                    .on(\"mouseout\", function() {\n                        d3.select(this).attr(\"stroke-width\", 1)\n                    });\n\n                for (var i = 0; i < points.data.tick.length; i++) {\n                    elChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", .5)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", layout.yScale(points.data.tick[i][2]) + 5)\n                        .attr(\"y2\", layout.yScale(points.data.tick[i][2]) + 10);\n                }\n            }\n\n            var draw = function() {\n\n                // Clear Lines\n                elChart.selectAll(\".line\").remove();\n\n                // Set Scale\n                setScale([data.min, data.max]);\n\n                // Draw Lines\n                for (var i = 0; i < data.cohorts.length; i++) {\n                    addCurve(data.cohorts[i]);\n                }\n                osApi.setBusy(false);\n\n            };\n\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onMessage.remove(onSurvivalData);\n\n            });\n\n            // Load Data\n            vm.toggle();\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n            \n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v){\n                                return {name:v, color:colorMap[v]};\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function(){\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v){ return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n                    \n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n  \n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n                    \n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var osCohortServiceUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (osCohortServiceUpdate) {\n                    selectedIds = patients.ids;\n                    setSelected();\n                } else {\n                    osCohortServiceUpdate = true;\n                }\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Points.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n         \n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model\n            var vm = (function(vm, osApi) {\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                vm.selectColor = function(e){\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d){\n                         if (ids.indexOf(d.id)!=-1) {\n                             d3.select(this).classed(\"pca-node-selected\", true);\n                             allIds.push(d.id);\n                         }else{\n                             if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                         }\n                    });\n                    osCohortService.setPatientCohort(allIds, \"PCA\")\n                    \n\n                }\n                vm.deselectColor = function(e){\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d){\n                        if (ids.indexOf(d.id)!=-1) {\n                            d3.select(this).classed(\"pca-node-selected\", false);\n                        }else{\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osCohortService.setPatientCohort(allIds, \"PCA\")\n                }\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        $fields: ['type', 'geneset', 'source']\n                    })\n                    .then(function(response) {\n                     \n                        var data = response.data.map(function(v){\n                            return {a:v.geneset,b:v.source,c:v.type}\n                        });\n                        \n                        var result = _.reduce(data,function(memo, val){ \n                            var tmp = memo;\n                                _.each(val, function(fldr){\n                                    if(!_.has(tmp, fldr)){\n                                        tmp[fldr] = {}\n                                    }\n                                    tmp = tmp[fldr]\n                                });\n                            return memo\n                        },{});\n                        vm.geneSets = Object.keys(result).map(function(geneset){return {name: geneset, sources:\n                            Object.keys(result[geneset]).map(function(source){ return {name:source, types:\n                                Object.keys(result[geneset][source]).map(function(type) { return {name:type\n                                }})\n                            }})\n                        }});\n\n                      \n                        vm.geneSet = vm.geneSets[0];\n                    });\n                return vm;\n\n            })(this, osApi);\n\n            // Updates PCA Types When Geneset Changes\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet==null) return;\n                vm.sources = vm.geneSet.sources;\n                vm.source = vm.sources[0];\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet==null) return;\n                vm.pcaTypes = vm.source.types;\n                vm.pcaType = vm.pcaTypes[0];\n            });\n\n            // Fetches PCA Data + Calculates Min Max for XYZ\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (geneset == null) return;\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        type: vm.pcaType.name,\n                        source: vm.source.name\n                    })\n                    .then(function(response) {\n                        vm.pc1 = response.data[0].pc1;\n                        vm.pc2 = response.data[0].pc2;\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: response.data[0].data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n\n                        draw();\n                    });\n            });\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (this[v.id] != undefined) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 3)\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", .8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(5);\n                axisY = d3.axisLeft().scale(scaleY).ticks(5);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + scaleY(0) + \")\")\n                    .call(axisX)\n                    .append(\"text\")\n                    .attr(\"x\", 50)\n                    .attr(\"y\", 15)\n                    .text(\"PC1\");\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + scaleX(0) + \", 0)\")\n                    .call(axisY)\n                    .append(\"text\")\n                    .attr(\"y\", 55)\n                    .attr(\"x\", 25)\n                    .text(\"PC2\");\n\n                // Brush\n                var brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osCohortService.setPatientCohort([], \"PCA\");\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n         \n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n\n                        osCohortService.setPatientCohort(ids, \"PCA\");\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush)\n\n                setSelected();\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osCohortService, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            // History Integration\n            /*\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            */\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            }\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                    container: elChart,\n                    elements: markersNetwork.elements,\n                    style: getStyle(),\n                    minZoom: .1,\n                    maxZoom: 5,\n                    zoom: 0.2,\n                    wheelSensitivity: .5,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                })\n\n                //.on('select', 'node', _.debounce(saveSelected, 300))\n                .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            //vm.frame = $sce.trustAsResourceUrl(\"https://resources.sttrcancer.org/markers-patients\");\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    })\n\n                // Register History Component\n                /*\n                osHistory.onGeneSelectionChange.add(function(selection){\n                    selectedIds = selection.ids;\n                    setSelected();\n                });\n                setSelected();\n                */\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \"/api/\";\n         url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osCohortService', osCohortService);\n\n    /** @ngInject */\n    function osCohortService(osApi, moment, signals, localStorage) {\n\n        var onMessage = new signals.Signal();\n        var onPatientsSelect = new signals.Signal();\n        var onGenesSelect = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        var worker = new Worker(\"app/components/oncoscape/oncoscape.cohort.service.worker.js\");\n        worker.addEventListener('message', function(msg) {\n            if (msg.data.cmd == \"filterPatients\") {\n                setPatientCohort(msg.data.data, \"Filter\")\n            }else if (msg.data.cmd == \"validatePatientIds\"){\n                setPatientCohort(msg.data.data, \"Import\");\n                addPatientCohort();\n            }else {\n                onMessage.dispatch(msg);\n            }\n        }, false);\n\n        var allGeneCohorts = [],\n            activePatientCohort,\n            activeGeneCohort;\n\n        var allPatientCohorts = [];\n        var colors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70'];\n        osApi.onDataSource.add(function(datasource) {\n\n            worker.postMessage({\n                cmd: \"setPatientDataSource\",\n                data: datasource.clinical.patient\n            });\n\n            allPatientCohorts = localStorage.getItem(osApi.getDataSource().disease + \"PatientCohorts\");\n            allPatientCohorts = (allPatientCohorts == null) ? [] : angular.fromJson(allPatientCohorts);\n            for (var i = 0; i < allPatientCohorts.length; i++) {\n                allPatientCohorts[i].color = colors[i];\n            }\n            onCohortsChange.dispatch(allPatientCohorts);\n        });\n\n        var _patientColor = {\n            name: 'xxx',\n            data: [{\n                name: 'Patient',\n                color: '#1396DE',\n                show: true\n            }]\n        };\n\n\n        var setPatientColor = function(val) {\n            _patientColor = val;\n            onPatientColorChange.dispatch(_patientColor);\n        }\n\n        var getSurvivalData = function(cohorts, all, correlationId) {\n            worker.postMessage({\n                cmd: \"getSurvivalData\",\n                data: {\n                    cohorts: cohorts,\n                    all: all,\n                    correlationId: correlationId\n                }\n            });\n        };\n\n        var getPatientMetric = function() {\n            if (!activePatientCohort.ids) return;\n            worker.postMessage({\n                cmd: \"getPatientMetric\",\n                data: activePatientCohort.ids\n            });\n        };\n\n        var getPatientCohorts = function() {\n            return allPatientCohorts;\n        };\n        var getPatientCohort = function() {\n            return activePatientCohort;\n        };\n        var addPatientCohort = function() {\n            if (allPatientCohorts.indexOf(activePatientCohort) != -1) return;\n            activePatientCohort.color = colors[allPatientCohorts.length];\n            allPatientCohorts.push(activePatientCohort);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n        var importPatientCohort = function(ids){\n            worker.postMessage({\n               cmd: \"validatePatientIds\",\n               data: ids \n            });\n        }\n\n        var delPatientCohort = function(obj) {\n            allPatientCohorts.splice(allPatientCohorts.indexOf(obj), 1);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n\n        var setPatientCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activePatientCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onPatientsSelect.dispatch(activePatientCohort);\n        };\n        var filterActivePatientCohort = function(bounds, prop, type) {\n            worker.postMessage({\n                cmd: \"filterPatients\",\n                data: {\n                    ids: activePatientCohort.ids,\n                    type: type,\n                    bounds: bounds,\n                    prop: prop\n                }\n            });\n        }\n\n        var getGeneMetric = function() {};\n        var getGeneCohorts = function() {\n            return allGeneCohorts;\n        };\n        var getGeneCohort = function() {\n            return activeGeneCohort;\n        };\n        var addGeneCohort = function() {\n            allGeneCohorts.push(activeGeneCohort);\n        };\n        var delGeneCohort = function(obj) {\n            allGeneCohorts.splice(allGeneCohorts.indexOf(obj), 1);\n        };\n        var setGeneCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activeGeneCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onGenesSelect.dispatch(activeGeneCohort);\n        };\n\n        var api = {\n            onMessage: onMessage,\n            onPatientsSelect: onPatientsSelect,\n            onCohortsChange: onCohortsChange,\n            onPatientColorChange: onPatientColorChange,\n            getPatientCohorts: getPatientCohorts,\n            getPatientCohort: getPatientCohort,\n            setPatientCohort: setPatientCohort,\n            addPatientCohort: addPatientCohort,\n            delPatientCohort: delPatientCohort,\n            importPatientCohort: importPatientCohort,\n            getPatientMetric: getPatientMetric,\n            onGenesSelect: onGenesSelect,\n            getGeneCohorts: getGeneCohorts,\n            getGeneCohort: getGeneCohort,\n            setGeneCohort: setGeneCohort,\n            addGeneCohort: addGeneCohort,\n            delGeneCohort: delGeneCohort,\n            getGeneMetric: getGeneMetric,\n            getSurvivalData: getSurvivalData,\n            setPatientColor: setPatientColor,\n            filterActivePatientCohort: filterActivePatientCohort\n        };\n\n        return api;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n                id: 'guest',\n                name: 'Guest',\n                icon: 'fa fa-user'\n            },{\n                id: 'google',\n                name: 'Google',\n                icon: 'fa fa-google-plus',\n                key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }];\n            \n            /*}, {\n                id: 'facebook',\n                name: 'Facebook',\n                icon: 'fa fa-facebook',\n                key: '142281766208909',\n                mode: 'implicit'\n            }, {\n                id: 'github',\n                name: 'GitHub',\n                icon: 'fa fa-github-alt',\n                key: '78b5dbe2ba756151169e',\n                mode: 'explicit'\n            },{\n                id: 'instagram',\n                name: 'Instagram',\n                icon: 'fa fa-instagram',\n                key: '3578c1b7c8c248c6ba80784b9ede0c52',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }, {\n                id: 'twitter',\n                name: 'Twitter',\n                icon: 'fa fa-twitter',\n                key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n                mode: 'implicit'\n            }, {\n                id: 'windows',\n                name: 'Win Live',\n                icon: 'fa fa-windows',\n                key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n                mode: 'implicit'\n            }, {\n                id: 'dropbox',\n                name: 'Dropbox',\n                icon: 'fa fa-dropbox',\n                key: 'dropbox',\n                mode: 'implicit'\n            }, {\n                id: 'flickr',\n                name: 'Flickr',\n                icon: 'fa fa-flickr',\n                key: '',\n                mode: 'implicit'\n            }*/\n        \n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var loginGuest = function(){\n            user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n            osApi.init().then(function() {\n                onLogin.dispatch();\n            });\n        }\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            loginGuest: loginGuest,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, $) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n        // DataSources\n        var _dataSources;\n        var _dataSource;\n        var getDataSources = function() {\n            return _dataSources;\n        };\n        var getDataSource = function() {\n            return _dataSource;\n        };\n        var setDataSource = function(value) {\n            if (angular.isObject(value)) {\n                if (_dataSource != value) {\n                    _dataSource = value;\n                    onDataSource.dispatch(_dataSource);\n                }\n            } else if (angular.isString(value)) {\n                if (_dataSource.disease != value) {\n                    if (_dataSource != value) {\n                        _dataSource = _dataSources.filter(function(v) {\n                            return v.disease == this.key\n                        }, {\n                            key: value\n                        })[0]\n                        onDataSource.dispatch(_dataSource);\n                    }\n                }\n            }\n        };\n\n        // Initialize\n        function init() {\n            return $q(function(resolve, reject) {\n                query(\"lookup_oncoscape_datasources\", {\n                    beta: false\n                }).then(function(response) {\n                    //query(\"lookup_oncoscape_datasources\").then(function(response) {\n                    _dataSources = response.data\n                        .filter(function(d) {\n                            return angular.isDefined(d.img)\n                        })\n                        .map(function(d) {\n                            d.name = d.name.trim();\n                            return d;\n                        })\n                        .sort(function(a, b) {\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                    resolve(_dataSources);\n                }, reject);\n            });\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        // Returns Promise\n        var _cpuApi;\n        (function(serviceEndpoint) {\n            var server = serviceEndpoint.substring(0, serviceEndpoint.replace(\"//\", \"--\").indexOf(\"/\"));\n            var createMethod = function(obj, method) {\n                var fnName = 'get' + method.charAt(0).toUpperCase() + method.slice(1).toLowerCase();\n                obj[fnName] = function(options) {\n                    return new Promise(function(resolve) {\n                        $.ajax({\n                            url: serviceEndpoint + \"/\" + method,\n                            type: \"POST\",\n                            data: angular.toJson(options),\n                            contentType: \"application/json; charset=utf-8\",\n                            dataType: \"text\",\n                            beforeSend: function(xhr, settings) {\n                                settings.xhrFields = settings.xhrFields || {};\n                                settings.xhrFields.withCredentials = false;\n                                settings.crossDomain = true;\n                            }\n                        }).done(function(response) {\n                            response = response.split(\"\\n\");\n                            var url = server + response[0];\n                            $.ajax({\n                                url: url,\n                                type: \"GET\",\n                                crossDomain: true,\n                                beforeSend: function(xhr, settings) {\n                                    settings.xhrFields = settings.xhrFields || {};\n                                    settings.xhrFields.withCredentials = false;\n                                    settings.crossDomain = true;\n                                }\n                            }).done(function(response) {\n                                resolve(response);\n                            });\n                        });\n                    });\n                }\n            }\n            return new Promise(function(resolve) {\n                $.get(serviceEndpoint).then(function(methods) {\n                    var api = methods.split(\"\\n\").reduce(function(obj, method) {\n                        if (method != \"\") createMethod(obj, method)\n                        return obj;\n                    }, {})\n                    api.getEndpoint = function() {\n                        return serviceEndpoint;\n                    }\n                    resolve(api);\n                });\n            });\n        })(\"https://oncoscape-test.fhcrc.org/ocpu/library/oncoscape/R\").then(function(v) {\n            _cpuApi = v;\n        });\n        var getCpuApi = function(){ return _cpuApi; };\n\n        return {\n            init: init,\n            query: query,\n            getCpuApi: getCpuApi,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            getLayout: getLayout,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            setBusy: setBusy\n        }\n    }\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, osCohortService, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function () {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function () {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function (elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            //'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            //'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"telomere\"]',\n                        style: {\n                            'background-color': \"#3993fa\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            //'border-opacity': .3,\n                            'border-width': 5\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"right\",\n                            'text-margin-x': 5,\n                            'color': '#000',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            'border-width': 5\n                            //'background-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"annotation-text\"]',\n                        style: {\n                            'font-size': '400px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFF',\n                            'height': '0px',\n                            'width': '0px',\n                            'shape': 'round',\n                            'label': \"data(label)\",\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: .5,\n                    //motionBlur: true,\n                    //motionBlurOpacity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: .05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function () {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function (result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function (key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#3993fa\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                            chromosomes: chromosomes,\n                            elements: elements\n                        });\n                    cyChart.add(elements);\n                });\n            })()\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function (vm, osApi) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.hideModal = function () {\n                    angular.element('#modalEdge').modal('hide');\n                }\n                vm.filterModelEdge = function () {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function (c) {\n                            return c.show;\n                        })\n                        .map(function (c) {\n                            return c.id\n                        });\n                    var edges = tmpdata.edges.filter(function (edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                            vals: vals\n                        });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function () {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function (item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function (node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function (item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function (node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function (type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function (node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function (node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = [{\n                    name: 'mutation',\n                    abv: 'm',\n                    show: true,\n                    color: '#9C27B0',\n                    class: 'switch-mutation',\n                    count: '',\n                    id: 0\n                }, {\n                    name: 'cnGain.1',\n                    abv: 'cnG1',\n                    show: true,\n                    color: '#03A9F4',\n                    class: 'switch-cnG1',\n                    count: '',\n                    id: 1\n                }, {\n                    name: 'cnGain.2',\n                    abv: 'cnG2',\n                    show: true,\n                    color: '#3F51B5',\n                    class: 'switch-cnG2',\n                    count: '',\n                    id: 2\n                }, {\n                    name: 'cnLoss.1',\n                    abv: 'cnL1',\n                    show: true,\n                    color: '#FF9800',\n                    class: 'switch-cnL1',\n                    count: '',\n                    id: -1\n                }, {\n                    name: 'cnLoss.2',\n                    abv: 'cnL2',\n                    show: true,\n                    color: '#F44336',\n                    class: 'switch-cnL2',\n                    count: '',\n                    id: -2\n                }];\n\n                // Populate Dropdowns + Draw Chromosome\n                $q.all([\n                    osApi.query(\"render_chromosome\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'cluster',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'color',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    })\n                ]).then(function (results) {\n\n                    vm.optGeneSets = results[0].data;\n\n\n                    var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                    if (data === null) {\n                        if (osApi.getDataSource().disease == \"brain\") {\n                            vm.optGeneSet = vm.optGeneSets.filter(function (v) {\n                                return v.name == \"Marker genes 545\";\n                                //  \"TCGA pancan mutated\";\n                                //  \"Marker genes 545\"; \n                            })[0]\n                        } else {\n                            vm.optGeneSet = vm.optGeneSets.filter(function (v) {\n                                return v.name == \"TCGA pancan mutated\";\n                            })[0]\n                        }\n                    }\n                    else {\n                        data = angular.fromJson(data);\n                        vm.optGeneSet = angular.fromJson(data).geneset;    // This is getting parsed x2.  Need to revisit\n                    }\n\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                });\n                vm.resize = function () {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi);\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function (cyChart, vm) {\n                var reset = function () {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function () {\n                    cyChart.fit(cyChart.$(':selected'), 50)\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function () {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([.005, 20]).range([5, 1])\n            var nodeScale = d3.scaleLog().domain([.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([.01, 2]);\n            var resizeNodes = function () {\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').toArray()\n                        .reduce(function (p, c) {\n                            var w = c.data().weight;\n                            p[0] = Math.min(p[0], w);\n                            p[1] = Math.max(p[1], w);\n                            return p;\n                        }, [Infinity, -Infinity])\n                );\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < .375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function (node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                        sizeNode: sizeNode,\n                        sizeBdr: sizeBdr,\n                        sizeLbl: sizeLbl,\n                        scale: expressionScale\n                    });\n            }\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function (cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function (msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function (selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length == 0) return;\n                    var items = data.map(function (item) {\n                        return this.getElementById(item);\n                    }, cyChart);\n                    try {\n                        cyChart.collection(items).remove();\n                    } catch (e) { }\n                };\n                cmd.patients_html = function () {\n\n                };\n                cmd.patients_resize = function () {\n\n                };\n                cmd.patients_delete = function (data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function (data) {\n                    cyChart.startBatch();\n                    //var signals = signal.patients;\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function (node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 100\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n\n                    //Initial Node Selection\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function (node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                                pc: pc\n                            });\n                        cyChart.endBatch();\n                        vm.zoom.reset()\n                        cyChart.center();\n                        cyChart.fit(cyChart.nodes(), 400);\n                    }\n\n\n                };\n                cmd.patients_layout = function (data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text'],edge[nodeType='annotation-line'],node[nodeType='annotation-point']\").remove();\n                    if (data.annotation) {\n                        cyChart.add(data.annotation);\n\n                    }\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function (node) {\n                        try {\n                            var pos = data.data[node.id()];\n                            pos.x -= 4000;\n                            node.position(pos);\n                        } catch (e) { }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function () {\n\n                };\n                cmd.genes_delete = function (data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function (data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function (node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 500\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function (data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function (data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function () {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function (v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function (p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function (ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        try {\n                            cyChart.add(data.edges);\n                        } catch (e) { }\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function (options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function (cyChart, vm) {\n\n                return function (cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    var edges = osApi.getDataSource().edges.filter(function (f) {\n                        return f.name == this.geneset\n                    }, {\n                            geneset: geneset\n                        })[0];\n\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function (p) {\n                                return p.data().id\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function (p) {\n                                return p.data().id\n                            })\n                        },\n                        edges: {\n                            patientWeights: edges.patientWeights,\n                            geneWeights: edges.genesWeights,\n                            layout: vm.datasource.edges\n                                .filter(function (v) {\n                                    return (v.name == this)\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function (f) {\n                                    return f.show\n                                })\n                                .map(function (f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                }\n            })(cyChart, vm)\n\n            vm.cmd = function () { };\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function (vm, $scope) {\n                var watches = 1;\n\n                var firstTime = true;\n                var update = function () {\n                    if (firstTime) {\n                        firstTime = false;\n                        if (hydrate()) return;    // If Hydration Was Possible\n                    }\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function () {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n\n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function () {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n                // Search\n                watches += 1;\n                $scope.$watch('vm.search', _.debounce(function () {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    var needle = vm.search.toUpperCase().trim();\n                    if (needle.length > 0) cyChart.$('node').filter(function (i, ele) {\n                        return (ele.id().toUpperCase().indexOf(needle) == 0);\n                    }).select();\n                }, 600))\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function () {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize()\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function () {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length == 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function (p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function (key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function (e) {\n\n                $scope.$apply(function () {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setGeneInfo = function (e) {\n\n                $scope.$apply(function () {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setPatientCohortUpdate = true;\n            osCohortService.onPatientsSelect.add(function (patients) {\n                if (setPatientCohortUpdate) {\n                    cyChart.startBatch();\n                    cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function (node) {\n                        if (patients.ids.indexOf(node.id()) != -1) node.select();\n                    });\n                    cyChart.endBatch();\n                }\n                setPatientCohortUpdate = true;\n            });\n\n            function setPatientCohort() {\n                setPatientCohortUpdate = false;\n                osCohortService.setPatientCohort(\n                    cyChart.$('node[nodeType=\"patient\"]:selected').map(function (p) {\n                        return p.data().id\n                    }),\n                    \"Markers + Patients\"\n                );\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function () {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function (cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length == 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function (ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function (ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function (item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function (item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function () {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function () {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function () {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function () {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function (e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function (e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function (ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n\n                        }\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function (colors) {\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function (node) {\n                        node.data('color', '#0096d5')\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function (p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function (node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Hydration\n            var hydrateDisease;\n            var hydrate = function () {\n                hydrateDisease = osApi.getDataSource().disease;\n                var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                if (data === null) return false;\n                else {\n                    data = angular.fromJson(data);\n                    cyChart.load(data.chart.elements);\n                    vm.resize();\n                    var elements = cyChart.nodes('node[nodeType=\"patient\"]');\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n\n\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function (node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                                pc: pc\n                            });\n                        cyChart.endBatch();\n                    }\n\n                }\n                osApi.setBusy(false);\n                return true;\n            }\n            var dehydrate = function () {\n                var data = angular.toJson({\n                    geneset: vm.optGeneSet,\n                    chart: cyChart.json()\n                });\n                // Geneset / Edge Visibility / Color Option / Layout\n                localStorage.setItem(hydrateDisease + \"MarkersPatients\", data);\n            }\n            // Destroy\n            $scope.$on('$destroy', function () {\n                dehydrate();\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state, $scope, osApi, osAuth) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n            vm.getStarted = function(){\n                osApi.init().then(function() {\n                    osAuth.loginGuest();\n                });\n            };\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osCohortService, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, Handsontable) {\n\n            var queryMethod = function (queryStr, value) {\n                if (queryStr==\"\") return false;\n                if (value==null) return false;\n                return (value.toString().toUpperCase().indexOf(queryStr)!=-1);\n            };\n\n            // Properties\n            var vm = this;\n            var elGrid, htGrid;\n            var data, filteredData, settings = {\n                manualColumnResize: true,\n                manualColumnMove: true,\n                fixedRowsTop: 0,\n                fixedColumnsLeft: 1,\n                readOnly: true,\n                contextMenu: false,\n                columnSorting: true,\n                sortIndicator: true,\n                comments: false,\n                allowEmpty: true,\n                disableVisualSelection: ['current', 'area'],\n                currentRowClassName: 'currentRow',\n                autoColumnSize: {\n                    samplingRatio: 23\n                },\n                search: {\n                    queryMethod: queryMethod\n                },\n                mergeCells: false\n            };\n\n\n            elGrid = angular.element(\"#history-grid\");\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) osCohortService.setPatientCohort([], \"All Patients\");\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            // Intialize View State\n            (function(vm) {\n                vm.datasource = osApi.getDataSource();\n                vm.cohortMode = 'Filter';\n                vm.search = \"\";\n                vm.collections = Object.keys(vm.datasource.clinical)\n                    .map(function(key) {\n                        var v = this.data[key];\n                        return {\n                            name: key,\n                            collection: v\n                        };\n                    }, {\n                        data: vm.datasource.clinical\n                    })\n                    .filter(function(o) {\n                        return o.name != \"events\";\n                    });\n                vm.collection = vm.collections[0];\n\n            })(vm);\n\n            vm.exportCsv = function() {\n\n                var data = htGrid.getData();\n                var tmpColDelim = String.fromCharCode(11),\n                    tmpRowDelim = String.fromCharCode(0),\n                    colDelim = '\",\"',\n                    rowDelim = '\"\\r\\n\"',\n                    csv = '\"' + data.map(function(rval) {\n                        return rval.map(function(cval) {\n                            // escape double quotes\n                            var out = \"\";\n                            if (!cval) {\n                                out = cval.toString();\n                            }\n                            return out;\n                        }).join(tmpColDelim);\n                    }).join(tmpRowDelim)\n                    .split(tmpRowDelim).join(rowDelim)\n                    .split(tmpColDelim).join(colDelim) + '\"';\n                var encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csv);\n                $window.open(encodedUri);\n            }\n\n            var filterData = function(){\n                \n                filteredData = (selectedIds.length==0) ? data : data\n                    .filter(function(v){\n                        return (this.indexOf(v.patient_ID)!=-1)\n                    }, selectedIds);\n                \n                htGrid.loadData(filteredData);\n                render();\n                \n            }\n\n            var render = function(){};\n            var setData = function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        data = response.data.map(function(v){\n                            v.selected = false;\n                            v.color = \"#0b97d3\";\n                            return v;\n                        });\n\n                        var cr = function(instance, td, row, col, prop, value, cellProperties){\n                            console.log(\"!!!\");\n                            td.innerHTML = prop+\"!\"; \n                        }\n                        var columns = Object.keys(data[0]).map(function(v) {\n                            return {\n                                field: v,\n                                displayName: v.replace(/_/g, \" \").toUpperCase(),\n                                show: true\n                            };\n                        });\n                        columns.unshift({field:'selected', displayName:'',show:true, renderer:cr})\n\n                        vm.columns = columns;\n                       \n                        if (htGrid == null) {\n                            settings.startCols = vm.columns.length;\n                            htGrid = new Handsontable(elGrid[0], settings);\n                            render = function(){\n                                for (var i=0; i<5; i++) htGrid.render();\n                            }\n\n                            // Handsontable.hooks.add(\"afterSelectionEnd\",\n                            //     function(r,c,r2,c2){\n                            //         debugger;   \n                                         \n                            //     }\n                            //     ,htGrid);\n                        }\n\n                        \n                        \n                        filterData();\n                        vm.setColumns(false);\n                        vm.setSize(false);\n                        osApi.setBusy(false);\n\n                    });\n            };\n            \n          \n            var rowRenderer = function(instance, td, row){\n                Handsontable.TextRenderer.apply(this, arguments);\n                td.style['color'] = filteredData[row]['color'];\n            }\n\n\n            vm.setColumns = function(exeRender) {\n                var cols = vm.columns.filter(function(v) {\n                    return v.show;\n                });\n                settings.colHeaders = cols.map(function(v) {\n                    return v.displayName;\n                });\n                settings.columns = cols.map(function(v) {\n                    debugger;\n                    vm.columns;\n                        return { data: v.field, readOnly:true };\n                    \n                });\n                settings.cells = function () {\n                    var cellProps = {};\n                    cellProps.renderer = rowRenderer;\n                    return cellProps;\n                };\n\n                htGrid.updateSettings(settings);\n                if (exeRender) render();\n            };\n\n            vm.setSize = function() {\n                var osLayout = osApi.getLayout();\n                \n                elGrid = angular.element(\".handsontable\")[0];\n                elGrid.style[\"margin-left\"] = (osLayout.left-30) + \"px\";\n                elGrid.style.width = ($window.innerWidth - osLayout.left - osLayout.right - 80) + \"px\";\n                elGrid.style.height = ($window.innerHeight - 170) + \"px\";\n                htGrid.updateSettings({\n                    width: $window.innerWidth - osLayout.left - osLayout.right - 80,\n                    height: $window.innerHeight - 170\n                }, true);\n               render();\n                \n            }\n\n            $scope.$watch(\"vm.collection\", setData);\n            $scope.$watch(\"vm.search\", function(v){\n                if (angular.isUndefined(htGrid)) return;\n                htGrid.search.query(v.toUpperCase().trim());\n                render();\n            });\n\n\n            // resize\n            osApi.onResize.add(vm.setSize);\n            var resize = function() {\n                    vm.setSize(true);\n                } // Should Debounce.\n            angular.element($window).bind('resize', resize);\n\n\n            vm.resetFilter = function(){\n                selectedIds = [];\n                filterData();\n            }\n\n            var onPatientSelect = function(patients){\n                selectedIds = patients.ids;\n                filterData();\n            };\n            osCohortService.onPatientsSelect.add(onPatientSelect);\n\n\n            var onPatientColorChange = function(colors){\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n\n                data.forEach(function(data){\n                    data.color = this[data.patient_ID]\n                }, degMap)\n            };\n            osCohortService.onPatientColorChange.add(onPatientColorChange)\n\n            // Load Datasets\n            osApi.setBusy(true);\n\n         \n            // Destroy\n            $scope.$on('$destroy', function() {\n                //osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osCohortService.onPatientColorChange.remove(onPatientColorChange)\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                {name:'Blues', value:[\"#303f9f\",\"#03a9f4\"]},\n                {name:'Black / Blue', value:[\"#000000\",\"#1d85cb\"]},\n                {name:'Black / Red', value:[\"#000000\",\"#D32F2F\"]},\n                {name:'Red / Yellow', value:[\"#D32F2F\",\"#FFEB3B\"]}\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{name:'None'},{name:'Row'},{name:'Column'}]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                {name:'One',value:1},\n                {name:'Two',value:2},\n                {name:'Three',value:3},\n                {name:'Four',value:4},\n                {name:'Five',value:5},\n                {name:'Six',value:6},\n                {name:'Seven',value:7},\n                {name:'Eight',value:8},\n                {name:'Nine',value:9},\n                {name:'Ten',value:10}\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            //var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            //var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            //var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n            \n            // Load Inital Data\n            var args;\n            var data;\n\n           \n            function axis(svg, data, width, height, x, y, rotated){\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n                    \n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\",x)\n                    .style(\"top\",y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width:height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n                \n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d,i) { return yScale(i+.8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\",\"12px\")\n                    .text( function(d){ return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n                \n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width,height] : [height,width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width,0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l){\n                    return {\n                        source: {x: l.source.x, y:l.source.data.height},\n                        target: {x: l.target.x, y:l.target.data.height},\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n                \n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\",\"#FFF\")\n\n                if (rotated){\n                    var transform = \"rotate(90,\" + height/2 + \",\" + height/2 + \") translate(0,\"+(-width+height)+\")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n                \n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d){\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                        y(d.source.y) + \",\" + d.target.x + \" \" +\n                        y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d){\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g:dendrG, \n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height,x,y){\n\n\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\",x).style(\"top\",y).style(\"position\",\"absolute\");\n\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n                \n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n\n                var cols = data.dim[0];\n                var rows = data.dim[1];\n\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n\n           \n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend(){\n\n                    \n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    //var colBounds = \n                    d3.event.selection.map(function(v){ return this.invert(v[0], v[1]); },xScale).map(Math.round);\n                    //var span = colBounds[1] - colBounds[0];\n                    //var start = colBounds[0];\n                    //var ids = data.cols.splice(start, span);\n                    \n                    var coords = d3.event.selection;\n                    //coords[0][0] = colBounds[0] * width;\n                    coords[0][1] = 0;\n                    //coords[1][0] = colBounds[1] * width;\n                    coords[1][1] = height;\n\n                    d3.select(this)\n                        .transition()\n                        .call(d3.event.target.move, coords);\n\n                    \n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n\n                var boxW = xScale(1)-grid;\n                var boxH = yScale(1)-grid;\n\n                var boxes = map.selectAll('rect').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .attr(\"class\", \"box\")\n                    .attr(\"colIndex\", function(d, i) { return i % cols; })\n                    .attr(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(i % rows); })\n                    .attr(\"width\", boxW)\n                    .attr(\"height\", boxH)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data.data,\n                    cols:cols,\n                    rows:rows,\n                    boxW:boxW,\n                    boxH:boxH\n                }\n            }\n\n            function zoom(){\n\n/*\n                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                colDendObj.g.call(xZoomBehavior);\n                rowDendObj.g.call(yZoomBehavior);\n                xZoomBehavior.on('zoom', function() {\n\n                    var map = colmapObj;\n                    var mapX = d3.event.transform.rescaleY(map.scaleX);\n\n                    var boxW = map.scaleX(1);\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return mapX(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return map.scaleY(i % map.rows); })\n                        .attr(\"width\", boxW)\n\n                    var col = colDendObj;\n                    var colY = col.scaleY;\n                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                    \n                    col.g.selectAll(\"polyline\")\n                        .data(col.data)\n                        .attr(\"points\", function(d){\n                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                        });\n                });\n                yZoomBehavior.on('zoom', function() {\n\n                    var row = rowDendObj;\n                    var rowY = row.scaleY;\n                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                    \n                    var map = colmapObj;\n                    var mapY = d3.event.transform.rescaleX(map.scaleY);\n\n                    var boxW = scaleX(1);\n                    var boxH = yScale(1)-grid;\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return map.scaleY(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return mapY(i % map.rows); })\n                        .attr(\"width\", boxW)\n                    \n                    row.g.selectAll(\"polyline\")\n                        .data(row.data)\n                        .attr(\"points\", function(d){\n                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                        });\n                });\n*/\n            }\n            \n            osApi.setBusy(true);\n             vm.loadData = function(){\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {data:response.data.map(function(v){ \n                        Object.keys(v.patients).forEach(function(key){\n                            if (this[key]==null) this[key] = 0;\n                        },v.patients);\n                        return v.patients; \n                    })};\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function(){\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v){\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function(){\n                \n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                //colmapObj = \n                heatmap(colmap, data.matrix, \n                    hmWidth, \n                    hmHeight, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, \n                    (vm.colDendrogram ? 80 : 0));\n\n                //rowDendObj = \n                dendrogram(rowDend, data.rows,    \n                    80, hmHeight, \n                    layout.left+20, (vm.colDendrogram ? 80 : 0) , false);\n\n                //colDendObj = \n                dendrogram(colDend, data.cols,    \n                    hmWidth, 80, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, 0, true);\n\n                axis(xaxis, \n                    data.matrix.rows,     \n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0)+layout.left+20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0)+layout.left+20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n            \n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw,300));\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osCohortService, osAuth, $stateParams, $state, $timeout, $rootScope) {\n\n            \n\n            osApi.onDataSource.add(function() {\n                $timeout(function() {\n                    vm.datasets = osApi.getDataSources();\n                });\n                osApi.query(\"lookup_oncoscape_tools\").then(function(response) {\n                    var tools = osApi.getDataSource().tools;\n                    vm.tools = response.data.filter(function(item){\n                        return (tools.indexOf(item.route)!=-1);\n                    }).sort(function(a, b) {\n                        if (a.name < b.name) return -1;\n                        if (a.name > b.name) return 1;\n                        return 0;\n                    });\n                });\n            });\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.addPatientCohort = osCohortService.addPatientCohort;\n            vm.setPatientCohort = osCohortService.setPatientCohort;\n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n            });\n            vm.importPatientIds = \"\";\n            vm.importPatientCohort = function(){\n                var ids = vm.importPatientIds.split(\",\").map(function(v){ return v.trim(); });\n                osCohortService.importPatientCohort(ids);\n            };\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.showCohorts = false;\n            vm.showHelp = false;\n            vm.showLogout = false;\n\n            var currentTool;\n            var onStateChangeStart = $rootScope.$on('$stateChangeStart', function(event, toState) {\n                currentTool = toState.name;\n                switch (toState.name) {\n                    case \"landing\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        vm.showLogout = false;\n                        vm.showCohorts = false;\n                        vm.showHelp = false;\n                        break;\n                    case \"tools\":\n                        vm.showCohorts = false;\n                        vm.showTools = false;\n                        break;\n                    case \"datasource\":\n                        vm.showHelp = true;\n                        vm.showDatasets = false;\n                        vm.showCohorts = false;\n                        vm.showLogout = true;\n                        vm.showTools = false;\n                        break;\n                    default:\n                    vm.showCohorts = false;\n                        vm.showDatasets = true;\n                        vm.showTools = true;\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', onStateChangeStart);\n\n            vm.loadDataset = function(dataset) {\n                $state.go(currentTool, {\n                    datasource: dataset\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.loadTool = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.logoutClick = function() {\n                osAuth.logout();\n                $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.disease\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, osCohortService, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                selectedIds = patients.ids;\n                setSelected();\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", false);\n                } else {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) == -1)\n                    });\n                }\n            }\n\n            // Properties\n            var vm = this;\n\n            var rows = 3;\n            var cell = {\n                w: 0,\n                h: 0\n            };\n\n\n            var datasource = {\n                \"disease\": \"brain\",\n                \"source\": \"TCGA\",\n                \"beta\": false,\n                \"name\": \"Brain\",\n                \"img\": \"DSbrain.png\",\n                \"category\": [{\n                    \"source\": \"tcga\",\n                    \"type\": \"color\",\n                    \"collection\": \"brain_color_tcga_import\"\n                }],\n                \"molecular\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_ucsc_gistic\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_ucsc_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_cbio_gistic\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut\",\n                    \"collection\": \"brain_mut_cbio_wxs\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_cbio_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"methylation\",\n                    \"collection\": \"brain_methylation_cbio_hm27\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"rna\",\n                    \"collection\": \"brain_rna_cbio_rnaseq-bc\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"protein\",\n                    \"collection\": \"brain_protein_cbio_rppa-zscore\"\n                }],\n                \"clinical\": {\n                    \"patient\": \"brain_patient_tcga_clinical\",\n                    \"followUp-v1p0\": \"brain_followup-v1p0_tcga_clinical\",\n                    \"drug\": \"brain_drug_tcga_clinical\",\n                    \"newTumor\": \"brain_newtumor_tcga_clinical\",\n                    \"otherMalignancy-v4p0\": \"brain_othermalignancy-v4p0_tcga_clinical\",\n                    \"events\": \"brain_events_tcga_clinical\"\n                },\n                \"calculated\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein-10000\"\n                }],\n                \"edges\": [{\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_oncovogel274-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_oncovogel274-mut01-cnv\"\n                }]\n            };\n\n            var elChart = angular.element(\"#compareclusterChart\");\n            var chart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n\n            vm.allClusters = datasource.calculated.map(function(v) {\n                v.selected = true;\n                return v;\n            });\n\n            var clusters = vm.allClusters\n                .filter(function(v) {\n                    return v.collection.indexOf(\"ucsc\") != -1;\n                })\n                .filter(function(v) {\n                    return v.type == \"mds\";\n                })\n\n            clusters.pop();\n\n            function plot(p) {\n                var rect = d3.select(this);\n                rect.append(\"svg:rect\")\n                    .attr(\"class\", \"cell\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0)\n                    .attr(\"width\", cell.w)\n                    .attr(\"height\", cell.h);\n\n                var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                rect.selectAll(\"circle\")\n                    .data(p.data)\n                    .enter().append(\"svg:circle\")\n                    .attr(\"class\", \"point\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.x);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.y);\n                    })\n                    .attr(\"r\", 1);\n\n                brush.create(rect);\n\n            }\n\n            // Brushes\n            var brush = (function(d3, cell, osCohortService) {\n\n                var _brushes = [];\n\n                var start = function() {\n                    if (d3.event.selection === null) return;\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush !== d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.rect.call(b.brush.move, null);\n                        });\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush === d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.brush.on(\"end\", end);\n                        });\n                };\n                var end = function() {\n                    if (d3.event.selection === null) {\n                        osCohortService.setPatientCohort([], \"Clusters\");\n                        return;\n                    }\n                    var bv = d3.event.selection;\n                    var xMin = bv[0][0];\n                    var xMax = bv[1][0];\n                    var yMin = bv[0][1];\n                    var yMax = bv[1][1];\n\n                    var brush = _brushes.filter(function(b) {\n                        return b.brush === d3.event.target\n                    })[0];\n                    brush.brush.on(\"end\", null);\n                    var rect = brush.rect.data()[0];\n                    var xScale = d3.scaleLinear().domain(rect.xDomain).range([0, cell.w]);\n                    var yScale = d3.scaleLinear().domain(rect.yDomain).range([0, cell.h]);\n                    var ids = rect.data.filter(function(c) {\n                            var x = xScale(c.x);\n                            var y = yScale(c.y);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        })\n                        .map(function(d) {\n                            return d.id;\n                        });\n                    osCohortService.setPatientCohort(ids, \"Clusters\");\n                };\n\n                var create = function(rect) {\n                    var brush = d3.brush()\n                        .on(\"start\", start);\n                    rect.call(brush);\n                    _brushes.push({\n                        brush: brush,\n                        rect: rect\n                    });\n                }\n\n                var clear = function() {\n\n                }\n\n                var destory = function() {\n\n                }\n\n                return {\n                    create: create,\n                    clear: clear,\n                    destory: destory\n                }\n            })(d3, cell, osCohortService);\n\n            function draw() {\n\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                chart.selectAll(\"g.graph\")\n                    .data(clusters)\n                    .enter().append(\"svg:g\")\n                    .attr(\"class\", \"graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    })\n                    .each(plot);\n            }\n\n            $q.all(\n                clusters.map(function(v) { return osApi.query(v.collection)})\n            ).then(function(data) {\n                clusters = clusters.map(function(v, i) {\n                    var data = this.data[i].data[0].data;\n                    var rv = {\n                        name: v,\n                        data: Object.keys(data).reduce(function(p, c) {\n                            var datum = p.data[c];\n                            p.value.push({\n                                id: c,\n                                x: datum.x,\n                                y: datum.y\n                            });\n                            return p;\n                        }, {\n                            data: data,\n                            value: []\n                        }).value,\n                        xDomain: null,\n                        yDomain: null,\n                        col: i % this.rows,\n                        row: parseInt(i / this.rows)\n                    };\n                    var xVal = function(d) {\n                        return d.x;\n                    };\n                    var yVal = function(d) {\n                        return d.x;\n                    };\n                    rv.xDomain = [d3.min(rv.data, xVal), d3.max(rv.data, xVal)];\n                    rv.yDomain = [d3.min(rv.data, yVal), d3.max(rv.data, yVal)];\n                    return rv;\n                }, {\n                    data: data,\n                    rows: rows\n                });\n\n                draw();\n            });\n            var resize = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width).attr(\"height\", height);\n                chart.selectAll(\"g.graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    }).each(function(p) {\n                        var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                        var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                        var g = d3.select(this);\n                        g.select(\".cell\")\n                            .attr(\"width\", cell.w)\n                            .attr(\"height\", cell.h);\n                        g.selectAll(\".point\")\n                            .attr(\"cx\", function(d) {\n                                return xScale(d.x);\n                            })\n                            .attr(\"cy\", function(d) {\n                                return yScale(d.y);\n                            })\n                            .attr(\"r\", 1);\n                    });\n            };\n\n            // Listen For Resize\n            osApi.onResize.add(resize);\n            angular.element($window).bind('resize',\n                _.debounce(resize, 300)\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, osCohortService, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{name:\"Quantile\"},{name:\"Quantize\"}];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2,3,4,5,6,7,8].map(function(v){ return {name:v+\" Bins\", value:v} });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (vm.colorOptions.length!=0) vm.colorOption = vm.colorOptions[0];\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n            \n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", {symbols:{$in:genes.map(function(v){ return v.gene;})}}).then(function(result){\n                    vm.close();\n                    genes.map(function(v){\n                        var gene = this.filter(function(s){\n                            return (s.symbols.indexOf(this)!=-1);\n                        },v.gene);\n\n                        if (gene.length==0){\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        }else if (gene.length>1){\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        }else if (gene.length==1){\n                            if (v.gene!=gene[0].hugo){\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v){ return v.status!=\"\"}), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene){ return gene.status; });\n\n                    var msg = \"\";\n                    \n                    if (types.Removed!=undefined && types.Removed.length>0){\n                        msg += \"Removed: \"+ types.Removed.map(function(v){ return v.message + \" - \"});\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length-2) + \"\\r\\n\";\n                    if (types.Converted!=undefined && types.Converted.length>0){\n                        msg += \"Converted: \"+ types.Converted.map(function(v){ return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length>0) alert(msg);\n                    var geneset = genes.filter(function(v){ return v.status!=\"Removed\"; }).map(function(v) {\n                                return v.gene.toUpperCase();\n                            });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n                        \n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\",\"#00a7f7\",\"#3d4eb8\",\"#ff9900\",\"#f7412d\",\"#795548\",\"#E91E63\",\"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name==\"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n                            \n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name==\"Quantile\"){\n                                scale.domain(Object.keys(data).map(function(key){return data[key]},{data:data})).range(values);\n                                labels = scale.quantiles().map(function(v){ return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c,i,a){ \n                                  if (i==0){ return \"-\\u221e \\u2194 \"+a[1]; }\n                                  else if (i==a.length-1){\n                                     return a[i] +\" \\u2194 +\\u221e\" //\\u226C\n                                  } \n                                return a[i] +\" \\u2194 \" +a[i+1];\n                                });\n                                values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                            }else{\n                                scale\n                                .domain([data.min, data.max])\n                                .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\"+parseFloat(v).toFixed(2); })\n                                values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            })\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\")!=-1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\")!=-1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\")!=-1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\")!=-1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            })\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osCohortService.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope:{ },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, osCohortService, $state, $scope, $timeout, $rootScope, d3) {\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.patientChartOption = null;\n            vm.cohortName = \"\";\n            vm.addCohort = function(){};\n            vm.setCohort = function(){};\n            vm.removeCohort = function(){};\n            vm.editItem = {name:''};\n            vm.editCohort = function(item){\n                vm.editItem = item;\n                vm.edit = true;\n            };\n            \n            vm.show = false;\n            vm.edit = false;\n            \n            angular.element(\"#cohortMenu\").css({\"display\":\"none\"});\n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n                vm.show = true;\n                vm.showPatientHistory();\n                osCohortService.setPatientCohort([],\"All Patients\")\n            });\n\n            var onStateChange = $rootScope.$on('$stateChangeStart', function(event, toState){\n                 \n                switch(toState.name){\n                    case \"landing\":\n                    case \"tools\":\n                    case \"datasource\":\n                        vm.show = false;\n                        break;\n                    default:\n                        vm.show = true;\n                        angular.element(\"#cohortMenu\").css({\"display\":\"block\"});\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', function(){\n                onStateChange();\n                angular.element(\"#cohortMenu\").css({\"display\":\"none\"});\n                vm.show = false;\n            });\n\n            // Configure Tray\n            var elTray = angular.element(\".cohort-menu\");\n            var mouseOver = function(){\n                elTray\n                    .removeClass(\"tray-collapsed-left\");\n            }\n            var mouseOut = function(){\n                elTray\n                    .addClass(\"tray-collapsed-left\");\n            }\n            \n            // Configure Tabs\n            var elTabPatients = angular.element('#cohort-tab-patients');\n            var elTabGenes    = angular.element('#cohort-tab-genes');\n            vm.showPatientHistory = function(){\n                elTabPatients.addClass(\"active\");\n                elTabGenes.removeClass(\"active\");\n                vm.cohorts = osCohortService.getPatientCohorts();\n                vm.addCohort = osCohortService.addPatientCohort;\n                vm.setCohort = osCohortService.setPatientCohort;\n                vm.removeCohort = osCohortService.delPatientCohort;\n            };\n            vm.showGeneHistory = function(){\n                elTabGenes.addClass(\"active\");\n                elTabPatients.removeClass(\"active\");\n                vm.cohorts = osCohortService.getGeneCohorts();\n                vm.addCohort = osCohortService.addGeneCohort;\n                vm.setCohort = osCohortService.setGeneCohort;\n                vm.removeCohort = osCohortService.delGeneCohort;\n            };\n\n            var isLocked = true;\n            vm.toggle = function(){\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                    \n                        \n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                   \n                }\n                osApi.onResize.dispatch();\n                    \n            }   \n\n\n            var barClick =function(d){\n                \n                \n                if (vm.patientChartOption.type==\"numeric\"){\n                    var bounds = d.label.split(\"-\").map(function(v){ return parseInt(v); });\n                    var prop = vm.patientChartOption.prop;\n                    osCohortService.filterActivePatientCohort(bounds, prop, vm.patientChartOption.type);\n                }\n            }\n\n\n            // Init SVG;\n            var svg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 238)\n                .attr(\"height\", 150)\n                .append(\"g\");\n          \n            $scope.$watch('vm.patientChartOption', function(){\n\n                if (vm.patientChartOption==null) return;\n                var data = vm.patientChartOption.data;\n\n                var barWidth = Math.floor(238/data.bins);\n                if (data.histRange[0]>0) data.histRange[0] -=2;\n                \n                var yScale = d3.scaleLinear()\n                    .domain([0,data.histRange[1]])\n                    .range([0,135]);\n\n                var bars = svg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"class\",\"cohort-menu-chart-bar\")\n                        .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                        .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .on(\"click\", barClick);\n\n                    bars\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                            .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                            .attr(\"height\", function(d) { return yScale(d.value); })\n                            .attr(\"width\", barWidth)\n\n                    bars.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n\n                    var labels = svg\n                        .selectAll(\"text\")\n                        .data(data.hist)\n\n                    labels.enter()\n                        .append(\"text\")\n                        .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                        .attr(\"y\", function(d) { \n                            return 145-yScale(d.value);\n                        })\n                        .attr(\"fill\", \"#000\")\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .attr(\"font-size\", \"8px\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(function(d){ return d.label; });\n\n                    labels\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                            .attr(\"y\", function(d) { \n                                var y = 145-yScale(d.value);\n                                if (y<0) y = 20;\n                                return y;\n                            })\n                            .text(function(d){ return d.label; });\n\n                    labels.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n                            \n\n            });\n\n\n            /* SURVIVAL - This very much needs to be refactored into a component */\n            var sChart = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            var sElXAxis = sChart.append(\"g\").attr(\"class\", \"axis\");\n            var sElYAxis = sChart.append(\"g\").attr(\"class\", \"axis\");\n\n            var sLayout = {\n                width: 238,\n                height: 170,\n                xScale : null,\n                yScale : null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n            var addCurve = function(points){\n            \n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) { return sLayout.xScale(d[0]); })\n                    .y(function(d) { return sLayout.yScale(d[2]); });\n\n                sChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", points.weight)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\",\"none\")\n                    .attr(\"d\", valueline(points.data.line));\n\n                for (var i=0; i<points.data.tick.length; i++){\n                    sChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", points.weight)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", sLayout.yScale(points.data.tick[i][2]))\n                        .attr(\"y2\", sLayout.yScale(points.data.tick[i][2])-5);\n                }\n            }\n            osCohortService.onMessage.add(function(result){\n                if (result.data.cmd==\"getSurvivalData\"){\n                    var data = result.data.data;\n                    if (data.correlationId==\"CohortMenuController\"){\n\n                        sChart\n                            .attr(\"width\", '100%')\n                            .attr(\"height\", sLayout.height);\n\n                        sLayout.xScale = d3.scaleLinear()\n                            .domain([result.data.data.min,  result.data.data.max])\n                            .range([30, sLayout.width]);\n\n                        sLayout.yScale = d3.scaleLinear()\n                            .domain([0,100])\n                            .range([sLayout.height-20,10]);\n\n\n                        sLayout.xAxis.scale(sLayout.xScale);\n                        sLayout.yAxis.scale(sLayout.yScale);\n\n                        sElYAxis.attr(\"transform\", \"translate(30, 0)\").call(sLayout.yAxis);\n                        sElXAxis.attr(\"transform\", \"translate(0, \" + (sLayout.yScale(0)) + \")\").call(sLayout.xAxis);\n\n                        sChart.selectAll(\".line\").remove();\n                        for (var i=0; i<data.cohorts.length; i++){\n                            if (i<data.cohorts.length-1){\n                                data.cohorts[i].weight = 1;\n                            }\n                            else{\n                                data.cohorts[i].weight = 1.5;\n                            }\n                            addCurve(data.cohorts[i]);\n                        }\n                        //addCurve(data.cohorts[0]);\n                        //data.cohorts[1].color = \"#0b97d3\";\n                        //addCurve(data.cohorts[1]);\n                    }\n                }\n            });\n            /* END SURVIVAL */\n\n\n\n\n\n\n            osCohortService.onPatientsSelect.add(function(obj){\n                if (angular.isUndefined(obj.color)){\n                    obj.color = \"#000\";\n                }\n                vm.cohortName = obj.name;\n                osCohortService.getPatientMetric();\n                var cohorts =  angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n                cohorts.push(obj);\n                osCohortService.getSurvivalData(cohorts,true,\"CohortMenuController\");\n            });\n            osCohortService.onGenesSelect.add(function(){\n\n            });\n            osCohortService.onMessage.add(function(obj){\n                if (obj.data.cmd!=\"setPatientMetric\") return;\n                \n                $timeout(function(){\n                    vm.patientTotal = obj.data.data.total;\n                    vm.patientSelected = obj.data.data.selected;\n                    vm.patientChartOptions = obj.data.data.features;\n                    vm.patientChartOption = (vm.patientChartOption==null) ? \n                        vm.patientChartOptions[0] :\n                        vm.patientChartOptions.filter(function(v){\n                            return (v.label==this.label)\n                        }, vm.patientChartOption)[0]\n                });                \n            });            \n\n            // And Go\n            vm.showPatientHistory();\n            \n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, osCohortService, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, .1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], .08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (.1 + Math.random()),\n                        y = 2 * Math.random() - .5,\n                        z = 10 / (.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n\n(function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .run(runBlock);\n\n     /** @ngInject */\n     function runBlock($rootScope, $state, $window, $exceptionHandler, osApi, osAuth) { //, $log\n\n         // Route Errors To Angular\n         $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n             if (!error) {\n                 error = new Error(message);\n                 error.fileName = fileName;\n                 error.lineNumber = lineNumber;\n                 error.columnNumber = (columnNumber || 0);\n             }\n             $exceptionHandler(error);\n         }\n\n         // Actions To Take On State Change\n         var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n             // Hide Busy Cursor\n             osApi.setBusy(false);\n\n             // Route unauthenticated users to landing page\n             if (toState.authenticate && !osAuth.isAuthenticated()) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n                 return;\n             }\n\n             //Redirect If Unable To Resolve Data Source\n             if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource === \"\")) {\n                 $state.transitionTo(\"datasource\")\n                 event.preventDefault();\n                 return;\n             } else {\n                 osApi.setDataSource(toParams.datasource);\n             }\n\n             //osApi.setDataSource({\"disease\":\"brca\",\"source\":\"TCGA\",\"name\":\"Breast\",\"img\":\"DSbreast.png\",\"beta\":false,\"collections\":{\"drug\":\"clinical_tcga_brca_drug\",\"f1\":\"clinical_tcga_brca_f1\",\"f2\":\"clinical_tcga_brca_f2\",\"f3\":\"clinical_tcga_brca_f3\",\"nte\":\"clinical_tcga_brca_nte\",\"nte_f1\":\"clinical_tcga_brca_nte_f1\",\"omf\":\"clinical_tcga_brca_omf\",\"pt\":\"clinical_tcga_brca_pt\",\"rad\":\"clinical_tcga_brca_rad\"},\"edges\":[{\"name\":\"TCGA GBM Classifiers\",\"edges\":\"edge_brca_tcgagbmclassifiers\",\"patientWeights\":\"edge_brca_tcgagbmclassifiers_patient_weight\",\"genesWeights\":\"edge_brca_tcgagbmclassifiers_gene_weight\"},{\"name\":\"Marker Genes 545\",\"edges\":\"edge_brca_markergenes545\",\"patientWeights\":\"edge_brca_markergenes545_patient_weight\",\"genesWeights\":\"edge_brca_markergenes545_gene_weight\"},{\"name\":\"TCGA Pan Cancer Mutated\",\"edges\":\"edge_brca_tcgapancancermutated\",\"patientWeights\":\"edge_brca_tcgapancancermutated_patient_weight\",\"genesWeights\":\"edge_brca_tcgapancancermutated_gene_weight\"},{\"name\":\"Onco Vogel 274\",\"edges\":\"edge_brca_oncovogel274\",\"patientWeights\":\"edge_brca_oncovogel274_patient_weight\",\"genesWeights\":\"edge_brca_oncovogel274_gene_weight\"}]});\n         });\n\n         $rootScope.$on('$destroy', off)\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('comparecluster', {\n                url: '/comparecluster/{datasource}',\n                template: '<os-compare-cluster>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                authenticate: true,\n                datasource: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, Handsontable:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('Handsontable', Handsontable)\n        .constant('localStorage', localStorage)\n        .constant('_', _);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n    \n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div ng-show=\\\"vm.show\\\" id=\\\"cohortMenu\\\" style=\\\"display:none;\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><ul class=\\\"nav nav-tabs\\\"><li id=\\\"cohort-tab-patients\\\" role=\\\"presentation\\\" style=\\\"width:50%;text-align:center;\\\" ng-click=\\\"vm.showPatientHistory()\\\"><a>Patients</a></li></ul><div style=\\\"background-color:#ffffff;border:#dddddd 1px solid;border-top-width:0px;padding:10px;\\\"><br><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;\\\">{{vm.patientChartOption.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li style=\\\"padding:0px 5px;\\\" ng-repeat=\\\"item in vm.patientChartOptions\\\" ng-click=\\\"vm.patientChartOption=item\\\">{{item.label}}</li></ul></div><br><div id=\\\"cohortmenu-survival\\\" style=\\\"border:0px solid #DDD;width:100%;height:180px;\\\"></div><br><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#000; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.addCohort()\\\" tooltip=\\\"Save Cohort\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-plus\\\"></i></button> <label>Selected Patients</label></div><div ng-if=\\\"vm.cohorts.length>0 && !vm.edit\\\"><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{cohort.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.editCohort(cohort)\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-edit\\\"></i></button> <a class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"margin-right:25px;\\\" ng-click=\\\"vm.setCohort(cohort)\\\">{{cohort.name}} ({{cohort.ids.length}})</a></div></div><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#0b97d3; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>All Patients</label></div><br><div ng-if=\\\"vm.edit\\\"><hr><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{vm.editItem.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>Edit Cohort</label></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-group\\\" style=\\\"margin-top:10px;\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.editItem.name\\\"></div><div class=\\\"col-xs-12 form-group\\\" style=\\\"text-align:right\\\"><button class=\\\"btn btn-sm btn-default\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.removeCohort(vm.editItem);vm.edit=false;\\\">Remove</button> <button class=\\\"btn btn-sm btn-primary\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.edit=false\\\">Done</button></div></div></div></div></div></div><div id=\\\"cohortmenu-legand\\\"></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Disease Datasets</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{dataset.img}}\\\"><p class=\\\"datasource-h1\\\">{{dataset.name}}</p><p class=\\\"datasource-h2\\\">{{dataset.source}} | 11-17-2016</p></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Analysis Tools</a><ul class=\\\"dropdown-menu row\\\"><li ng-repeat=\\\"item in vm.tools\\\" style=\\\"padding-bottom:10px\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\" style=\\\"border-right: 1px solid #DDD\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.desc}}</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Disease Datasets</a><ul class=\\\"dropdown-menu row\\\"><li ng-repeat=\\\"item in vm.datasets\\\" style=\\\"padding-bottom:10px\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.source}} | 11-17-2016</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showCohorts\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>My Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient IDs below and click save<br><input ng-model=\\\"vm.importPatientIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importPatientCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-8\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"max-width:200px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\">{{item.name}} ({{item.ids.length}})</div></div></div></div></li><li ng-show=\\\"vm.showHelp\\\"><a href=\\\"http://resources.sttrcancer.org/oncoscape\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li ng-show=\\\"vm.showLogout\\\"><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Highlight</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: 200 }\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"\\\"></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Export</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.exportCsv()\\\">CSV</button></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patients</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.resetFilter()\\\">Show All</button></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Fields</label><div ng-repeat=\\\"column in vm.columns track by $index\\\" class=\\\"legend-bar\\\" style=\\\"position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;border-left-width: 0;\\\"><span style=\\\"max-width: 180px;font-size:12px;display: inline-block;\\\">{{column.displayName}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"column.show\\\" ng-change=\\\"vm.setColumns(true)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div></div></section></os-tray><section class=\\\"history-content history-grid-container\\\"><div class=\\\"container-fluid\\\" style=\\\"text-align:center;\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><br><div id=\\\"history-grid\\\" style=\\\"overflow:hidden;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing\\\"><header class=\\\"landing container-fluid\\\"><div class=\\\"row marquee\\\"><div class=\\\"col-sm-9\\\"><div class=\\\"header-content\\\"><div class=\\\"header-content-inner\\\"><h1>Oncoscape is a visualization platform for large-scale, heterogeneous clinical and molecular patient data.</h1><a class=\\\"btn btn-outline btn-xl page-scroll\\\" ng-click=\\\"vm.getStarted()\\\">Get Started</a></div></div></div></div></header><div class=\\\"container-fluid\\\" style=\\\"background-color:#000; color:#FFF;padding-top:150px;padding-bottom:150px;\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-7\\\"><h1 style=\\\"font-size:50px;\\\">Our Mission</h1><p style=\\\"font-size:30px;line-height:50px;\\\">Empower researchers to discover novel patterns and relationships between clinical and molecular factors.</p><a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">Publishing Guidelines</a></div><div class=\\\"col-sm-5\\\" style=\\\"text-align:center\\\"><img src=\\\"assets/images/thumb.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\" style=\\\"display:inline-block;height:100%;\\\"></div></div></div><div class=\\\"container-fluid\\\" style=\\\"padding-top:150px;padding-bottom:300px;background:#EEE;;\\\"><div class=\\\"row\\\" style=\\\"font-size:18px;\\\"><div class=\\\"col-sm-12\\\"><h1 style=\\\"font-size:50px;\\\">Affiliations</h1><br></div><div class=\\\"col-sm-3\\\"><a href=\\\"http://www.fredhutch.org\\\"><img src=\\\"/assets/images/logo-hutch.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><a href=\\\"http://www.washington.edu/\\\"><img src=\\\"/assets/images/logo-uw.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><a href=\\\"https://www.seattlecca.org/\\\"><img src=\\\"/assets/images/logo-scca.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><img src=\\\"/assets/images/logo-sarc.jpg\\\"></div></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Gene or Patient\\\"></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <span class=\\\"h3-tool\\\">(Layout: {{vm.optPatientLayout.name}})</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><h3>Select a layout</h3></div><a class=\\\"col-sm-4 markers-command hvr-sweep-to-right\\\" style=\\\"padding-left:15px; padding-right:15px;\\\" ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\">{{item.name}}</a></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>PCA Type</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-label\\\"><h3>Variance</h3>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label>Cohorts</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">All Patients <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.all.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{cohort.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.displayMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.displayModes\\\" ng-click=\\\"vm.displayMode=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><div id=\\\"timelines-tip\\\" style=\\\"min-height:200px;\\\"><b>Rollover Event For Details</b></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"><label class=\\\"timeline-zoom-x-label\\\">Click + Drag To Zoom</label> <label class=\\\"timeline-zoom-y-label\\\">Click + Drag To Zoom</label> <label class=\\\"timeline-select-label\\\">Click + Drag To Select</label></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(tool.route)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\" style=\\\"border-right:1px solid #DDD;\\\"><p class=\\\"datasource-h1\\\" style=\\\"padding-top:10px;\\\">{{tool.name}}</p><p class=\\\"datasource-h2\\\">{{tool.desc}}</p></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}