{"version":3,"sources":["scripts/app-9e0c056ba5.js"],"names":["angular","module","tray","TrayController","osApi","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","$inject","directive","restrict","templateUrl","scope","caption","content","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","$state","query","then","response","data","sort","a","b","name","explore","tool","go","datasource","getDataSource","disease","timelines","TimelinesController","osCohortService","$scope","$stateParams","$window","$document","moment","d3","_","resize","debounce","update","setBusy","scaleX","xZoom","yZoom","xTran","yTran","axis","patientsAll","patientsFiltered","patientsDomain","heightRow","baseZoomX","baseZoomY","brushY","brushX","brushSelect","pc","getPatientCohort","setPatientCohort","selectedIds","ids","onPatientsSelect","patients","add","timescales","valFn","val","log","abs","duration","asDays","timescale","filters","filter","modes","mode","displayModes","displayMode","resetZoom","chart","d3ScrollY","call","move","d3ScrollX","elTip","elChart","select","d3Chart","append","rPatients","gPatients","rAxis","gAxis","updateData","align","events","e","selected","map","toLowerCase","Infinity","forEach","patient","hash","hasOwnProperty","status","visible","length","indexOf","id","offset","tsStart","event","tsStartAligned","tsEndAligned","tsEnd","domain","min","max","p","v","updateEvents","height","width","scaleLinear","range","nice","selectAll","remove","rows","exit","transition","delay","style","rowEnter","enter","d","i","cols","color","on","datum","html","Object","keys","reduce","c","selection","lowerIndex","floor","upperIndex","ceil","push","target","updateZoom","configSize","layout","css","left","right","daysToUnit","round","updateAxis","axisBottom","ticks","tickFormat","pow","configScrollbars","lower","upper","lowerPercent","upperPercent","deltaPercent","st","zoomIdentity","translate","scale","rescaleX","getLayout","innerHeight","innerWidth","clinical","colorFn","key","evtArray","start","unix","end","evtHash","$on","survival","SurvivalController","cohorts","fromJson","toJson","getPatientCohorts","time","Date","all","show","colors","getSurvivalData","elXAxis","elYAxis","xScale","yScale","xAxis","yAxis","axisLeft","setScale","timelineDomain","osLayout","onSurvivalData","result","cmd","correlationId","draw","onMessage","addCurve","points","valueline","line","x","y","tick","sunburst","SunburstController","colorMap","charts","getColorMap","tags","groups","union","object","barcharts","bars","arc","radius","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","w","window","init","text","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","t","attrTween","drawSunburst","g","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","innerRadius","outerRadius","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","concat","apply","value","bar","values","difference","tree","barNode","reverse","tag","tagIndex","drawTree","el","chartLayer","yMax","yMin","barWidth","chartHeight","nodes","node","each","PlsrController","osHistory","$sce","saveSelected","addGeneSelection","__data__","toUpperCase","setSelected","classed","isUndefined","xMax","brush","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","$watch","onGeneSelectionChange","linear","vectors","genes","bv","extent","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","lines","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","loadings","item","index","loadingNames","vectorNames","maxValue","PcaController","$q","d3Points","setColors","legendCaption","legendNodes","degMap","undefined","padding-left","d3Brush","minMax","xMin","scaleY","axisX","axisTop","axisY","d3xAxis","d3yAxis","osCohortServiceUpdate","dataset","type","search","$fields","mr","geneset","source","label","rv","types","pcaTypes","pcaType","pc1","pc2","onPatientColorChange","showPanelColor","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","substr","endBatch","container","elements","minZoom","maxZoom","zoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","protocol","host","queryString","req","table","isDefined","encodeURIComponent","method","headers","apikey","factory","signals","localStorage","Signal","onGenesSelect","onCohortsChange","worker","Worker","addEventListener","msg","addPatientCohort","activePatientCohort","activeGeneCohort","allGeneCohorts","allPatientCohorts","onDataSource","postMessage","getItem","_patientColor","setPatientColor","getPatientMetric","setItem","importPatientCohort","delPatientCohort","obj","splice","S4","isArray","filterActivePatientCohort","bounds","prop","getGeneMetric","getGeneCohorts","getGeneCohort","addGeneCohort","delGeneCohort","setGeneCohort","api","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","login","network","thumb","response_type","force","logout","prev","curr","oauth_proxy","redirect_uri","thumbnail","$","resolve","reject","beta","_dataSources","img","trim","_dataSource","_cpuApi","rt","hide","getDataSources","setDataSource","isObject","isString","serviceEndpoint","server","createMethod","fnName","charAt","slice","options","Promise","ajax","contentType","dataType","beforeSend","xhr","settings","xhrFields","withCredentials","crossDomain","done","split","get","methods","getEndpoint","getCpuApi","markers","MarkersController","setPatientCohortUpdate","cyChart","tmpdata","signal","over","out","edges","clear","removeAll","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","group","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","position","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","showPanelLayout","showPanelColorRna","optCommandModes","optCommandMode","hideModal","filterModelEdge","vals","optEdgeColors","edge","cn","edgeToggle","selectColor","deselectColor","lockPatients","lockGenes","lock","unselectify","selectify","abv","count","results","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","toArray","weight","sizeNode","setOptions","items","getElementById","collection","patients_delete","patients_insert","degrees","patients_layout","annotation","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","total","edgeCounts","mouseIsOver","geneColors","createOptions","f","opts","patientWeights","geneWeights","genesWeights","watches","firstTime","hydrate","needle","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","deselect","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","hydrateDisease","load","dehydrate","json","terminate","LoginController","networks","loginSuccess","landing","LandingController","history","HistoryController","Handsontable","elGrid","htGrid","filteredData","queryMethod","queryStr","manualColumnResize","manualColumnMove","fixedRowsTop","readonly","contextMenu","columnSorting","sortIndicator","comments","allowEmpty","autoColumnSize","samplingRatio","mergeCells","cohortMode","collections","o","exportCsv","getData","tmpColDelim","String","fromCharCode","tmpRowDelim","colDelim","rowDelim","csv","rval","cval","join","encodedUri","encodeURI","open","filterData","patient_ID","loadData","render","setData","columns","field","displayName","startCols","setSize","setColumns","rowRenderer","instance","td","row","TextRenderer","colHeaders","cells","cellProps","renderer","updateSettings","resetFilter","onPatientSelect","heatmap","HeatmapController","rotated","colLabels","rowLabels","textAnchor","textX","labels","dendrogram","xPos","yPos","colDendrogram","rowDendrogram","cluster","separation","l","edgePar","dendrG","transform","col","brushend","sourceEvent","invert","minValue","colorScheme","dim","grid","boxes","property","xZoomBehavior","scaleExtent","yZoomBehavior","colDendObj","rowDendObj","colY","colX","rescaleY","rowY","rowX","gridlines","colorSchemes","scales","dendrogramClusters","dendrogramCluster","colmapObj","args","colDend","rowDend","colmap","xaxis","yaxis","$limit","loadHeatmap","kcol","krow","getHeatmap","hmWidth","hmHeight","matrix","header","HeaderController","$rootScope","datasets","allCohorts","importPatientIds","showImport","showTools","showDatasets","showCohorts","showHelp","showLogout","currentTool","onStateChangeStart","toState","loadDataset","collapse","loadTool","logoutClick","transitionTo","DatasourceController","compareCluster","CompareClusterController","plot","rect","cell","h","xDomain","yDomain","create","clusters","category","molecular","followUp-v1p0","drug","newTumor","otherMalignancy-v4p0","calculated","allClusters","pop","_brushes","destory","parseInt","xVal","yVal","colorPanel","ColorPanelController","colorScales","colorScale","colorBins","colorBin","colorOptions","colorOption","tbl","subtype","optPatientColors","setColor","aname","isNaN","bname","close","setGeneColor","geneColor","match","op","gene","$in","fn","lookup","pids","pid","iv","output","scaleQuantile","scaleQuantize","quantiles","parseFloat","toFixed","unshift","zip","names","cohortMenu","CohortMenuController","patientChartOption","cohortName","addCohort","setCohort","removeCohort","editItem","editCohort","edit","showPatientHistory","onStateChange","elTabPatients","elTabGenes","showGeneHistory","barClick","bins","histRange","hist","sChart","sLayout","patientTotal","patientSelected","patientChartOptions","features","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","j","rangeBand","n","yStackMax","bumpLayer","bump","z","exp","m","stack","layers","layer","margin","top","bottom","rangeRoundBands","tickSize","tickPadding","orient","runBlock","$exceptionHandler","onerror","message","fileName","lineNumber","columnNumber","error","Error","off","toParams","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","config","constant","hello","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-9e0c056ba5.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'glyphicon-menu-hamburger' : 'glyphicon-remove')\n                    .removeClass(isLocked ? 'glyphicon-remove' : 'glyphicon-menu-hamburger');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n\n            var vm = this;\n            //osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n            osApi.query(\"lookup_oncoscape_tools\").then(function(response) {\n                vm.tools = response.data.sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n            });\n\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osCohortService, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // Data\n            var patientsAll = [];\n            var patientsFiltered = [];\n            var patientsDomain = [];\n            var scaleX;\n            var heightRow = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var axis;\n            var brushY = d3.brushY();\n            var brushX = d3.brushX();\n            var brushSelect = d3.brushY();\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\");\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var onPatientsSelect = function(patients) {\n                selectedIds = patients.ids;\n                vm.update();\n            }\n            osCohortService.onPatientsSelect.add(onPatientsSelect);\n\n            // var setSelected = function() {\n            //     selectedIds = chart.bars.selectAll(\".timeline-selected\")[0].map(function(p) {\n            //         return p.__data__.id;\n            //     })\n            //     osCohortService.setPatientCohort(selectedIds, \"Timelines\");\n            // }\n\n            // View Model\n            var vm = (function(vm) {\n                vm.timescales = [{\n                    name: 'Log',\n                    valFn: function(val) {\n                        return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2)\n                    }\n                }, {\n                    name: 'Linear',\n                    valFn: function(val) {\n                        return moment.duration(val * 1000).asDays()\n                    }\n                }];\n                vm.timescale = vm.timescales[0];\n                vm.filters = [{\n                    name: 'Alive + Dead'\n                }, {\n                    name: 'Only Alive'\n                }, {\n                    name: 'Only Dead'\n                }];\n                vm.filter = vm.filters[2];\n                vm.modes = [{\n                    name: \"Highlight\"\n                }, {\n                    name: \"Filter\"\n                }];\n                vm.mode = vm.modes[0];\n                vm.displayModes = [{\n                    name: 'Selected Patients'\n                }, {\n                    name: 'All Patients'\n                }];\n                vm.displayMode = vm.displayModes[0];\n                vm.datasource = osApi.getDataSource();\n                return vm;\n            })(this);\n\n            vm.resetZoom = function() {\n                selectedIds = [];\n                osCohortService.setPatientCohort([], \"All Patients\");\n                chart.d3ScrollY.call(brushY.move, null);\n                chart.d3ScrollX.call(brushY.move, null);\n                vm.update();\n\n            };\n\n            // Chart Container Components\n            var chart = (function(angular, d3) {\n                var elTip = null;\n                var elChart = d3.select(\".timelines-content\");\n\n                var d3Chart = elChart.append(\"svg\");\n                d3Chart.attr(\"class\", \"timeline-chart\");\n\n                var d3ScrollY = elChart.append(\"svg\");\n                d3ScrollY.attr(\"class\", \"timeline-scroll-y\");\n\n                var d3ScrollX = elChart.append(\"svg\");\n                d3ScrollX.attr(\"class\", \"timeline-scroll-x\");\n\n                var rPatients = d3Chart.append(\"g\");\n                rPatients.attr(\"class\", \"timeline-patients-hitarea\");\n                var gPatients = d3Chart.append(\"g\");\n\n                var rAxis = d3Chart.append(\"rect\");\n                rAxis.attr(\"class\", \"timeline-axis-bg\");\n                var gAxis = d3Chart.append(\"g\");\n\n\n                return {\n                    elChart: angular.element(\".timelines-content\"),\n                    elTip: elTip,\n                    d3Chart: d3Chart,\n                    d3ScrollY: d3ScrollY,\n                    d3ScrollX: d3ScrollX,\n                    gPatients: gPatients,\n                    rPatients: rPatients,\n                    gAxis: gAxis,\n                    rAxis: rAxis\n                };\n\n            })(angular, d3);\n\n            var updateData = function() {\n\n                // Retrieve State\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Event Data\n                patientsFiltered = patientsAll;\n\n                // Filter\n                patientsDomain = [Infinity, -Infinity];\n                patientsFiltered.forEach(function(patient) {\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                    } else {\n\n                        // Filter Alive + Dead\n                        var status = patient.hash[\"Status\"].data.status;\n                        if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                            patient.visible = false;\n                        } else {\n                            if (vm.displayMode.name == \"Selected Patients\" && selectedIds.length > 0) {\n                                patient.visible = (selectedIds.indexOf(patient.id) != -1);\n                            } else {\n                                patient.visible = true;\n                            }\n                            if (patient.visible) {\n                                this.offset = 0 - patient.hash[this.align].tsStart;\n                                // Filter Events\n                                patient.events.forEach(function(event) {\n                                    event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                                    // Calculate Start + End Based On Alignment\n                                    if (event.visible) {\n                                        event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                                        event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                                        this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                                        this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                                    }\n                                }, this);\n                            }\n                        }\n                    }\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Remove Patients That Do Not Have Alignment Property\n                patientsFiltered = patientsFiltered.filter(function(p) {\n                    return p.visible;\n                });\n\n                // Set Selected\n                patientsFiltered.forEach(function(v) {\n                    v.selected = (selectedIds.indexOf(v.id) != -1);\n                });\n\n                // Sort Patients\n                patientsFiltered = patientsFiltered.sort(function(a, b) {\n                    if (a.status == b.status) {\n                        a = a.hash[sort].tsStartAligned;\n                        b = b.hash[sort].tsStartAligned;\n                        if (a > b) return 1;\n                        if (b > a) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            };\n\n            var updateEvents = function(height, width) {\n                height -= 70;\n                width -= 20;\n\n                // Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n\n                chart.gPatients.selectAll(\"*\").remove();\n\n                var rows = chart.gPatients.selectAll(\"g.patient\").data(patientsFiltered);\n                rows.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n                var rowEnter = rows.enter().append('g');\n                rowEnter.attr('class', 'patient')\n                rowEnter.attr('transform', function(d, i) {\n                    return \"translate(0,\" + (i * heightRow) + \")\";\n                });\n\n                var cols = rowEnter.selectAll(\"rect\").data(function(d) {\n                    return d.events.filter(function(v) {\n                        return v.visible;\n                    });\n                });\n                cols.exit().remove();\n                cols.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 3);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n                    .on(\"mouseover\", function() {\n                        var datum = d3.select(this).datum();\n\n                        if (datum.html == null) {\n                            var data = datum.data;\n                            datum.html =\n                                Object.keys(data).reduce(function(p, c) {\n                                    p.html += \"<li>\" + c + \":\" + p.data[c] + \"</li>\";\n                                    return p;\n                                }, {\n                                    html: \"<b>\" + datum.name + \"</b>\",\n                                    data: data\n                                }).html;\n                        }\n                        if (chart.elTip == null) chart.elTip = angular.element(\"#timelines-tip\");\n                        chart.elTip.html(datum.html);\n\n                    }).on(\"mouseout\", function() {\n                        chart.elTip.html(\"<b>Rollover Event For Details</b>\");\n                    });\n                cols\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n\n                // Brush\n                chart.rPatients.call(brushSelect);\n                brushSelect.on(\"end\", function() {\n                    if (d3.event.selection == null) {\n                        return;\n                    }\n                    var lowerIndex = Math.floor(d3.event.selection[0] / yZoom / 20);\n                    var upperIndex = Math.ceil(d3.event.selection[1] / yZoom / 20);\n                    var ids = [];\n                    for (var i = lowerIndex; i <= upperIndex; i++) {\n                        ids.push(patientsFiltered[i].id);\n                    }\n                    osCohortService.setPatientCohort(ids, \"All Patients\");\n                    chart.rPatients.call(d3.event.target.move, null);\n                });\n            };\n\n            var updateZoom = function(height) {\n                height -= 70;\n                baseZoomY = height / (patientsFiltered.length * heightRow);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                chart.gPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            };\n\n            var configSize = function(height, width, layout) {\n                height -= 70;\n                width -= 20;\n                chart.elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.d3ScrollY.attr(\"height\", height);\n                chart.d3ScrollX.attr(\"width\", width);\n                chart.d3Chart.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.rPatients.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.gAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                });\n                chart.rAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                }).attr(\"width\", width).attr(\"fill\", \"#FFF\");\n            };\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n            var updateAxis = function() {\n                axis = d3.axisBottom(scaleX).ticks(7);\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                chart.gAxis.call(axis);\n            };\n\n            var configScrollbars = function(height, width) {\n                chart.d3ScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height - 70;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (20 * patientsFiltered.length * yZoom) * -lowerPercent;\n                        } else {\n\n                            if (yZoom == baseZoomY && yTran == 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            chart.d3ScrollY.call(brushY.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                chart.d3ScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran == 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            chart.d3ScrollX.call(brushX.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        var st = d3.zoomIdentity.translate(xTran).scale(xZoom).rescaleX(scaleX);\n                        var axis = d3.axisBottom(st).ticks(7);\n                        if (vm.timescale.name == 'Linear') {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(d);\n                            });\n                        } else {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                            });\n                        }\n                        chart.gAxis.call(axis);\n\n                    })\n                );\n            };\n\n            vm.update = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                updateData();\n                configSize(height, width, layout);\n                configScrollbars(height, width);\n                updateEvents(height, width);\n                updateZoom(height, width);\n                updateAxis(height, width);\n            }\n\n            osApi.onResize.add(vm.update);\n\n            function resize() {\n                _.debounce(vm.update, 300);\n            }\n            angular.element($window).bind('resize', resize);\n\n            /* Init Data */\n            osApi.setBusy(true);\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start != null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end == null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end == null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        p[c.name] = c;\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n\n                patientsAll = data.filter(function(v) {\n                    try {\n                        v.status = v.hash[\"Status\"].data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                    return false;\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Drug\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n                vm.update();\n                osApi.setBusy(false);\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osApi.onResize.remove(vm.update);\n                angular.element($window).unbind('resize', resize);\n                brushY.on(\"end\", null);\n                brushX.on(\"end\", null);\n\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            var cohorts = angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            } else {\n                if (pc.ids.length > 0) {\n                    cohorts.push({\n                        id: \"Last Selection\",\n                        ids: pc.ids,\n                        name: \"Last Selection\",\n                        time: new Date()\n                    });\n                }\n            }\n            // var selectedIds = (pc==null) ? [] : pc.ids;\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohorts = cohorts;\n\n            vm.all = {\n                show: true,\n                color: '#000'\n            };\n\n            var colors = [\"#E91E63\", \"#673AB7\", \"#2196F3\", \"#00BCD4\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\"]; //['#004358','#800080','#BEDB39','#FD7400','#1F8A70'];\n            for (var i = 0; i < vm.cohorts.length; i++) {\n                vm.cohorts[i].show = true;\n                vm.cohorts[i].color = colors[i];\n            }\n\n            vm.toggle = function() {\n                osCohortService.getSurvivalData(vm.cohorts.filter(function(c) {\n                    return c.show;\n                }), vm.all.show, \"SurvivalController\");\n            };\n\n            // Create D3 Elements\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n\n            // Create D3 Axis Objects + Layout\n            var data = {};\n\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n\n            var setScale = function(timelineDomain) {\n                var osLayout = osApi.getLayout();\n\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - 60;\n                layout.height = $window.innerHeight - 160;\n                angular.element(\"#survival-chart\").css(\"margin-left\", osLayout.left + 20);\n                elChart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", layout.height);\n\n                layout.xScale = d3.scaleLinear()\n                    .domain(timelineDomain)\n                    .range([50, layout.width]);\n\n                layout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([layout.height - 50, 0]);\n\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n\n                elYAxis.attr(\"transform\", \"translate(50, 10)\").call(layout.yAxis);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.yScale(0) + 10) + \")\").call(layout.xAxis);\n            }\n\n            var onSurvivalData = function(result) {\n                if (result.data.cmd == \"getSurvivalData\") {\n                    if (result.data.data.correlationId == \"SurvivalController\") {\n                        data = result.data.data;\n                        draw();\n                    }\n                }\n            }\n            osCohortService.onMessage.add(onSurvivalData);\n\n            var addCurve = function(points) {\n\n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) {\n                        return layout.xScale(d[0]);\n                    })\n                    .y(function(d) {\n                        return layout.yScale(d[2]) + 10;\n                    });\n\n                elChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", 1.5)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"d\", valueline(points.data.line))\n                    .on(\"mouseover\", function() {\n                        d3.select(this).attr(\"stroke-width\", 3)\n                    })\n                    .on(\"mouseout\", function() {\n                        d3.select(this).attr(\"stroke-width\", 1)\n                    });\n\n                for (var i = 0; i < points.data.tick.length; i++) {\n                    elChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", .5)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", layout.yScale(points.data.tick[i][2]) + 5)\n                        .attr(\"y2\", layout.yScale(points.data.tick[i][2]) + 10);\n                }\n            }\n\n            var draw = function() {\n\n                // Clear Lines\n                elChart.selectAll(\".line\").remove();\n\n                // Set Scale\n                setScale([data.min, data.max]);\n\n                // Draw Lines\n                for (var i = 0; i < data.cohorts.length; i++) {\n                    addCurve(data.cohorts[i]);\n                }\n                osApi.setBusy(false);\n\n            };\n\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onMessage.remove(onSurvivalData);\n\n            });\n\n            // Load Data\n            vm.toggle();\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n            \n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v){\n                                return {name:v, color:colorMap[v]};\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function(){\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v){ return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n                    \n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n  \n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n                    \n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var osCohortServiceUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (osCohortServiceUpdate) {\n                    selectedIds = patients.ids;\n                    setSelected();\n                } else {\n                    osCohortServiceUpdate = true;\n                }\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Points.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n         \n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model\n            var vm = (function(vm, osApi) {\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        $fields: ['type', 'geneset', 'source']\n                    })\n                    .then(function(response) {\n                        var mr = response.data.reduce(function(p, c) {\n                            if (!p.hasOwnProperty(c.geneset)) p[c.geneset] = [];\n                            p[c.geneset].push({\n                                name: c.type,\n                                source: c.source,\n                                label: (c.type + \"-\" + c.source).toUpperCase().replace(/-/gi, \" - \")\n                            });\n                            return p;\n                        }, {});\n                        vm.geneSets = Object.keys(mr).reduce(function(p, c) {\n                            p.rv.push({\n                                name: c,\n                                types: p.values[c],\n                                label: c.toUpperCase()\n                            });\n                            return p;\n                        }, {\n                            rv: [],\n                            values: mr\n                        }).rv.sort(function(a, b) {\n                            return a.label > b.label;\n                        });\n\n                        vm.geneSet = vm.geneSets[0];\n                    });\n                return vm;\n\n            })(this, osApi);\n\n            // Updates PCA Types When Geneset Changes\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet==null) return;\n                \n                // Sort PCA Types Alphabetically Then By Source R-Alpha (to put ucsc first)\n                vm.pcaTypes = vm.geneSet.types.sort(function(a, b) {\n                    if (a.name != b.name) return a.name > b.name;\n                    else return a.source < b.source;\n                });\n                vm.pcaType = vm.pcaTypes[0];\n            });\n\n            // Fetches PCA Data + Calculates Min Max for XYZ\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (geneset == null) return;\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        type: vm.pcaType.name,\n                        source: vm.pcaType.source\n                    })\n                    .then(function(response) {\n                        vm.pc1 = response.data[0].pc1;\n                        vm.pc2 = response.data[0].pc2;\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: response.data[0].data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n\n                        draw();\n                    });\n            });\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (this[v.id] != undefined) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", .8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(5);\n                axisY = d3.axisLeft().scale(scaleY).ticks(5);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + scaleY(0) + \")\")\n                    .call(axisX)\n                    .append(\"text\")\n                    .attr(\"x\", 50)\n                    .attr(\"y\", 15)\n                    .text(\"PC1\");\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + scaleX(0) + \", 0)\")\n                    .call(axisY)\n                    .append(\"text\")\n                    .attr(\"y\", 55)\n                    .attr(\"x\", 25)\n                    .text(\"PC2\");\n\n                // Brush\n                var brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osCohortService.setPatientCohort([], \"PCA\");\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n         \n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n\n                        osCohortService.setPatientCohort(ids, \"PCA\");\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush)\n\n\n                \n                setSelected();\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osCohortService, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            // History Integration\n            /*\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            */\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            }\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                    container: elChart,\n                    elements: markersNetwork.elements,\n                    style: getStyle(),\n                    minZoom: .1,\n                    maxZoom: 5,\n                    zoom: 0.2,\n                    wheelSensitivity: .5,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                })\n\n                //.on('select', 'node', _.debounce(saveSelected, 300))\n                .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            //vm.frame = $sce.trustAsResourceUrl(\"https://resources.sttrcancer.org/markers-patients\");\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    })\n\n                // Register History Component\n                /*\n                osHistory.onGeneSelectionChange.add(function(selection){\n                    selectedIds = selection.ids;\n                    setSelected();\n                });\n                setSelected();\n                */\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \"/api/\";\n         url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osCohortService', osCohortService);\n\n    /** @ngInject */\n    function osCohortService(osApi, moment, signals, localStorage) {\n\n        var onMessage = new signals.Signal();\n        var onPatientsSelect = new signals.Signal();\n        var onGenesSelect = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        var worker = new Worker(\"app/components/oncoscape/oncoscape.cohort.service.worker.js\");\n        worker.addEventListener('message', function(msg) {\n            if (msg.data.cmd == \"filterPatients\") {\n                setPatientCohort(msg.data.data, \"Filter\")\n            }else if (msg.data.cmd == \"validatePatientIds\"){\n                setPatientCohort(msg.data.data, \"Import\");\n                addPatientCohort();\n            }else {\n                onMessage.dispatch(msg);\n            }\n        }, false);\n\n        var allGeneCohorts = [],\n            activePatientCohort,\n            activeGeneCohort;\n\n        var allPatientCohorts = [];\n        var colors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70'];\n        osApi.onDataSource.add(function(datasource) {\n\n            worker.postMessage({\n                cmd: \"setPatientDataSource\",\n                data: datasource.clinical.patient\n            });\n\n            allPatientCohorts = localStorage.getItem(osApi.getDataSource().disease + \"PatientCohorts\");\n            allPatientCohorts = (allPatientCohorts == null) ? [] : angular.fromJson(allPatientCohorts);\n            for (var i = 0; i < allPatientCohorts.length; i++) {\n                allPatientCohorts[i].color = colors[i];\n            }\n            onCohortsChange.dispatch(allPatientCohorts);\n        });\n\n        var _patientColor = {\n            name: 'xxx',\n            data: [{\n                name: 'Patient',\n                color: '#1396DE',\n                show: true\n            }]\n        };\n\n\n        var setPatientColor = function(val) {\n            _patientColor = val;\n            onPatientColorChange.dispatch(_patientColor);\n        }\n\n        var getSurvivalData = function(cohorts, all, correlationId) {\n            worker.postMessage({\n                cmd: \"getSurvivalData\",\n                data: {\n                    cohorts: cohorts,\n                    all: all,\n                    correlationId: correlationId\n                }\n            });\n        };\n\n        var getPatientMetric = function() {\n            if (!activePatientCohort.ids) return;\n            worker.postMessage({\n                cmd: \"getPatientMetric\",\n                data: activePatientCohort.ids\n            });\n        };\n\n        var getPatientCohorts = function() {\n            return allPatientCohorts;\n        };\n        var getPatientCohort = function() {\n            return activePatientCohort;\n        };\n        var addPatientCohort = function() {\n            if (allPatientCohorts.indexOf(activePatientCohort) != -1) return;\n            activePatientCohort.color = colors[allPatientCohorts.length];\n            allPatientCohorts.push(activePatientCohort);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n        var importPatientCohort = function(ids){\n            worker.postMessage({\n               cmd: \"validatePatientIds\",\n               data: ids \n            });\n        }\n\n        var delPatientCohort = function(obj) {\n            allPatientCohorts.splice(allPatientCohorts.indexOf(obj), 1);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n\n        var setPatientCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activePatientCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onPatientsSelect.dispatch(activePatientCohort);\n        };\n        var filterActivePatientCohort = function(bounds, prop, type) {\n            worker.postMessage({\n                cmd: \"filterPatients\",\n                data: {\n                    ids: activePatientCohort.ids,\n                    type: type,\n                    bounds: bounds,\n                    prop: prop\n                }\n            });\n        }\n\n        var getGeneMetric = function() {};\n        var getGeneCohorts = function() {\n            return allGeneCohorts;\n        };\n        var getGeneCohort = function() {\n            return activeGeneCohort;\n        };\n        var addGeneCohort = function() {\n            allGeneCohorts.push(activeGeneCohort);\n        };\n        var delGeneCohort = function(obj) {\n            allGeneCohorts.splice(allGeneCohorts.indexOf(obj), 1);\n        };\n        var setGeneCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activeGeneCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onGenesSelect.dispatch(activeGeneCohort);\n        };\n\n        var api = {\n            onMessage: onMessage,\n            onPatientsSelect: onPatientsSelect,\n            onCohortsChange: onCohortsChange,\n            onPatientColorChange: onPatientColorChange,\n            getPatientCohorts: getPatientCohorts,\n            getPatientCohort: getPatientCohort,\n            setPatientCohort: setPatientCohort,\n            addPatientCohort: addPatientCohort,\n            delPatientCohort: delPatientCohort,\n            importPatientCohort: importPatientCohort,\n            getPatientMetric: getPatientMetric,\n            onGenesSelect: onGenesSelect,\n            getGeneCohorts: getGeneCohorts,\n            getGeneCohort: getGeneCohort,\n            setGeneCohort: setGeneCohort,\n            addGeneCohort: addGeneCohort,\n            delGeneCohort: delGeneCohort,\n            getGeneMetric: getGeneMetric,\n            getSurvivalData: getSurvivalData,\n            setPatientColor: setPatientColor,\n            filterActivePatientCohort: filterActivePatientCohort\n        };\n\n        return api;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n                id: 'guest',\n                name: 'Guest',\n                icon: 'fa fa-user'\n            }, {\n                id: 'facebook',\n                name: 'Facebook',\n                icon: 'fa fa-facebook',\n                key: '142281766208909',\n                mode: 'implicit'\n            }, {\n                id: 'github',\n                name: 'GitHub',\n                icon: 'fa fa-github-alt',\n                key: '78b5dbe2ba756151169e',\n                mode: 'explicit'\n            }, {\n                id: 'google',\n                name: 'Google',\n                icon: 'fa fa-google-plus',\n                key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n                mode: 'implicit'\n            }, {\n                id: 'instagram',\n                name: 'Instagram',\n                icon: 'fa fa-instagram',\n                key: '3578c1b7c8c248c6ba80784b9ede0c52',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }, {\n                id: 'twitter',\n                name: 'Twitter',\n                icon: 'fa fa-twitter',\n                key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n                mode: 'implicit'\n            }, {\n                id: 'windows',\n                name: 'Win Live',\n                icon: 'fa fa-windows',\n                key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n                mode: 'implicit'\n            }, {\n                id: 'dropbox',\n                name: 'Dropbox',\n                icon: 'fa fa-dropbox',\n                key: 'dropbox',\n                mode: 'implicit'\n            }, {\n                id: 'flickr',\n                name: 'Flickr',\n                icon: 'fa fa-flickr',\n                key: '',\n                mode: 'implicit'\n            }\n            //{id:'tinder',   name:'Tinder', icon:'fa fa-fire',       key:'', mode:'implicit'}\n        ];\n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, $) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n        // DataSources\n        var _dataSources;\n        var _dataSource;\n        var getDataSources = function() {\n            return _dataSources;\n        };\n        var getDataSource = function() {\n            return _dataSource;\n        };\n        var setDataSource = function(value) {\n            if (angular.isObject(value)) {\n                if (_dataSource != value) {\n                    _dataSource = value;\n                    onDataSource.dispatch(_dataSource);\n                }\n            } else if (angular.isString(value)) {\n                if (_dataSource.disease != value) {\n                    if (_dataSource != value) {\n                        _dataSource = _dataSources.filter(function(v) {\n                            return v.disease == this.key\n                        }, {\n                            key: value\n                        })[0]\n                        onDataSource.dispatch(_dataSource);\n                    }\n                }\n            }\n        };\n\n        // Initialize\n        function init() {\n            return $q(function(resolve, reject) {\n                query(\"lookup_oncoscape_datasources\", {\n                    beta: false\n                }).then(function(response) {\n                    //query(\"lookup_oncoscape_datasources\").then(function(response) {\n                    _dataSources = response.data\n                        .filter(function(d) {\n                            return angular.isDefined(d.img)\n                        })\n                        .map(function(d) {\n                            d.name = d.name.trim();\n                            return d;\n                        })\n                        .sort(function(a, b) {\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                    resolve(_dataSources);\n                }, reject);\n            });\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        // Returns Promise\n        var _cpuApi;\n        (function(serviceEndpoint) {\n            var server = serviceEndpoint.substring(0, serviceEndpoint.replace(\"//\", \"--\").indexOf(\"/\"));\n            var createMethod = function(obj, method) {\n                var fnName = 'get' + method.charAt(0).toUpperCase() + method.slice(1).toLowerCase();\n                obj[fnName] = function(options) {\n                    return new Promise(function(resolve) {\n                        $.ajax({\n                            url: serviceEndpoint + \"/\" + method,\n                            type: \"POST\",\n                            data: angular.toJson(options),\n                            contentType: \"application/json; charset=utf-8\",\n                            dataType: \"text\",\n                            beforeSend: function(xhr, settings) {\n                                settings.xhrFields = settings.xhrFields || {};\n                                settings.xhrFields.withCredentials = false;\n                                settings.crossDomain = true;\n                            }\n                        }).done(function(response) {\n                            response = response.split(\"\\n\");\n                            var url = server + response[0];\n                            $.ajax({\n                                url: url,\n                                type: \"GET\",\n                                crossDomain: true,\n                                beforeSend: function(xhr, settings) {\n                                    settings.xhrFields = settings.xhrFields || {};\n                                    settings.xhrFields.withCredentials = false;\n                                    settings.crossDomain = true;\n                                }\n                            }).done(function(response) {\n                                resolve(response);\n                            });\n                        });\n                    });\n                }\n            }\n            return new Promise(function(resolve) {\n                $.get(serviceEndpoint).then(function(methods) {\n                    var api = methods.split(\"\\n\").reduce(function(obj, method) {\n                        if (method != \"\") createMethod(obj, method)\n                        return obj;\n                    }, {})\n                    api.getEndpoint = function() {\n                        return serviceEndpoint;\n                    }\n                    resolve(api);\n                });\n            });\n        })(\"https://oncoscape-test.fhcrc.org/ocpu/library/oncoscape/R\").then(function(v) {\n            _cpuApi = v;\n        });\n        var getCpuApi = function(){ return _cpuApi; };\n\n        return {\n            init: init,\n            query: query,\n            getCpuApi: getCpuApi,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            getLayout: getLayout,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            setBusy: setBusy\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, osCohortService, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            //'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            //'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"telomere\"]',\n                        style: {\n                            'background-color': \"#3993fa\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            //'border-opacity': .3,\n                            'border-width': 5\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"right\",\n                            'text-margin-x': 5,\n                            'color': '#000',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            'border-width': 5\n                                //'background-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"annotation-text\"]',\n                        style: {\n                            'font-size': '400px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFF',\n                            'height': '0px',\n                            'width': '0px',\n                            'shape': 'round',\n                            'label': \"data(label)\",\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: .5,\n                    //motionBlur: true,\n                    //motionBlurOpacity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: .05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#3993fa\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })()\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                }\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function() {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = [{\n                    name: 'mutation',\n                    abv: 'm',\n                    show: true,\n                    color: '#9C27B0',\n                    class: 'switch-mutation',\n                    count: '',\n                    id: 0\n                }, {\n                    name: 'cnGain.1',\n                    abv: 'cnG1',\n                    show: true,\n                    color: '#03A9F4',\n                    class: 'switch-cnG1',\n                    count: '',\n                    id: 1\n                }, {\n                    name: 'cnGain.2',\n                    abv: 'cnG2',\n                    show: true,\n                    color: '#3F51B5',\n                    class: 'switch-cnG2',\n                    count: '',\n                    id: 2\n                }, {\n                    name: 'cnLoss.1',\n                    abv: 'cnL1',\n                    show: true,\n                    color: '#FF9800',\n                    class: 'switch-cnL1',\n                    count: '',\n                    id: -1\n                }, {\n                    name: 'cnLoss.2',\n                    abv: 'cnL2',\n                    show: true,\n                    color: '#F44336',\n                    class: 'switch-cnL2',\n                    count: '',\n                    id: -2\n                }];\n\n                // Populate Dropdowns + Draw Chromosome\n                $q.all([\n                    osApi.query(\"render_chromosome\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'cluster',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'color',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    })\n                ]).then(function(results) {\n\n                    vm.optGeneSets = results[0].data;\n\n                    if (osApi.getDataSource().disease == \"brain\") {\n                        vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                            return v.name == \"TCGA pancan mutated\";\n                            //    \"Marker genes 545\"; \n                        })[0]\n                    } else {\n                        vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                            return v.name == \"TCGA pancan mutated\";\n                        })[0]\n                    }\n\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                });\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi);\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50)\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function() {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([.005, 20]).range([5, 1])\n            var nodeScale = d3.scaleLog().domain([.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([.01, 2]);\n            var resizeNodes = function() {\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < .375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n            }\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length==0) return;\n                        var items = data.map(function(item) {\n                            return this.getElementById(item);\n                        }, cyChart);\n                        cyChart.collection(items).remove();\n\n                    // } catch () {\n\n                    // }\n                };\n                // cmd.patients_html = function(data) {\n                //     patientHtml = data;\n                // };\n                // cmd.patients_resize = function() {\n\n                // };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.patients;\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 100\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                   \n                    //Initial Node Selection\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                            pc: pc\n                        });\n                        cyChart.endBatch();\n                        vm.zoom.reset()\n                        cyChart.center();\n                        cyChart.fit(cyChart.nodes(), 400);\n                    }\n                    \n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text'],edge[nodeType='annotation-line'],node[nodeType='annotation-point']\").remove();\n                    if (data.annotation) {\n                        cyChart.add(data.annotation);\n\n                    }\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        //try {\n                            var pos = data.data[node.id()];\n                            pos.x -= 4000;\n                            node.position(pos);\n                        //} catch (e) {}\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 500\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.add(data.edges);\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    var edges = osApi.getDataSource().edges.filter(function(f) {\n                        return f.name == this.geneset\n                    }, {\n                        geneset: geneset\n                    })[0];\n\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        edges: {\n                            patientWeights: edges.patientWeights,\n                            geneWeights: edges.genesWeights,\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.name == this)\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                }\n            })(cyChart, vm)\n\n            vm.cmd = function() {};\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function(vm, $scope) {\n                var watches = 1;\n\n                var firstTime = true;\n                var update = function(){\n                    if (firstTime){\n                        firstTime=false;\n                        if (hydrate()) return;    // If Hydration Was Possible\n                    }\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n                    \n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n                // Search\n                watches += 1;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    var needle = vm.search.toUpperCase().trim();\n                    if (needle.length > 0) cyChart.$('node').filter(function(i, ele) {\n                        return (ele.id().toUpperCase().indexOf(needle) == 0);\n                    }).select();\n                }, 600))\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize()\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length == 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n            \n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setPatientCohortUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (setPatientCohortUpdate) {\n                    cyChart.startBatch();\n                    cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (patients.ids.indexOf(node.id()) != -1) node.select();\n                    });\n                    cyChart.endBatch();\n                }\n                setPatientCohortUpdate = true;\n            });\n\n            function setPatientCohort() {\n                setPatientCohortUpdate = false;\n                osCohortService.setPatientCohort(\n                    cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                        return p.data().id\n                    }),\n                    \"Markers + Patients\"\n                );\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length == 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n\n                        }\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5')\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Hydration\n            var hydrateDisease;\n            var hydrate = function(){\n                hydrateDisease = osApi.getDataSource().disease;\n                var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                if (data===null) return false;\n                else{\n                    data = angular.fromJson(data);\n                    cyChart.load(data.elements);\n                    vm.resize();\n                    var elements = cyChart.nodes('node[nodeType=\"patient\"]');\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n                     \n\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                            pc: pc\n                        });\n                        cyChart.endBatch();\n                    }\n                    \n                }\n                osApi.setBusy(false);\n                return true;\n            }\n            var dehydrate = function(){\n                var data = angular.toJson(cyChart.json());\n                // Geneset / Edge Visibility / Color Option / Layout\n                localStorage.setItem(hydrateDisease + \"MarkersPatients\", data);\n            }\n            // Destroy\n            $scope.$on('$destroy', function() {\n                dehydrate();\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osCohortService, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, Handsontable) {\n\n            var queryMethod = function (queryStr, value) {\n                if (queryStr==\"\") return false;\n                if (value==null) return false;\n                return (value.toString().toUpperCase().indexOf(queryStr)!=-1);\n            };\n\n            // Properties\n            var vm = this;\n            var elGrid, htGrid;\n            var data, filteredData, settings = {\n                manualColumnResize: true,\n                manualColumnMove: true,\n                fixedRowsTop: 0,\n                readonly: true,\n                contextMenu: true,\n                columnSorting: true,\n                sortIndicator: true,\n                comments: true,\n                allowEmpty: true,\n                autoColumnSize: {\n                    samplingRatio: 23\n                },\n                search: {\n                    queryMethod: queryMethod\n                },\n                mergeCells: false\n            };\n\n\n            elGrid = angular.element(\"#history-grid\");\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) osCohortService.setPatientCohort([], \"All Patients\");\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            // Intialize View State\n            (function(vm) {\n                vm.datasource = osApi.getDataSource();\n                vm.cohortMode = 'Filter';\n                vm.search = \"\";\n                vm.collections = Object.keys(vm.datasource.clinical)\n                    .map(function(key) {\n                        var v = this.data[key];\n                        return {\n                            name: key,\n                            collection: v\n                        };\n                    }, {\n                        data: vm.datasource.clinical\n                    })\n                    .filter(function(o) {\n                        return o.name != \"events\";\n                    });\n                vm.collection = vm.collections[0];\n\n            })(vm);\n\n            vm.exportCsv = function() {\n\n                var data = htGrid.getData();\n                var tmpColDelim = String.fromCharCode(11),\n                    tmpRowDelim = String.fromCharCode(0),\n                    colDelim = '\",\"',\n                    rowDelim = '\"\\r\\n\"',\n                    csv = '\"' + data.map(function(rval) {\n                        return rval.map(function(cval) {\n                            // escape double quotes\n                            var out = \"\";\n                            if (!cval) {\n                                out = cval.toString();\n                            }\n                            return out;\n                        }).join(tmpColDelim);\n                    }).join(tmpRowDelim)\n                    .split(tmpRowDelim).join(rowDelim)\n                    .split(tmpColDelim).join(colDelim) + '\"';\n                var encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csv);\n                $window.open(encodedUri);\n            }\n\n            var filterData = function(){\n                \n                filteredData = (selectedIds.length==0) ? data : data\n                    .filter(function(v){\n\n                        return (this.indexOf(v.patient_ID)!=-1)\n                    }, selectedIds);\n                \n                htGrid.loadData(filteredData);\n                htGrid.render();\n                \n            }\n\n\n            var setData = function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        data = response.data.map(function(v){\n                            v.color = \"#0b97d3\";\n                            return v;\n                        });\n\n                        vm.columns = Object.keys(data[0]).map(function(v) {\n                            return {\n                                field: v,\n                                displayName: v.replace(/_/g, \" \").toUpperCase(),\n                                show: true\n                            };\n                        });\n                       \n                        if (htGrid == null) {\n                            settings.startCols = vm.columns.length;\n                            htGrid = new Handsontable(elGrid[0], settings);\n                        }\n\n                        vm.setSize(false);\n                        \n                        filterData();\n                        vm.setColumns(false);\n                        osApi.setBusy(false);\n\n                    });\n            };\n            \n          \n            var rowRenderer = function(instance, td, row){\n                Handsontable.TextRenderer.apply(this, arguments);\n\n                td.style['color'] = filteredData[row]['color'];\n            }\n\n\n            vm.setColumns = function(render) {\n                var cols = vm.columns.filter(function(v) {\n                    return v.show;\n                });\n\n                settings.colHeaders = cols.map(function(v) {\n                    return v.displayName;\n                });\n                settings.columns = cols.map(function(v) {\n                    return { data: v.field };\n                });\n                settings.cells = function () {\n                    var cellProps = {};\n                    cellProps.renderer = rowRenderer;\n                    return cellProps;\n                };\n\n                htGrid.updateSettings(settings);\n                htGrid.render();\n                if (render) htGrid.render();\n            };\n\n            vm.setSize = function() {\n                var osLayout = osApi.getLayout();\n                elGrid.css(\"margin-left\", (osLayout.left-30) + \"px\");\n                elGrid.css(\"width\", ($window.innerWidth - osLayout.left - osLayout.right - 80) + \"px\");\n                elGrid.css(\"height\", ($window.innerHeight - 170) + \"px\");\n                htGrid.render();\n            }\n\n            $scope.$watch(\"vm.collection\", setData);\n            $scope.$watch(\"vm.search\", function(v){\n                if (angular.isUndefined(htGrid)) return;\n                htGrid.search.query(v.toUpperCase().trim());\n                htGrid.render();\n            });\n\n\n            // resize\n            osApi.onResize.add(vm.setSize);\n            var resize = function() {\n                    vm.setSize(true);\n                } // Should Debounce.\n            angular.element($window).bind('resize', resize);\n\n\n            vm.resetFilter = function(){\n                selectedIds = [];\n                filterData();\n            }\n\n            var onPatientSelect = function(patients){\n                selectedIds = patients.ids;\n                filterData();\n            };\n            osCohortService.onPatientsSelect.add(onPatientSelect);\n\n\n            var onPatientColorChange = function(colors){\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n\n                data.forEach(function(data){\n                    data.color = this[data.patient_ID]\n                }, degMap)\n            };\n            osCohortService.onPatientColorChange.add(onPatientColorChange)\n\n            // Load Datasets\n            osApi.setBusy(true);\n\n         \n            // Destroy\n            $scope.$on('$destroy', function() {\n                //osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osCohortService.onPatientColorChange.remove(onPatientColorChange)\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                {name:'Blues', value:[\"#303f9f\",\"#03a9f4\"]},\n                {name:'Black / Blue', value:[\"#000000\",\"#1d85cb\"]},\n                {name:'Black / Red', value:[\"#000000\",\"#D32F2F\"]},\n                {name:'Red / Yellow', value:[\"#D32F2F\",\"#FFEB3B\"]}\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{name:'None'},{name:'Row'},{name:'Column'}]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                {name:'One',value:1},\n                {name:'Two',value:2},\n                {name:'Three',value:3},\n                {name:'Four',value:4},\n                {name:'Five',value:5},\n                {name:'Six',value:6},\n                {name:'Seven',value:7},\n                {name:'Eight',value:8},\n                {name:'Nine',value:9},\n                {name:'Ten',value:10}\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n            \n            // Load Inital Data\n            var args;\n            var data;\n\n           \n            function axis(svg, data, width, height, x, y, rotated){\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n                    \n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\",x)\n                    .style(\"top\",y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width:height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n                \n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d,i) { return yScale(i+.8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\",\"12px\")\n                    .text( function(d){ return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n                \n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width,height] : [height,width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width,0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l){\n                    return {\n                        source: {x: l.source.x, y:l.source.data.height},\n                        target: {x: l.target.x, y:l.target.data.height},\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n                \n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\",\"#FFF\")\n\n                if (rotated){\n                    var transform = \"rotate(90,\" + height/2 + \",\" + height/2 + \") translate(0,\"+(-width+height)+\")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n                \n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d){\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                        y(d.source.y) + \",\" + d.target.x + \" \" +\n                        y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d){\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g:dendrG, \n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height,x,y){\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\",x).style(\"top\",y).style(\"position\",\"absolute\");\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n                \n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n                var cols = data.dim[1];\n                var rows = data.dim[0];\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend(){\n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    d3.event.selection.map(function(v){ return this.invert(v[0], v[1]); },xScale);\n                    d3.event.selection.map(function(v){ return this.invert(v[1], v[0]); },yScale);                    \n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n                \n                var boxes = map.selectAll('box').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .property(\"colIndex\", function(d, i) { return i % cols; })\n                    .property(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(Math.floor(i / cols)); })\n                    .attr(\"width\", x(1)-grid)\n                    .attr(\"height\", y(1)-grid)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data\n                }\n            }\n\n            function zoom(){\n\n\n                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                colDendObj.g.call(xZoomBehavior);\n                rowDendObj.g.call(yZoomBehavior);\n                xZoomBehavior.on('zoom', function() {\n\n                    var col = colDendObj;\n                    var colY = col.scaleY;\n                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                    \n                    col.g.selectAll(\"polyline\")\n                        .data(col.links)\n                        .attr(\"points\", function(d){\n                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                        });\n                });\n                yZoomBehavior.on('zoom', function() {\n\n                    var row = rowDendObj;\n                    var rowY = row.scaleY;\n                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                    \n                    row.g.selectAll(\"polyline\")\n                        .data(row.data)\n                        .attr(\"points\", function(d){\n                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                        });\n                });\n            \n\n\n            }\n            \n            osApi.setBusy(true);\n             vm.loadData = function(){\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {data:response.data.map(function(v){ \n                        Object.keys(v.patients).forEach(function(key){\n                            if (this[key]==null) this[key] = 0;\n                        },v.patients);\n                        return v.patients; \n                    })};\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function(){\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v){\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function(){\n                \n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                colmapObj = heatmap(colmap, data.matrix, \n                    hmWidth, \n                    hmHeight, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, \n                    (vm.colDendrogram ? 80 : 0));\n\n                rowDendObj = dendrogram(rowDend, data.rows,    \n                    80, hmHeight, \n                    layout.left+20, (vm.colDendrogram ? 80 : 0) , false);\n\n                colDendObj = dendrogram(colDend, data.cols,    \n                    hmWidth, 80, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, 0, true);\n\n                axis(xaxis, \n                    data.matrix.rows,     \n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0)+layout.left+20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0)+layout.left+20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n            \n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw,300));\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osCohortService, osAuth, $stateParams, $state, $timeout, $rootScope) {\n\n            osApi.query(\"lookup_oncoscape_tools\", {\n                beta: false\n            }).then(function(response) {\n                vm.tools = response.data;\n\n            });\n\n            osApi.onDataSource.add(function() {\n                $timeout(function() {\n                    vm.datasets = osApi.getDataSources();\n                });\n            });\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.addPatientCohort = osCohortService.addPatientCohort;\n            vm.setPatientCohort = osCohortService.setPatientCohort;\n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n            });\n            vm.importPatientIds = \"\";\n            vm.importPatientCohort = function(){\n                var ids = vm.importPatientIds.split(\",\").map(function(v){ return v.trim(); });\n                osCohortService.importPatientCohort(ids);\n            };\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.showCohorts = false;\n            vm.showHelp = false;\n            vm.showLogout = false;\n\n            var currentTool;\n            var onStateChangeStart = $rootScope.$on('$stateChangeStart', function(event, toState) {\n                currentTool = toState.name;\n                switch (toState.name) {\n                    case \"landing\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        vm.showLogout = false;\n                        vm.showCohorts = false;\n                        vm.showHelp = false;\n                        break;\n                    case \"tools\":\n                        vm.showTools = true;\n                        break;\n                    case \"datasource\":\n                        vm.showHelp = true;\n                        vm.showDatasets = true;\n                        vm.showCohorts = true;\n                        vm.showLogout = true;\n                        vm.showTools = false;\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', onStateChangeStart);\n\n            vm.loadDataset = function(dataset) {\n                $state.go(currentTool, {\n                    datasource: dataset\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.loadTool = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.logoutClick = function() {\n                osAuth.logout();\n                $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.disease\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, osCohortService, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                selectedIds = patients.ids;\n                setSelected();\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", false);\n                } else {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) == -1)\n                    });\n                }\n            }\n\n            // Properties\n            var vm = this;\n\n            var rows = 3;\n            var cell = {\n                w: 0,\n                h: 0\n            };\n\n\n            var datasource = {\n                \"disease\": \"brain\",\n                \"source\": \"TCGA\",\n                \"beta\": false,\n                \"name\": \"Brain\",\n                \"img\": \"DSbrain.png\",\n                \"category\": [{\n                    \"source\": \"tcga\",\n                    \"type\": \"color\",\n                    \"collection\": \"brain_color_tcga_import\"\n                }],\n                \"molecular\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_ucsc_gistic\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_ucsc_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_cbio_gistic\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut\",\n                    \"collection\": \"brain_mut_cbio_wxs\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_cbio_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"methylation\",\n                    \"collection\": \"brain_methylation_cbio_hm27\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"rna\",\n                    \"collection\": \"brain_rna_cbio_rnaseq-bc\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"protein\",\n                    \"collection\": \"brain_protein_cbio_rppa-zscore\"\n                }],\n                \"clinical\": {\n                    \"patient\": \"brain_patient_tcga_clinical\",\n                    \"followUp-v1p0\": \"brain_followup-v1p0_tcga_clinical\",\n                    \"drug\": \"brain_drug_tcga_clinical\",\n                    \"newTumor\": \"brain_newtumor_tcga_clinical\",\n                    \"otherMalignancy-v4p0\": \"brain_othermalignancy-v4p0_tcga_clinical\",\n                    \"events\": \"brain_events_tcga_clinical\"\n                },\n                \"calculated\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein-10000\"\n                }],\n                \"edges\": [{\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_oncovogel274-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_oncovogel274-mut01-cnv\"\n                }]\n            };\n\n            var elChart = angular.element(\"#compareclusterChart\");\n            var chart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n\n            vm.allClusters = datasource.calculated.map(function(v) {\n                v.selected = true;\n                return v;\n            });\n\n            var clusters = vm.allClusters\n                .filter(function(v) {\n                    return v.collection.indexOf(\"ucsc\") != -1;\n                })\n                .filter(function(v) {\n                    return v.type == \"mds\";\n                })\n\n            clusters.pop();\n\n            function plot(p) {\n                var rect = d3.select(this);\n                rect.append(\"svg:rect\")\n                    .attr(\"class\", \"cell\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0)\n                    .attr(\"width\", cell.w)\n                    .attr(\"height\", cell.h);\n\n                var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                rect.selectAll(\"circle\")\n                    .data(p.data)\n                    .enter().append(\"svg:circle\")\n                    .attr(\"class\", \"point\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.x);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.y);\n                    })\n                    .attr(\"r\", 1);\n\n                brush.create(rect);\n\n            }\n\n            // Brushes\n            var brush = (function(d3, cell, osCohortService) {\n\n                var _brushes = [];\n\n                var start = function() {\n                    if (d3.event.selection === null) return;\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush !== d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.rect.call(b.brush.move, null);\n                        });\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush === d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.brush.on(\"end\", end);\n                        });\n                };\n                var end = function() {\n                    if (d3.event.selection === null) {\n                        osCohortService.setPatientCohort([], \"Clusters\");\n                        return;\n                    }\n                    var bv = d3.event.selection;\n                    var xMin = bv[0][0];\n                    var xMax = bv[1][0];\n                    var yMin = bv[0][1];\n                    var yMax = bv[1][1];\n\n                    var brush = _brushes.filter(function(b) {\n                        return b.brush === d3.event.target\n                    })[0];\n                    brush.brush.on(\"end\", null);\n                    var rect = brush.rect.data()[0];\n                    var xScale = d3.scaleLinear().domain(rect.xDomain).range([0, cell.w]);\n                    var yScale = d3.scaleLinear().domain(rect.yDomain).range([0, cell.h]);\n                    var ids = rect.data.filter(function(c) {\n                            var x = xScale(c.x);\n                            var y = yScale(c.y);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        })\n                        .map(function(d) {\n                            return d.id;\n                        });\n                    osCohortService.setPatientCohort(ids, \"Clusters\");\n                };\n\n                var create = function(rect) {\n                    var brush = d3.brush()\n                        .on(\"start\", start);\n                    rect.call(brush);\n                    _brushes.push({\n                        brush: brush,\n                        rect: rect\n                    });\n                }\n\n                var clear = function() {\n\n                }\n\n                var destory = function() {\n\n                }\n\n                return {\n                    create: create,\n                    clear: clear,\n                    destory: destory\n                }\n            })(d3, cell, osCohortService);\n\n            function draw() {\n\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                chart.selectAll(\"g.graph\")\n                    .data(clusters)\n                    .enter().append(\"svg:g\")\n                    .attr(\"class\", \"graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    })\n                    .each(plot);\n            }\n\n            $q.all(\n                clusters.map(function(v) { return osApi.query(v.collection)})\n            ).then(function(data) {\n                clusters = clusters.map(function(v, i) {\n                    var data = this.data[i].data[0].data;\n                    var rv = {\n                        name: v,\n                        data: Object.keys(data).reduce(function(p, c) {\n                            var datum = p.data[c];\n                            p.value.push({\n                                id: c,\n                                x: datum.x,\n                                y: datum.y\n                            });\n                            return p;\n                        }, {\n                            data: data,\n                            value: []\n                        }).value,\n                        xDomain: null,\n                        yDomain: null,\n                        col: i % this.rows,\n                        row: parseInt(i / this.rows)\n                    };\n                    var xVal = function(d) {\n                        return d.x;\n                    };\n                    var yVal = function(d) {\n                        return d.x;\n                    };\n                    rv.xDomain = [d3.min(rv.data, xVal), d3.max(rv.data, xVal)];\n                    rv.yDomain = [d3.min(rv.data, yVal), d3.max(rv.data, yVal)];\n                    return rv;\n                }, {\n                    data: data,\n                    rows: rows\n                });\n\n                draw();\n            });\n            var resize = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width).attr(\"height\", height);\n                chart.selectAll(\"g.graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    }).each(function(p) {\n                        var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                        var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                        var g = d3.select(this);\n                        g.select(\".cell\")\n                            .attr(\"width\", cell.w)\n                            .attr(\"height\", cell.h);\n                        g.selectAll(\".point\")\n                            .attr(\"cx\", function(d) {\n                                return xScale(d.x);\n                            })\n                            .attr(\"cy\", function(d) {\n                                return yScale(d.y);\n                            })\n                            .attr(\"r\", 1);\n                    });\n            };\n\n            // Listen For Resize\n            osApi.onResize.add(resize);\n            angular.element($window).bind('resize',\n                _.debounce(resize, 300)\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, osCohortService, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{name:\"Quantile\"},{name:\"Quantize\"}];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2,3,4,5,6,7,8].map(function(v){ return {name:v+\" Bins\", value:v} });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (vm.colorOptions.length!=0) vm.colorOption = vm.colorOptions[0];\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n            \n\n\n            vm.setColor = function(item) {\n\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    vm.close();\n                });\n            };\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1)\n                    };\n                });\n                osApi.query(vm.colorOption.collection, {\n                    gene: {\n                        '$in': genes.map(function(v) {\n                            return v.gene;\n                        })\n                    }\n                }).then(function(results) {\n                    if (results.data.length > 0) {\n                        var data;\n                        if (results.data.length == 1)\n                            data = results.data[0];\n                        else {\n                            data = {};\n                            data.patients = results.data.reduce(function(p, c) {\n                                var fn = p.lookup[c.gene];\n                                for (var i = 0; i < p.pids.length; i++) {\n                                    var pid = p.pids[i];\n                                    var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                    if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                    if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                }\n                                return p;\n                            }, {\n                                pids: Object.keys(results.data[0].patients),\n                                lookup: genes.reduce(function(p, c) {\n                                    p[c.gene] = c.op;\n                                    return p;\n                                }, {}),\n                                output: {}\n                            }).output;\n\n                            var range = Object.keys(data.patients).reduce(function(p, c) {\n                                p.min = Math.min(p.min, p.values[c]);\n                                p.max = Math.max(p.min, p.values[c]);\n                                return p;\n                            }, {\n                                values: data.patients,\n                                min: Infinity,\n                                max: -Infinity\n                            });\n                            data.min = range.min;\n                            data.max = range.max;\n                        }\n\n                        // Color Patients\n                        var colors = [\"#9d1cb2\",\"#00a7f7\",\"#3d4eb8\",\"#ff9900\",\"#f7412d\",\"#795548\",\"#E91E63\",\"#673AB7\"];\n                        var values = colors.splice(0, vm.colorBin.value);\n\n                        var scale = (vm.colorScale.name==\"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n                        \n\n                        // Combine Colors + Scale Into Name + Value\n                        var labels;\n                        if (vm.colorScale.name==\"Quantile\"){\n                            scale.domain(Object.keys(data).map(function(key){return data[key]},{data:data})).range(values);\n                            labels = scale.quantiles().map(function(v){ return parseFloat(v).toFixed(3); });\n                            labels.unshift(\"\");\n                            labels = labels.map(function(c,i,a){ \n                              if (i==0){ return \"-\\u221e \\u2194 \"+a[1]; }\n                              else if (i==a.length-1){\n                                 return a[i] +\" \\u2194 +\\u221e\" //\\u226C\n                              } \n                            return a[i] +\" \\u2194 \" +a[i+1];\n                            });\n                            values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                        }else{\n                            scale\n                            .domain([data.min, data.max])\n                            .range(values);\n                            labels = scale.ticks(values.length).map(function(v) { return \"~\"+parseFloat(v).toFixed(2); })\n                            values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                        }\n                        data = Object.keys(data.patients).map(function(id) {\n                                return {\n                                    id: id,\n                                    color: this.scale(this.patients[id]),\n                                    value: this.patients[id]\n                                };\n                            }, {\n                                patients: data.patients,\n                                scale: scale\n                            })\n                            .reduce(function(p, c) {\n                                if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                p[c.color].push(c.id);\n                                return p;\n                            }, {});\n\n                        data = Object.keys(data).map(function(key) {\n                            return {\n                                color: key,\n                                name: this.names.filter(function(f) {\n                                    return f.color == this.color\n                                }, {\n                                    color: key\n                                })[0].name,\n                                values: this.data[key]\n                            };\n                        }, {\n                            data: data,\n                            names: values\n                        })\n\n                        data = data.sort(function(a, b) {\n                            if (a.name.indexOf(\"-\\u221e\")!=-1) return -1;\n                            if (b.name.indexOf(\"-\\u221e\")!=-1) return 1;\n                            if (a.name.indexOf(\"+\\u221e\")!=-1) return 1;\n                            if (b.name.indexOf(\"+\\u221e\")!=-1) return -1;\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                        data.push({\n                            color: '#DDD',\n                            name: 'Null',\n                            values: []\n                        })\n\n                        colors = {\n                            dataset: osApi.getDataSource().disease,\n                            type: 'color',\n                            name: genes.reduce(function(p, c) {\n                                p += c.op + c.gene + \" \";\n                                return p;\n                            }, \"\"),\n                            data: data\n                        };\n                        osCohortService.setPatientColor(colors);\n                    }\n\n                });\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope:{ },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, osCohortService, $state, $scope, $timeout, $rootScope, d3) {\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.patientChartOption = null;\n            vm.cohortName = \"\";\n            vm.addCohort = function(){};\n            vm.setCohort = function(){};\n            vm.removeCohort = function(){};\n            vm.editItem = {name:''};\n            vm.editCohort = function(item){\n                vm.editItem = item;\n                vm.edit = true;\n            };\n            \n            vm.show = false;\n            vm.edit = false;\n            \n            \n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n                vm.show = true;\n                vm.showPatientHistory();\n                osCohortService.setPatientCohort([],\"All Patients\")\n            });\n\n            var onStateChange = $rootScope.$on('$stateChangeStart', function(event, toState){ \n                switch(toState.name){\n                    case \"landing\":\n                    case \"tools\":\n                    case \"datasource\":\n                        vm.show = false;\n                        break;\n                    default:\n                        vm.show = true;\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', onStateChange);\n\n            // Configure Tray\n            var elTray = angular.element(\".cohort-menu\");\n            var mouseOver = function(){\n                elTray\n                    .removeClass(\"tray-collapsed-left\");\n            }\n            var mouseOut = function(){\n                elTray\n                    .addClass(\"tray-collapsed-left\");\n            }\n            \n            // Configure Tabs\n            var elTabPatients = angular.element('#cohort-tab-patients');\n            var elTabGenes    = angular.element('#cohort-tab-genes');\n            vm.showPatientHistory = function(){\n                elTabPatients.addClass(\"active\");\n                elTabGenes.removeClass(\"active\");\n                vm.cohorts = osCohortService.getPatientCohorts();\n                vm.addCohort = osCohortService.addPatientCohort;\n                vm.setCohort = osCohortService.setPatientCohort;\n                vm.removeCohort = osCohortService.delPatientCohort;\n            };\n            vm.showGeneHistory = function(){\n                elTabGenes.addClass(\"active\");\n                elTabPatients.removeClass(\"active\");\n                vm.cohorts = osCohortService.getGeneCohorts();\n                vm.addCohort = osCohortService.addGeneCohort;\n                vm.setCohort = osCohortService.setGeneCohort;\n                vm.removeCohort = osCohortService.delGeneCohort;\n            };\n\n            var isLocked = true;\n            vm.toggle = function(){\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                    \n                        \n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                   \n                }\n                osApi.onResize.dispatch();\n                    \n            }   \n\n\n            var barClick =function(d){\n                \n                \n                if (vm.patientChartOption.type==\"numeric\"){\n                    var bounds = d.label.split(\"-\").map(function(v){ return parseInt(v); });\n                    var prop = vm.patientChartOption.prop;\n                    osCohortService.filterActivePatientCohort(bounds, prop, vm.patientChartOption.type);\n                }\n            }\n\n\n            // Init SVG;\n            var svg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 238)\n                .attr(\"height\", 150)\n                .append(\"g\");\n          \n            $scope.$watch('vm.patientChartOption', function(){\n\n                if (vm.patientChartOption==null) return;\n                var data = vm.patientChartOption.data;\n\n                var barWidth = Math.floor(238/data.bins);\n                if (data.histRange[0]>0) data.histRange[0] -=2;\n                \n                var yScale = d3.scaleLinear()\n                    .domain([0,data.histRange[1]])\n                    .range([0,135]);\n\n                var bars = svg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"class\",\"cohort-menu-chart-bar\")\n                        .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                        .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .on(\"click\", barClick);\n\n                    bars\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                            .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                            .attr(\"height\", function(d) { return yScale(d.value); })\n                            .attr(\"width\", barWidth)\n\n                    bars.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n\n                    var labels = svg\n                        .selectAll(\"text\")\n                        .data(data.hist)\n\n                    labels.enter()\n                        .append(\"text\")\n                        .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                        .attr(\"y\", function(d) { \n                            return 145-yScale(d.value);\n                        })\n                        .attr(\"fill\", \"#000\")\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .attr(\"font-size\", \"8px\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(function(d){ return d.label; });\n\n                    labels\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                            .attr(\"y\", function(d) { \n                                var y = 145-yScale(d.value);\n                                if (y<0) y = 20;\n                                return y;\n                            })\n                            .text(function(d){ return d.label; });\n\n                    labels.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n                            \n\n            });\n\n\n            /* SURVIVAL - This very much needs to be refactored into a component */\n            var sChart = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            \n            var sLayout = {\n                width: 238,\n                height: 170,\n                xScale : null,\n                yScale : null\n            }\n            var addCurve = function(points){\n            \n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) { return sLayout.xScale(d[0]); })\n                    .y(function(d) { return sLayout.yScale(d[2])+10; });\n\n                sChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", points.weight)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\",\"none\")\n                    .attr(\"d\", valueline(points.data.line));\n\n                for (var i=0; i<points.data.tick.length; i++){\n                    sChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", points.weight)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", sLayout.yScale(points.data.tick[i][2])+5)\n                        .attr(\"y2\", sLayout.yScale(points.data.tick[i][2])+10);\n                }\n            }\n            osCohortService.onMessage.add(function(result){\n                if (result.data.cmd==\"getSurvivalData\"){\n                    var data = result.data.data;\n                    if (data.correlationId==\"CohortMenuController\"){\n\n                        sChart\n                            .attr(\"width\", '100%')\n                            .attr(\"height\", sLayout.height+10);\n\n                        sLayout.xScale = d3.scaleLinear()\n                            .domain([result.data.data.min,  result.data.data.max])\n                            .range([0, sLayout.width]);\n\n                        sLayout.yScale = d3.scaleLinear()\n                            .domain([0,100])\n                            .range([sLayout.height,0]);\n\n                        sChart.selectAll(\".line\").remove();\n                        for (var i=0; i<data.cohorts.length; i++){\n                            if (i<data.cohorts.length-1){\n                                data.cohorts[i].weight = 1;\n                            }\n                            else{\n                                data.cohorts[i].weight = 1.5;\n                            }\n                            addCurve(data.cohorts[i]);\n                        }\n                        //addCurve(data.cohorts[0]);\n                        //data.cohorts[1].color = \"#0b97d3\";\n                        //addCurve(data.cohorts[1]);\n                    }\n                }\n            });\n            /* END SURVIVAL */\n\n\n\n\n\n\n            osCohortService.onPatientsSelect.add(function(obj){\n                if (angular.isUndefined(obj.color)){\n                    obj.color = \"#000\";\n                }\n                vm.cohortName = obj.name;\n                osCohortService.getPatientMetric();\n                var cohorts =  angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n                cohorts.push(obj);\n                osCohortService.getSurvivalData(cohorts,true,\"CohortMenuController\");\n            });\n            osCohortService.onGenesSelect.add(function(){\n\n            });\n            osCohortService.onMessage.add(function(obj){\n                if (obj.data.cmd!=\"setPatientMetric\") return;\n                \n                $timeout(function(){\n                    vm.patientTotal = obj.data.data.total;\n                    vm.patientSelected = obj.data.data.selected;\n                    vm.patientChartOptions = obj.data.data.features;\n                    vm.patientChartOption = (vm.patientChartOption==null) ? \n                        vm.patientChartOptions[0] :\n                        vm.patientChartOptions.filter(function(v){\n                            return (v.label==this.label)\n                        }, vm.patientChartOption)[0]\n                });                \n            });            \n\n            // And Go\n            vm.showPatientHistory();\n            \n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, osCohortService, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, .1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], .08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (.1 + Math.random()),\n                        y = 2 * Math.random() - .5,\n                        z = 10 / (.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n\n(function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .run(runBlock);\n\n     /** @ngInject */\n     function runBlock($rootScope, $state, $window, $exceptionHandler, osApi, osAuth) { //, $log\n\n         // Route Errors To Angular\n         $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n             if (!error) {\n                 error = new Error(message);\n                 error.fileName = fileName;\n                 error.lineNumber = lineNumber;\n                 error.columnNumber = (columnNumber || 0);\n             }\n             $exceptionHandler(error);\n         }\n\n         // Actions To Take On State Change\n         var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n             // Hide Busy Cursor\n             osApi.setBusy(false);\n\n             // Route unauthenticated users to landing page\n             if (toState.authenticate && !osAuth.isAuthenticated()) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n                 return;\n             }\n\n             //Redirect If Unable To Resolve Data Source\n             if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource === \"\")) {\n                 $state.transitionTo(\"datasource\")\n                 event.preventDefault();\n                 return;\n             } else {\n                 osApi.setDataSource(toParams.datasource);\n             }\n\n             //osApi.setDataSource({\"disease\":\"brca\",\"source\":\"TCGA\",\"name\":\"Breast\",\"img\":\"DSbreast.png\",\"beta\":false,\"collections\":{\"drug\":\"clinical_tcga_brca_drug\",\"f1\":\"clinical_tcga_brca_f1\",\"f2\":\"clinical_tcga_brca_f2\",\"f3\":\"clinical_tcga_brca_f3\",\"nte\":\"clinical_tcga_brca_nte\",\"nte_f1\":\"clinical_tcga_brca_nte_f1\",\"omf\":\"clinical_tcga_brca_omf\",\"pt\":\"clinical_tcga_brca_pt\",\"rad\":\"clinical_tcga_brca_rad\"},\"edges\":[{\"name\":\"TCGA GBM Classifiers\",\"edges\":\"edge_brca_tcgagbmclassifiers\",\"patientWeights\":\"edge_brca_tcgagbmclassifiers_patient_weight\",\"genesWeights\":\"edge_brca_tcgagbmclassifiers_gene_weight\"},{\"name\":\"Marker Genes 545\",\"edges\":\"edge_brca_markergenes545\",\"patientWeights\":\"edge_brca_markergenes545_patient_weight\",\"genesWeights\":\"edge_brca_markergenes545_gene_weight\"},{\"name\":\"TCGA Pan Cancer Mutated\",\"edges\":\"edge_brca_tcgapancancermutated\",\"patientWeights\":\"edge_brca_tcgapancancermutated_patient_weight\",\"genesWeights\":\"edge_brca_tcgapancancermutated_gene_weight\"},{\"name\":\"Onco Vogel 274\",\"edges\":\"edge_brca_oncovogel274\",\"patientWeights\":\"edge_brca_oncovogel274_patient_weight\",\"genesWeights\":\"edge_brca_oncovogel274_gene_weight\"}]});\n         });\n\n         $rootScope.$on('$destroy', off)\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('comparecluster', {\n                url: '/comparecluster/{datasource}',\n                template: '<os-compare-cluster>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                authenticate: true,\n                datasource: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, Handsontable:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('Handsontable', Handsontable)\n        .constant('localStorage', localStorage)\n        .constant('_', _);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n    \n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div ng-show=\\\"vm.show\\\" id=\\\"cohortMenu\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><ul class=\\\"nav nav-tabs\\\"><li id=\\\"cohort-tab-patients\\\" role=\\\"presentation\\\" style=\\\"width:50%;text-align:center;\\\" ng-click=\\\"vm.showPatientHistory()\\\"><a>Patients</a></li></ul><div style=\\\"background-color:#ffffff;border:#dddddd 1px solid;border-top-width:0px;padding:10px;\\\"><br><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;\\\">{{vm.patientChartOption.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li style=\\\"padding:0px 5px;\\\" ng-repeat=\\\"item in vm.patientChartOptions\\\" ng-click=\\\"vm.patientChartOption=item\\\">{{item.label}}</li></ul></div><br><div id=\\\"cohortmenu-survival\\\" style=\\\"border:0px solid #DDD;width:100%;height:180px;\\\"></div><br><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#000; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.addCohort()\\\" tooltip=\\\"Save Cohort\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-plus\\\"></i></button> <label>Selected Patients</label></div><div ng-if=\\\"vm.cohorts.length>0 && !vm.edit\\\"><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{cohort.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.editCohort(cohort)\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-edit\\\"></i></button> <a class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"margin-right:25px;\\\" ng-click=\\\"vm.setCohort(cohort)\\\">{{cohort.name}} ({{cohort.ids.length}})</a></div></div><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#0b97d3; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>All Patients</label></div><br><div ng-if=\\\"vm.edit\\\"><hr><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{vm.editItem.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>Edit Cohort</label></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-group\\\" style=\\\"margin-top:10px;\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.editItem.name\\\"></div><div class=\\\"col-xs-12 form-group\\\" style=\\\"text-align:right\\\"><button class=\\\"btn btn-sm btn-default\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.removeCohort(vm.editItem);vm.edit=false;\\\">Remove</button> <button class=\\\"btn btn-sm btn-primary\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.edit=false\\\">Done</button></div></div></div></div></div></div><div id=\\\"cohortmenu-legand\\\"></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><br><h1>Step 1: Select A Data Source</h1><p>Oncoscape supports both public and private data sets. If you do not see the dataset you are interested in please contact us at <a href=\\\"mailto:oncoscape@fredhuth.org\\\">oncoscape@fredhutch.org</a>. To explore a new dataset use the naviation item in the top right.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{dataset.img}}\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}} ({{dataset.source}})</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Analysis Tools</a><ul class=\\\"dropdown-menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.tools\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a><ul class=\\\"dropdown-menu\\\" roll=\\\"menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.datasets\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showCohorts\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>My Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient IDs below and click save<br><input ng-model=\\\"vm.importPatientIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importPatientCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-8\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"max-width:200px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\">{{item.name}} ({{item.ids.length}})</div></div></div></div></li><li ng-show=\\\"vm.showHelp\\\"><a href=\\\"http://resources.sttrcancer.org/oncoscape\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li ng-show=\\\"vm.showLogout\\\"><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: 200 }\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"\\\"></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Export</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.exportCsv()\\\">CSV</button></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patients</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.resetFilter()\\\">Show All</button></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Fields</label><div ng-repeat=\\\"column in vm.columns track by $index\\\" class=\\\"legend-bar\\\" style=\\\"position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;border-left-width: 0;\\\"><span style=\\\"max-width: 180px;font-size:12px;display: inline-block;\\\">{{column.displayName}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"column.show\\\" ng-change=\\\"vm.setColumns(true)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div></div></section></os-tray><section class=\\\"history-content history-grid-container\\\"><div class=\\\"container-fluid\\\" style=\\\"text-align:center;\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"history-grid\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-12\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-7\\\"><p class=\\\"landing-copy\\\">Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Seattle Translational Tumor Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"landing-copy\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><p class=\\\"landing-copy\\\"><ul><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul></p><p class=\\\"landing-copy\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p><p>Please adhere to the <a href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">TCGA publication guidelines</a> when using TCGA data in your publications.</p></div><div class=\\\"col-sm-5\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Genes or Patients\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <span class=\\\"h3-tool\\\">(Layout: {{vm.optPatientLayout.name}})</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><h3>Select a layout</h3></div><a class=\\\"col-sm-4 markers-command hvr-sweep-to-right\\\" style=\\\"padding-left:15px; padding-right:15px;\\\" ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\">{{item.name}}</a></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.label}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>PCA Type</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.label}}</li></ul></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-label\\\"><h3>Variance</h3>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label>Cohorts</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">All Patients <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.all.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{cohort.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><div id=\\\"timelines-tip\\\" style=\\\"min-height:200px;\\\"><b>Rollover Event For Details</b></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><br><h1>Step 2: Select An Analysis Tool</h1><p>The list of tools depends upon the data source. If the requisite molecular or clinical data is not availbile for your disease please contact us at <a href=\\\"mailto:oncoscape@fredhuth.org\\\">oncoscape@fredhutch.org</a>. Use the navigation in the top right to switch between tools.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}