{"version":3,"sources":["scripts/app-e3c4bf5816.js"],"names":["angular","module","tray","TrayController","osApi","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","$inject","directive","restrict","templateUrl","scope","caption","content","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","$state","query","then","response","getDataSource","console","log","data","filter","item","indexOf","route","sort","a","b","name","explore","tool","go","datasource","disease","timelines","TimelinesController","osCohortService","$scope","$stateParams","$window","$document","moment","d3","_","resize","debounce","update","setBusy","scaleX","xZoom","yZoom","xTran","yTran","axis","patientsAll","patientsFiltered","patientsDomain","heightRow","baseZoomX","baseZoomY","brushY","brushX","brushSelect","pc","getPatientCohort","setPatientCohort","selectedIds","ids","onPatientsSelect","patients","add","timescales","valFn","val","abs","duration","asDays","timescale","filters","modes","mode","displayModes","displayMode","resetZoom","chart","d3ScrollY","call","move","d3ScrollX","elTip","elChart","select","d3Chart","append","rPatients","gPatients","rAxis","gAxis","updateData","align","events","e","selected","map","toLowerCase","Infinity","forEach","patient","hash","hasOwnProperty","status","visible","length","id","offset","tsStart","event","tsStartAligned","tsEndAligned","tsEnd","domain","min","max","p","v","updateEvents","height","width","scaleLinear","range","nice","selectAll","remove","rows","exit","transition","delay","style","rowEnter","enter","d","i","cols","color","on","datum","html","Object","keys","reduce","c","selection","lowerIndex","floor","upperIndex","ceil","push","target","updateZoom","configSize","layout","css","left","right","daysToUnit","round","updateAxis","axisBottom","ticks","tickFormat","pow","configScrollbars","lower","upper","lowerPercent","upperPercent","deltaPercent","st","zoomIdentity","translate","scale","rescaleX","getLayout","innerHeight","innerWidth","clinical","colorFn","key","evtArray","start","unix","end","evtHash","$on","survival","SurvivalController","cohorts","fromJson","toJson","getPatientCohorts","time","Date","all","show","colors","getSurvivalData","elXAxis","elYAxis","xScale","yScale","xAxis","yAxis","axisLeft","setScale","timelineDomain","osLayout","onSurvivalData","result","cmd","correlationId","draw","onMessage","addCurve","points","valueline","line","x","y","tick","sunburst","SunburstController","colorMap","charts","getColorMap","tags","groups","union","object","barcharts","bars","arc","radius","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","w","window","init","text","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","t","attrTween","drawSunburst","g","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","innerRadius","outerRadius","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","concat","apply","value","bar","values","difference","tree","barNode","reverse","tag","tagIndex","drawTree","el","chartLayer","yMax","yMin","barWidth","chartHeight","nodes","node","each","PlsrController","osHistory","$sce","saveSelected","addGeneSelection","__data__","toUpperCase","setSelected","classed","isUndefined","xMax","brush","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","$watch","onGeneSelectionChange","linear","vectors","genes","bv","extent","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","lines","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","loadings","index","loadingNames","vectorNames","maxValue","PcaController","$q","d3Points","setColors","legendCaption","legendNodes","degMap","undefined","padding-left","d3Brush","minMax","xMin","scaleY","axisX","axisTop","axisY","d3xAxis","d3yAxis","osCohortServiceUpdate","dataset","type","search","selectColor","allIds","deselectColor","$fields","geneset","source","memo","tmp","fldr","has","sources","types","pcaTypes","pcaType","pc1","pc2","onPatientColorChange","showPanelColor","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","substr","endBatch","container","elements","minZoom","maxZoom","zoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","protocol","host","queryString","req","table","isDefined","encodeURIComponent","method","headers","apikey","factory","signals","localStorage","Signal","onGenesSelect","onCohortsChange","worker","Worker","addEventListener","msg","addPatientCohort","activePatientCohort","activeGeneCohort","allGeneCohorts","allPatientCohorts","onDataSource","postMessage","getItem","_patientColor","setPatientColor","getPatientMetric","setItem","importPatientCohort","delPatientCohort","obj","splice","S4","isArray","filterActivePatientCohort","bounds","prop","getGeneMetric","getGeneCohorts","getGeneCohort","addGeneCohort","delGeneCohort","setGeneCohort","api","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","loginGuest","network","thumb","login","response_type","force","logout","prev","curr","oauth_proxy","redirect_uri","thumbnail","$","resolve","reject","beta","_dataSources","img","trim","_dataSource","_cpuApi","rt","hide","getDataSources","setDataSource","isObject","isString","serviceEndpoint","server","createMethod","fnName","charAt","slice","options","Promise","ajax","contentType","dataType","beforeSend","xhr","settings","xhrFields","withCredentials","crossDomain","done","split","get","methods","getEndpoint","getCpuApi","markers","MarkersController","setPatientCohortUpdate","cyChart","tmpdata","signal","over","out","edges","clear","removeAll","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","label","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","group","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","position","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","showPanelLayout","showPanelColorRna","optCommandModes","optCommandMode","hideModal","filterModelEdge","vals","optEdgeColors","edge","cn","edgeToggle","lockPatients","lockGenes","lock","unselectify","selectify","abv","count","results","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","toArray","weight","sizeNode","setOptions","items","getElementById","collection","patients_delete","patients_insert","degrees","patients_layout","annotation","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","total","edgeCounts","mouseIsOver","geneColors","createOptions","f","opts","patientWeights","geneWeights","genesWeights","watches","firstTime","hydrate","needle","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","deselect","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","hydrateDisease","load","dehydrate","json","terminate","LoginController","networks","loginSuccess","landing","LandingController","getStarted","alert","history","HistoryController","Handsontable","elGrid","htGrid","filteredData","queryMethod","queryStr","manualColumnResize","manualColumnMove","fixedRowsTop","readOnly","contextMenu","columnSorting","sortIndicator","comments","allowEmpty","disableVisualSelection","currentRowClassName","autoColumnSize","samplingRatio","mergeCells","cohortMode","collections","o","exportCsv","getData","tmpColDelim","String","fromCharCode","tmpRowDelim","colDelim","rowDelim","csv","rval","cval","join","encodedUri","encodeURI","open","filterData","patient_ID","loadData","render","setData","columns","field","displayName","startCols","hooks","r2","c2","dir","setColumns","setSize","rowRenderer","instance","td","row","TextRenderer","exeRender","colHeaders","cells","cellProps","renderer","updateSettings","resetFilter","onPatientSelect","heatmap","HeatmapController","rotated","colLabels","rowLabels","textAnchor","textX","labels","dendrogram","xPos","yPos","colDendrogram","rowDendrogram","cluster","separation","l","edgePar","dendrG","transform","col","brushend","sourceEvent","colBounds","invert","span","coords","minValue","colorScheme","dim","grid","boxW","boxH","boxes","gridlines","colorSchemes","scales","dendrogramClusters","dendrogramCluster","colDendObj","rowDendObj","colmapObj","args","colDend","rowDend","colmap","xaxis","yaxis","$limit","loadHeatmap","kcol","krow","getHeatmap","hmWidth","hmHeight","matrix","header","HeaderController","$rootScope","datasets","allCohorts","importPatientIds","showImport","showTools","showDatasets","showCohorts","showHelp","showLogout","currentTool","onStateChangeStart","toState","loadDataset","collapse","loadTool","logoutClick","transitionTo","DatasourceController","compareCluster","CompareClusterController","plot","rect","cell","h","xDomain","yDomain","create","clusters","category","molecular","followUp-v1p0","drug","newTumor","otherMalignancy-v4p0","calculated","allClusters","pop","_brushes","destory","rv","parseInt","xVal","yVal","colorPanel","ColorPanelController","colorScales","colorScale","colorBins","colorBin","colorOptions","colorOption","tbl","subtype","optPatientColors","setColor","close","aname","isNaN","bname","setGeneColor","geneColor","match","op","gene","message","symbols","$in","s","hugo","msgs","sortBy","groupBy","Removed","Converted","fn","lookup","pids","pid","iv","output","scaleQuantile","scaleQuantize","quantiles","parseFloat","toFixed","unshift","zip","names","cohortMenu","CohortMenuController","patientChartOption","cohortName","addCohort","setCohort","removeCohort","editItem","editCohort","edit","showPatientHistory","elTabPatients","elTabGenes","showGeneHistory","barClick","bins","histRange","hist","sChart","sElXAxis","sElYAxis","sLayout","patientTotal","patientSelected","patientChartOptions","features","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","j","rangeBand","n","yStackMax","bumpLayer","bump","z","exp","m","stack","layers","layer","margin","top","bottom","rangeRoundBands","tickSize","tickPadding","orient","property","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","error","Error","off","toParams","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","config","constant","hello","$logProvider","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACI,YAEAA,SACKC,OAAO,aACJ,YACA,YACA,UACA,aACA,aACA,SACA,aACA,YACA,eACA,iBACA,cAKZ,WACI,YAOA,SAASC,KAoBL,QAASC,GAAeC,EAAOC,GAE3B,GAAIC,GAAKC,IACTD,GAAGE,UAAYC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACpDN,EAAGO,UAAYJ,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAEpD,IAAIE,IAAW,CACfR,GAAGS,OAAS,WACR,GAAIC,GAAShB,QAAQiB,QAAQ,IAAMX,EAAGE,WAClCU,EAASlB,QAAQiB,QAAQ,IAAMX,EAAGO,UAEtCC,IAAYA,EACZI,EACKC,SAASL,EAAW,UAAY,iBAChCM,YAAYN,EAAW,gBAAkB,WACzCO,KAAK,SAAUP,EAAW,OAAS,SAExCE,EAAOK,KAAK,SAAUP,EAAW,OAAS,SAEtCA,GACAE,EACKM,OAAO,YAAaC,GACpBD,OAAO,WAAYE,GACnBJ,YAAY,kBACjBf,EAAS,WACLC,EAAGmB,aAIPT,EACKG,SAAS,kBACTO,KAAK,YAAaH,GAClBG,KAAK,WAAYF,GACtBnB,EAAS,WACLC,EAAGmB,YAIXrB,EAAMuB,SAASC,WAGnB,IAAIL,GAAY,WACZvB,QAAQiB,QAAQ,IAAMX,EAAGE,WACpBY,YAAY,mBAEjBI,EAAW,WACXxB,QAAQiB,QAAQ,IAAMX,EAAGE,WACpBW,SAAS,mBAjEtBhB,EAAe0B,SAAW,QAAS,WAAnC,IAAIC,IACAC,SAAU,IACVC,YAAa,gCACbC,OACIC,QAAS,IACTC,QAAS,IACTV,OAAQ,KAEZW,WAAYjC,EACZkC,aAAc,KACdC,kBAAkB,EAClBC,SAAS,EACTC,YAAY,EAGhB,OAAOV,GAtBX9B,QACKC,OAAO,aACP6B,UAAU,SAAU5B,MA4E7B,WACI,YAOA,SAASuC,KAaL,QAASC,GAAgBtC,EAAOuC,GAE5B,GAAIrC,GAAKC,IAETH,GAAMwC,MAAM,0BAA0BC,KAAK,SAASC,GAChD,GAAIL,GAAQrC,EAAM2C,gBAAgBN,KAClCO,SAAQC,IAAIR,GACZnC,EAAGmC,MAAQK,EAASI,KAAKC,OAAO,SAASC,GACrC,MAAmC,IAA3BX,EAAMY,QAAQD,EAAKE,SAC5BC,KAAK,SAASC,EAAGC,GAChB,MAAID,GAAEE,KAAOD,EAAEC,KAAa,GACxBF,EAAEE,KAAOD,EAAEC,KAAa,EACrB,MAIfpD,EAAGqD,QAAU,SAASC,GAClBjB,EAAOkB,GAAGD,GACNE,WAAY1D,EAAM2C,gBAAgBgB,WA5B9CrB,EAAgBb,SAAW,QAAS,SADpC,IAAIC,IACAC,SAAU,IACVC,YAAa,kCACbI,WAAYM,EACZL,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,UAAWW,MA0C9B,WACI,YAOA,SAASuB,KAaL,QAASC,GAAoB7D,EAAO8D,EAAiBvB,EAAQwB,EAAQC,EAAcC,EAASC,EAAWC,EAAQC,EAAIC,GAmb/G,QAASC,KACLD,EAAEE,SAASrE,EAAGsE,OAAQ,KAjb1BxE,EAAMyE,SAAQ,EAGd,IAGIC,GAIAC,EAAOC,EAAOC,EAAOC,EACrBC,EARAC,KACAC,KACAC,KAEAC,EAAY,GACZC,EAAY,EACZC,EAAY,EAGZC,EAASlB,EAAGkB,SACZC,EAASnB,EAAGmB,SACZC,EAAcpB,EAAGkB,SAGjBG,EAAK3B,EAAgB4B,kBACf,OAAND,GACA3B,EAAgB6B,oBAAqB,eAEzC,IAAIC,GAAqB,MAANH,KAAmBA,EAAGI,IAErCC,EAAmB,SAASC,GAC5BH,EAAcG,EAASF,IACvB3F,EAAGsE,SAEPV,GAAgBgC,iBAAiBE,IAAIF,EAUrC,IAAI5F,GAAK,SAAUA,GAkCf,MAjCAA,GAAG+F,aACC3C,KAAM,MACN4C,MAAO,SAASC,GACZ,OAAc,EAANA,EAAU,GAAK,GAAK9F,KAAKwC,IAAIxC,KAAK+F,IAAW,IAAND,EAAc,OAAY,GAAK9F,KAAKwC,IAAI,MAG3FS,KAAM,SACN4C,MAAO,SAASC,GACZ,MAAOhC,GAAOkC,SAAe,IAANF,GAAYG,YAG3CpG,EAAGqG,UAAYrG,EAAG+F,WAAW,GAC7B/F,EAAGsG,UACClD,KAAM,iBAENA,KAAM,eAENA,KAAM,cAEVpD,EAAG6C,OAAS7C,EAAGsG,QAAQ,GACvBtG,EAAGuG,QACCnD,KAAM,cAENA,KAAM,WAEVpD,EAAGwG,KAAOxG,EAAGuG,MAAM,GACnBvG,EAAGyG,eACCrD,KAAM,sBAENA,KAAM,iBAEVpD,EAAG0G,YAAc1G,EAAGyG,aAAa,GACjCzG,EAAGwD,WAAa1D,EAAM2C,gBACfzC,GACRC,KAEHD,GAAG2G,UAAY,WACXjB,KACA9B,EAAgB6B,oBAAqB,gBACrCmB,EAAMC,UAAUC,KAAK1B,EAAO2B,KAAM,MAClCH,EAAMI,UAAUF,KAAK1B,EAAO2B,KAAM,MAClC/G,EAAGsE,SAKP,IAAIsC,GAAQ,SAAUlH,EAASwE,GAC3B,GAAI+C,GAAQ,KACRC,EAAUhD,EAAGiD,OAAO,sBAEpBC,EAAUF,EAAQG,OAAO,MAC7BD,GAAQrG,KAAK,QAAS,iBAEtB,IAAI8F,GAAYK,EAAQG,OAAO,MAC/BR,GAAU9F,KAAK,QAAS,oBAExB,IAAIiG,GAAYE,EAAQG,OAAO,MAC/BL,GAAUjG,KAAK,QAAS,oBAExB,IAAIuG,GAAYF,EAAQC,OAAO,IAC/BC,GAAUvG,KAAK,QAAS,4BACxB,IAAIwG,GAAYH,EAAQC,OAAO,KAE3BG,EAAQJ,EAAQC,OAAO,OAC3BG,GAAMzG,KAAK,QAAS,mBACpB,IAAI0G,GAAQL,EAAQC,OAAO,IAG3B,QACIH,QAASxH,EAAQiB,QAAQ,sBACzBsG,MAAOA,EACPG,QAASA,EACTP,UAAWA,EACXG,UAAWA,EACXO,UAAWA,EACXD,UAAWA,EACXG,MAAOA,EACPD,MAAOA,IAGZ9H,QAASwE,GAERwD,EAAa,WAGb,GAAIC,GAAQ3H,EAAG2H,MAAMvE,KACjBH,EAAOjD,EAAGiD,KAAKG,KACfP,EAAS7C,EAAG6C,OAAOO,KACnBwE,EAAS5H,EAAG4H,OAAO/E,OAAO,SAASgF,GACnC,MAAOA,GAAEC,WACVC,IAAI,SAASF,GACZ,MAAOA,GAAEzE,KAAK4E,eAIlBjD,GAAmBD,EAGnBE,GAAkBiD,EAAAA,IAAWA,EAAAA,IAC7BlD,EAAiBmD,QAAQ,SAASC,GAG9B,GAAKA,EAAQC,KAAKC,eAAepI,KAAK0H,QAAWQ,EAAQC,KAAKC,eAAepI,KAAKgD,OAAUkF,EAAQC,KAAKC,eAAe,UAEjH,CAGH,GAAIC,GAASH,EAAQC,KAAK,OAAUxF,KAAK0F,MACrB,eAAfrI,KAAK4C,QAAoC,QAAVyF,GAAqC,aAAfrI,KAAK4C,QAAmC,QAAVyF,EACpFH,EAAQI,SAAU,GAES,qBAAvBvI,EAAG0G,YAAYtD,MAA+BsC,EAAY8C,OAAS,EACnEL,EAAQI,QAA8C,IAAnC7C,EAAY3C,QAAQoF,EAAQM,IAE/CN,EAAQI,SAAU,EAElBJ,EAAQI,UACRtI,KAAKyI,OAAS,EAAIP,EAAQC,KAAKnI,KAAK0H,OAAOgB,QAE3CR,EAAQP,OAAOM,QAAQ,SAASU,GAC5BA,EAAML,QAA4D,IAAjDtI,KAAK2H,OAAO7E,QAAQ6F,EAAMxF,KAAK4E,eAE5CY,EAAML,UACNK,EAAMC,eAAiB7I,EAAGqG,UAAUL,MAAM4C,EAAMD,QAAU1I,KAAKyI,QAC/DE,EAAME,aAAe9I,EAAGqG,UAAUL,MAAM4C,EAAMG,MAAQ9I,KAAKyI,QAC3DzI,KAAK+I,OAAO,GAAK7I,KAAK8I,IAAIhJ,KAAK+I,OAAO,GAAIJ,EAAMC,gBAChD5I,KAAK+I,OAAO,GAAK7I,KAAK+I,IAAIjJ,KAAK+I,OAAO,GAAIJ,EAAME,gBAErD7I,YAzBXkI,GAAQI,SAAU,IA8BtBZ,MAAOA,EACP1E,KAAMA,EACNJ,OAAQA,EACR+E,OAAQA,EACRoB,OAAQhE,EACR0D,OAAQ,IAIZ3D,EAAmBA,EAAiBlC,OAAO,SAASsG,GAChD,MAAOA,GAAEZ,UAIbxD,EAAiBmD,QAAQ,SAASkB,GAC9BA,EAAEtB,SAAyC,IAA7BpC,EAAY3C,QAAQqG,EAAEX,MAIxC1D,EAAmBA,EAAiB9B,KAAK,SAASC,EAAGC,GACjD,MAAID,GAAEoF,QAAUnF,EAAEmF,QACdpF,EAAIA,EAAEkF,KAAKnF,GAAM4F,eACjB1F,EAAIA,EAAEiF,KAAKnF,GAAM4F,eACb3F,EAAIC,EAAU,EACdA,EAAID,EAAU,GACX,GAEa,QAAZA,EAAEoF,OAAoB,EAAI,MAK1Ce,EAAe,SAASC,EAAQC,GAChCD,GAAU,GACVC,GAAS,GAGT/E,EAASN,EAAGsF,cAAcR,OAAOhE,GAAgByE,OAAO,EAAGF,IAAQG,OAEnE9C,EAAMW,UAAUoC,UAAU,KAAKC,QAE/B,IAAIC,GAAOjD,EAAMW,UAAUoC,UAAU,aAAa/G,KAAKmC,EACvD8E,GAAKC,OACAC,aACAC,MAAM,KACN7D,SAAS,KACT8D,MAAM,UAAW,GACjBL,QACL,IAAIM,GAAWL,EAAKM,QAAQ9C,OAAO,IACnC6C,GAASnJ,KAAK,QAAS,WACvBmJ,EAASnJ,KAAK,YAAa,SAASqJ,EAAGC,GACnC,MAAO,eAAkBA,EAAIpF,EAAa,KAG9C,IAAIqF,GAAOJ,EAASP,UAAU,QAAQ/G,KAAK,SAASwH,GAChD,MAAOA,GAAExC,OAAO/E,OAAO,SAASuG,GAC5B,MAAOA,GAAEb,WAGjB+B,GAAKR,OAAOF,SACZU,EAAKH,QAAQ9C,OAAO,QACftG,KAAK,QAAS,SACdA,KAAK,QAAS,SAASqJ,GACpB,MAAOjK,MAAK+I,IAAK1E,EAAO4F,EAAEtB,cAAgBtE,EAAO4F,EAAEvB,gBAAkB,KAExE9H,KAAK,SAAU,SAASqJ,GACrB,MAAkB,aAAVA,EAAEhH,MAAiC,QAAVgH,EAAEhH,KAAkB6B,EAAY,EAAIA,IAExElE,KAAK,IAAK,SAASqJ,GAChB,MAAmB,aAAVA,EAAEhH,KAAuB6B,EAAY,EAAI,IAErDlE,KAAK,IAAK,SAASqJ,GAChB,MAAO5F,GAAO4F,EAAEvB,kBAEnBoB,MAAM,OAAQ,SAASG,GACpB,MAAOA,GAAEG,QAEZC,GAAG,YAAa,WACb,GAAIC,GAAQvG,EAAGiD,OAAOlH,MAAMwK,OAE5B,IAAkB,MAAdA,EAAMC,KAAc,CACpB,GAAI9H,GAAO6H,EAAM7H,IACjB6H,GAAMC,KACFC,OAAOC,KAAKhI,GAAMiI,OAAO,SAAS1B,EAAG2B,GAEjC,MADA3B,GAAEuB,MAAQ,OAASI,EAAI,IAAM3B,EAAEvG,KAAKkI,GAAK,QAClC3B,IAEPuB,KAAM,MAAQD,EAAMrH,KAAO,OAC3BR,KAAMA,IACP8H,KAEQ,MAAf9D,EAAMK,QAAeL,EAAMK,MAAQvH,QAAQiB,QAAQ,mBACvDiG,EAAMK,MAAMyD,KAAKD,EAAMC,QAExBF,GAAG,WAAY,WACd5D,EAAMK,MAAMyD,KAAK,uCAEzBJ,EACKvJ,KAAK,QAAS,SAASqJ,GACpB,MAAOjK,MAAK+I,IAAK1E,EAAO4F,EAAEtB,cAAgBtE,EAAO4F,EAAEvB,gBAAkB,KAExE9H,KAAK,SAAU,SAASqJ,GACrB,MAAkB,aAAVA,EAAEhH,MAAiC,QAAVgH,EAAEhH,KAAkB6B,EAAY,EAAIA,IAExElE,KAAK,IAAK,SAASqJ,GAChB,MAAmB,aAAVA,EAAEhH,KAAuB6B,EAAY,EAAI,IAErDlE,KAAK,IAAK,SAASqJ,GAChB,MAAO5F,GAAO4F,EAAEvB,kBAEnBoB,MAAM,OAAQ,SAASG,GACpB,MAAOA,GAAEG,QAIjB3D,EAAMU,UAAUR,KAAKxB,GACrBA,EAAYkF,GAAG,MAAO,WAClB,GAA0B,MAAtBtG,EAAG0E,MAAMmC,UAAb,CAMA,IAAK,GAHDC,GAAa7K,KAAK8K,MAAM/G,EAAG0E,MAAMmC,UAAU,GAAKrG,EAAQ,IACxDwG,EAAa/K,KAAKgL,KAAKjH,EAAG0E,MAAMmC,UAAU,GAAKrG,EAAQ,IACvDiB,KACK0E,EAAIW,EAAiBE,GAALb,EAAiBA,IACtC1E,EAAIyF,KAAKrG,EAAiBsF,GAAG5B,GAEjC7E,GAAgB6B,iBAAiBE,EAAK,gBACtCiB,EAAMU,UAAUR,KAAK5C,EAAG0E,MAAMyC,OAAOtE,KAAM,UAI/CuE,EAAa,SAAShC,GACtBA,GAAU,GACVnE,EAAYmE,GAAUvE,EAAiByD,OAASvD,GAChDC,EAAY,EACZT,EAAQS,EACRR,EAAQS,EACRR,EAAQ,EACRC,EAAQ,EACRgC,EAAMW,UAAUxG,KAAK,YAAa,aAAe4D,EAAQ,IAAMC,EAAQ,WAAaH,EAAQ,IAAMC,EAAQ,MAG1G6G,EAAa,SAASjC,EAAQC,EAAOiC,GACrClC,GAAU,GACVC,GAAS,GACT3C,EAAMM,QAAQuE,IAAI,cAAeD,EAAOE,KAAO,IAAID,IAAI,eAAgBD,EAAOG,MAAQ,IAAIF,IAAI,QAASlC,GAAOkC,IAAI,SAAUnC,EAAS,IACrI1C,EAAMC,UAAU9F,KAAK,SAAUuI,GAC/B1C,EAAMI,UAAUjG,KAAK,QAASwI,GAC9B3C,EAAMQ,QAAQrG,KAAK,SAAUuI,EAAS,IAAIvI,KAAK,QAASwI,GACxD3C,EAAMU,UAAUvG,KAAK,SAAUuI,EAAS,IAAIvI,KAAK,QAASwI,GAC1D3C,EAAMa,MAAM1G,KAAK,YAAa,WAC1B,MAAO,eAAA,EAA4B,MAEvC6F,EAAMY,MAAMzG,KAAK,YAAa,WAC1B,MAAO,eAAA,EAA4B,MACpCA,KAAK,QAASwI,GAAOxI,KAAK,OAAQ,SAGrC6K,EAAa,SAASxB,GACtB,MAAmB,IAAfjK,KAAK+F,IAAIkE,GAAgBA,EACzBjK,KAAK+F,IAAIkE,GAAK,GAAWA,EAAI,QAC7BjK,KAAK+F,IAAIkE,GAAK,IAAYjK,KAAK0L,MAAOzB,EAAI,KAAQ,IAAM,GAAK,UAC1DjK,KAAK0L,MAAOzB,EAAI,IAAO,IAAM,GAAK,UAEzC0B,EAAa,WACbjH,EAAOX,EAAG6H,WAAWvH,GAAQwH,MAAM,GACV,UAArBhM,EAAGqG,UAAUjD,KACbyB,EAAKoH,WAAW,SAAS7B,GACrB,MAAOwB,GAAWxB,KAGtBvF,EAAKoH,WAAW,SAAS7B,GACrB,MAAOwB,GAAWzL,KAAK0L,OAAW,EAAJzB,EAAQ,GAAK,IAAMjK,KAAK+L,IAAI,EAAI/L,KAAK+F,IAAIkE,IAAO,GAAK,KAAO,OAGlGxD,EAAMa,MAAMX,KAAKjC,IAGjBsH,EAAmB,SAAS7C,EAAQC,GACpC3C,EAAMC,UAAUC,KACZ1B,EACCoF,GAAG,MAAO,WACP,GAA0B,MAAtBtG,EAAG0E,MAAMmC,UAAmB,CAC5B,GAAIqB,GAAQlI,EAAG0E,MAAMmC,UAAU,GAC3BsB,EAAQnI,EAAG0E,MAAMmC,UAAU,GAC3B/B,EAASM,EAAS,GAClBgD,EAAeF,EAAQpD,EACvBuD,EAAeF,EAAQrD,EACvBwD,EAAeD,EAAeD,CAClC5H,GAASS,EAAYqH,EACrB5H,EAAS,GAAKG,EAAiByD,OAAS9D,GAAU4H,MAC/C,CAEH,GAAI5H,GAASS,GAAsB,GAATP,EAAY,MACtCF,GAAQS,EACRP,EAAQ,EACRgC,EAAMC,UAAUC,KAAK1B,EAAO2B,KAAM,MAGtCH,EAAMW,UACDwC,aACA5D,SAAS,KACTpF,KAAK,YAAa,aAAe4D,EAAQ,IAAMC,EAAQ,WAAaH,EAAQ,IAAMC,EAAQ,QAIvGkC,EAAMI,UAAUF,KACZzB,EACCmF,GAAG,MAAO,WACP,GAA0B,MAAtBtG,EAAG0E,MAAMmC,UAAmB,CAC5B,GAAIqB,GAAQlI,EAAG0E,MAAMmC,UAAU,GAC3BsB,EAAQnI,EAAG0E,MAAMmC,UAAU,GAC3B/B,EAASO,EAAQ,GACjB+C,EAAeF,EAAQpD,EACvBuD,EAAeF,EAAQrD,EACvBwD,EAAeD,EAAeD,CAClC7H,GAASS,EAAYsH,EACrB7H,EAAS4E,EAAQ9E,GAAU6H,MACxB,CACH,GAAI7H,GAASS,GAAsB,GAATP,EAAY,MACtCF,GAAQS,EACRP,EAAQ,EACRiC,EAAMI,UAAUF,KAAKzB,EAAO0B,KAAM,MAGtCH,EAAMW,UACDwC,aACA5D,SAAS,KACTpF,KAAK,YAAa,aAAe4D,EAAQ,IAAMC,EAAQ,WAAaH,EAAQ,IAAMC,EAAQ,IAE/F,IAAI+H,GAAKvI,EAAGwI,aAAaC,UAAUhI,GAAOiI,MAAMnI,GAAOoI,SAASrI,GAC5DK,EAAOX,EAAG6H,WAAWU,GAAIT,MAAM,EACV,WAArBhM,EAAGqG,UAAUjD,KACbyB,EAAKoH,WAAW,SAAS7B,GACrB,MAAOwB,GAAWxB,KAGtBvF,EAAKoH,WAAW,SAAS7B,GACrB,MAAOwB,GAAWzL,KAAK0L,OAAW,EAAJzB,EAAQ,GAAK,IAAMjK,KAAK+L,IAAI,EAAI/L,KAAK+F,IAAIkE,IAAO,GAAK,KAAO,OAGlGxD,EAAMa,MAAMX,KAAKjC,MAM7B7E,GAAGsE,OAAS,WACR,GAAIkH,GAAS1L,EAAMgN,YACfxD,EAASvF,EAAQgJ,YAAc,IAC/BxD,EAAQxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAAQ,EAC9DjE,KACA6D,EAAWjC,EAAQC,EAAOiC,GAC1BW,EAAiB7C,EAAQC,GACzBF,EAAaC,EAAQC,GACrB+B,EAAWhC,EAAQC,GACnBuC,EAAWxC,EAAQC,IAGvBzJ,EAAMuB,SAASyE,IAAI9F,EAAGsE,QAKtB5E,QAAQiB,QAAQoD,GAAS3C,KAAK,SAAUgD,GAGxCtE,EAAMyE,SAAQ,GACdzE,EAAMwC,MAAMxC,EAAM2C,gBAAgBwK,SAASrF,WAAYrF,KAAK,SAASC,GACjE,GAAI0K,GAAU,SAAS5E,GACnB,MAAkB,SAAVA,EAAqB,UACd,aAAVA,EAAyB,UACf,aAAVA,EAAyB,UACf,eAAVA,EAA2B,UACjB,UAAVA,EAAsB,UACZ,UAAVA,EAAsB,UACZ,aAAVA,EAAyB,UACf,aAAVA,EAAyB,UACf,aAAVA,EAAyB,UACf,QAAVA,EAAoB,UACrB,SAGJ1F,EAAOJ,EAASI,KAAK,GACrBgF,IACJhF,GAAO+H,OAAOC,KAAKhI,GAAMmF,IAAI,SAASoF,GAElC,GAAIC,GAAWnN,KAAK2C,KAAKuK,GACpBtK,OAAO,SAASuG,GACb,MAAkB,OAAXA,EAAEiE,QAEZtF,IAAI,SAASqB,GASV,MARAnJ,MAAK2H,OAAOwB,EAAEhG,MAAQ,KACtBgG,EAAET,QAAU1E,EAAOmF,EAAEiE,MAAO,cAAcC,OAC1ClE,EAAEL,MAAkB,MAATK,EAAEmE,IAAenE,EAAET,QAAU1E,EAAOmF,EAAEmE,IAAK,cAAcD,OACpElE,EAAEP,eAAiB,GACnBO,EAAEN,aAAe,GACjBM,EAAEmE,IAAgB,MAATnE,EAAEmE,IAAenE,EAAEiE,MAAQjE,EAAEmE,IACtCnE,EAAEmB,MAAQtK,KAAKiN,QAAQ9D,EAAEhG,MACzBgG,EAAEb,SAAU,EACLa,IAEPxB,OAAQ3H,KAAK2H,OACbsF,QAASjN,KAAKiN,UAElBM,EAAUJ,EAASvC,OAAO,SAAS1B,EAAG2B,GAEtC,MADA3B,GAAE2B,EAAE1H,MAAQ0H,EACL3B,MAEX,QACIV,GAAI0E,EACJvF,OAAQwF,EACRhF,KAAMoF,KAGV5K,KAAMA,EACNgF,OAAQA,EACRsF,QAASA,IAGbpI,EAAclC,EAAKC,OAAO,SAASuG,GAC/B,IAEI,MADAA,GAAEd,OAASc,EAAEhB,KAAK,OAAUxF,KAAK0F,OAAON,eACjC,EACT,MAAOH,GACL,OAAO,EAEX,OAAO,IAEX7H,EAAG4H,OAAS+C,OAAOC,KAAKhD,GAAQG,IAAI,SAASqB,GACzC,OACIhG,KAAMgG,EACNtB,SAAuE,KAA3D,QAAS,YAAa,SAAU,aAAa/E,QAAQqG,GACjEmB,MAAOtK,KAAKmJ,KAEjB8D,GACHlN,EAAG2H,MAAQ3H,EAAG4H,OAAO/E,OAAO,SAASuG,GACjC,MAAc,aAAVA,EAAEhG,MAA4B,EAAlC,SACD,GACHpD,EAAGiD,KAAOjD,EAAG4H,OAAO/E,OAAO,SAASuG,GAChC,MAAc,UAAVA,EAAEhG,MAAyB,EAA/B,SACD,GACHpD,EAAGsE,SACHxE,EAAMyE,SAAQ,KAIlBV,EAAO4J,IAAI,WAAY,WACnB7J,EAAgBgC,iBAAiBgE,OAAOhE,GACxC9F,EAAMuB,SAASuI,OAAO5J,EAAGsE,QACzB5E,QAAQiB,QAAQoD,GAAS/C,OAAO,SAAUoD,GAC1CgB,EAAOoF,GAAG,MAAO,MACjBnF,EAAOmF,GAAG,MAAO,QAvhBzB7G,EAAoBpC,SAAW,QAAS,kBAAmB,SAAU,SAAU,eAAgB,UAAW,YAAa,SAAU,KAAM,IAFvI,IAAIC,IACAC,SAAU,IACVC,YAAa,0CACbI,WAAY6B,EACZ5B,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,cAAekC,MAqiBlC,WACI,YAOA,SAASgK,KAaL,QAASC,GAAmBzJ,EAAIpE,EAAO8D,EAAiBvB,EAAQtC,EAAU8D,EAAQC,EAAcC,EAASI,GAGrG,GAAIoB,GAAK3B,EAAgB4B,mBACrBoI,EAAUlO,QAAQmO,SAASnO,QAAQoO,OAAOlK,EAAgBmK,qBACpD,OAANxI,EACA3B,EAAgB6B,oBAAqB,gBAEjCF,EAAGI,IAAI6C,OAAS,GAChBoF,EAAQxC,MACJ3C,GAAI,iBACJ9C,IAAKJ,EAAGI,IACRvC,KAAM,iBACN4K,KAAM,GAAIC,QAOtBnO,EAAMyE,SAAQ,EAGd,IAAIvE,GAAKC,IACTD,GAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAG4N,QAAUA,EAEb5N,EAAGkO,KACCC,MAAM,EACN5D,MAAO,OAIX,KAAK,GADD6D,IAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC9H/D,EAAI,EAAGA,EAAIrK,EAAG4N,QAAQpF,OAAQ6B,IACnCrK,EAAG4N,QAAQvD,GAAG8D,MAAO,EACrBnO,EAAG4N,QAAQvD,GAAGE,MAAQ6D,EAAO/D,EAGjCrK,GAAGS,OAAS,WACRmD,EAAgByK,gBAAgBrO,EAAG4N,QAAQ/K,OAAO,SAASiI,GACvD,MAAOA,GAAEqD,OACTnO,EAAGkO,IAAIC,KAAM,sBAIrB,IAAIjH,GAAUhD,EAAGiD,OAAO,mBAAmBE,OAAO,OAC9CiH,EAAUpH,EAAQG,OAAO,KAAKtG,KAAK,QAAS,QAC5CwN,EAAUrH,EAAQG,OAAO,KAAKtG,KAAK,QAAS,QAG5C6B,KAEA4I,GACAjC,MAAO,EACPD,OAAQ,EACRkF,OAAQ,KACRC,OAAQ,KACRC,MAAOxK,EAAG6H,aAAaC,MAAM,GAC7B2C,MAAOzK,EAAG0K,WAAW5C,MAAM,IAG3B6C,EAAW,SAASC,GACpB,GAAIC,GAAWjP,EAAMgN,WAErBtB,GAAOjC,MAAQxF,EAAQiJ,WAAa+B,EAASrD,KAAOqD,EAASpD,MAAQ,GACrEH,EAAOlC,OAASvF,EAAQgJ,YAAc,IACtCrN,QAAQiB,QAAQ,mBAAmB8K,IAAI,cAAesD,EAASrD,KAAO,IACtExE,EACKnG,KAAK,QAAS,QACdA,KAAK,SAAUyK,EAAOlC,QAE3BkC,EAAOgD,OAAStK,EAAGsF,cACdR,OAAO8F,GACPrF,OAAO,GAAI+B,EAAOjC,QAEvBiC,EAAOiD,OAASvK,EAAGsF,cACdR,QAAQ,EAAG,MACXS,OAAO+B,EAAOlC,OAAS,GAAI,IAEhCkC,EAAOkD,MAAM9B,MAAMpB,EAAOgD,QAC1BhD,EAAOmD,MAAM/B,MAAMpB,EAAOiD,QAE1BF,EAAQxN,KAAK,YAAa,qBAAqB+F,KAAK0E,EAAOmD,OAC3DL,EAAQvN,KAAK,YAAa,iBAAmByK,EAAOiD,OAAO,GAAK,IAAM,KAAK3H,KAAK0E,EAAOkD,QAGvFM,EAAiB,SAASC,GACH,mBAAnBA,EAAOrM,KAAKsM,KAC0B,sBAAlCD,EAAOrM,KAAKA,KAAKuM,gBACjBvM,EAAOqM,EAAOrM,KAAKA,KACnBwM,KAIZxL,GAAgByL,UAAUvJ,IAAIkJ,EAE9B,IAAIM,GAAW,SAASC,GAGpB,GAAIC,GAAYtL,EAAGuL,OACdC,EAAE,SAAStF,GACR,MAAOoB,GAAOgD,OAAOpE,EAAE,MAE1BuF,EAAE,SAASvF,GACR,MAAOoB,GAAOiD,OAAOrE,EAAE,IAAM,IAGrClD,GAAQG,OAAO,QACVtG,KAAK,QAAS,QACdA,KAAK,eAAgB,KACrBA,KAAK,SAAUwO,EAAOhF,OACtBxJ,KAAK,OAAQ,QACbA,KAAK,IAAKyO,EAAUD,EAAO3M,KAAK6M,OAChCjF,GAAG,YAAa,WACbtG,EAAGiD,OAAOlH,MAAMc,KAAK,eAAgB,KAExCyJ,GAAG,WAAY,WACZtG,EAAGiD,OAAOlH,MAAMc,KAAK,eAAgB,IAG7C,KAAK,GAAIsJ,GAAI,EAAGA,EAAIkF,EAAO3M,KAAKgN,KAAKpH,OAAQ6B,IACzCnD,EAAQG,OAAO,QACVtG,KAAK,QAAS,QACdA,KAAK,eAAgB,IACrBA,KAAK,SAAUwO,EAAOhF,OACtBxJ,KAAK,KAAMyK,EAAOgD,OAAOe,EAAO3M,KAAKgN,KAAKvF,GAAG,KAC7CtJ,KAAK,KAAMyK,EAAOgD,OAAOe,EAAO3M,KAAKgN,KAAKvF,GAAG,KAC7CtJ,KAAK,KAAMyK,EAAOiD,OAAOc,EAAO3M,KAAKgN,KAAKvF,GAAG,IAAM,GACnDtJ,KAAK,KAAMyK,EAAOiD,OAAOc,EAAO3M,KAAKgN,KAAKvF,GAAG,IAAM,KAI5D+E,EAAO,WAGPlI,EAAQyC,UAAU,SAASC,SAG3BiF,GAAUjM,EAAKqG,IAAKrG,EAAKsG,KAGzB,KAAK,GAAImB,GAAI,EAAGA,EAAIzH,EAAKgL,QAAQpF,OAAQ6B,IACrCiF,EAAS1M,EAAKgL,QAAQvD,GAE1BvK,GAAMyE,SAAQ,GAIlBzE,GAAMuB,SAASyE,IAAIsJ,GACnB1P,QAAQiB,QAAQoD,GAAS3C,KAAK,SAAU+C,EAAEE,SAAS+K,EAAM,MAGzDvL,EAAO4J,IAAI,WAAY,WACnB7J,EAAgByL,UAAUzF,OAAOoF,KAKrChP,EAAGS,SAtKPkN,EAAmBpM,SAAW,KAAM,QAAS,kBAAmB,SAAU,WAAY,SAAU,eAAgB,UAAW,IAH3H,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbI,WAAY6L,EACZ5L,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,aAAckM,MAoLjC,WACI,YAOA,SAASmC,KAaL,QAASC,GAAmB5L,EAAIpE,EAAO8D,EAAiBvB,EAAQtC,EAAU8D,EAAQC,EAAcC,EAASI,GAErG,GAAI4L,GACA/P,EAAKC,IACTD,GAAG6F,YACH7F,EAAGmI,QAAU,KACbnI,EAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGgQ,SAEH,IAAIC,GAAc,SAASrN,GACvB,GAAIwL,IAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChN8B,EAAOtN,EAAKiI,OAAO,SAAS1B,EAAG2B,GAI/B,MAHAoF,GAAOpF,EAAEqF,OAAOtF,OAAO,SAAS1B,EAAG2B,GAC/B,MAAO3G,GAAEiM,MAAMjH,EAAG2B,EAAEoF,WAEjB/L,EAAEiM,MAAMjH,EAAG+G,OAEtB9B,GAAO5F,OAAS0H,EAAK1H,MACrB,IAAIuH,GAAW5L,EAAEkM,OAAOH,EAAM9B,EAG9B,OAFA2B,GAAS,MAAW,UACpBA,EAAS,OAAY,UACdA,EAIXjQ,GAAMyE,SAAQ,GACdzE,EAAMwC,MAAM,yBAAyBC,KAAK,SAASC,GAC/C1C,EAAMyE,SAAQ,GACdwL,EAAWE,EAAYzN,EAASI,KAAK,GAAG0N,WACxC9N,EAASI,KAAKsF,QAAQ,SAASkB,GAC3BA,EAAEkH,UAAUpI,QAAQ,SAASkB,GACzBA,EAAE+G,OAAOjI,QAAQ,SAASkB,GACtBA,EAAE+E,MAAO,EACT/E,EAAE8G,KAAO9G,EAAE8G,KAAKnI,IAAI,SAASqB,GACzB,OAAQhG,KAAKgG,EAAGmB,MAAMwF,EAAS3G,YAK/CpJ,EAAG6F,SAAWrD,EAASI,KACvB5C,EAAGmI,QAAUnI,EAAG6F,SAAS,GACzB7F,EAAGoP,SAGPpP,EAAGoP,KAAO,WACNS,EAAST,KAAKpP,EAAI+P,GAClBQ,EAAKnB,KAAKpP,EAAI+P,GAIlB,IAAIF,GAAW,WACX,GAEIW,GACAC,EACAf,EACAC,EACA/M,EACA8N,EACAC,EACAC,EACAC,EACAC,EAXAvG,EAAQrG,EAAG6M,aAAa7M,EAAG8M,kBAa3BC,EAAU/M,EAAGiD,OAAO,mBAAmBE,OAAO,OAC7CtG,KAAK,QAAS,WACdkJ,MAAM,UAAW,GAClBiH,EAAIhN,EAAGiD,OAAOgK,QAEdC,EAAO,SAASxK,GAChB8J,EAAM9J,EACN+J,EAAaD,EAAIrJ,OAAO,QAAQgK,KAAK,SACrCT,EAAcF,EAAIrJ,OAAO,QAAQgK,KAAK,UACtCR,EAAiBH,EAAIrJ,OAAO,KAC5ByJ,EAAgBJ,EAAIrJ,OAAO,MAG3BiK,EAAY,WACZL,EACKhH,MAAM,MAAQ/F,EAAG0E,MAAM2I,OAAS,GAAM,MACtCtH,MAAM,OAAS/F,EAAG0E,MAAM4I,OAAS,GAAM,OAE5CC,EAAY,SAASrH,GACrB6G,EAAQvG,KAAKN,EAAExH,KAAKQ,MACf6G,MAAM,UAAW,GACjBA,MAAM,MAAQ/F,EAAG0E,MAAM2I,OAAS,GAAM,MACtCtH,MAAM,OAAS/F,EAAG0E,MAAM4I,OAAS,GAAM,MAC5CN,EAAE1G,GAAG,YAAa8G,GAAW9G,GAAG,UAAW,OAG3CkH,EAAW,SAAStH,GACpB6G,EAAQvG,KAAKN,EAAExH,KAAK+O,MACf1H,MAAM,UAAW,IAGtB2H,EAAQ,SAASxH,GAEjB,IADA,GAAIyH,GAAOzH,EACJyH,EAAKC,QAAQD,EAAOA,EAAKC,MAChC,IAAIjC,GAA8B,UAAlBgC,EAAKjP,KAAKQ,KAAoByN,EAAiBC,CAC/DjB,GACK9F,aACA5D,SAAS,KACT4L,MAAM,QAAS,WACZ,GAAIC,GAAK9N,EAAG+N,YAAYvC,EAAE1G,UAAWoB,EAAE8H,GAAI9H,EAAE+H,KACzCC,EAAKlO,EAAG+N,YAAYtC,EAAE3G,UAAWoB,EAAEiI,GAAI,IACvCC,EAAKpO,EAAG+N,YAAYtC,EAAElG,SAAUW,EAAEiI,GAAK,GAAK,EAAG5B,GACnD,OAAO,UAAS8B,GACZ7C,EAAE1G,OAAOgJ,EAAGO,IACZ5C,EAAE3G,OAAOoJ,EAAGG,IAAI9I,MAAM6I,EAAGC,OAGhC5I,UAAU,QACV6I,UAAU,IAAK,SAASpI,GACrB,MAAO,YACH,MAAOoG,GAAIpG,OAKvBqI,EAAe,SAAS7P,EAAM8P,GAE9B,GAAIC,GAAYzO,EAAGyO,YACfd,EAAO3N,EAAG0O,UAAUhQ,EACxBiP,GAAKgB,IAAI,SAASzI,GACd,MAAOA,GAAE0I,MAGb,IAAIC,GAAaJ,EAAUd,GAAMmB,cAC7BC,EAAOP,EAAE/I,UAAU,QAAQ/G,KAAKmQ,GAC/B5I,QAAQ9C,OAAO,IAEpB4L,GAAK5L,OAAO,QACPtG,KAAK,IAAKyP,GACVvG,MAAM,OAAQ,SAASG,GACpB,MAAOG,IAAOH,EAAE8I,SAAW9I,EAAIA,EAAE0H,QAAQlP,KAAKQ,QAEjD6G,MAAM,SAAU,QAChBA,MAAM,eAAgB,KACtBO,GAAG,QAASoH,GACZpH,GAAG,YAAaiH,GAChBjH,GAAG,WAAYkH,IAGpBtC,EAAO,SAASpP,GAChB4C,EAAO5C,EAAGmI,OACV,IAAIqD,GAAS1L,EAAMgN,YACfxD,EAASvF,EAAQgJ,YAAc,IAC/BxD,EAASxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,KACvD8E,GAAUtQ,KAAK8I,IAAa,GAARM,EAAaD,EAAS,KAAO,EAAK,GACtDoG,EAAIxL,EAAGsF,cAAcC,OAAO,EAAG,EAAItJ,KAAKgT,KACxCxD,EAAIzL,EAAGkP,YAAY3J,OAAO,EAAGgH,IAC7BD,EAAMtM,EAAGsM,MACJ6C,WAAW,SAASjJ,GACjB,MAAOjK,MAAK+I,IAAI,EAAG/I,KAAK8I,IAAI,EAAI9I,KAAKgT,GAAIzD,EAAEtF,EAAE8H,QAEhDoB,SAAS,SAASlJ,GACf,MAAOjK,MAAK+I,IAAI,EAAG/I,KAAK8I,IAAI,EAAI9I,KAAKgT,GAAIzD,EAAEtF,EAAE+H,QAEhDoB,YAAY,SAASnJ,GAClB,MAAOjK,MAAK+I,IAAI,EAAGyG,EAAEvF,EAAEiI,OAE1BmB,YAAY,SAASpJ,GAClB,MAAOjK,MAAK+I,IAAI,EAAGyG,EAAEvF,EAAEqJ,OAG/B/C,EAAI3P,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GACxCsH,EAAY7P,KAAK,YAAa,cAAgB0P,EAAS,IAAM,QAC7DE,EAAW5P,KAAK,YAAa,cAAgBwI,EAAQkH,EAAS,IAAM,QAEpEI,EAAe9P,KAAK,YAAa,cAAgB0P,EAAS,IAAM,IAAA,EAAiB,KACjFK,EAAc/P,KAAK,YAAa,cAAgBwI,EAAQkH,EAAS,IAAM,IAAA,EAAiB,KAExFgC,EAAa7P,EAAK8Q,MAAO5C,EAAepB,EAAGC,GAC3C8C,EAAa7P,EAAK+Q,OAAQ9C,EAAgBnB,EAAGC,GAGjD,QACIyB,KAAMA,EACNhC,KAAMA,MAKVmB,EAAO,WAGP,GAAIG,GACAV,EACAxE,EAAQoI,EACR5T,EAEAoR,EAAO,SAASxK,EAAOiN,GACvBnD,EAAM9J,EACNoJ,EAASU,EAAIrJ,OAAO,KACpBrH,EAAK6T,GAGLC,EAAmB,SAASlR,GAC5B,GAAI4I,GAAS1L,EAAMgN,YACfiH,EAAchQ,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAAS,GACjEqI,EAAa7T,KAAK8K,MAAM8I,EAAanR,EAAK4F,QAC1CyL,EAAc,IACdC,EAAU/T,KAAK8I,IAAyD,IAAnDlF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,OAAe5H,EAAQgJ,YAAc,GAAM,KAAQ,GAClHoH,EAAS,EACb,QACI3I,OAAQA,EACRuI,WAAYA,EACZC,WAAYA,EACZC,YAAaA,EACbC,OAAQA,EACRC,OAAQA,EACRC,UAAWxR,EAAK4F,SAIpB6L,EAAqB,SAASzR,EAAMmN,GAGpC,QAASuE,KACL,MAAOnQ,GAAE0G,OAAO0J,UAAW,SAASrR,EAAGC,GACnC,MAAOgB,GAAEqQ,QAAQrQ,EAAE4D,IAAI7E,EAAG,SAASwM,GAC/B,MAAOvL,GAAE4D,IAAI5E,EAAG,SAASwM,GACrB,MAAOD,GAAE+E,QAAQ9E,SAErB,UAOZ,MAAO/M,GAAKmF,IAAI,SAASnB,GAIrB,GAAI2J,GAAO+D,EAAmBI,MAAMzU,KAAM2G,EAAMuJ,OACvCtN,OAAO,SAASiI,GACb,MAAOA,GAAEqD,OAEZpG,IAAI,SAAS+C,GACV,MAAOA,GAAEoF,KAAKnI,IAAI,SAASqB,GAAI,MAAOA,GAAEhG,UAE/C2E,IAAI,SAASqB,GACV,OACIuL,MAAO,EACPzE,KAAM9G,IAKlBmH,GAAKtN,KAAK,SAASC,EAAGC,GAClB,IAAK,GAAIkH,GAAInH,EAAEgN,KAAK1H,OAAS,EAAG6B,GAAK,EAAGA,IAAK,CACzC,GAAInH,EAAEgN,KAAK7F,GAAKlH,EAAE+M,KAAK7F,GAAI,MAAO,EAClC,IAAInH,EAAEgN,KAAK7F,GAAKlH,EAAE+M,KAAK7F,GAAI,MAAO,GAEtC,MAAO,KAKXkG,EAAKrI,QAAQ,SAAS0M,GAClBhO,EAAMiO,OAAO3M,QAAQ,SAASyM,GACuB,GAA7CxQ,EAAE2Q,WAAWF,EAAI1E,KAAMyE,EAAMzE,MAAM1H,SAAaoM,EAAID,OAASA,EAAM/R,SAK/E,IAAImS,GAAOxE,EAAK1F,OAAO,SAAS1B,EAAG2B,GAC/B,GAAIkK,GAAU7L,CAmBd,OAlBA2B,GAAEoF,KAAK+E,UAAU/M,QAAQ,SAASgN,GAC9B,GAAIC,GAAWH,EAAQ9B,SAASnL,IAAI,SAASqB,GACzC,MAAOA,GAAEhG,OACVL,QAAQmS,EAAI9R,KACC,KAAZ+R,GACAH,EAAQ9B,SAAS9H,MACbhI,KAAM8R,EACNhC,YACAyB,MAAO,EACPpK,MAAOwF,EAASmF,KAEpBF,EAAUA,EAAQ9B,SAAS8B,EAAQ9B,SAAS1K,OAAS,KAErDwM,EAAUA,EAAQ9B,SAASiC,GAC3BH,EAAQL,OAAS,KAGzB7J,EAAEoF,KAAK+E,UACA9L,IAEP/F,KAAMwD,EAAMxD,KACZ8P,YACAyB,MAAOpE,EAAK/H,OACZ+B,MAAO,QAIX,QACIgG,KAAMA,EACNwE,KAAMA,MAMdK,EAAW,SAASC,GAGpB,GAAIC,GAAapR,EAAGiD,OAAOlH,KAG3BqV,GAAWjO,OAAO,QACb4C,MAAM,OAAQ,QACdlJ,KAAK,QAASyK,EAAOwI,WAAa,GAClCjT,KAAK,SAAUyK,EAAOyI,aAG3BqB,EAAWjO,OAAO,QAAQgK,KAAKgE,EAAGN,KAAK3R,MAClCrC,KAAK,IAAK,IACVA,KAAK,IAAKZ,KAAK0L,OAAOL,EAAOwI,WAAa,GAAK,IAC/CjT,KAAK,cAAe,SAGzB,IAAIwP,GAAO+E,EAAW3L,UAAU,YAAY/G,KAAKyS,EAAG9E,MAChDgF,EAAOpR,EAAE+E,IAAImM,EAAG9E,KAAM,SAASqE,GAC/B,MAAOA,GAAID,QACZA,MACCa,EAAOrR,EAAE8E,IAAIoM,EAAG9E,KAAM,SAASqE,GAC/B,MAAOA,GAAID,QACZA,MACClG,EAASvK,EAAGsF,aAChBiF,GAAOhF,OAAO,EAAG,MACjBgF,EAAOzF,QAAQwM,EAAMD,GACrB,IAAIE,GAAWjK,EAAOwI,WAAaqB,EAAG9E,KAAK/H,MAE3C+H,GAAKpG,QACA9C,OAAO,QACPtG,KAAK,IAAK,SAASqJ,EAAGC,GACnB,MAAOoL,GAAWpL,IAErBtJ,KAAK,IAAK,SAASqJ,GAChB,MAAO,KAAMqE,EAAOrE,EAAEuK,SAEzB5T,KAAK,QAAS0U,GACd1U,KAAK,SAAU,SAASqJ,GACrB,MAAOqE,GAAOrE,EAAEuK,SAEnB5T,KAAK,OAAQ,SAASqJ,GACnB,MAA0B,UAAlBA,EAAE8F,KAAK,GAAG9M,KAAoB,UAAY,WAI1D,IAAI2R,GAAO7Q,EAAG0O,UAAUyC,EAAGN,KAAM,SAAS3K,GACtC,MAAOA,GAAE8I,WAGTwC,EAAsC,IAAvB,EAAIX,EAAKzL,OAAS,GAEjCqJ,EAAYzO,EAAGyO,YACdG,MAAMtH,EAAOwI,WAAa,EAAG0B,IAE9BC,EAAQhD,EAAUoC,GAAM/B,cAExB4C,EAAON,EAAW3L,UAAU,aAC3B/G,KAAK+S,EAEVC,GAAKzL,QACA9C,OAAO,QACPtG,KAAK,QAAS,YACdA,KAAK,IAAK,SAASqJ,GAChB,MAAOA,GAAE8H,KAEZnR,KAAK,IAAK,SAASqJ,GAChB,MAAQ,KAAMsL,GAAgBtL,EAAEiI,GAAKqD,KAExC3U,KAAK,QAAS,SAASqJ,GACpB,MAAOA,GAAE+H,GAAK/H,EAAE8H,KAEnBnR,KAAK,SAAU,SAASqJ,GACrB,MAAOA,GAAEqJ,GAAKrJ,EAAEiI,KAEnBtR,KAAK,OAAQ,SAASqJ,GACnB,MAAOA,GAAExH,KAAK2H,QAEjBN,MAAM,aAAc,SAASG,GAC1B,MAAsB,SAAfA,EAAExH,KAAKQ,KAAkB,SAAW,aAKnDgM,EAAO,SAASxM,EAAMmN,GAEtB/P,EAAGgQ,OAASpN,EAAO5C,EAAGmI,QAAQmI,UAC9B9E,EAASsI,EAAiBlR,GAE1BgR,EAAkBS,EAAmBzR,EAAMmN,EAG3C,IAAInJ,GAAQoJ,EAAOrG,UAAU,sBAAsB/G,KAAKgR,EACxDhN,GAAMuD,QACD9C,OAAO,KACPtG,KAAK,QAAS,eACdA,KAAK,YAAa,SAASqJ,EAAGC,GAC3B,MAAO,cAAiBA,EAAImB,EAAOwI,WAAcxI,EAAO2I,QAAU,KAAOpQ,EAAQgJ,YAAc,KAAO,MAE9GiD,EAAOrG,UAAU,gBACZkM,KAAKT,GAEd,QACIhE,KAAMA,EACNhC,KAAMA,MAIVsB,EAAMxM,EAAGiD,OAAO,mBAAmBE,OAAO,MAC9CwI,GAASuB,KAAKV,GACdH,EAAKa,KAAKV,EAAK1Q,GAtanB8P,EAAmBvO,SAAW,KAAM,QAAS,kBAAmB,SAAU,WAAY,SAAU,eAAgB,UAAW,IAJ3H,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbI,WAAYgO,EACZ/N,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,aAAcqO,MAqbjC,WACI,YAOA,SAASxM,KAaL,QAASyS,GAAehW,EAAOiW,EAAW1T,EAAQyB,EAAc/D,EAAU8D,EAAQK,EAAID,EAAQ+R,EAAMjS,EAASI,GA6BzG,QAAS8R,KACL,GAAInO,GAAWV,EAAQuC,UAAU,uBAAuB,EACjC,IAAnB7B,EAASU,QACbuN,EAAUG,iBAAiB,OAAQ,mBAC/B9O,EAAQuC,UAAU,uBAAuB,GAAG5B,IAAI,SAAS6N,GACrD,MAAOA,GAAKO,SAAS/S,KAAKgT,iBAKtC,QAASC,KACqB,GAAtB3Q,EAAY8C,OACZpB,EAAQuC,UAAU,uBAAuB2M,QAAQ,sBAAsB,GAEvElP,EAAQuC,UAAU,UAAU2M,QAAQ,qBAAsB,WACtD,MAAQ5Q,GAAY3C,QAAQ9C,KAAKkW,SAAS/S,OAAS,IA1C/D,GAAI1D,QAAQ6W,YAAYzS,EAAaN,YAEjC,WADAnB,GAAOkB,GAAG,aAKd,IAIIgG,GAAOD,EAAQkF,EAAQC,EAAQ+H,EAAMjB,EAAMkB,EAJ3CrP,EAAUlD,EAAGiD,OAAO,eAAeE,OAAO,OAAOtG,KAAK,KAAM,SAC5D2V,EAAYxS,EAAGiD,OAAO,QAAQE,OAAO,OAAOtG,KAAK,QAAS,wBAM1Df,EAAKC,IACTD,GAAGwD,WAAaM,EAAaN,WAC7BxD,EAAG2W,eAAiB3W,EAAG4W,cAAgB,GACvC5W,EAAG6W,eAAiB7W,EAAG8W,cAAgB,GACvC9W,EAAG+W,kBAAoB/W,EAAGgX,iBAAmB,EAC7ChX,EAAGiX,kBAAoBjX,EAAGkX,iBAAmB,EAC7ClX,EAAGmX,YACHnX,EAAGoX,QAAU,KACbpX,EAAGqX,MACHrX,EAAGsX,IAAM,IAGT,IAAI5R,GAA+C,MAAhCqQ,EAAUwB,sBAAmCxB,EAAUwB,mBAAmB5R,GAuB7F7F,GAAMyE,SAAQ,GAAM,mBACpBzE,EAAM0X,WAAWxX,EAAGwD,YAAYjB,KAAK,SAASC,GAC1C,GAAIiV,GAAMjV,EAASkV,QAAQC,SAAS9U,OAAO,SAASuG,GAChD,MAAOA,GAAErG,QAAQ,aAAe,GAEpC0U,GAAMA,EAAIA,EAAIjP,OAAS,GAAGvG,QAAQ,SAAU,IAC5CnC,EAAM8X,QAAQ5X,EAAGwD,WAAYiU,GAAKlV,KAAK,WACnCzC,EAAM+X,kBAAkBtV,KAAK,SAASC,GAGlCxC,EAAGmX,SAAW3U,EAASkV,QACvB1X,EAAGoX,QAAUpX,EAAGmX,SAAS,GACzBrX,EAAMgY,qCAAqCvV,KAAK,SAASC,GAGrD,GAAIkV,GAAUlV,EAASkV,OACvB1X,GAAG4W,cAAgBzW,KAAK8K,MAAMyM,EAAQK,MAAM,GAAK,QACjD/X,EAAG8W,cAAgB3W,KAAK8K,MAAMyM,EAAQK,MAAM,GAAK,QACjD/X,EAAGgX,iBAAmB7W,KAAK8K,MAAMyM,EAAQM,SAAS,GAAK,QACvDhY,EAAGkX,iBAAmB/W,KAAK8K,MAAMyM,EAAQM,SAAS,GAAK,QACvDnU,EAAOoU,OAAO,aAAc,WACxBjY,EAAGsE,WAIPyR,EAAUmC,sBAAsBpS,IAAI,SAASiF,GACzCrF,EAAcqF,EAAUpF,IACxB0Q,cAQpBrW,EAAGsE,OAAS,WA6BR,QAASuK,KACLtF,EAAQxF,EAAQiJ,WAAa,IACwB,SAAjDtN,QAAQiB,QAAQ,eAAeI,KAAK,YACpCwI,GAAS,KAEbD,EAASvF,EAAQgJ,YAAc,IACgB,QAA3CrN,QAAQiB,QAAQ,SAASI,KAAK,YAAqBwI,GAAS,KAEhEnC,EACKrG,KAAK,QAAS,QACdA,KAAK,SAAUuI,GACpBkF,EAAStK,EAAG0I,MAAMuL,SACbnP,SAASwN,EAAMA,IACf/M,OAAO,EAAGF,IAAQG,OAEvB+E,EAASvK,EAAG0I,MAAMuL,SACbnP,SAASuM,EAAMA,IACf9L,OAAOH,EAAQ,IAAII,OAI5B,QAAS0F,GAAKlJ,EAAKkS,EAASC,GAExB7B,EAAa,GAANtQ,EACPqP,EAAa,GAANrP,EACP2I,IAGA4H,EAAQvS,EAAGwM,IAAI+F,QACV/G,EAAElB,GACFmB,EAAElB,GACFjE,GAAG,WAAY,WACZ,GAAI8N,GAAK7B,EAAM8B,QACfnR,GAAQuC,UAAU,UACb2M,QAAQ,qBAAsB,SAASlM,GACpC,MAAQA,GAAE,GAAKkO,EAAG,GAAG,IAAMlO,EAAE,GAAKkO,EAAG,GAAG,IAAMlO,EAAE,GAAKkO,EAAG,GAAG,IAAMlO,EAAE,GAAKkO,EAAG,GAAG,KAEtFpU,EAAGiD,OAAOlH,MAAM8J,aAAa5D,SAAS,KACjCW,KAAK2P,EAAM8B,SACP,EAAG,IACH,EAAG,MAEZtC,MAGR7O,EAAQN,KAAK2P,EAGb,IAAI+B,GAAUpR,EAAQuC,UAAU,UAAU/G,KAAKyV,EAAO,SAASjO,GAC3D,MAAOA,IAEXoO,GAAQrO,QACH9C,OAAO,UACPtG,MACG0X,QAAS,YACTC,GAAc,GAARnP,EACNoP,GAAe,GAATrP,EACNsP,EAAK,IAER3O,MAAM,eAAgB,KACtBO,GAAG,YAAa,SAASJ,GACtBsM,EAAU3M,aACL5D,SAAS,KACT8D,MAAM,UAAW,GACtByM,EAAUhM,KAAKN,EAAEhH,MACZ6G,MAAM,OAAS/F,EAAG0E,MAAMiQ,MAAQ,GAAM,MACtC5O,MAAM,MAAQ/F,EAAG0E,MAAMkQ,MAAQ,GAAM,QAE7CtO,GAAG,WAAY,WACZkM,EAAU3M,aACL5D,SAAS,KACT8D,MAAM,UAAW,KAEzBO,GAAG,QAAS,SAASJ,GAClB1K,QAAQiB,QAAQ,iBAAiBoY,OACjC,IAAIC,GAAM,sDAAwD5O,EAAEhH,IACpES,GAAOoV,OAAO,WACVjZ,EAAGqX,MAAQrB,EAAKkD,mBAAmBF,OAG/CR,EAAQzO,aACH5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpBtJ,KAAK,KAAM,SAASqJ,GACjB,MAAOoE,GAAOpE,EAAE,MAEnBrJ,KAAK,KAAM,SAASqJ,GACjB,MAAOqE,GAAOrE,EAAE,MAEnBH,MAAM,eAAgB,GAE3BuO,EAAQ1O,OACHC,aACA5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpBtJ,KAAK,KAAc,GAARwI,GACXxI,KAAK,KAAe,GAATuI,GACXW,MAAM,eAAgB,KACtBL,QAGL,IAAIuP,GAAQ/R,EAAQuC,UAAU,QAAQ/G,KAAKwV,EAC3Ce,GAAMhP,QACD9C,OAAO,QACPtG,MACG0X,QAAS,OACTW,eAAgB,EAChBjH,GAAM3D,EAAO,GACbiF,GAAMhF,EAAO,GACb4K,GAAM7K,EAAO,GACb8K,GAAM7K,EAAO,KAEhBxE,MAAM,SAAU,SAASG,GACtB,MAAQA,GAAEhH,KAAKL,QAAQ,OAAU,UAAY,YAErDoW,EAAMpP,aACD5D,SAAS,KACTpF,MACGoR,GAAM3D,EAAO,GACbiF,GAAMhF,EAAO,GACb4K,GAAM,SAASjQ,GACX,MAAOoF,GAAOpF,EAAE,KAEpBkQ,GAAM,SAASlQ,GACX,MAAOqF,GAAOrF,EAAE,OAG5B+P,EAAMrP,OAAOF,QAGb,IAAIyH,GAAOjK,EAAQuC,UAAU,QAAQ/G,KAAKwV,EAC1C/G,GAAKlH,QACA9C,OAAO,QACPtG,MACG0X,QAAS,OACT/I,EAAa,GAARnG,EACLoG,EAAc,GAATrG,EACLiQ,cAAe,SAASnQ,GACpB,MAAQA,GAAE,GAAK,EAAK,QAAU,SAGrCiI,KAAK,SAASjI,GACX,MAAOA,GAAEhG,OAEZ6G,OACGuP,KAAQ,QACRD,cAAe,WAGvBlI,EAAKtH,aACA5D,SAAS,KACTpF,MACG2O,EAAK,SAAStG,GACV,MAAOoF,GAAOpF,EAAE,KAEpBuG,EAAK,SAASvG,GACV,MAAOqF,GAAOrF,EAAE,OAI5BiI,EAAKvH,OAAOF,SACZyM,IAhMJ,GAAIoD,KACArW,KAAM,WACNsW,IAAoC,OAA/BC,OAAO3Z,EAAG+W,mBACf6C,KAAqC,OAA/BD,OAAO3Z,EAAGiX,qBAEhB7T,KAAM,QACNsW,IAAiC,OAA5BC,OAAO3Z,EAAG2W,gBACfiD,KAAkC,OAA5BD,OAAO3Z,EAAG6W,iBAGpB/W,GAAM+Z,kBAAkB7Z,EAAGoX,QAASqC,GAASlX,KAAK,SAASC,GAGvD,GAAIkV,GAAUlV,EAASkV,QACnBW,EAAQX,EAAQoC,SAAS/R,IAAI,SAASjF,EAAMiX,GAE5C,MADAjX,GAAKM,KAAOnD,KAAK8Z,GACVjX,GACR4U,EAAQsC,cACP5B,EAAUV,EAAQU,QAAQrQ,IAAI,SAASjF,EAAMiX,GAE7C,MADAjX,GAAKM,KAAOnD,KAAK8Z,GACVjX,GACR4U,EAAQuC,aACP/T,EAAyB,IAAnBwR,EAAQwC,QAClB9K,GAAKlJ,EAAKkS,EAASC,GACnBvY,EAAMyE,SAAQ,KA2KlBvE,EAAGoE,OAAS,WACRyK,IAEAzH,EAAQuC,UAAU,UACb5I,MACG2X,GAAM,SAAStO,GACX,MAAOoE,GAAOpE,EAAE,KAEpBuO,GAAM,SAASvO,GACX,MAAOqE,GAAOrE,EAAE,OAI5BhD,EAAQuC,UAAU,QACb5I,MACG2O,EAAK,SAAStG,GACV,MAAOoF,GAAOpF,EAAE,KAEpBuG,EAAK,SAASvG,GACV,MAAOqF,GAAOrF,EAAE,OAI5BhC,EAAQuC,UAAU,QACb5I,MACGoR,GAAM3D,EAAO,GACbiF,GAAMhF,EAAO,GACb4K,GAAM,SAASjQ,GACX,MAAOoF,GAAOpF,EAAE,KAEpBkQ,GAAM,SAASlQ,GACX,MAAOqF,GAAOrF,EAAE,QAMhC1J,QAAQiB,QAAQoD,GAAS3C,KAAK,SAC1B+C,EAAEE,SAASrE,EAAGoE,OAAQ,OAtUlC0R,EAAevU,SAAW,QAAS,YAAa,SAAU,eAAgB,WAAY,SAAU,KAAM,SAAU,OAAQ,UAAW,IALnI,IAAIC,IACAC,SAAU,IACVC,YAAa,gCACbI,WAAYgU,EACZ/T,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,SAAU6B,MAwV7B,WACI,YAOA,SAASA,KAaL,QAAS8W,GAAcC,EAAIta,EAAO8D,EAAiBvB,EAAQyB,EAAc/D,EAAU8D,EAAQK,EAAID,EAAQF,EAASI,GAmB5G,QAASkS,KACqB,GAAtB3Q,EAAY8C,OACZ6R,EAAS1Q,UAAU,sBAAsB2M,QAAQ,qBAAqB,GAEtE+D,EAAS1Q,UAAU,UAAU2M,QAAQ,oBAAqB,WACtD,MAAQ5Q,GAAY3C,QAAQ9C,KAAKkW,SAAS1N,KAAO,IAiJ7D,QAAS6R,KAOL,GAJAta,EAAGua,cAAgBnM,EAAOhL,KAC1BpD,EAAGwa,YAAcpM,EAAOxL,KAGL,QAAfwL,EAAOhL,KACPpD,EAAGua,cAAgB,GACnB3X,EAAKsF,QAAQ,SAASkB,GAClBA,EAAEmB,MAAQ,gBAIX,CACH,GAAIkQ,GAASrM,EAAOxL,KAAKiI,OAAO,SAAS1B,EAAG2B,GACxC,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAE+J,OAAOrM,OAAQ6B,IACjClB,EAAE2B,EAAE+J,OAAOxK,IAAMS,EAAEP,KAEvB,OAAOpB,OAEXvG,GAAOA,EAAKmF,IAAI,SAASqB,GAErB,MADAA,GAAEmB,MAAuBmQ,QAAdza,KAAKmJ,EAAEX,IAAoBxI,KAAKmJ,EAAEX,IAAM,OAC5CW,GACRqR,IAIX,QAASrL,KAGLkL,GAGA,IAAI9O,GAAS1L,EAAMgN,WACnBvD,GAAQxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAClDrC,EAASvF,EAAQgJ,YAAc,IAC/BrN,QAAQiB,QAAQ,cAAc8K,KAC1BlC,MAASA,EAAQ,KACjBoR,eAAgBnP,EAAOE,KAAO,OAElCtE,EAAQrG,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAC5CsR,EAAQ7Z,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAC5C+Q,EAAStZ,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAG7C9E,EAASN,EAAGsF,cAAcR,QAAQ6R,EAAOC,KAAMD,EAAOrE,OAAO/M,OAAO,GAAIF,EAAQ,KAAKG,OACrFqR,EAAS7W,EAAGsF,cAAcR,QAAQ6R,EAAOrF,KAAMqF,EAAOtF,OAAO9L,OAAO,GAAIH,EAAS,KAAKI,MAGtF,IAAI8O,GAAU6B,EAAS1Q,UAAU,UAAU/G,KAAKA,EAChD4V,GAAQrO,QAAQ9C,OAAO,cAClBtG,KAAK,QAAS,YACdA,KAAK,KAAM,SAASqJ,GACjB,MAAO5F,GAAO4F,EAAE,MAEnBrJ,KAAK,KAAM,SAASqJ,GACjB,MAAO2Q,GAAO3Q,EAAE,MAEnBrJ,KAAK,IAAK,GACVkJ,MAAM,OAAQ,SAASG,GACpB,MAAOA,GAAEG,QAEjBiO,EAAQ1O,OACHC,aACA5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpBJ,MAAM,eAAgB,KACtBL,SACL4O,EACKvO,MAAM,OAAQ,SAASG,GACpB,MAAOA,GAAEG,QAEZR,aACA5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpBtJ,KAAK,IAAK,GACVA,KAAK,KAAM,SAASqJ,GACjB,MAAO5F,GAAO4F,EAAE,MAEnBrJ,KAAK,KAAM,SAASqJ,GACjB,MAAO2Q,GAAO3Q,EAAE,MAEnBH,MAAM,OAAQ,SAASG,GACpB,MAAOA,GAAEG,QAEZN,MAAM,eAAgB,IAG3B+Q,EAAQ9W,EAAG+W,UAAUrO,MAAMpI,GAAQwH,MAAM,GACzCkP,EAAQhX,EAAG0K,WAAWhC,MAAMmO,GAAQ/O,MAAM,GAE1CmP,EACKpa,KAAK,QAAS,QACdA,KAAK,YAAa,gBAAkBga,EAAO,GAAK,KAChDjU,KAAKkU,GACL3T,OAAO,QACPtG,KAAK,IAAK,IACVA,KAAK,IAAK,IACVsQ,KAAK,OAEV+J,EACKra,KAAK,QAAS,QACdA,KAAK,YAAa,aAAeyD,EAAO,GAAK,QAC7CsC,KAAKoU,GACL7T,OAAO,QACPtG,KAAK,IAAK,IACVA,KAAK,IAAK,IACVsQ,KAAK,MAGV,IAAIoF,GAAQvS,EAAGuS,QACVjM,GAAG,MAAO,WAEP,IAAKtG,EAAG0E,MAAMmC,UAEV,WADAnH,GAAgB6B,oBAAqB,MAIzC,IAAI6S,GAAKpU,EAAG0E,MAAMmC,UACd+P,EAAOxC,EAAG,GAAG,GACb9B,EAAO8B,EAAG,GAAG,GACb9C,EAAO8C,EAAG,GAAG,GACb/C,EAAO+C,EAAG,GAAG,GAEb3S,EAAM0U,EAAS1Q,UAAU,UAAU/G,OAAOC,OAAO,SAASuH,GAC1D,GAAIsF,GAAIlL,EAAO4F,EAAE,IACbuF,EAAIoL,EAAO3Q,EAAE,GACjB,OAAQsF,GAAIoL,GAAYtE,EAAJ9G,GAAYC,EAAI6F,GAAYD,EAAJ5F,IAC7C5H,IAAI,SAASqC,GACZ,MAAOA,GAAE3B,IAGb7E,GAAgB6B,iBAAiBE,EAAK,QAI9CiV,GAAQ7Z,KAAK,QAAS,SAAS+F,KAAK2P,GAEpCJ,IArTJ,GAAI9Q,GAAK3B,EAAgB4B,kBACf,OAAND,GACA3B,EAAgB6B,oBAAqB,eAEzC,IAAIC,GAAqB,MAANH,KAAmBA,EAAGI,IAErC0V,GAAwB,CAC5BzX,GAAgBgC,iBAAiBE,IAAI,SAASD,GACtCwV,GACA3V,EAAcG,EAASF,IACvB0Q,KAEAgF,GAAwB,GAgBhC,IAOI7W,GAAQuW,EAAQC,EAAOE,EACvBtY,EAAMiY,EACNtR,EAAOD,EATPlC,EAAUlD,EAAGiD,OAAO,cAAcE,OAAO,OACzCgT,EAAWjT,EAAQC,OAAO,KAC1B8T,EAAU/T,EAAQC,OAAO,KACzB+T,EAAUhU,EAAQC,OAAO,KACzBuT,EAAUxT,EAAQC,OAAO,KAOzB+G,GACAxL,QACA0Y,QAASxb,EAAM2C,gBAAgBgB,QAC/BL,KAAM,OACNmY,KAAM,SAINvb,EAAK,SAAUA,EAAIF,GA8DnB,MA7DAE,GAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGmX,YACHnX,EAAGoX,QAAU,KACbpX,EAAGwb,OAAS,GACZxb,EAAGyb,YAAc,SAAS5T,GACtB,GAAIlC,GAAMkC,EAAEgN,OACR6G,IACJxX,GAAGyF,UAAU,UAAUkM,KAAK,SAASzL,EAAEC,GACX,IAAnB1E,EAAI5C,QAAQqH,EAAE3B,KACdvE,EAAGiD,OAAOlH,MAAMqW,QAAQ,qBAAqB,GAC7CoF,EAAOtQ,KAAKhB,EAAE3B,KAEVvE,EAAGiD,OAAOlH,MAAMqW,QAAQ,sBAAsBoF,EAAOtQ,KAAKhB,EAAE3B,MAGzE7E,EAAgB6B,iBAAiBiW,EAAQ,QAI7C1b,EAAG2b,cAAgB,SAAS9T,GACxB,GAAIlC,GAAMkC,EAAEgN,OACR6G,IACJxX,GAAGyF,UAAU,UAAUkM,KAAK,SAASzL,EAAEC,GACZ,IAAnB1E,EAAI5C,QAAQqH,EAAE3B,IACdvE,EAAGiD,OAAOlH,MAAMqW,QAAQ,qBAAqB,GAEzCpS,EAAGiD,OAAOlH,MAAMqW,QAAQ,sBAAsBoF,EAAOtQ,KAAKhB,EAAE3B,MAGxE7E,EAAgB6B,iBAAiBiW,EAAQ,QAE7C5b,EAAMwC,MAAM,cACJmB,QAASzD,EAAGwD,WAAWC,QACvBmY,SAAU,OAAQ,UAAW,YAEhCrZ,KAAK,SAASC,GAEX,GAAII,GAAOJ,EAASI,KAAKmF,IAAI,SAASqB,GAClC,OAAQlG,EAAEkG,EAAEyS,QAAQ1Y,EAAEiG,EAAE0S,OAAOhR,EAAE1B,EAAEmS,QAGnCtM,EAAS9K,EAAE0G,OAAOjI,EAAK,SAASmZ,EAAM9V,GACtC,GAAI+V,GAAMD,CAOV,OANI5X,GAAE0R,KAAK5P,EAAK,SAASgW,GACb9X,EAAE+X,IAAIF,EAAKC,KACXD,EAAIC,OAERD,EAAMA,EAAIC,KAEXF,MAEX/b,GAAGmX,SAAWxM,OAAOC,KAAKqE,GAAQlH,IAAI,SAAS8T,GAAS,OAAQzY,KAAMyY,EAASM,QAC3ExR,OAAOC,KAAKqE,EAAO4M,IAAU9T,IAAI,SAAS+T,GAAS,OAAQ1Y,KAAK0Y,EAAQM,MACpEzR,OAAOC,KAAKqE,EAAO4M,GAASC,IAAS/T,IAAI,SAASwT,GAAQ,OAAQnY,KAAKmY,WAM/Evb,EAAGoX,QAAUpX,EAAGmX,SAAS,KAE1BnX,GAERC,KAAMH,EAGT+D,GAAOoU,OAAO,aAAc,WACR,MAAZjY,EAAGoX,UACPpX,EAAGmc,QAAUnc,EAAGoX,QAAQ+E,QACxBnc,EAAG8b,OAAS9b,EAAGmc,QAAQ,MAE3BtY,EAAOoU,OAAO,YAAa,WACP,MAAZjY,EAAGoX,UACPpX,EAAGqc,SAAWrc,EAAG8b,OAAOM,MACxBpc,EAAGsc,QAAUtc,EAAGqc,SAAS,MAI7BxY,EAAOoU,OAAO,aAAc,SAAS4D,GAClB,MAAXA,GACJ/b,EAAMwC,MAAM,cACJmB,QAASzD,EAAGwD,WAAWC,QACvBoY,QAAS7b,EAAGoX,QAAQhU,KACpBmY,KAAMvb,EAAGsc,QAAQlZ,KACjB0Y,OAAQ9b,EAAGsc,QAAQR,SAEtBvZ,KAAK,SAASC,GACXxC,EAAGuc,IAAM/Z,EAASI,KAAK,GAAG2Z,IAC1Bvc,EAAGwc,IAAMha,EAASI,KAAK,GAAG4Z,GAC1B,IAAI5R,GAAOD,OAAOC,KAAKpI,EAASI,KAAK,GAAGA,KACxCA,GAAOgI,EAAK7C,IAAI,SAASoF,GAErB,MADAlN,MAAK2C,KAAKuK,GAAK1E,GAAK0E,EACblN,KAAK2C,KAAKuK,KAEjBvK,KAAMJ,EAASI,KAAK,GAAGA,OAE3BiY,EAASjY,EAAKiI,OAAO,SAAS1B,EAAG2B,GAK7B,MAJA3B,GAAE2R,KAAO3a,KAAK8I,IAAIE,EAAE2R,KAAMhQ,EAAE,IAC5B3B,EAAEqN,KAAOrW,KAAK+I,IAAIC,EAAEqN,KAAM1L,EAAE,IAC5B3B,EAAEqM,KAAOrV,KAAK8I,IAAIE,EAAEqM,KAAM1K,EAAE,IAC5B3B,EAAEoM,KAAOpV,KAAK+I,IAAIC,EAAEoM,KAAMzK,EAAE,IACrB3B,IAEP2R,KAAM7S,EAAAA,EACNuN,KAAMvN,EAAAA,EACNuO,OAAOvO,EAAAA,GACPsN,OAAOtN,EAAAA,KAGX4S,EAAOrE,KAAOrW,KAAK+I,IAAI/I,KAAK+F,IAAI2U,EAAOC,MAAOD,EAAOrE,MACrDqE,EAAOC,MAAQD,EAAOrE,KACtBqE,EAAOtF,KAAOpV,KAAK+I,IAAI/I,KAAK+F,IAAI2U,EAAOrF,MAAOqF,EAAOtF,MACrDsF,EAAOrF,MAAQqF,EAAOtF,KAEtBnG,QAwJZtP,EAAMuB,SAASyE,IAAIsJ,GACnB1P,QAAQiB,QAAQoD,GAAS3C,KAAK,SAAU+C,EAAEE,SAAS+K,EAAM,KAEzD,IAAIqN,GAAuB,SAAS9H,GAChCvG,EAASuG,EACT3U,EAAG0c,gBAAiB,EACpBtN,IAGJxL,GAAgB6Y,qBAAqB3W,IAAI2W,GAGzC5Y,EAAO4J,IAAI,WAAY,WACnB7J,EAAgB6Y,qBAAqB7S,OAAO6S,KA/UpDtC,EAAc5Y,SAAW,KAAM,QAAS,kBAAmB,SAAU,eAAgB,WAAY,SAAU,KAAM,SAAU,UAAW,IANtI,IAAIC,IACAC,SAAU,IACVC,YAAa,8BACbI,WAAYqY,EACZpY,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,QAAS6B,MAgW5B,WACI,YAOA,SAASsZ,KAaL,QAASC,GAAmB9c,EAAO8D,EAAiBvB,EAAQyB,EAAcD,EAAQmS,EAAMjS,EAASE,EAAQ4Y,EAAW1Y,GAyJhH,QAAS2Y,KACL,GAAIC,GAAW,mBACXC,EAAM,MACNC,EAAS,kBACTC,EAAQ,OACZ,SACQC,SAAY,OACZlT,OACIpI,QAAW,cACXub,cAAe,SACfC,cAAe,SACfC,MAAS,UACT/T,MAAS,OACTD,OAAU,OACViB,MAASwS,EACTQ,mBAAoB,qBACpBC,eAAgB,MAChBC,eAAgBV,KAIpBI,SAAY,OACZlT,OACIV,MAAS,MACTmU,aAAcX,EACdY,aAAc,WAKlBR,SAAY,4EACZlT,OACIpI,QAAW,GACX0b,mBAAoB,QACpBD,MAAS,oBAMbH,SAAY,oEACZlT,OACIyT,aAAcR,EACdU,qBAAsB,WACtBC,qBAAsBX,KAK1BC,SAAY,8DACZlT,OACIyT,aAAcV,EACdY,qBAAsB,MACtBC,qBAAsBb,KAK1BG,SAAY,0BACZlT,OACIyT,aAAcR,KAKlBC,SAAY,4BACZlT,OACI6T,QAAW,UAGfX,SAAY,2BACZlT,WAEAkT,SAAY,iCACZlT,OACI8T,kBAAmB,MACnBC,gBAAiB,SAMrBb,SAAY,uBACZlT,OACIpI,QAAW,cACX0b,mBAAoB,qBACpBE,eAAgB,QAChBD,eAAgB,MAChBS,YAAa,OACbX,MAAS,iBACT/T,MAAS,OACTD,OAAU,WAGd6T,SAAY,0BACZlT,OACIpI,QAAW,cACX0b,mBAAoB,qBACpBD,MAAS,UACT/T,MAAS,QACTD,OAAU,QACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,yBACZlT,OACIpI,QAAW,GACX0b,mBAAoB,qBACpBD,MAAS,UACT/T,MAAS,QACTD,OAAU,QACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,wBACZlT,OACIpI,QAAW,GACX0b,mBAAoB,qBACpBD,MAAS,UACT/T,MAAS,QACTD,OAAU,QACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,MAChBU,eAAgB,YAGpBf,SAAY,0BACZlT,OACIpI,QAAW,cACX0b,mBAAoB,qBACpBD,MAAS,UACT/T,MAAS,QACTD,OAAU,QACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZlT,OACIpI,QAAW,cACX0b,mBAAoB,oBACpBD,MAAS,UACT/T,MAAS,OACTD,OAAU,QACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,uBACZlT,OACIpI,QAAW,cACX0b,mBAAoB,oBACpBD,MAAS;AACT/T,MAAS,OACTD,OAAU,OACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZlT,OACIpI,QAAW,cACX0b,mBAAoB,qBACpBD,MAAS,iBACT/T,MAAS,QACTD,OAAU,OACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,sBACZlT,OACIpI,QAAW,cACX0b,mBAAoB,oBACpBD,MAAS,UACT/T,MAAS,QACTD,OAAU,OACV2U,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,+BACZlT,OACIpI,QAAW,cACXyb,MAAS,iBACTW,YAAa,OACbR,eAAgB,MAChBD,eAAgB,SAGpBL,SAAY,gBACZlT,OACI+T,gBAAiB,OACjBD,kBAAmB,SAGvBZ,SAAY,4BACZlT,OACIV,MAAS,SAGb4T,SAAY,0BACZlT,OACIyT,aAAcT,KAGlBE,SAAY,4BACZlT,OACIyT,aAAc,MACdnU,MAAS,MACToU,aAAc,SACdC,qBAAsB,WACtBC,qBAAsB,WAG1BV,SAAY,0BACZlT,OACIyT,aAAc,QACdnU,MAAS,MACToU,aAAc,SACdC,qBAAsB,WACtBO,qBAAsB,WACtBN,qBAAsB,QACtBO,qBAAsB,SAG1BjB,SAAY,8BACZlT,OACIyT,aAAc,QACdnU,MAAS,MACToU,aAAc,WAGlBR,SAAY,8BACZlT,OACIyT,aAAc,QACdnU,MAAS,SAGb4T,SAAY,8BACZlT,OACIyT,aAAc,MACdnU,MAAS,SAnZzB,GAAI8U,GAKAC,EAJAte,EAAKC,KAGLiH,EAAUxH,QAAQiB,QAAQ,kBA+B9BX,GAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGwb,OAAS,GACZxb,EAAGqX,MACHrX,EAAGsX,IAAM,KACTtX,EAAGue,UAAY,GACfve,EAAGwe,SAEHxe,EAAGoE,OAAS,WACR8C,EAAQqC,MAAM,QACdrC,EAAQoC,OAAOvF,EAAQgJ,YAAc,IACjCuR,IACAA,EAAQla,SACRka,EAAQG,WAIhB5a,EAAOoU,OAAO,YAAa,WACvB,IAAIvY,QAAQ6W,YAAY+H,GAAxB,CACA,GAAII,GAAO1e,EAAGwb,OAAOpF,cACjBuI,EAAMD,EAAKlW,MACf8V,GAAQM,aACRN,EAAQ3I,QAAQ5N,IAAI,SAAS8W,GACd,GAAPF,EACAE,EAAIC,WACGD,EAAI9d,KAAK,QAAQge,OAAO,EAAGJ,KAASD,EAC3CG,EAAI1X,SAEJ0X,EAAIC,aAGZR,EAAQU,cAIZlf,EAAMyE,SAAQ,GACdzE,EAAMwC,MAAM,mBAAmBC,KAAK,SAAS0M,GACzCoP,EAAiBpP,EAAOrM,KAAK,GAE7B0b,EAAUzB,GACNoC,UAAW/X,EACXgY,SAAUb,EAAea,SACzBjV,MAAO6S,IACPqC,QAAS,GACTC,QAAS,EACTC,KAAM,GACNC,iBAAkB,GAClB9T,QACIpI,KAAM,SACNmc,KAAK,KAKZ/U,GAAG,QAAS,OAAQ,SAAS3C,GACY,QAA9BA,EAAE2X,SAAS5c,OAAO6c,WACtB/f,QAAQiB,QAAQ,gBAAgBoY,QAChClV,EAAOoV,OAAO,WAEVjZ,EAAGqX,MAAQrB,EAAKkD,mBAAmB,sDAAwDrR,EAAE2X,SAAS5c,OAAO6F,SAGpH+B,GAAG,QAAS,OAAQ,SAAS3C,GAa1BnI,QAAQiB,QAAQ,gBAAgBoY,QAChClV,EAAOoV,OAAO,WACVjZ,EAAGqX,MAAQrB,EAAKkD,mBAAmB,6CAA+CrR,EAAE2X,SAAS5c,OAAO8c,UAGzGlV,GAAG,YAAa,OAAQ,SAAS3C,GAChChE,EAAOoV,OAAO,WACVjZ,EAAGsX,IAAMzP,EAAE2X,SAAS5c,OAAOkZ,OAAS,aAGxCjU,EAAE2X,SAASvV,OACPV,MAAS,UAEdiB,GAAG,WAAY,OAAQ,SAAS3C,GAC/BhE,EAAOoV,OAAO,WACVjZ,EAAGsX,IAAM,OAEbzP,EAAE2X,SAASvV,OACPV,MAAS,UAEdiB,GAAG,YAAa,OAAQ,SAAS3C,GAChChE,EAAOoV,OAAO,WACVjZ,EAAGsX,IAAMzP,EAAE2X,SAAS5c,OAAOQ,KAAO,iBAEvCoH,GAAG,WAAY,OAAQ,WACtB3G,EAAOoV,OAAO,WACVjZ,EAAGsX,IAAM,SAYrBtX,EAAGoE,SACHtE,EAAMyE,SAAQ,KAuQlBzE,EAAMuB,SAASyE,IAAI9F,EAAGoE,QACtB1E,QAAQiB,QAAQoD,GAAS3C,KAAK,SAC1B+C,EAAEE,SAASrE,EAAGoE,OAAQ,MAna9BwY,EAAmBrb,SAAW,QAAS,kBAAmB,SAAU,eAAgB,SAAU,OAAQ,UAAW,SAAU,YAAa,IAPxI,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbI,WAAY8a,EACZ7a,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,aAAcmb,MAsbjC,WACI,YAOA,SAASgD,KAIL,QAASC,KACLC,EAAMC,OAHV,GAAID,GAAQ,GAAIE,OAAM,y/HAMtB,QACIH,KAAMA,GAddlgB,QACKC,OAAO,aACPqgB,QAAQ,UAAWL,MAiB3B,WACI,YAOA,SAASM,GAAUC,EAAOC,GAEtB,GAAInH,GAAMmH,EAAUC,WAAa,MAAQD,EAAUE,OAAS,OAC5DrH,GAAM,0CACN,IAAIsH,GAAc,SAASC,GACvB,GAAIje,GAAQ0W,EAAMuH,EAAIC,KAEtB,OADI9gB,SAAQ+gB,UAAUF,EAAIje,SAAQA,GAAS,IAAMoe,mBAAmBhhB,QAAQoO,OAAOyS,EAAIje,SAChFA,GAGPA,EAAQ,SAASie,GACjB,MAAOL,IACHS,OAAQ,MACR3H,IAAKsH,EAAYC,GACjBK,SACIC,OAAQ,cAMpB,QACIP,YAAaA,EACbhe,MAAOA,GApBf2d,EAAU1e,SAAW,QAAS,aAR9B7B,QACKC,OAAO,aACPmhB,QAAQ,SAAUb,MA+B5B,WACE,gBAuBF,WACI,YAOA,SAASrc,GAAgB9D,EAAOmE,EAAQ8c,EAASC,GAE7C,GAAI3R,GAAY,GAAI0R,GAAQE,OACxBrb,EAAmB,GAAImb,GAAQE,OAC/BC,EAAgB,GAAIH,GAAQE,OAC5BE,EAAkB,GAAIJ,GAAQE,OAC9BxE,EAAuB,GAAIsE,GAAQE,OAEnCG,EAAS,GAAIC,QAAO,8DACxBD,GAAOE,iBAAiB,UAAW,SAASC,GACpB,kBAAhBA,EAAI3e,KAAKsM,IACTzJ,EAAiB8b,EAAI3e,KAAKA,KAAM,UACV,sBAAhB2e,EAAI3e,KAAKsM,KACfzJ,EAAiB8b,EAAI3e,KAAKA,KAAM,UAChC4e,KAEAnS,EAAU/N,SAASigB,KAExB,EAEH,IACIE,GACAC,EAFAC,KAIAC,KACAxT,GAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACxKtO,GAAM+hB,aAAa/b,IAAI,SAAStC,GAE5B4d,EAAOU,aACH5S,IAAK,uBACLtM,KAAMY,EAAWyJ,SAAS9E,UAG9ByZ,EAAoBZ,EAAae,QAAQjiB,EAAM2C,gBAAgBgB,QAAU,kBACzEme,EAA0C,MAArBA,KAAkCliB,QAAQmO,SAAS+T,EACxE,KAAK,GAAIvX,GAAI,EAAGA,EAAIuX,EAAkBpZ,OAAQ6B,IAC1CuX,EAAkBvX,GAAGE,MAAQ6D,EAAO/D,EAExC8W,GAAgB7f,SAASsgB,IAG7B,IAAII,IACA5e,KAAM,MACNR,OACIQ,KAAM,UACNmH,MAAO,UACP4D,MAAM,KAKV8T,EAAkB,SAAShc,GAC3B+b,EAAgB/b,EAChBwW,EAAqBnb,SAAS0gB,IAG9B3T,EAAkB,SAAST,EAASM,EAAKiB,GACzCiS,EAAOU,aACH5S,IAAK,kBACLtM,MACIgL,QAASA,EACTM,IAAKA,EACLiB,cAAeA,MAKvB+S,EAAmB,WACdT,EAAoB9b,KACzByb,EAAOU,aACH5S,IAAK,mBACLtM,KAAM6e,EAAoB9b,OAI9BoI,EAAoB,WACpB,MAAO6T,IAEPpc,EAAmB,WACnB,MAAOic,IAEPD,EAAmB,WACmC,IAAlDI,EAAkB7e,QAAQ0e,KAC9BA,EAAoBlX,MAAQ6D,EAAOwT,EAAkBpZ,QACrDoZ,EAAkBxW,KAAKqW,GACvBT,EAAamB,QAAQriB,EAAM2C,gBAAgBgB,QAAU,iBAAkB/D,QAAQoO,OAAO8T,MAEtFQ,EAAsB,SAASzc,GAC/Byb,EAAOU,aACJ5S,IAAK,qBACLtM,KAAM+C,KAIT0c,EAAmB,SAASC,GAC5BV,EAAkBW,OAAOX,EAAkB7e,QAAQuf,GAAM,GACzDtB,EAAamB,QAAQriB,EAAM2C,gBAAgBgB,QAAU,iBAAkB/D,QAAQoO,OAAO8T,KAGtFnc,EAAmB,SAASE,EAAKvC,GACjC,QAASof,KACL,OAA+B,OAArB,EAAIriB,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GAExEmhB,EAAwB/hB,QAAQ+iB,QAAQ9c,IACpC8C,IAAK+Z,IAAOA,IAAO,IAAMA,IAAO,KAAOA,IAAKzD,OAAO,EAAG,GAAK,IAAMyD,IAAO,IAAMA,IAAOA,IAAOA,KAAMxa,cAClGrC,IAAKA,EACLvC,KAAMA,EACN4K,KAAM,GAAIC,OAJkCtI,EAMhDC,EAAiBtE,SAASmgB,IAE1BiB,EAA4B,SAASC,EAAQC,EAAMrH,GACnD6F,EAAOU,aACH5S,IAAK,iBACLtM,MACI+C,IAAK8b,EAAoB9b,IACzB4V,KAAMA,EACNoH,OAAQA,EACRC,KAAMA,MAKdC,EAAgB,aAChBC,EAAiB,WACjB,MAAOnB,IAEPoB,EAAgB,WAChB,MAAOrB,IAEPsB,EAAgB,WAChBrB,EAAevW,KAAKsW,IAEpBuB,EAAgB,SAASX,GACzBX,EAAeY,OAAOZ,EAAe5e,QAAQuf,GAAM,IAEnDY,EAAgB,SAASvd,EAAKvC,GAC9B,QAASof,KACL,OAA+B,OAArB,EAAIriB,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GAExEohB,EAAqBhiB,QAAQ+iB,QAAQ9c,IACjC8C,IAAK+Z,IAAOA,IAAO,IAAMA,IAAO,KAAOA,IAAKzD,OAAO,EAAG,GAAK,IAAMyD,IAAO,IAAMA,IAAOA,IAAOA,KAAMxa,cAClGrC,IAAKA,EACLvC,KAAMA,EACN4K,KAAM,GAAIC,OAJ+BtI,EAM7Cub,EAAc5f,SAASogB,IAGvByB,GACA9T,UAAWA,EACXzJ,iBAAkBA,EAClBub,gBAAiBA,EACjB1E,qBAAsBA,EACtB1O,kBAAmBA,EACnBvI,iBAAkBA,EAClBC,iBAAkBA,EAClB+b,iBAAkBA,EAClBa,iBAAkBA,EAClBD,oBAAqBA,EACrBF,iBAAkBA,EAClBhB,cAAeA,EACf4B,eAAgBA,EAChBC,cAAeA,EACfG,cAAeA,EACfF,cAAeA,EACfC,cAAeA,EACfJ,cAAeA,EACfxU,gBAAiBA,EACjB4T,gBAAiBA,EACjBS,0BAA2BA,EAG/B,OAAOS,GAzKXvf,EAAgBrC,SAAW,QAAS,SAAU,UAAW,gBATzD7B,QACKC,OAAO,aACPqgB,QAAQ,kBAAmBpc,MAoLpC,WACI,YAOA,SAASwf,GAAOC,EAAQnD,EAAOa,EAASZ,EAAWmD,EAAMxjB,GAGrD,GAAIyjB,GAAU,GAAIxC,GAAQE,OACtBuC,EAAW,GAAIzC,GAAQE,OAGvBwC,EAAO,KACPC,EAAU,WACV,MAAOD,IAEPE,EAAkB,WAClB,MAAe,OAARF,GAIPG,EAAa,KACbC,IACIpb,GAAI,QACJrF,KAAM,QACN0gB,KAAM,eAENrb,GAAI,SACJrF,KAAM,SACN0gB,KAAM,oBACN3W,IAAK,2EACL3G,KAAM,aAENiC,GAAI,WACJrF,KAAM,WACN0gB,KAAM,iBACN3W,IAAK,iBACL3G,KAAM,aAqDVud,EAAiB,WACjB,MAAOF,IAGPG,EAAa,WACbP,GACQQ,QAAS,QACTxb,GAAI,IACJrF,KAAM,QACN8gB,MAAO,aAEXpkB,EAAMsR,OAAO7O,KAAK,WACdghB,EAAQjiB,cAGhB6iB,EAAQ,SAASrI,GACjB,MAAiB,SAAbA,EAAOrT,IACPgb,GACIQ,QAAS,QACTxb,GAAI,IACJrF,KAAM,QACN8gB,MAAO,iBAEXpkB,GAAMsR,OAAO7O,KAAK,WACdghB,EAAQjiB,kBAIhBgiB,KAAOa,MAAMrI,EAAOrT,IAChB2b,cAAe,OACftG,QAAS,OACTuG,OAAO,EACP1iB,MAAO,WAIX2iB,EAAS,WACThB,IAAOgB,OAAOV,GACVS,OAAO,GACRb,EAASliB,UA6BhB,OA1BAgiB,GAAKlS,KACDyS,EAAYhZ,OAAO,SAAS0Z,EAAMC,GAE9B,MADAD,GAAKC,EAAK/b,IAAM+b,EAAKrX,IACdoX,QAEPE,YAAa,YACbC,aAAc,yCAItBpB,EAAK9Y,GAAG,aAAc,SAAS3C,GAC3B/H,EAAMyE,UACNqf,EAAa/b,EAAEoc,QACfX,EAAKM,GAAYT,IAAI,MAAO,MAAO,KAAM,SAAStb,GAC9C4b,GACIQ,QAASL,EACTnb,GAAIZ,EAAEY,GACNrF,KAAMyE,EAAEzE,KACR8gB,MAAOrc,EAAE8c,WAEb7kB,EAAMsR,OAAO7O,KAAK,WACdghB,EAAQjiB,kBAMhBqiB,gBAAiBA,EACjBK,WAAYA,EACZN,QAASA,EACTK,eAAgBA,EAChBI,MAAOA,EACPG,OAAQA,EACRf,QAASA,EACTC,SAAUA,GA5JlBJ,EAAO7hB,SAAW,SAAU,QAAS,UAAW,YAAa,OAAQ,SAVrE7B,QACKC,OAAO,aACPqgB,QAAQ,SAAUoD,MAyK3B,WACI,YAOA,SAAStjB,GAAMujB,EAAQnD,EAAOa,EAASZ,EAAW/F,EAAIwK,GAqDlD,QAASxT,KACL,MAAOgJ,GAAG,SAASyK,EAASC,GACxBxiB,EAAM,gCACFyiB,MAAM,IACPxiB,KAAK,SAASC,GAEbwiB,EAAexiB,EAASI,KACnBC,OAAO,SAASuH,GACb,MAAO1K,SAAQ+gB,UAAUrW,EAAE6a,OAE9Bld,IAAI,SAASqC,GAEV,MADAA,GAAEhH,KAAOgH,EAAEhH,KAAK8hB,OACT9a,IAEVnH,KAAK,SAASC,EAAGC,GACd,MAAID,GAAEE,KAAOD,EAAEC,KAAa,GACxBF,EAAEE,KAAOD,EAAEC,KAAa,EACrB,IAEfyhB,EAAQG,IACTF,KAtEX,GAqBIE,GACAG,EAmEAC,EAzFAvD,EAAe,GAAId,GAAQE,OAC3B5f,EAAW,GAAI0f,GAAQE,OAGvBnU,EAAY,WACZ,GAAIuY,GAAK3lB,QAAQiB,QAAQ,eAAeI,KAAK,SAE7C,OADIrB,SAAQ6W,YAAY8O,KAAKA,EAAK,SAE9B3Z,KAA6D,QAAtDhM,QAAQiB,QAAQ,oBAAoBI,KAAK,UAAuB,IAAM,EAC7E4K,MAAe,SAAP0Z,EAAiB,IAAM,IAGnC9gB,EAAU,SAASoQ,GACfA,EACAjV,QAAQiB,QAAQ,iBAAiBwN,OAEjCzO,QAAQiB,QAAQ,iBAAiB2kB,QAOrCC,EAAiB,WACjB,MAAOP,IAEPviB,EAAgB,WAChB,MAAO0iB,IAEPK,EAAgB,SAAS7Q,GACrBjV,QAAQ+lB,SAAS9Q,GACbwQ,GAAexQ,IACfwQ,EAAcxQ,EACdkN,EAAavgB,SAAS6jB,IAEnBzlB,QAAQgmB,SAAS/Q,IACpBwQ,EAAY1hB,SAAWkR,GACnBwQ,GAAexQ,IACfwQ,EAAcH,EAAaniB,OAAO,SAASuG,GACvC,MAAOA,GAAE3F,SAAWxD,KAAKkN,MAEzBA,IAAKwH,IACN,GACHkN,EAAavgB,SAAS6jB,KAgClC7E,EAAc,SAASE,EAAOle,GAC9B,MAAO+gB,GAAO/C,aACVE,MAAOA,EACPle,MAAOA,KAGXA,EAAQ,SAASke,EAAOle,GACxB,MAAO+gB,GAAO/gB,OACVke,MAAOA,EACPle,MAAOA,MAMf,SAAUqjB,GACN,GAAIC,GAASD,EAAgBrlB,UAAU,EAAGqlB,EAAgB1jB,QAAQ,KAAM,MAAMc,QAAQ,MAClF8iB,EAAe,SAASvD,EAAK3B,GAC7B,GAAImF,GAAS,MAAQnF,EAAOoF,OAAO,GAAG3P,cAAgBuK,EAAOqF,MAAM,GAAGhe,aACtEsa,GAAIwD,GAAU,SAASG,GACnB,MAAO,IAAIC,SAAQ,SAASrB,GACxBD,EAAEuB,MACEnN,IAAK2M,EAAkB,IAAMhF,EAC7BpF,KAAM,OACN3Y,KAAMlD,QAAQoO,OAAOmY,GACrBG,YAAa,kCACbC,SAAU,OACVC,WAAY,SAASC,EAAKC,GACtBA,EAASC,UAAYD,EAASC,cAC9BD,EAASC,UAAUC,iBAAkB,EACrCF,EAASG,aAAc,KAE5BC,KAAK,SAASpkB,GACbA,EAAWA,EAASqkB,MAAM,KAC1B,IAAI7N,GAAM4M,EAASpjB,EAAS,EAC5BoiB,GAAEuB,MACEnN,IAAKA,EACLuC,KAAM,MACNoL,aAAa,EACbL,WAAY,SAASC,EAAKC,GACtBA,EAASC,UAAYD,EAASC,cAC9BD,EAASC,UAAUC,iBAAkB,EACrCF,EAASG,aAAc,KAE5BC,KAAK,SAASpkB,GACbqiB,EAAQriB,UAM5B,OAAO,IAAI0jB,SAAQ,SAASrB,GACxBD,EAAEkC,IAAInB,GAAiBpjB,KAAK,SAASwkB,GACjC,GAAI5D,GAAM4D,EAAQF,MAAM,MAAMhc,OAAO,SAASyX,EAAK3B,GAE/C,MADc,IAAVA,GAAckF,EAAavD,EAAK3B,GAC7B2B,MAEXa,GAAI6D,YAAc,WACd,MAAOrB,IAEXd,EAAQ1B,SAGjB,6DAA6D5gB,KAAK,SAAS6G,GAC1Egc,EAAUhc,GAEd,IAAI6d,GAAY,WAAY,MAAO7B,GAEnC,QACIhU,KAAMA,EACN9O,MAAOA,EACP2kB,UAAWA,EACX3G,YAAaA,EACbkF,cAAeA,EACf/iB,cAAeA,EACf8iB,eAAgBA,EAChBzY,UAAWA,EACX+U,aAAcA,EACdxgB,SAAUA,EACVkD,QAASA,GAvJjBzE,EAAMyB,SAAW,SAAU,QAAS,UAAW,YAAa,KAAM,KAXlE7B,QACKC,OAAO,aACPqgB,QAAQ,QAASlgB,MAqK1B,WACI,YAOA,SAASonB,KAcL,QAASC,GAAkBrnB,EAAOoE,EAAIN,EAAiBvB,EAAQtC,EAAU8D,EAAQC,EAAc+Y,EAAWkE,EAAS9c,EAAQF,EAASI,EAAGiW,GAs5BnI,QAAS3U,KACL2hB,GAAyB,EACzBxjB,EAAgB6B,iBACZ4hB,EAAQzC,EAAE,qCAAqC7c,IAAI,SAASoB,GACxD,MAAOA,GAAEvG,OAAO6F,KAEpB,sBAIR,QAASya,MA95BTpjB,EAAMyE,SAAQ,EAEd,IAAI+iB,GAASlG,EAETmG,EAAS,WACT,OACI1hB,UACIsB,OAAQ,GAAI4Z,GAAQE,OACpBnC,SAAU,GAAIiC,GAAQE,OACtBuG,KAAM,GAAIzG,GAAQE,OAClBwG,IAAK,GAAI1G,GAAQE,QAErB5I,OACIlR,OAAQ,GAAI4Z,GAAQE,OACpBnC,SAAU,GAAIiC,GAAQE,OACtBuG,KAAM,GAAIzG,GAAQE,OAClBwG,IAAK,GAAI1G,GAAQE,QAErByG,OACIvgB,OAAQ,GAAI4Z,GAAQE,OACpBnC,SAAU,GAAIiC,GAAQE,OACtBuG,KAAM,GAAIzG,GAAQE,OAClBwG,IAAK,GAAI1G,GAAQE,QAErB0G,MAAO,WACH1nB,KAAKynB,MAAMvgB,OAAOygB,YAClB3nB,KAAKynB,MAAM5I,SAAS8I,YACpB3nB,KAAKynB,MAAMF,KAAKI,YAChB3nB,KAAKynB,MAAMD,IAAIG,YACf3nB,KAAK4F,SAASsB,OAAOygB,YACrB3nB,KAAK4F,SAASiZ,SAAS8I,YACvB3nB,KAAK4F,SAAS2hB,KAAKI,YACnB3nB,KAAK4F,SAAS4hB,IAAIG,YAClB3nB,KAAKoY,MAAMlR,OAAOygB,YAClB3nB,KAAKoY,MAAMyG,SAAS8I,YACpB3nB,KAAKoY,MAAMmP,KAAKI,YAChB3nB,KAAKoY,MAAMoP,IAAIG,iBASvB1gB,EAAUxH,QAAQiB,QAAQ,kBAC1B0mB,EAAU,SAAUngB,GACpB,MAAO2V,IACHoC,UAAW/X,EACX+C,QACIkT,SAAU,OACVlT,OACI4d,sBAAuB,UACvBC,6BAA8B,UAC9BC,6BAA8B,MAC9BC,wBAAyB,QAG7B7K,SAAU,OACVlT,OACIsT,mBAAoB,UACpBO,QAAW,gBAGXvU,MAAS,gBACTD,OAAU,gBACVkU,eAAgB,gBAChBS,YAAa,gBACbb,cAAe,YAGnBD,SAAU,4BACVlT,OACIsT,mBAAoB,aAGxBJ,SAAU,2BACVlT,OACIsT,mBAAoB,cACpBF,cAAe,SACfI,eAAgB,aAGpBN,SAAU,oCACVlT,OACIwT,eAAgB,OAEhBD,eAAgB,KAGpBL,SAAU,wBACVlT,OACIsT,mBAAoB,cACpBE,eAAgB,iBAChBJ,cAAe,QACf4K,gBAAiB,EACjB1d,MAAS,OACT2d,MAAS,WACT1K,eAAgB,mBAGpBL,SAAU,iCACVlT,OACIwT,eAAgB,OAChBD,eAAgB,KAIpBL,SAAU,8BACVlT,OACIgU,YAAa,OACbZ,cAAe,SACfE,mBAAoB,UACpBhT,MAAS,UACTkT,eAAgB,oBAChBnU,OAAU,OACVC,MAAS,OACT+T,MAAS,QACT4K,MAAS,gBAGb/K,SAAU,OACVlT,OACI6T,QAAW,gBACXJ,aAAc,cACdnU,MAAS,mBAGb4T,SAAU,mCACVlT,OACIgU,YAAa,QACbZ,cAAe,QACfD,cAAe,SACfG,mBAAoB,OACpBhT,MAAS,OACTkT,eAAgB,OAChBnU,OAAU,MACVC,MAAS,MACT+T,MAAS,QACT4K,MAAS,cACTC,iBAAkB,eAG1BC,qBAAqB,EACrBC,sBAAsB,EACtBC,mBAAmB,EACnBhJ,iBAAkB,GAGlBD,KAAM,IACNkJ,KACI7Y,EAAG,IACHC,EAAG,KAEPwP,QAAS,IACTC,QAAS,GACT5T,QACIpI,KAAM,SACNmc,KAAK,MAGdrY,IAKH,WAEIpH,EAAMwC,MAAM,qBACRiZ,KAAM,eACPhZ,KAAK,SAAS0M,GAGb,GAAIuZ,GAAcvZ,EAAOrM,KAAK,GAAGA,KAC7Bsc,IAEJvU,QAAOC,KAAK4d,GAAatgB,QAAQ,SAASiF,GACtC,GAAIsb,GAAaxoB,KAAKuoB,YAAYrb,EAClClN,MAAKif,SAAS9T,MACVsd,MAAO,QACPC,WAAW,EACXC,QAAQ,EACRC,YAAY,EACZjmB,MACI2H,MAAO,UACP9B,GAAI,KAAO0E,EACX2Q,QAAS,UACTgL,SAAU,aACVC,QAAS,EACTC,QAAS,EACTlN,OAAQ,KAAO3O,EACf9B,OAAQ,KAAO8B,KAKvBlN,KAAKif,SAAS9T,MACVsd,MAAO,QACPC,WAAW,EACXC,QAAQ,EACRC,YAAY,EACZI,UACIvZ,EAAG+Y,EAAW/Y,EACdC,EAAG8Y,EAAWtf,GAElBvG,MACI6F,GAAI,KAAO0E,EACX2Q,QAAS,UACT2B,SAAU,WACVyJ,OAAQ,EACRH,QAAS,EACTC,QAAS,EACTG,QAAS,EACTC,QAAS,gBAIjBnpB,KAAKif,SAAS9T,MACVsd,MAAO,QACPC,WAAW,EACXC,QAAQ,EACRC,YAAY,EACZI,UACIvZ,EAAG+Y,EAAW/Y,EACdC,EAAG8Y,EAAWY,GAElBzmB,MACI6F,GAAI,KAAO0E,EACX2Q,QAAS,UACT2B,SAAU,WACVyJ,OAAQ,EACRH,QAAS,EACTC,QAAS,EACTG,QAAS,EACTC,QAAS,gBAIjBnpB,KAAKif,SAAS9T,MACVsd,MAAO,QACPC,WAAW,EACXC,QAAQ,EACRC,YAAY,EACZI,UACIvZ,EAAG+Y,EAAW/Y,EACdC,EAAG8Y,EAAW3d,GAElBlI,MACI6F,GAAI0E,EACJ2Q,QAAS,UACTiL,QAAS,EACTC,QAAS,GACTG,QAAS,GACT1J,SAAU,aACVyJ,OAAQ,OAKhBV,YAAaA,EACbtJ,SAAUA,IAEdmI,EAAQvhB,IAAIoZ,OASpB,IAAIlf,GAAK,SAAUA,EAAIF,GA4MnB,MA3MAE,GAAGspB,oBAAqB,EACxBtpB,EAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGupB,QACCpb,MAAM,EACNzD,KAAM,GACN8e,MAAO,IAGXxpB,EAAGypB,eACHzpB,EAAG0pB,WACH1pB,EAAG2pB,qBACH3pB,EAAG4pB,iBACH5pB,EAAG6pB,iBAAkB,EACrB7pB,EAAG0c,gBAAiB,EACpB1c,EAAG8pB,mBAAoB,EACvB9pB,EAAGwb,OAAS,GAEZxb,EAAG+pB,kBACC3mB,KAAM,eAENA,KAAM,QAENA,KAAM,WAEVpD,EAAGgqB,eAAiBhqB,EAAG+pB,gBAAgB,GAEvC/pB,EAAGiqB,UAAY,WACXvqB,QAAQiB,QAAQ,cAAcoY,MAAM,SAExC/Y,EAAGkqB,gBAAkB,WAEjBxqB,QAAQiB,QAAQ,cAAcoY,MAAM,OACpC,IAAIoR,GAAOnqB,EAAGoqB,cACTvnB,OAAO,SAASiI,GACb,MAAOA,GAAEqD,OAEZpG,IAAI,SAAS+C,GACV,MAAOA,GAAErC,KAEbif,EAAQJ,EAAQI,MAAM7kB,OAAO,SAASwnB,GACtC,MAAsC,IAA9BF,EAAKpnB,QAAQsnB,EAAKznB,KAAK0nB,MAE/BH,KAAMA,GAGV9C,GAAQzI,aACRyI,EAAQvhB,IAAI4hB,GACZL,EAAQrI,WACRsI,EAAU,MAIdtnB,EAAGuqB,WAAa,WACZvqB,EAAGkP,IAAI,sBAGXlP,EAAGyb,YAAc,SAAS3Y,GACtB,GAAIyH,GAAQzH,EAAKyH,MACboL,EAAQ0R,EAAQzC,EAAE,2BACtByC,GAAQzI,aACRjJ,EAAMzN,QAAQ,SAAS0N,GACfA,EAAKhT,OAAO2H,OAAStK,MACrB2V,EAAKzO,UAEVoD,GACH8c,EAAQrI,YAEZhf,EAAG2b,cAAgB,SAAS7Y,GACxB,GAAIyH,GAAQzH,EAAKyH,MACboL,EAAQ0R,EAAQzC,EAAE,oCACtByC,GAAQzI,aACRjJ,EAAMzN,QAAQ,SAAS0N,GACfA,EAAKhT,OAAO2H,OAAStK,MACrB2V,EAAKkJ,YAEVvU,GACH8c,EAAQrI,YAGZhf,EAAGwqB,cAAe,EAClBxqB,EAAGyqB,WAAY,EACfzqB,EAAG0qB,KAAO,SAASnP,GACf,OAAQA,GACJ,IAAK,UACDvb,EAAGwqB,cAAgBxqB,EAAGwqB,aACtBnD,EAAQzI,aACRyI,EAAQzC,EAAE,4BACL1c,QAAQ,SAAS0N,GACV5V,EAAGwqB,aAAc5U,EAAK+U,cACrB/U,EAAKgV,cAElBvD,EAAQrI,UACR,MACJ,KAAK,OACDhf,EAAGyqB,WAAazqB,EAAGyqB,UACnBpD,EAAQzI,aACRyI,EAAQzC,EAAE,uBACL1c,QAAQ,SAAS0N,GACV5V,EAAGyqB,UAAW7U,EAAK+U,cAClB/U,EAAKgV,cAElBvD,EAAQrI,aAMpBhf,EAAGoqB,gBACChnB,KAAM,WACNynB,IAAK,IACL1c,MAAM,EACN5D,MAAO,UACPkO,QAAO,kBACPqS,MAAO,GACPriB,GAAI,IAEJrF,KAAM,WACNynB,IAAK,OACL1c,MAAM,EACN5D,MAAO,UACPkO,QAAO,cACPqS,MAAO,GACPriB,GAAI,IAEJrF,KAAM,WACNynB,IAAK,OACL1c,MAAM,EACN5D,MAAO,UACPkO,QAAO,cACPqS,MAAO,GACPriB,GAAI,IAEJrF,KAAM,WACNynB,IAAK,OACL1c,MAAM,EACN5D,MAAO,UACPkO,QAAO,cACPqS,MAAO,GACPriB,GAAI,KAEJrF,KAAM,WACNynB,IAAK,OACL1c,MAAM,EACN5D,MAAO,UACPkO,QAAO,cACPqS,MAAO,GACPriB,GAAI,KAIR2R,EAAGlM,KACCpO,EAAMwC,MAAM,qBACRiZ,KAAM,UACNK,SAAU,UAEd9b,EAAMwC,MAAM,kBACRiZ,KAAM,UACND,QAASxb,EAAM2C,gBAAgBgB,QAC/BmY,SAAU,UAEd9b,EAAMwC,MAAM,kBACRiZ,KAAM,QACND,QAASxb,EAAM2C,gBAAgBgB,QAC/BmY,SAAU,YAEfrZ,KAAK,SAASwoB,GAEb/qB,EAAGypB,YAAcsB,EAAQ,GAAGnoB,IAG5B,IAAIA,GAAOoe,aAAae,QAAQjiB,EAAM2C,gBAAgBgB,QAAU,kBACrD,QAAPb,EACqC,SAAjC9C,EAAM2C,gBAAgBgB,QACtBzD,EAAG0pB,WAAa1pB,EAAGypB,YAAY5mB,OAAO,SAASuG,GAC3C,MAAiB,oBAAVA,EAAEhG,OAGV,GAEHpD,EAAG0pB,WAAa1pB,EAAGypB,YAAY5mB,OAAO,SAASuG,GAC3C,MAAiB,uBAAVA,EAAEhG,OACV,IAIPR,EAAOlD,QAAQmO,SAASjL,GACxB5C,EAAG0pB,WAAahqB,QAAQmO,SAASjL,GAAMiZ,SAG3C7b,EAAG2pB,kBAAoBoB,EAAQ,GAAGnoB,KAClC5C,EAAG4pB,iBAAmB5pB,EAAG2pB,kBAAkB,KAE/C3pB,EAAGoE,OAAS,WACR,GAAImF,GAAQxF,EAAQiJ,UAEpB9F,GAAQqC,MAAMA,GACdrC,EAAQoC,OAAOvF,EAAQgJ,YAAc,IACrCsa,EAAQjjB,UAEZ1E,QAAQiB,QAAQoD,GAAS3C,KAAK,SAC1B+C,EAAEE,SAASrE,EAAGoE,OAAQ,MAGnBpE,GACRC,KAAMH,GAOLuf,EAAO,SAAUgI,EAASrnB,GAC1B,GAAIgrB,GAAQ,WACR3D,EAAQ9H,MACR8H,EAAQ5I,UAERc,EAAM,WACN8H,EAAQ9H,IAAI8H,EAAQzC,EAAE,aAAc,IAYxC,OAVA5kB,GAAGqf,MACC2L,MAAOA,EACPzL,IAAKA,GAET8H,EAAQ7c,GAAG,MAAOrG,EAAEE,SAAS,WACzBgjB,EAAQzI,aACRqM,IACA5D,EAAQrI,YACT,KAEIhf,EAAGqf,MACXgI,EAASrnB,GAERkrB,EAAchnB,EAAGinB,WAAWniB,QAAQ,KAAM,KAAKS,OAAO,EAAG,IACzD2hB,EAAYlnB,EAAGinB,WAAWniB,QAAQ,KAAM,KAAKS,OAAO,GAAI,IACxD4hB,EAAannB,EAAGinB,WAAWniB,QAAQ,KAAM,KAAKS,OAAO,GAAI,IACzD6hB,EAAkBpnB,EAAGqnB,WAAW9hB,OAAO,IAAK,IAC5CwhB,EAAc,WACdK,EAAgBtiB,OACZqe,EAAQzC,EAAE,kDAAkD4G,UAC3D3gB,OAAO,SAAS1B,EAAG2B,GAChB,GAAIoG,GAAIpG,EAAElI,OAAO6oB,MAGjB,OAFAtiB,GAAE,GAAKhJ,KAAK8I,IAAIE,EAAE,GAAI+H,GACtB/H,EAAE,GAAKhJ,KAAK+I,IAAIC,EAAE,GAAI+H,GACf/H,IACPlB,EAAAA,IAAWA,EAAAA,KAGnB,IAAIoX,GAAOgI,EAAQhI,OACfqM,EAAWN,EAAU/L,GACrB8J,EAAkB,KAAP9J,EAAe,EAAIgM,EAAWhM,GACzC0J,EAAUmC,EAAY7L,EAE1BgI,GAAQzC,EAAE,kDAAkD1c,QAAQ,SAAS0N,GACzEA,EAAKhT,MACDomB,QAAW7oB,KAAK0L,MAAM5L,KAAKyrB,SAAWJ,EAAgB1V,EAAKhT,OAAO6oB,SAClEtC,QAAWlpB,KAAKkpB,QAChBJ,QAAW9oB,KAAK8oB,YAGpB2C,SAAUA,EACV3C,QAASA,EACTI,QAASA,EACTvc,MAAO0e,KAWXK,EAAa,SAAUtE,EAASrnB,EAAIF,EAAOsa,EAAIiF,EAAMlb,EAAGojB,GAGxD,GAAIrY,KACJkS,GAAS,GAAIC,QAAO,4CACpBD,EAAOE,iBAAiB,UAAW,SAASC,GACxCrS,EAAIqS,EAAI3e,KAAKsM,KAAKqS,EAAI3e,KAAKA,QAC5B,EAEH,IAAIgH,GAAS,SAASuT,EAAUva,GAC5B,GAAIlD,QAAQ6W,YAAY3T,GAEpB,WADAykB,GAAQzd,OAAOuT,EAInB,IAAiB,GAAbva,EAAK4F,OAAT,CACI,GAAIojB,GAAQhpB,EAAKmF,IAAI,SAASjF,GAC1B,MAAO7C,MAAK4rB,eAAe/oB,IAC5BukB,EACHA,GAAQyE,WAAWF,GAAOhiB,UAkKlC,OAtJAsF,GAAI6c,gBAAkB,SAASnpB,GAC3BgH,EAAO,2BAA4BhH,IAEvCsM,EAAI8c,gBAAkB,SAASppB,GAC3BykB,EAAQzI,YAER,IAAIM,GAAWmI,EAAQvhB,IAAIlD,EAAKiD,SAChCqZ,GAAS1U,GAAG,SAAUrG,EAAEE,SAASkjB,EAAO1hB,SAASsB,OAAO7F,SAAU,MAClE4d,EAAS1U,GAAG,WAAYrG,EAAEE,SAASkjB,EAAO1hB,SAASiZ,SAASxd,SAAU,MACtE4d,EAAS1U,GAAG,YAAa+c,EAAO1hB,SAAS2hB,KAAKlmB,UAC9C4d,EAAS1U,GAAG,WAAY+c,EAAO1hB,SAAS4hB,IAAInmB,UAC5C4d,EAAShX,QAAQ,SAAS0N,GACtB,IACIA,EAAKhT,MACD6oB,OAAU7oB,EAAKqpB,QAAQrW,EAAKnN,MAAMgjB,SAGxC,MAAO5jB,GACL+N,EAAKhT,MACD6oB,OAAU,SAItBR,IACA5D,EAAQrI,WACRhf,EAAGoE,QAIH,IAAImB,GAAK3B,EAAgB4B,kBACf,OAAND,EACA3B,EAAgB6B,oBAAqB,iBAErC4hB,EAAQzI,aACRyI,EAAQ1R,MAAM,4BAA4BzN,QAAQ,SAAS0N,GACtB,IAA7BrQ,EAAGI,IAAI5C,QAAQ6S,EAAKnN,OAAamN,EAAKzO,WAG1C5B,GAAIA,IAER8hB,EAAQrI,WACRhf,EAAGqf,KAAK2L,QACR3D,EAAQ5I,SACR4I,EAAQ9H,IAAI8H,EAAQ1R,QAAS,OAKrCzG,EAAIgd,gBAAkB,SAAStpB,GAC3BykB,EAAQzI,aACRyI,EAAQzC,EAAE,uGAAuGhb,SAC7GhH,EAAKupB,YACL9E,EAAQvhB,IAAIlD,EAAKupB,YAGrB9E,EAAQ1R,MAAM,4BAA4BzN,QAAQ,SAAS0N,GAEnD,GAAIwW,GAAMxpB,EAAKA,KAAKgT,EAAKnN,KACzB2jB,GAAI1c,GAAK,IACTkG,EAAKqT,SAASmD,KAGtBnB,IACA5D,EAAQrI,YAGZ9P,EAAImd,WAAa,aAGjBnd,EAAIod,aAAe,SAAS1pB,GACxBgH,EAAO,wBAAyBhH,IAEpCsM,EAAIqd,aAAe,SAAS3pB,GACxBykB,EAAQzI,YAER,IAAIM,GAAWmI,EAAQvhB,IAAIlD,EAAKyV,MAChC6G,GAAS1U,GAAG,SAAUrG,EAAEE,SAASkjB,EAAOlP,MAAMlR,OAAO7F,SAAU,MAC/D4d,EAAS1U,GAAG,WAAYrG,EAAEE,SAASkjB,EAAOlP,MAAMyG,SAASxd,SAAU,MACnE4d,EAAS1U,GAAG,YAAa+c,EAAOlP,MAAMmP,KAAKlmB,UAC3C4d,EAAS1U,GAAG,WAAY+c,EAAOlP,MAAMoP,IAAInmB,UACzC4d,EAAShX,QAAQ,SAAS0N,GACtB,IACIA,EAAKhT,MACD6oB,OAAU7oB,EAAKqpB,QAAQrW,EAAKnN,MAAMgjB,SAGxC,MAAO5jB,GACL+N,EAAKhT,MACD6oB,OAAU,SAItBpE,EAAQrI,WACRiM,IACAnrB,EAAMyE,SAAQ,IAElB2K,EAAIsd,aAAe,SAAS5pB,GACxBgH,EAAO,sBAAuBhH,IAGlCsM,EAAIud,aAAe,SAAS7pB,GAExB,GADA0kB,EAAU1kB,EACNA,EAAK8pB,OAAOC,MAAQ,IAKpB,MAJAjtB,SAAQiB,QAAQ,cAAcoY,YAC9BlV,GAAOoV,OAAO,WACVjZ,EAAG4sB,WAAahqB,EAAK8pB,QAK7B,IAA8B,UAA1B1sB,EAAGgqB,eAAe5mB,KAAkB,CAEpCikB,EAAQzI,aACRyI,EAAQzC,EAAE,uBAAuBhb,QACjC,IAAIsV,GAAWmI,EAAQvhB,IAAIlD,EAAK8kB,MAEhC,IAAmB,WAAfmF,EAA0B,CAE1B,GAAIC,GAAa5N,EACZnX,IAAI,SAASqB,GACV,OAAQA,EAAExG,OAAOkZ,OAAQ1S,EAAExG,OAAO2H,SAErCM,OAAO,SAAS1B,EAAG2B,GAEhB,MADA3B,GAAE2B,EAAE,IAAMA,EAAE,GACL3B,MAGfke,GAAQzC,EAAE,yBACL1c,QAAQ,SAAS2W,GACd,GAAIpW,GAAKoW,EAAIpW,KACTX,EAAW7H,KAAKoI,eAAeI,EACnCoW,GAAIjc,KAAK,UAAW,EAAa,GAAK,GACtCic,EAAIjc,KAAK,WAAY,EAAa3C,KAAKwI,GAAM,WAC7CoW,EAAIjc,KAAK,QAAS,EAAa3C,KAAKwI,GAAM,YAE3CqkB,GAGXzF,EAAQrI,eAGRqI,GAAQzI,aACRyI,EAAQvhB,IAAIlD,EAAK8kB,OACjB1nB,EAAG4sB,WAAahqB,EAAK8pB,OACrBrF,EAAQrI,YAMT,SAASiH,GACZ7E,EAAOU,aACH5S,IAAK,aACLtM,KAAMqjB,MAGfoB,EAASrnB,EAAIF,EAAOsa,EAAIiF,EAAMlb,EAAGojB,GAGhCwF,EAAgB,SAAU1F,EAASrnB,GAEnC,MAAO,UAASkP,GAEZA,EAAMA,GAAO,EACb,IAAI2M,GAAU7b,EAAG0pB,WAAWtmB,KAGxBskB,EAAQ5nB,EAAM2C,gBAAgBilB,MAAM7kB,OAAO,SAASmqB,GACpD,MAAOA,GAAE5pB,MAAQnD,KAAK4b,UAEtBA,QAASA,IACV,GAECoR,GACAzmB,KAAMxG,EAAGgqB,eAAe5mB,KACxB8L,IAAKA,EACLoM,QAASxb,EAAM2C,gBAAgBgB,QAC/BoC,UACIjD,KAAM5C,EAAGwD,WAAWyJ,SAAS9E,QAC7BqD,OAAQxL,EAAG4pB,iBAAiBxmB,KAC5B0E,SAAUuf,EAAQzC,EAAE,qCAAqC7c,IAAI,SAASoB,GAClE,MAAOA,GAAEvG,OAAO6F,MAGxB4P,OACI7M,OAAQxL,EAAG0pB,WAAWtmB,KACtB0E,SAAUuf,EAAQzC,EAAE,kCAAkC7c,IAAI,SAASoB,GAC/D,MAAOA,GAAEvG,OAAO6F,MAGxBif,OACIwF,eAAgBxF,EAAMwF,eACtBC,YAAazF,EAAM0F,aACnB5hB,OAAQxL,EAAGwD,WAAWkkB,MACjB7kB,OAAO,SAASuG,GACb,MAAQA,GAAEhG,MAAQnD,MACnB4b,GAAS,GAChBzN,OAAQpO,EAAGoqB,cACNvnB,OAAO,SAASmqB,GACb,MAAOA,GAAE7e,OAEZpG,IAAI,SAASilB,GACV,OACIvkB,GAAIukB,EAAEvkB,GACN8B,MAAOyiB,EAAEziB,UAM7B,OAAO0iB,KAEZ5F,EAASrnB,EAEZA,GAAGkP,IAAM,aAOT,SAAUlP,EAAI6D,GACV,GAAIwpB,GAAU,EAEVC,GAAY,EACZhpB,EAAS,WACLgpB,IACAA,GAAU,EACNC,MAER5B,EAAWoB,KAIfM,IAAW,EACXxpB,EAAOoU,OAAO,gBAAiB,WAC3B,MAAIoV,GAAU,OACVA,GAAW,QAGX3tB,QAAQ6W,YAAYvW,EAAG0pB,aAAehqB,QAAQ6W,YAAYvW,EAAG4pB,oBACjE9pB,EAAMyE,SAAQ,GACd8iB,EAAQzC,EAAE,uBAAuBhb,SACjCtF,QAKJ+oB,GAAW,EACXxpB,EAAOoU,OAAO,sBAAuB,WACjC,MAAIoV,GAAU,OACVA,GAAW,OAGf/oB,OAIJ+oB,GAAW,EACXxpB,EAAOoU,OAAO,YAAa9T,EAAEE,SAAS,WAClC,GAAIgpB,EAAU,EAEV,YADAA,GAAW,EAGf,IAAIG,GAASxtB,EAAGwb,OAAOpF,cAAc8O,MACjCsI,GAAOhlB,OAAS,GAAG6e,EAAQzC,EAAE,QAAQ/hB,OAAO,SAASwH,EAAGwU,GACxD,MAAkD,IAA1CA,EAAIpW,KAAK2N,cAAcrT,QAAQyqB,KACxCrmB,UACJ,MAGHkmB,GAAW,EACXxpB,EAAOoU,OAAO,yBAA0B,WACpC,MAAIoV,GAAU,OACVA,GAAW,IAGf/oB,QACAtE,GAAGoE,aAERpE,EAAI6D,EAEP,IAAIgpB,GAAc,GACdY,EAAsB,WAEtB/tB,QAAQiB,QAAQ,iBAAiB0Q,KAAK,GACtC,IAAIqc,GAAmBrG,EAAQzC,EAAE,qCAAqC4G,SACvC,IAA3BkC,EAAiBllB,SAAaklB,EAAmBrG,EAAQzC,EAAE,4BAA4B4G,UAE3F,IAAIkB,GAASgB,EAAiB7iB,OAAO,SAAS1B,EAAG2B,GAC7C,GAAIP,GAAQO,EAAElI,OAAO2H,KAGrB,OAFKpB,GAAEd,eAAekC,KAAQpB,EAAEoB,GAAS,GACzCpB,EAAEoB,IAAU,EACLpB,MAGXwB,QAAOC,KAAK8hB,GAAQxkB,QAAQ,SAASiF,GACjCzN,QAAQiB,QAAQ,WAAawM,EAAI4R,OAAO,IAAI1N,KAAK,KAAOpR,KAAKkN,GAAO,MACrEuf,IAIHiB,EAAiB,SAAS9lB,GAE1BhE,EAAOoV,OAAO,WACI,YAAVpR,EAAE0T,OAIFsR,EAAc,cAMtBe,EAAc,SAAS/lB,GAEvBhE,EAAOoV,OAAO,WACI,YAAVpR,EAAE0T,KACF7b,QAAQiB,QAAQ,sBAAsB+J,KAAK,KAE3CmiB,EAAc,OACdntB,QAAQiB,QAAQ,sBAAsB+J,KAAK7C,EAAE2X,SAAS/W,UAK9D2e,GAAyB,CAC7BxjB,GAAgBgC,iBAAiBE,IAAI,SAASD,GACtCuhB,IACAC,EAAQzI,aACRyI,EAAQzC,EAAE,qCAAqCiJ,WAC/CxG,EAAQzC,EAAE,4BAA4B1c,QAAQ,SAAS0N,GACZ,IAAnC/P,EAASF,IAAI5C,QAAQ6S,EAAKnN,OAAamN,EAAKzO,WAEpDkgB,EAAQrI,YAEZoI,GAAyB,IAkB7BvjB,EAAOoU,OAAO,oBAAqB,WAI/B,OAHAsP,EAAOI,QACPN,EAAQzC,EAAE,QAAQ9F,WAClBuI,EAAQzC,EAAE,uBAAuBhb,SACzB5J,EAAGgqB,eAAe5mB,MACtB,IAAK,aAEDpD,EAAGkP,IAAM,SAASA,GACd,GAAI+d,EACJ,QAAQ/d,GACJ,IAAK,oBACD,GAAIyG,GAAQ0R,EAAQzC,EAAE,oEACtB,IAAoB,GAAhBjP,EAAMnN,OAAa,MACvBmN,GAAMmY,aAAa,QAAQlkB,SAC3BqjB,EAAOF,EAAc7d,GACrByc,EAAWsB,EACX,MACJ,KAAK,eACD5F,EAAQzC,EAAE,uBAAuBhb,QACjC,MACJ,KAAK,oBACDyd,EAAQzC,EAAE,qEACLkJ,aAAa,QAAQlkB,QAC1B,MACJ,KAAK,sBACDyd,EAAQzC,EAAE,uCACLkJ,aAAa,QAAQlkB,QAC1B,MACJ,KAAK,kBACDyd,EAAQzI,aACRyI,EAAQzC,EAAE,iBACLkJ,aAAa,QACb5lB,QAAQ,SAAS2W,GACdA,EAAI1X,WAEZkgB,EAAQrI,UACR,MACJ,KAAK,gBACDqI,EAAQzI,aACRyI,EAAQzC,EAAE,QAAQ1c,QAAQ,SAAS2W,GAC/BA,EAAIA,EAAIkP,SAASjmB,SAAW,WAAa,cAE7Cuf,EAAQrI,UACR,MACJ,KAAK,sBACDqI,EAAQzI,aACRyI,EAAQzC,EAAE,uCACL1c,QAAQ,SAASpF,GACdA,EAAKmH,OACD6T,QAAS,WAGrBuJ,EAAQrI,UACR,MACJ,KAAK,eACDqI,EAAQzI,aACRyI,EAAQzC,EAAE,mCACL1c,QAAQ,SAASpF,GACdA,EAAKmH,OACD6T,QAAS,cAGrBuJ,EAAQrI,UACR,MACJ,SACIiO,EAAOF,EAAc7d,GACrByc,EAAWsB,KAKvB1F,EAAO1hB,SAASsB,OAAOrB,IAAI2nB,GAC3BlG,EAAO1hB,SAASiZ,SAAShZ,IAAI2nB,GAC7BlG,EAAOlP,MAAMmP,KAAK1hB,IAAI8nB,GACtBrG,EAAOlP,MAAMoP,IAAI3hB,IAAI8nB,GACrBrG,EAAOlP,MAAMlR,OAAOrB,IAAIod,GACxBqE,EAAOlP,MAAMyG,SAAShZ,IAAIod,GAC1BqE,EAAO1hB,SAAS2hB,KAAK1hB,IAAI6nB,GACzBpG,EAAO1hB,SAAS4hB,IAAI3hB,IAAI6nB,GACxBpG,EAAO1hB,SAASsB,OAAOrB,IAAIL,GAC3B8hB,EAAO1hB,SAASiZ,SAAShZ,IAAIL,EAC7B,MAEJ,KAAK,MACD,GAAIuoB,GAAmB,WACnB3G,EAAQzC,EAAE,uBAAuBhb,QACjC,IAAIqjB,GAAOF,KACPE,EAAKpnB,SAASiC,SAASU,OAAS,GAAKykB,EAAK5U,MAAMvQ,SAASU,OAAS,IAAGmjB,EAAWsB,GACpFxnB,EAAiBwnB,IAEjBgB,EAAiB,WACjB5G,EAAQzC,EAAE,uBAAuBhb,QACjC,IAAIqjB,GAAOF,GACXpB,GAAWsB,GACXxnB,EAAiBwnB,IAEjBiB,EAAgB,WAChB7G,EAAQzC,EAAE,uBAAuBhb,QACjC,IAAIqjB,GAAOF,KACPE,EAAKpnB,SAASiC,SAASU,OAAS,GAAKykB,EAAK5U,MAAMvQ,SAASU,OAAS,IAAGmjB,EAAWsB,GACpF/J,EAAc+J,IAEdkB,EAAc,WACd9G,EAAQzC,EAAE,uBAAuBhb,QACjC,IAAIqjB,GAAOF,GACXpB,GAAWsB,GACX/J,EAAc+J,GAGlB1F,GAAO1hB,SAASsB,OAAOrB,IAAI2nB,GAC3BlG,EAAO1hB,SAASiZ,SAAShZ,IAAI2nB,GAC7BlG,EAAOlP,MAAMmP,KAAK1hB,IAAI8nB,GACtBrG,EAAOlP,MAAMoP,IAAI3hB,IAAI8nB,GACrBrG,EAAO1hB,SAAS2hB,KAAK1hB,IAAI6nB,GACzBpG,EAAO1hB,SAAS4hB,IAAI3hB,IAAI6nB,GACxBpG,EAAO1hB,SAASsB,OAAOrB,IAAImoB,GAC3B1G,EAAO1hB,SAASiZ,SAAShZ,IAAIkoB,GAC7BzG,EAAOlP,MAAMlR,OAAOrB,IAAIqoB,GACxB5G,EAAOlP,MAAMyG,SAAShZ,IAAIooB,EAC1B,MAEJ,KAAK,SACD,GAAI1G,GAAO,SAAS3f,GAChBwf,EAAQ1R,QAAQmJ,WAChBjX,EAAE2X,SAASrY,SACXwkB,EAAWoB,MAEXtF,EAAM,SAAS5f,GACfA,EAAE2X,SAASV,WACXuI,EAAQzI,aACRyI,EAAQzC,EAAE,uBAAuBhb,SACjCyd,EAAQzC,EAAE,yBACL1c,QAAQ,SAAS2W,GACdA,EAAIjc,KAAK,QAAS,WAClBic,EAAIjc,KAAK,UAAW,GACpBic,EAAIjc,KAAK,WAAY,aAE7BykB,EAAQrI,WAGZuI,GAAOlP,MAAMmP,KAAK1hB,IAAI8nB,GACtBrG,EAAOlP,MAAMoP,IAAI3hB,IAAI8nB,GACrBrG,EAAO1hB,SAAS2hB,KAAK1hB,IAAI6nB,GACzBpG,EAAO1hB,SAAS4hB,IAAI3hB,IAAI6nB,GACxBpG,EAAO1hB,SAAS2hB,KAAK1hB,IAAI0hB,GACzBD,EAAO1hB,SAAS4hB,IAAI3hB,IAAI2hB,GACxBF,EAAOlP,MAAMmP,KAAK1hB,IAAI0hB,GACtBD,EAAOlP,MAAMoP,IAAI3hB,IAAI2hB,KAKjC,IAAIhL,GAAuB,SAASrO,GAMhC,GAJApO,EAAG0c,gBAAiB,EACpB1c,EAAGua,cAAgBnM,EAAOhL,KAC1BpD,EAAGwa,YAAcpM,EAAOxL,KAEL,QAAfwL,EAAOhL,KAQP,MAPApD,GAAGua,cAAgB,GACnB8M,EAAQzI,aACRyI,EAAQ1R,MAAM,4BAA4BzN,QAAQ,SAAS0N,GACvDA,EAAKhT,KAAK,QAAS,iBAEvBykB,GAAQrI,UAKZ,IAAIvE,GAASrM,EAAOxL,KAAKiI,OAAO,SAAS1B,EAAG2B,GACxC,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAE+J,OAAOrM,OAAQ6B,IACjClB,EAAE2B,EAAE+J,OAAOxK,IAAMS,EAAEP,KAEvB,OAAOpB,OAGXke,GAAQzI,aACRyI,EAAQ1R,MAAM,4BAA4BzN,QAAQ,SAAS0N,GACnD6E,EAAOpS,eAAeuN,EAAKnN,MAC3BmN,EAAKhT,KAAK,QAAS6X,EAAO7E,EAAKnN,OAE/BmN,EAAKhT,KAAK,QAAS,UAI3BykB,EAAQrI,WACRjf,EAAS0tB,GAGb7pB,GAAgB6Y,qBAAqB3W,IAAI2W,EAGzC,IAAI2R,GACAb,EAAU,WACVa,EAAiBtuB,EAAM2C,gBAAgBgB,OACvC,IAAIb,GAAOoe,aAAae,QAAQjiB,EAAM2C,gBAAgBgB,QAAU,kBAChE,IAAW,OAAPb,EAAa,OAAO,CAEpBA,GAAOlD,QAAQmO,SAASjL,GACxBykB,EAAQgH,KAAKzrB,EAAKgE,MAAMsY,UACxBlf,EAAGoE,QACH,IAAI8a,GAAWmI,EAAQ1R,MAAM,2BAC7BuJ,GAAS1U,GAAG,SAAUrG,EAAEE,SAASkjB,EAAO1hB,SAASsB,OAAO7F,SAAU,MAClE4d,EAAS1U,GAAG,WAAYrG,EAAEE,SAASkjB,EAAO1hB,SAASiZ,SAASxd,SAAU,MACtE4d,EAAS1U,GAAG,YAAa+c,EAAO1hB,SAAS2hB,KAAKlmB,UAC9C4d,EAAS1U,GAAG,WAAY+c,EAAO1hB,SAAS4hB,IAAInmB,UAC5C+lB,EAAQ5I,SACR4I,EAAQ9H,IAAI8H,EAAQ1R,QAAS,IAG7B,IAAIpQ,GAAK3B,EAAgB4B,kBAgB7B,OAfc,OAAND,EACA3B,EAAgB6B,oBAAqB,iBAErC4hB,EAAQzI,aACRyI,EAAQ1R,MAAM,4BAA4BzN,QAAQ,SAAS0N,GACtB,IAA7BrQ,EAAGI,IAAI5C,QAAQ6S,EAAKnN,OAAamN,EAAKzO,WAG1C5B,GAAIA,IAER8hB,EAAQrI,YAIhBlf,EAAMyE,SAAQ,IACP,GAEP+pB,EAAY,WACZ,GAAI1rB,GAAOlD,QAAQoO,QACf+N,QAAS7b,EAAG0pB,WACZ9iB,MAAOygB,EAAQkH,QAGnBvN,cAAamB,QAAQiM,EAAiB,kBAAmBxrB,GAG7DiB,GAAO4J,IAAI,WAAY,WACnB6gB,IACA1qB,EAAgB6Y,qBAAqB7S,OAAO6S,GAC5C2E,EAAOoN,YACPjH,EAAOI,UAtpCfR,EAAkB5lB,SAAW,QAAS,KAAM,kBAAmB,SAAU,WAAY,SAAU,eAAgB,YAAa,UAAW,SAAU,UAAW,IAAK,KAZjK,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbC,SACAG,WAAYqlB,EACZplB,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAhBX9B,QACKC,OAAO,aACP6B,UAAU,YAAa0lB,MA6qChC,WACI,YAOA,SAAS/C,KAcL,QAASsK,GAAgB3uB,EAAOuC,EAAQwB,EAAQuf,GAE5C,GAAIpjB,GAAKC,IACTD,GAAG0uB,SAAWtL,EAAOW,iBACrB/jB,EAAGmkB,MAAQf,EAAOe,KAElB,IAAIwK,GAAe,WACftsB,EAAOkB,GAAG,cAGd6f,GAAOG,QAAQzd,IAAI6oB,GAGnB9qB,EAAO4J,IAAI,WAAY,WACnB2V,EAAOG,QAAQ3Z,OAAO+kB,KAb9BF,EAAgBltB,SAAW,QAAS,SAAU,SAAU,SAbxD,IAAIC,IACAC,SAAU,IACVC,YAAa,kCACbO,SAAS,EACTH,WAAY2sB,EACZ1sB,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAhBX9B,QACKC,OAAO,aACP6B,UAAU,UAAW2iB,MAqC9B,WACI,YAOA,SAASA,KAEL,GAAI3iB,IACAC,SAAU,IACVC,YAAa,oCACbO,SAAS,EAGb,OAAOT,GAbX9B,QACKC,OAAO,aACP6B,UAAU,WAAY2iB,MAgB/B,WACI,YAMA,SAASyK,KAcL,QAASC,GAAkBxsB,EAAQvC,EAAOsjB,GACtC,GAAIpjB,GAAKC,IACTD,GAAGmkB,MAAQ,WACP9hB,EAAOkB,GAAG,UAEdvD,EAAG8uB,WAAa,WACZhvB,EAAMsR,OAAO7O,KAAK,WACdwsB,MAAM,MACN3L,EAAOY,gBANnB6K,EAAkBttB,SAAW,SAAU,QAAS,SAdhD,IAAIC,IACAC,SAAU,IACVC,YAAa;AACbO,SAAS,EACTH,WAAY+sB,EACZ9sB,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAhBX9B,QACKC,OAAO,aACP6B,UAAU,YAAaotB,MAiChC,WACI,YAOA,SAASI,KAaL,QAASC,GAAkBnvB,EAAO8D,EAAiBvB,EAAQtC,EAAU8D,EAAQI,EAAQH,EAAcK,EAAGygB,EAAGxK,EAAIrW,EAASmrB,GAElH,GAQIC,GAAQC,EACRxsB,EAAMysB,EATNC,EAAc,SAAUC,EAAU5a,GAClC,MAAc,IAAV4a,GAAqB,EACd,MAAP5a,GAAoB,EACkC,IAAlDA,EAAMtU,WAAW+V,cAAcrT,QAAQwsB,IAI/CvvB,EAAKC,KAEeumB,GACpBgJ,oBAAoB,EACpBC,kBAAkB,EAClBC,aAAc,EACdC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,YAAY,EACZC,wBAAyB,UAAW,QACpCC,oBAAqB,aACrBC,gBACIC,cAAe,IAEnB5U,QACI8T,YAAaA,GAEjBe,YAAY,EAIhBlB,GAASzvB,QAAQiB,QAAQ,gBAGzB,IAAI4E,GAAK3B,EAAgB4B,kBACf,OAAND,GAAY3B,EAAgB6B,oBAAqB,eACrD,IAAIC,GAAqB,MAANH,KAAmBA,EAAGI,KAGzC,SAAU3F,GACNA,EAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGswB,WAAa,SAChBtwB,EAAGwb,OAAS,GACZxb,EAAGuwB,YAAc5lB,OAAOC,KAAK5K,EAAGwD,WAAWyJ,UACtClF,IAAI,SAASoF,GACV,GAAI/D,GAAInJ,KAAK2C,KAAKuK,EAClB,QACI/J,KAAM+J,EACN2e,WAAY1iB,KAGhBxG,KAAM5C,EAAGwD,WAAWyJ,WAEvBpK,OAAO,SAAS2tB,GACb,MAAiB,UAAVA,EAAEptB,OAEjBpD,EAAG8rB,WAAa9rB,EAAGuwB,YAAY,IAEhCvwB,GAEHA,EAAGywB,UAAY,WAEX,GAAI7tB,GAAOwsB,EAAOsB,UACdC,EAAcC,OAAOC,aAAa,IAClCC,EAAcF,OAAOC,aAAa,GAClCE,EAAW,MACXC,EAAW,SACXC,EAAM,IAAMruB,EAAKmF,IAAI,SAASmpB,GAC1B,MAAOA,GAAKnpB,IAAI,SAASopB,GAErB,GAAI1J,GAAM,EAIV,OAHK0J,KACD1J,EAAM0J,EAAK9wB,YAERonB,IACR2J,KAAKT,KACTS,KAAKN,GACPjK,MAAMiK,GAAaM,KAAKJ,GACxBnK,MAAM8J,GAAaS,KAAKL,GAAY,IACrCM,EAAaC,UAAU,+BAAiCL,EAC5DltB,GAAQwtB,KAAKF,GAGjB,IAAIG,GAAa,WAEbnC,EAAoC,GAApB3pB,EAAY8C,OAAa5F,EAAOA,EAC3CC,OAAO,SAASuG,GAEb,MAAoC,IAA5BnJ,KAAK8C,QAAQqG,EAAEqoB,aACxB/rB,GAEP0pB,EAAOsC,SAASrC,GAChBsC,KAIAA,EAAS,aACTC,EAAU,WACV9xB,EAAMyE,SAAQ,GACdzE,EAAMwC,MAAMtC,EAAG8rB,WAAWA,YACrBvpB,KAAK,SAASC,GACXI,EAAOJ,EAASI,KAAKmF,IAAI,SAASqB,GAE9B,MADAA,GAAEmB,MAAQ,UACHnB,IAGXpJ,EAAG6xB,QAAUlnB,OAAOC,KAAKhI,EAAK,IAAImF,IAAI,SAASqB,GAC3C,OACI0oB,MAAO1oB,EACP2oB,YAAa3oB,EAAEnH,QAAQ,KAAM,KAAKmU,cAClCjI,MAAM,KAIA,MAAVihB,IACA5I,EAASwL,UAAYhyB,EAAG6xB,QAAQrpB,OAChC4mB,EAAS,GAAIF,GAAaC,EAAO,GAAI3I,GACrCmL,EAAS,WACL,IAAK,GAAItnB,GAAE,EAAK,EAAFA,EAAKA,IAAK+kB,EAAOuC,UAEnCzC,EAAa+C,MAAMnsB,IAAI,iBACvB,SAAS8S,EAAE9N,EAAEonB,EAAGC,GACZzvB,QAAQ0vB,IAAIxZ,EAAE,IAAIsZ,IAErB9C,IAKLoC,IACAxxB,EAAGqyB,YAAW,GACdryB,EAAGsyB,SAAQ,GACXxyB,EAAMyE,SAAQ,MAMtBguB,EAAc,SAASC,EAAUC,EAAIC,GACrCxD,EAAayD,aAAaje,MAAMzU,KAAMsU,WACtCke,EAAGxoB,MAAM,MAAWolB,EAAaqD,GAAK,MAI1C1yB,GAAGqyB,WAAa,SAASO,GACrB,GAAItoB,GAAOtK,EAAG6xB,QAAQhvB,OAAO,SAASuG,GAClC,MAAOA,GAAE+E,MAGbqY,GAASqM,WAAavoB,EAAKvC,IAAI,SAASqB,GACpC,MAAOA,GAAE2oB,cAEbvL,EAASqL,QAAUvnB,EAAKvC,IAAI,SAASqB,GACjC,OAASxG,KAAMwG,EAAE0oB,MAAOnC,UAAS,KAErCnJ,EAASsM,MAAQ,WACb,GAAIC,KAEJ,OADAA,GAAUC,SAAWT,EACdQ,GAGX3D,EAAO6D,eAAezM,GAClBoM,GAAWjB,KAGnB3xB,EAAGsyB,QAAU,WACT,GAAIvjB,GAAWjP,EAAMgN,WAErBqiB,GAASzvB,QAAQiB,QAAQ,iBAAiB,GAC1CwuB,EAAOllB,MAAM,eAAkB8E,EAASrD,KAAK,GAAM,KACnDyjB,EAAOllB,MAAMV,MAASxF,EAAQiJ,WAAa+B,EAASrD,KAAOqD,EAASpD,MAAQ,GAAM,KAClFwjB,EAAOllB,MAAMX,OAAUvF,EAAQgJ,YAAc,IAAO,KACpDqiB,EAAO6D,gBACH1pB,MAAOxF,EAAQiJ,WAAa+B,EAASrD,KAAOqD,EAASpD,MAAQ,GAC7DrC,OAAQvF,EAAQgJ,YAAc,MAC/B,GACJ4kB,KAIH9tB,EAAOoU,OAAO,gBAAiB2Z,GAC/B/tB,EAAOoU,OAAO,YAAa,SAAS7O,GAC5B1J,QAAQ6W,YAAY6Y,KACxBA,EAAO5T,OAAOlZ,MAAM8G,EAAEgN,cAAc8O,QACpCyM,OAKJ7xB,EAAMuB,SAASyE,IAAI9F,EAAGsyB,QACtB,IAAIluB,GAAS,WACLpE,EAAGsyB,SAAQ,GAEnB5yB,SAAQiB,QAAQoD,GAAS3C,KAAK,SAAUgD,GAGxCpE,EAAGkzB,YAAc,WACbxtB,KACA8rB,IAGJ,IAAI2B,GAAkB,SAASttB,GAC3BH,EAAcG,EAASF,IACvB6rB,IAEJ5tB,GAAgBgC,iBAAiBE,IAAIqtB,EAGrC,IAAI1W,GAAuB,SAASrO,GAChCpO,EAAGua,cAAgBnM,EAAOhL,KAC1BpD,EAAGwa,YAAcpM,EAAOxL,IACxB,IAAI6X,GAASrM,EAAOxL,KAAKiI,OAAO,SAAS1B,EAAG2B,GACxC,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAE+J,OAAOrM,OAAQ6B,IACjClB,EAAE2B,EAAE+J,OAAOxK,IAAMS,EAAEP,KAEvB,OAAOpB,OAIXvG,GAAKsF,QAAQ,SAAStF,GAClBA,EAAK2H,MAAQtK,KAAK2C,EAAK6uB,aACxBhX,GAEP7W,GAAgB6Y,qBAAqB3W,IAAI2W,GAGzC3c,EAAMyE,SAAQ,GAIdV,EAAO4J,IAAI,WAAY,WAEnB7J,EAAgB6Y,qBAAqB7S,OAAO6S,KAtOpDwS,EAAkB1tB,SAAW,QAAS,kBAAmB,SAAU,WAAY,SAAU,SAAU,eAAgB,IAAK,IAAK,KAAM,UAAW,eAf9I,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbI,WAAYmtB,EACZltB,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,YAAawtB,MAgQhC,WACI,YAOA,SAASoE,KAaL,QAASC,GAAkBnvB,EAAIpE,EAAO8D,EAAiBvB,EAAQtC,EAAU8D,EAAQC,EAAcC,EAASI,GA8CpG,QAASU,GAAK6L,EAAK9N,EAAM2G,EAAOD,EAAQoG,EAAGC,EAAG2jB,GAE1C,GADA5iB,EAAIvJ,OAAO,KAAKyC,SACZ0pB,EAAWtzB,EAAGuzB,UAAavzB,EAAGwzB,UAAlC,CAEA9iB,EACK3P,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GACpCW,MAAM,WAAW,YACjBA,MAAM,OAAOyF,GACbzF,MAAM,MAAM0F,EAEjB,IAAI+C,GAAIhC,EAAIrJ,OAAO,KACfoH,EAASvK,EAAGsF,cAAcR,QAAQ,EAAGpG,EAAK4F,SAASiB,OAAO,EAAG6pB,EAAU/pB,EAAMD,IAE7EmqB,EAAa,QACbC,EAAQ,EAAY,GAAK,GACzBC,EAASjhB,EAAE/I,UAAU,SAAS/G,KAAKA,EAEvC+wB,GACKxpB,QAAQ9C,OAAO,QACftG,KAAKuyB,EAAU,IAAM,IAAK,SAASlpB,EAAEC,GAAK,MAAOoE,GAAOpE,EAAE,MAC1DtJ,KAAKuyB,EAAU,IAAM,IAAKI,GAC1B3yB,KAAK,cAAe0yB,GACpB1yB,KAAK,YAAY,QACjBsQ,KAAM,SAASjH,GAAI,MAAOA,MAGnC,QAASwpB,GAAWljB,EAAK9N,EAAM2G,EAAOD,EAAQuqB,EAAMC,EAAMR,GAGtD,GADA5iB,EAAIvJ,OAAO,KAAKyC,SACZ0pB,EAAWtzB,EAAG+zB,cAAiB/zB,EAAGg0B,cAAtC,CAEA,GAAIphB,GAAY1O,EAAG0O,UAAUhQ,GAEzBqxB,EAAU/vB,EAAG+vB,UACZC,WAAW,WAAa,MAAO,KAC/BphB,KAAK,GAAavJ,EAAMD,IAAWA,EAAOC,IAE3CmG,EAAIxL,EAAGsF,cACNR,QAAQ,EAAG,EAAYM,EAASC,IAChCE,OAAO,EAAG,EAAYH,EAASC,IAEhCoG,EAAIzL,EAAGsF,cACNR,QAAQ,EAAGpG,EAAK0G,SAChBG,OAAO,EAAYH,EAASC,EAAM,IAEnCuB,EAAImpB,EAAQrhB,GAEZ4L,EAAQ1T,EAAE0T,QAAQzW,IAAI,SAASosB,GAC/B,OACIrY,QAASpM,EAAGykB,EAAErY,OAAOpM,EAAGC,EAAEwkB,EAAErY,OAAOlZ,KAAK0G,QACxC+B,QAASqE,EAAGykB,EAAE9oB,OAAOqE,EAAGC,EAAEwkB,EAAE9oB,OAAOzI,KAAK0G,QACxC8qB,QAASD,EAAE9oB,OAAOzI,KAAKwxB,WAI3BC,EAAS3jB,EACR3P,KAAK,QAASwI,GACdxI,KAAK,SAAUuI,GACfW,MAAM,WAAW,YACjBA,MAAM,OAAQ4pB,GACd5pB,MAAM,MAAO6pB,GACbzsB,OAAO,IAOZ,IALAgtB,EAAOhtB,OAAO,QACTtG,KAAK,QAAS,EAAYuI,EAASC,GACnCxI,KAAK,SAAU,EAAYwI,EAAQD,GACnCW,MAAM,OAAO,QAEdqpB,EAAQ,CACR,GAAIgB,GAAY,aAAehrB,EAAO,EAAI,IAAMA,EAAO,EAAI,mBAAmBC,EAAMD,GAAQ,GAC5F+qB,GAAOtzB,KAAK,YAAauzB,GAG7B,GAAInb,GAAQkb,EAAO1qB,UAAU,YAAY/G,KAAK4b,EAa9C,OAZArF,GACKhP,QAAQ9C,OAAO,YACftG,KAAK,QAAS,YACdA,KAAK,SAAU,SAASqJ,GACrB,MAAOuF,GAAEvF,EAAE0R,OAAOnM,GAAK,IAAMvF,EAAE0R,OAAOpM,EAAI,IAC1CC,EAAEvF,EAAE0R,OAAOnM,GAAK,IAAMvF,EAAEiB,OAAOqE,EAAI,IACnCC,EAAEvF,EAAEiB,OAAOsE,GAAK,IAAMvF,EAAEiB,OAAOqE,IAElCzF,MAAM,SAAU,SAASG,GACtB,MAAOA,GAAEgqB,QAAQG,OAIrB7hB,EAAE2hB,EACFtZ,OAAQpL,EACRnL,OAAQkL,EACR4jB,QAASA,EACT1wB,KAAM4b,IAId,QAAS4U,GAAQ1iB,EAAK9N,EAAM2G,EAAOD,EAAOoG,EAAEC,GAwBxC,QAAS6kB,KAGL,GAAKtwB,EAAG0E,MAAM6rB,aACTvwB,EAAG0E,MAAMmC,UAAd,CACA,GAAI2pB,GAAYxwB,EAAG0E,MAAMmC,UAAUhD,IAAI,SAASqB,GAAI,MAAOnJ,MAAK00B,OAAOvrB,EAAE,GAAIA,EAAE,KAAOoF,GAAQzG,IAAI5H,KAAK0L,OACnG+oB,EAAOF,EAAU,GAAKA,EAAU,GAChCrnB,EAAQqnB,EAAU,GAGlBG,GAFMjyB,EAAK0H,KAAKiY,OAAOlV,EAAOunB,GAErB1wB,EAAG0E,MAAMmC,UAEtB8pB,GAAO,GAAG,GAAK,EAEfA,EAAO,GAAG,GAAKvrB,EAEfpF,EAAGiD,OAAOlH,MACL8J,aACAjD,KAAK5C,EAAG0E,MAAMyC,OAAOtE,KAAM8tB,IAvCpCnkB,EAAIvJ,OAAO,KAAKyC,SAChB8G,EAAI3P,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAAQW,MAAM,OAAOyF,GAAGzF,MAAM,MAAM0F,GAAG1F,MAAM,WAAW,WAEhG,IAAIlC,GAAM2I,EAAIrJ,OAAO,KAAKtG,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAC1DmN,EAAQ/F,EAAIrJ,OAAO,KAAKtG,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAAQvI,KAAK,QAAS,SAElFmZ,EAAW/Z,KAAK+I,IAAIwL,MAAM,KAAM9R,EAAKA,MACrCkyB,EAAW30B,KAAK8I,IAAIyL,MAAM,KAAM9R,EAAKA,MAErC2H,EAAQrG,EAAGsF,cAAcR,QAAQ8rB,EAAU5a,IAAWzQ,MAAMzJ,EAAG+0B,YAAYpgB,OAE3ErK,EAAO1H,EAAKoyB,IAAI,GAChBnrB,EAAOjH,EAAKoyB,IAAI,GAEhBxmB,EAAStK,EAAGsF,cAAcR,QAAQ,EAAGsB,IAAOb,OAAO,EAAGF,IACtDkF,EAASvK,EAAGsF,cAAcR,QAAQ,EAAGa,IAAOJ,OAAO,EAAGH,GAE1D5G,SAAQC,IAAI2G,EAEZ,IAAI2rB,GAAQj1B,EAAG,UAAa,EAAI,EAwBhCyW,GAAM3P,KACF5C,EAAGuS,QAAQjM,GAAG,MAAOgqB,GAGzB,IAAIU,GAAO1mB,EAAO,GAAGymB,EACjBE,EAAO1mB,EAAO,GAAGwmB,EAEjBG,EAAQrtB,EAAI4B,UAAU,QAAQ/G,KAAKA,EAAKA,KAY5C,OAXAwyB,GACKjrB,QAAQ9C,OAAO,QACftG,KAAK,QAAS,OACdA,KAAK,WAAY,SAASqJ,EAAGC,GAAK,MAAOA,GAAIC,IAC7CvJ,KAAK,WAAY,SAASqJ,EAAGC,GAAK,MAAOlK,MAAK8K,MAAMZ,EAAIC,KACxDvJ,KAAK,IAAK,SAASqJ,EAAGC,GAAK,MAAOmE,GAAOnE,EAAIC,KAC7CvJ,KAAK,IAAK,SAASqJ,EAAGC,GAAK,MAAOoE,GAAOpE,EAAIR,KAC7C9I,KAAK,QAASm0B,GACdn0B,KAAK,SAAUo0B,GACfp0B,KAAK,OAAQ,SAASqJ,GAAK,MAAOG,GAAMH,MAGzCsI,EAAG3K,EACHgT,OAAQtM,EACRjK,OAAQgK,EACR5L,KAAMA,EAAKA,KACX0H,KAAKA,EACLT,KAAKA,EACLqrB,KAAKA,EACLC,KAAKA,GAIb,QAAS9V,MAvNT,GAAIrf,GAAKC,IACTD,GAAGwD,WAAa1D,EAAM2C,gBACtBzC,EAAGwzB,UAAYxzB,EAAGuzB,UAAYvzB,EAAGq1B,WAAY,EAC7Cr1B,EAAGg0B,cAAgBh0B,EAAG+zB,eAAgB,EACtC/zB,EAAGs1B,eACElyB,KAAK,QAASuR,OAAO,UAAU,aAC/BvR,KAAK,eAAgBuR,OAAO,UAAU,aACtCvR,KAAK,cAAeuR,OAAO,UAAU,aACrCvR,KAAK,eAAgBuR,OAAO,UAAU,aAE3C3U,EAAG+0B,YAAc/0B,EAAGs1B,aAAa,GACjCt1B,EAAGu1B,SAAWnyB,KAAK,SAASA,KAAK,QAAQA,KAAK,WAC9CpD,EAAG4M,MAAQ5M,EAAGu1B,OAAO,GACrBv1B,EAAGw1B,qBACEpyB,KAAK,MAAMuR,MAAM,IACjBvR,KAAK,MAAMuR,MAAM,IACjBvR,KAAK,QAAQuR,MAAM,IACnBvR,KAAK,OAAOuR,MAAM,IAClBvR,KAAK,OAAOuR,MAAM,IAClBvR,KAAK,MAAMuR,MAAM,IACjBvR,KAAK,QAAQuR,MAAM,IACnBvR,KAAK,QAAQuR,MAAM,IACnBvR,KAAK,OAAOuR,MAAM,IAClBvR,KAAK,MAAMuR,MAAM,KAEtB3U,EAAGy1B,kBAAoBz1B,EAAGw1B,mBAAmB,EAG7C,IAEIE,GAEAC,EAEAC,EAKAC,EACAjzB,EAZAsE,EAAUhD,EAAGiD,OAAO,kBACpB2uB,EAAU5uB,EAAQG,OAAO,OAAOiP,QAAQ,sBAAsB,GAE9Dyf,EAAU7uB,EAAQG,OAAO,OAAOiP,QAAQ,sBAAsB,GAE9D0f,EAAS9uB,EAAQG,OAAO,OAAOiP,QAAQ,YAAY,GAEnD2f,EAAQ/uB,EAAQG,OAAO,OAAOiP,QAAQ,cAAc,GACpD4f,EAAQhvB,EAAQG,OAAO,OAAOiP,QAAQ,cAAc,EA8OxDxW,GAAMyE,SAAQ,GACbvE,EAAG0xB,SAAW,WACX5xB,EAAMwC,MAAM,4BACR6zB,OAAU,MACX5zB,KAAK,SAASC,GACbqzB,GAAQjzB,KAAKJ,EAASI,KAAKmF,IAAI,SAASqB,GAIpC,MAHAuB,QAAOC,KAAKxB,EAAEvD,UAAUqC,QAAQ,SAASiF,GACtB,MAAXlN,KAAKkN,KAAYlN,KAAKkN,GAAO,IACnC/D,EAAEvD,UACGuD,EAAEvD,YAEb7F,EAAGo2B,iBAGXp2B,EAAGo2B,YAAc,WACbt2B,EAAMyE,SAAQ,GACdwxB,EAAQ5uB,OAAO,KAAKyC,SACpBksB,EAAQ3uB,OAAO,KAAKyC,SACpBosB,EAAO7uB,OAAO,KAAKyC,SACnBisB,EAAKjpB,MAAQ5M,EAAG4M,MAAMxJ,KAAK4E,cAC3B6tB,EAAKQ,KAAOR,EAAKS,KAAOt2B,EAAGy1B,kBAAkB9gB,MAC7C7U,EAAMmnB,YAAYsP,WAAWV,GAAMtzB,KAAK,SAAS6G,GAC7CxG,EAAOlD,QAAQmO,SAASzE,GACxBpJ,EAAGoP,OACHtP,EAAMyE,SAAQ,MAGtBvE,EAAGoP,KAAO,WAEN,GAAI5D,GAAS1L,EAAMgN,YACfvD,EAAQxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAAQ,GAC1DrC,EAASvF,EAAQgJ,YAAc,IAC/BypB,EAAUjtB,GAAUvJ,EAAG,UAAa,IAAM,IAAOA,EAAG,cAAiB,GAAK,GAC1Ey2B,EAAWntB,GAAWtJ,EAAG,UAAa,IAAM,IAAOA,EAAG,cAAiB,GAAK,EAChF41B,GAAYxC,EAAQ4C,EAAQpzB,EAAK8zB,OAC7BF,EACAC,GACCz2B,EAAGg0B,cAAgB,GAAK,GAAGxoB,EAAOE,KAAK,GACvC1L,EAAG+zB,cAAgB,GAAK,GAE7B4B,EAAa/B,EAAWmC,EAASnzB,EAAKiH,KAClC,GAAI4sB,EACJjrB,EAAOE,KAAK,GAAK1L,EAAG+zB,cAAgB,GAAK,GAAK,GAElD2B,EAAa9B,EAAWkC,EAASlzB,EAAK0H,KAClCksB,EAAS,IACRx2B,EAAGg0B,cAAgB,GAAK,GAAGxoB,EAAOE,KAAK,GAAI,GAAG,GAEnD7G,EAAKoxB,EACDrzB,EAAK8zB,OAAO7sB,KACZ,IAAK4sB,EAAUD,GAAWx2B,EAAGg0B,cAAgB,GAAK,GAAGxoB,EAAOE,KAAK,GAAK1L,EAAG+zB,cAAgB,GAAK,GAAI,GAEtGlvB,EAAKqxB,EAAOtzB,EAAK8zB,OAAOpsB,KACpBksB,EAAS,KAAMx2B,EAAGg0B,cAAgB,GAAK,GAAGxoB,EAAOE,KAAK,GAAI+qB,GAAYz2B,EAAG+zB,cAAgB,GAAK,IAAI,GAEtG1U,KAGJrf,EAAG0xB,WAEH5xB,EAAMuB,SAASyE,IAAI9F,EAAGoP,MACtB1P,QAAQiB,QAAQoD,GAAS3C,KAAK,SAAU+C,EAAEE,SAASrE,EAAGoP,KAAK,MA7U/DikB,EAAkB9xB,SAAW,KAAM,QAAS,kBAAmB,SAAU,WAAY,SAAU,eAAgB,UAAW,IAhB1H,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbI,WAAYuxB,EACZtxB,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,YAAa4xB,MAuWhC,WACI,YAOA,SAASuD,KAcL,QAASC,GAAiB92B,EAAO8D,EAAiBwf,EAAQtf,EAAczB,EAAQtC,EAAU82B,GAEtF/2B,EAAMwC,MAAM,0BACRyiB,MAAM,IACPxiB,KAAK,SAASC,GACbxC,EAAGmC,MAAQK,EAASI,OAIxB9C,EAAM+hB,aAAa/b,IAAI,WACnB/F,EAAS,WACLC,EAAG82B,SAAWh3B,EAAMylB,oBAI5B,IAAIvlB,GAAKC,IACTD,GAAG4N,WACH5N,EAAGwhB,iBAAmB5d,EAAgB4d,iBACtCxhB,EAAGyF,iBAAmB7B,EAAgB6B,iBACtC7B,EAAgBud,gBAAgBrb,IAAI,SAASixB,GACzC/2B,EAAG4N,QAAUmpB,IAEjB/2B,EAAGg3B,iBAAmB,GACtBh3B,EAAGoiB,oBAAsB,WACrB,GAAIzc,GAAM3F,EAAGg3B,iBAAiBnQ,MAAM,KAAK9e,IAAI,SAASqB,GAAI,MAAOA,GAAE8b,QACnEthB,GAAgBwe,oBAAoBzc,IAExC3F,EAAGi3B,YAAa,EAChBj3B,EAAGk3B,WAAY,EACfl3B,EAAGm3B,cAAe,EAClBn3B,EAAGo3B,aAAc,EACjBp3B,EAAGq3B,UAAW,EACdr3B,EAAGs3B,YAAa,CAEhB,IAAIC,GACAC,EAAqBX,EAAWppB,IAAI,oBAAqB,SAAS7E,EAAO6uB,GAEzE,OADAF,EAAcE,EAAQr0B,KACdq0B,EAAQr0B,MACZ,IAAK,UACDpD,EAAGk3B,WAAY,EACfl3B,EAAGm3B,cAAe,EAClBn3B,EAAGs3B,YAAa,EAChBt3B,EAAGo3B,aAAc,EACjBp3B,EAAGq3B,UAAW,CACd,MACJ,KAAK,QACDr3B,EAAGk3B,WAAY,CACf,MACJ,KAAK,aACDl3B,EAAGq3B,UAAW,EACdr3B,EAAGm3B,cAAe,EAClBn3B,EAAGo3B,aAAc,EACjBp3B,EAAGs3B,YAAa,EAChBt3B,EAAGk3B,WAAY,IAI3BL,GAAWppB,IAAI,WAAY+pB,GAE3Bx3B,EAAG03B,YAAc,SAASpc,GACtBjZ,EAAOkB,GAAGg0B,GACN/zB,WAAY8X,IAEhB5b,QAAQiB,QAAQ,oBAAoBg3B,SAAS,SAGjD33B,EAAG43B,SAAW,SAASt0B,GACnBjB,EAAOkB,GAAGD,GACNE,WAAY1D,EAAM2C,gBAAgBgB,UAEtC/D,QAAQiB,QAAQ,oBAAoBg3B,SAAS,SAGjD33B,EAAG63B,YAAc,WACbzU,EAAOkB,SACPjiB,EAAOy1B,aAAa,YAtE5BlB,EAAiBr1B,SAAW,QAAS,kBAAmB,SAAU,eAAgB,SAAU,WAAY,aAjBxG,IAAIC,IACAC,SAAU,IACVC,YAAa,oCACbC,SACAG,WAAY80B,EACZ70B,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAhBX9B,QACKC,OAAO,aACP6B,UAAU,WAAYm1B,MAmG/B,WACI,YAOA,SAASnzB,KAaL,QAASu0B,GAAqBj4B,EAAOuC,GACjC,GAAIrC,GAAKC,IACTD,GAAG82B,SAAWh3B,EAAMylB,iBACpBvlB,EAAGqD,QAAU,SAASC,EAAME,GACxB1D,EAAM0lB,cAAchiB,GACpBnB,EAAOkB,GAAGD,GACNE,WAAYA,EAAWC,WACnCs0B,EAAqBx2B,SAAW,QAAS,SAlBzC,IAAIC,IACAC,SAAU,IACVC,YAAa,4CACbI,WAAYi2B,EACZh2B,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,eAAgBgC,MA8BnC,WACI,YAOA,SAASw0B,KAaL,QAASC,GAAyBn4B,EAAO8D,EAAiBM,EAAI7B,EAAQtC,EAAU8D,EAAQI,EAAQH,EAAcK,EAAGygB,EAAGxK,EAAIrW,GAapH,QAASsS,KACqB,GAAtB3Q,EAAY8C,OACZ5B,EAAM+C,UAAU,UAAU2M,QAAQ,oBAAoB,GAEtD1P,EAAM+C,UAAU,UAAU2M,QAAQ,mBAAoB,WAClD,MAAiD,IAAzC5Q,EAAY3C,QAAQ9C,KAAKkW,SAAS1N,MAqctD,QAASyvB,GAAK/uB,GACV,GAAIgvB,GAAOj0B,EAAGiD,OAAOlH,KACrBk4B,GAAK9wB,OAAO,YACPtG,KAAK,QAAS,QACdA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAASq3B,EAAKlnB,GACnBnQ,KAAK,SAAUq3B,EAAKC,EAEzB,IAAI7pB,GAAStK,EAAGsF,cAAcR,OAAOG,EAAEmvB,SAAS7uB,OAAO,EAAG2uB,EAAKlnB,IAC3DzC,EAASvK,EAAGsF,cAAcR,OAAOG,EAAEovB,SAAS9uB,OAAO,EAAG2uB,EAAKC,GAC/DF,GAAKxuB,UAAU,UACV/G,KAAKuG,EAAEvG,MACPuH,QAAQ9C,OAAO,cACftG,KAAK,QAAS,SACdA,KAAK,KAAM,SAASqJ,GACjB,MAAOoE,GAAOpE,EAAEsF,KAEnB3O,KAAK,KAAM,SAASqJ,GACjB,MAAOqE,GAAOrE,EAAEuF,KAEnB5O,KAAK,IAAK,GAEf0V,EAAM+hB,OAAOL,GAgFjB,QAAS/oB,KAEL,GAAI5D,GAAS1L,EAAMgN,YACfxD,EAASvF,EAAQgJ,YAAc,IAC/BxD,EAAQxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAAQ,EAC9DysB,GAAKlnB,EAAI/Q,KAAK8K,MAAM1B,EAAQM,GAC5BuuB,EAAKC,EAAIl4B,KAAK8K,MAAM3B,EAASnJ,KAAKgL,KAAKstB,EAASjwB,OAASqB,IAEzD3C,EAAQuE,IAAI,cAAeD,EAAOE,KAAO,IAAID,IAAI,eAAgBD,EAAOG,MAAQ,IAAIF,IAAI,QAASlC,GAAOkC,IAAI,SAAUnC,EAAS,IAC/H1C,EAAM7F,KAAK,QAASwI,GACfxI,KAAK,SAAUuI,GAEpB1C,EAAM+C,UAAU,WACX/G,KAAK61B,GACLtuB,QAAQ9C,OAAO,SACftG,KAAK,QAAS,SACdA,KAAK,YAAa,SAASqJ,GACxB,MAAO,aAAgBA,EAAEmqB,IAAM6D,EAAKlnB,EAAK,IAAO9G,EAAEsoB,IAAM0F,EAAKC,EAAK,MAErExiB,KAAKqiB,GA9kBd,GAAI3yB,GAAK3B,EAAgB4B,kBACf,OAAND,GACA3B,EAAgB6B,oBAAqB,eAEzC,IAAIC,GAAqB,MAANH,KAAmBA,EAAGI,GACzC/B,GAAgBgC,iBAAiBE,IAAI,SAASD,GAC1CH,EAAcG,EAASF,IACvB0Q,KAcJ,IAAIrW,GAAKC,KAEL4J,EAAO,EACPuuB,GACAlnB,EAAG,EACHmnB,EAAG,GAIH70B,GACAC,QAAW,QACXqY,OAAU,OACViJ,MAAQ,EACR3hB,KAAQ,QACR6hB,IAAO,cACPyT,WACI5c,OAAU,OACVP,KAAQ,QACRuQ,WAAc,4BAElB6M,YACI7c,OAAU,OACVP,KAAQ,MACRuQ,WAAc,0BAEdhQ,OAAU,OACVP,KAAQ,QACRuQ,WAAc,4BAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,0BAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,uBAEdhQ,OAAU,OACVP,KAAQ,QACRuQ,WAAc,4BAEdhQ,OAAU,OACVP,KAAQ,cACRuQ,WAAc,gCAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,6BAEdhQ,OAAU,OACVP,KAAQ,UACRuQ,WAAc,mCAElB7e,UACI9E,QAAW,8BACXywB,gBAAiB,oCACjBC,KAAQ,2BACRC,SAAY,+BACZC,uBAAwB,2CACxBnxB,OAAU,8BAEdoxB,aACIld,OAAU,OACVP,KAAQ,MACRuQ,WAAc,0CAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,gDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,oDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,0DAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,gDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,sDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,8CAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,oDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6CAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,sDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,4DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,iDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,+DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,wDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,8DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,+CAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,gDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,0DAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,qDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,sDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,wDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,MACRuQ,WAAc,oDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6CAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,sDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,4DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,iDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,+CAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,qDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,+DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,qDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,2DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,wDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,8DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,qDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,2DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,+DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,qEAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,2DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,2DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,iEAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,8DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,oEAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,+DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6CAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,6DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,mDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,yDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,sDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,4DAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,iDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,iDAEdhQ,OAAU,OACVP,KAAQ,YACRuQ,WAAc,uDAElBpE,QACItkB,KAAQ,uBACR0Y,OAAU,OACV4L,MAAS,gDACTwF,eAAkB,mDAClBE,aAAgB,uDAEhBhqB,KAAQ,mBACR0Y,OAAU,OACV4L,MAAS,4CACTwF,eAAkB,+CAClBE,aAAgB,mDAEhBhqB,KAAQ,sBACR0Y,OAAU,OACV4L,MAAS,+CACTwF,eAAkB,kDAClBE,aAAgB,sDAEhBhqB,KAAQ,eACR0Y,OAAU,OACV4L,MAAS,0CACTwF,eAAkB,6CAClBE,aAAgB,iDAEhBhqB,KAAQ,uBACR0Y,OAAU,OACV4L,MAAS,gDACTwF,eAAkB,mDAClBE,aAAgB,uDAEhBhqB,KAAQ,mBACR0Y,OAAU,OACV4L,MAAS,4CACTwF,eAAkB,+CAClBE,aAAgB,mDAEhBhqB,KAAQ,sBACR0Y,OAAU,OACV4L,MAAS,+CACTwF,eAAkB,kDAClBE,aAAgB,sDAEhBhqB,KAAQ,eACR0Y,OAAU,OACV4L,MAAS,0CACTwF,eAAkB,6CAClBE,aAAgB,kDAIpBlmB,EAAUxH,QAAQiB,QAAQ,wBAC1BiG,EAAQ1C,EAAGiD,OAAO,wBAAwBE,OAAO,UAErDrH,GAAGi5B,YAAcz1B,EAAWw1B,WAAWjxB,IAAI,SAASqB,GAEhD,MADAA,GAAEtB,UAAW,EACNsB,GAGX,IAAIqvB,GAAWz4B,EAAGi5B,YACbp2B,OAAO,SAASuG,GACb,MAAuC,IAAhCA,EAAE0iB,WAAW/oB,QAAQ,UAE/BF,OAAO,SAASuG,GACb,MAAiB,OAAVA,EAAEmS,MAGjBkd,GAASS,KA8BT,IAAIziB,GAAQ,SAAUvS,EAAIk0B,EAAMx0B,GAE5B,GAAIu1B,MAEA9rB,EAAQ,WACmB,OAAvBnJ,EAAG0E,MAAMmC,YACbouB,EACKt2B,OAAO,SAASM,GACb,MAAOA,GAAEsT,QAAUvS,EAAG0E,MAAMyC,SAE/BnD,QAAQ,SAAS/E,GACdA,EAAEg1B,KAAKrxB,KAAK3D,EAAEsT,MAAM1P,KAAM,QAElCoyB,EACKt2B,OAAO,SAASM,GACb,MAAOA,GAAEsT,QAAUvS,EAAG0E,MAAMyC,SAE/BnD,QAAQ,SAAS/E,GACdA,EAAEsT,MAAMjM,GAAG,MAAO+C,OAG1BA,EAAM,WACN,GAA2B,OAAvBrJ,EAAG0E,MAAMmC,UAET,WADAnH,GAAgB6B,oBAAqB,WAGzC,IAAI6S,GAAKpU,EAAG0E,MAAMmC,UACd+P,EAAOxC,EAAG,GAAG,GACb9B,EAAO8B,EAAG,GAAG,GACb9C,EAAO8C,EAAG,GAAG,GACb/C,EAAO+C,EAAG,GAAG,GAEb7B,EAAQ0iB,EAASt2B,OAAO,SAASM,GACjC,MAAOA,GAAEsT,QAAUvS,EAAG0E,MAAMyC,SAC7B,EACHoL,GAAMA,MAAMjM,GAAG,MAAO,KACtB,IAAI2tB,GAAO1hB,EAAM0hB,KAAKv1B,OAAO,GACzB4L,EAAStK,EAAGsF,cAAcR,OAAOmvB,EAAKG,SAAS7uB,OAAO,EAAG2uB,EAAKlnB,IAC9DzC,EAASvK,EAAGsF,cAAcR,OAAOmvB,EAAKI,SAAS9uB,OAAO,EAAG2uB,EAAKC,IAC9D1yB,EAAMwyB,EAAKv1B,KAAKC,OAAO,SAASiI,GAC5B,GAAI4E,GAAIlB,EAAO1D,EAAE4E,GACbC,EAAIlB,EAAO3D,EAAE6E,EACjB,OAAQD,GAAIoL,GAAYtE,EAAJ9G,GAAYC,EAAI6F,GAAYD,EAAJ5F,IAE/C5H,IAAI,SAASqC,GACV,MAAOA,GAAE3B,IAEjB7E,GAAgB6B,iBAAiBE,EAAK,aAGtC6yB,EAAS,SAASL,GAClB,GAAI1hB,GAAQvS,EAAGuS,QACVjM,GAAG,QAAS6C,EACjB8qB,GAAKrxB,KAAK2P,GACV0iB,EAAS/tB,MACLqL,MAAOA,EACP0hB,KAAMA,KAIVxQ,EAAQ,aAIRyR,EAAU,YAId,QACIZ,OAAQA,EACR7Q,MAAOA,EACPyR,QAASA,IAEdl1B,EAAIk0B,EAAMx0B,EAwBbwW,GAAGlM,IACCuqB,EAAS1wB,IAAI,SAASqB,GAAK,MAAOtJ,GAAMwC,MAAM8G,EAAE0iB,eAClDvpB,KAAK,SAASK,GACZ61B,EAAWA,EAAS1wB,IAAI,SAASqB,EAAGiB,GAChC,GAAIzH,GAAO3C,KAAK2C,KAAKyH,GAAGzH,KAAK,GAAGA,KAC5By2B,GACAj2B,KAAMgG,EACNxG,KAAM+H,OAAOC,KAAKhI,GAAMiI,OAAO,SAAS1B,EAAG2B,GACvC,GAAIL,GAAQtB,EAAEvG,KAAKkI,EAMnB,OALA3B,GAAEwL,MAAMvJ,MACJ3C,GAAIqC,EACJ4E,EAAGjF,EAAMiF,EACTC,EAAGlF,EAAMkF,IAENxG,IAEPvG,KAAMA,EACN+R,WACDA,MACH2jB,QAAS,KACTC,QAAS,KACThE,IAAKlqB,EAAIpK,KAAK4J,KACd6oB,IAAK4G,SAASjvB,EAAIpK,KAAK4J,OAEvB0vB,EAAO,SAASnvB,GAChB,MAAOA,GAAEsF,GAET8pB,EAAO,SAASpvB,GAChB,MAAOA,GAAEsF,EAIb,OAFA2pB,GAAGf,SAAWp0B,EAAG+E,IAAIowB,EAAGz2B,KAAM22B,GAAOr1B,EAAGgF,IAAImwB,EAAGz2B,KAAM22B,IACrDF,EAAGd,SAAWr0B,EAAG+E,IAAIowB,EAAGz2B,KAAM42B,GAAOt1B,EAAGgF,IAAImwB,EAAGz2B,KAAM42B,IAC9CH,IAEPz2B,KAAMA,EACNiH,KAAMA,IAGVuF,KAEJ,IAAIhL,GAAS,WACT,GAAIoH,GAAS1L,EAAMgN,YACfxD,EAASvF,EAAQgJ,YAAc,IAC/BxD,EAAQxF,EAAQiJ,WAAaxB,EAAOE,KAAOF,EAAOG,MAAQ,EAC9DysB,GAAKlnB,EAAI/Q,KAAK8K,MAAM1B,EAAQM,GAC5BuuB,EAAKC,EAAIl4B,KAAK8K,MAAM3B,EAASnJ,KAAKgL,KAAKstB,EAASjwB,OAASqB,IAEzD3C,EAAQuE,IAAI,cAAeD,EAAOE,KAAO,IAAID,IAAI,eAAgBD,EAAOG,MAAQ,IAAIF,IAAI,QAASlC,GAAOkC,IAAI,SAAUnC,EAAS,IAC/H1C,EAAM7F,KAAK,QAASwI,GAAOxI,KAAK,SAAUuI,GAC1C1C,EAAM+C,UAAU,WACX5I,KAAK,YAAa,SAASqJ,GACxB,MAAO,aAAgBA,EAAEmqB,IAAM6D,EAAKlnB,EAAK,IAAO9G,EAAEsoB,IAAM0F,EAAKC,EAAK,MACnExiB,KAAK,SAAS1M,GACb,GAAIqF,GAAStK,EAAGsF,cAAcR,OAAOG,EAAEmvB,SAAS7uB,OAAO,EAAG2uB,EAAKlnB,IAC3DzC,EAASvK,EAAGsF,cAAcR,OAAOG,EAAEovB,SAAS9uB,OAAO,EAAG2uB,EAAKC,IAC3D3lB,EAAIxO,EAAGiD,OAAOlH,KAClByS,GAAEvL,OAAO,SACJpG,KAAK,QAASq3B,EAAKlnB,GACnBnQ,KAAK,SAAUq3B,EAAKC,GACzB3lB,EAAE/I,UAAU,UACP5I,KAAK,KAAM,SAASqJ,GACjB,MAAOoE,GAAOpE,EAAEsF,KAEnB3O,KAAK,KAAM,SAASqJ,GACjB,MAAOqE,GAAOrE,EAAEuF,KAEnB5O,KAAK,IAAK,KAK3BjB,GAAMuB,SAASyE,IAAI1B,GACnB1E,QAAQiB,QAAQoD,GAAS3C,KAAK,SAC1B+C,EAAEE,SAASD,EAAQ,MArpB3B6zB,EAAyB12B,SAAW,QAAS,kBAAmB,KAAM,SAAU,WAAY,SAAU,SAAU,eAAgB,IAAK,IAAK,KAAM,UAnBhJ,IAAIC,IACAC,SAAU,IACVC,YAAa,sDACbI,WAAYm2B,EACZl2B,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,mBAAoBw2B,MAmrBvC,WACI,YAOA,SAASyB,KAgBL,QAASC,GAAqB55B,EAAO8D,EAAiBM,EAAIC,GAGtD,GAAInE,GAAKC,IACTD,GAAG8pB,mBAAoB,EACvB9pB,EAAG25B,cAAgBv2B,KAAK,aAAaA,KAAK,aAC1CpD,EAAG45B,WAAa55B,EAAG25B,YAAY,GAC/B35B,EAAG65B,WAAa,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG9xB,IAAI,SAASqB,GAAI,OAAQhG,KAAKgG,EAAE,QAASuL,MAAMvL,KAC9EpJ,EAAG85B,SAAW95B,EAAG65B,UAAU,GAC3B75B,EAAG+5B,aAAej6B,EAAM2C,gBAAgB2L,OACZ,GAAxBpO,EAAG+5B,aAAavxB,SAAWxI,EAAGg6B,YAAch6B,EAAG+5B,aAAa,GAGhE,IAAIE,GAAMn6B,EAAM2C,gBAAgBi2B,SAAS71B,OAAO,SAASuG,GACrD,MAAiB,SAAVA,EAAEmS,OACV,GAAGuQ,UAENhsB,GAAMwC,MAAM23B,GACR1e,KAAM,QACND,QAASxb,EAAM2C,gBAAgBgB,QAC/BmY,SAAU,OAAQ,aACnBrZ,KAAK,SAAS6G,GAEb,GAAIxG,GAAOwG,EAAExG,KAAKiI,OAAO,SAAS1B,EAAG2B,GAGjC,MAFK3B,GAAEd,eAAeyC,EAAEovB,WAAU/wB,EAAE2B,EAAEovB,aACtC/wB,EAAE2B,EAAEovB,SAAS9uB,KAAKN,GACX3B,MAGXnJ,GAAGm6B,iBAAmBxvB,OAAOC,KAAKhI,GAAMmF,IAAI,SAASoF,GACjD,OACI/J,KAAM+J,EACN0H,OAAQ5U,KAAKkN,GAAKlK,KAAK,SAASC,EAAGC,GAC/B,MAAID,GAAEE,KAAOD,EAAEC,KAAa,EACxBF,EAAEE,KAAOD,EAAEC,KAAa,GACrB,MAGhBR,KAMP5C,EAAGo6B,SAAW,SAASt3B,GAGnB,MAFAhD,GAAMyE,SAAQ,GACdvE,EAAGq6B,QACc,QAAbv3B,EAAKM,SACLQ,GAAgBqe,iBACZ3G,QAAWxb,EAAM2C,gBAAgBgB,QACjC8X,KAAQ,QACRnY,KAAQ,OACRR,QACAuL,MAAM,QAKdrO,GAAMwC,MAAM23B,GACR1e,KAAM,QACND,QAASxb,EAAM2C,gBAAgBgB,QAC/BL,KAAMN,EAAKM,OACZb,KAAK,SAAS6G,GACb,GAAIxG,GAAOwG,EAAExG,KAAK,EAClBA,GAAKA,KAAOA,EAAKA,KAAKmF,IAAI,SAASqB,GAC/B,GAAIhG,GAAOgG,EAAEhG,KAAK4E,cAAckd,MAMhC,QALY,IAAR9hB,GAAsB,QAARA,GAA0B,aAARA,KAChCgG,EAAEhG,KAAO,OACTgG,EAAEmB,MAAQ,WAEdnB,EAAEX,GAAK,UAAYW,EAAEmB,MAAMwU,OAAO,GAC3B3V,IACRnG,KAAK,SAASC,EAAGC,GAChB,GAAIm3B,GAASC,MAAMr3B,EAAEE,MAASF,EAAEE,KAAOk2B,SAASp2B,EAAEE,MAC9Co3B,EAASD,MAAMp3B,EAAEC,MAASD,EAAEC,KAAOk2B,SAASn2B,EAAEC,KAClD,OAAYo3B,GAARF,EAAsB,GACtBA,EAAQE,EAAc,EACZ,QAAVt3B,EAAEE,KAAuB,EACf,QAAVD,EAAEC,KAAuB,GACtB,IAIXQ,EAAgBqe,gBAAgB7Y,EAAExG,KAAK,IACvC9C,EAAMyE,SAAQ,GACdvE,EAAGq6B,WAIXr6B,EAAGy6B,aAAe,WACd,GAAIpiB,IAAS,IAAMrY,EAAG06B,UAAUz4B,QAAQ,MAAO,IAAImU,eAAeukB,MAAM,aAAa5yB,IAAI,SAASqB,GAC9F,OACIwxB,GAAIxxB,EAAE2V,OAAO,EAAG,GAChB8b,KAAMzxB,EAAE2V,OAAO,GAAG/W,cAClB8yB,QAAS,GACTxyB,OAAQ,KAGhBxI,GAAMyE,SAAQ,GACdzE,EAAMwC,MAAM,gBAAiBy4B,SAASC,IAAI3iB,EAAMtQ,IAAI,SAASqB,GAAI,MAAOA,GAAEyxB,UAAWt4B,KAAK,SAAS0M,GAC/FjP,EAAGq6B,QACHhiB,EAAMtQ,IAAI,SAASqB,GACf,GAAIyxB,GAAO56B,KAAK4C,OAAO,SAASo4B,GAC5B,MAAiC,IAAzBA,EAAEF,QAAQh4B,QAAQ9C,OAC5BmJ,EAAEyxB,KAEa,IAAbA,EAAKryB,QACLY,EAAE0xB,QAAU1xB,EAAEyxB,KAAKzkB,cACnBhN,EAAEd,OAAS,WACLuyB,EAAKryB,OAAO,GAClBY,EAAE0xB,QAAU1xB,EAAEyxB,KAAKzkB,cAAgB,OAASykB,EAAK,GAAGK,KAAK9kB,cACzDhN,EAAEd,OAAS,aACQ,GAAbuyB,EAAKryB,QACPY,EAAEyxB,MAAMA,EAAK,GAAGK,OAChB9xB,EAAE0xB,QAAU1xB,EAAEyxB,KAAKzkB,cAAgB,OAASykB,EAAK,GAAGK,KAAK9kB,cACzDhN,EAAEd,OAAS,cAGpB2G,EAAOrM,KAEV,IAAIu4B,GAAOh3B,EAAEi3B,OACT/iB,EAAMxV,OAAO,SAASuG,GAAI,MAAiB,IAAVA,EAAEd,SAAc,UAEjD8T,EAAQjY,EAAEk3B,QAAQF,EAAM,SAASN,GAAO,MAAOA,GAAKvyB,SAEpDiZ,EAAM,EAES7G,SAAf0B,EAAMkf,SAAsBlf,EAAMkf,QAAQ9yB,OAAO,IACjD+Y,GAAO,YAAanF,EAAMkf,QAAQvzB,IAAI,SAASqB,GAAI,MAAOA,GAAE0xB,QAAU,SAEtEvZ,EAAI/Y,OAAS,IAAG+Y,EAAMA,EAAIxC,OAAO,EAAGwC,EAAI/Y,OAAO,GAAK,QACnCkS,QAAjB0B,EAAMmf,WAAwBnf,EAAMmf,UAAU/yB,OAAO,IACrD+Y,GAAO,cAAenF,EAAMmf,UAAUxzB,IAAI,SAASqB,GAAI,MAAOA,GAAE0xB,QAAU,UAE1EvZ,EAAI2D,OAAO1c,OAAO,GAAGumB,MAAMxN,EAC/B,IAAI1F,GAAUxD,EAAMxV,OAAO,SAASuG,GAAI,MAAiB,WAAVA,EAAEd,SAAsBP,IAAI,SAASqB,GACxE,MAAOA,GAAEyxB,KAAKzkB,eAE1BtW,GAAMwC,MAAMtC,EAAGg6B,YAAYlO,YACvB+O,MACIG,IAAOnf,KAEZtZ,KAAK,SAASwoB,GAEb,GAAIA,EAAQnoB,KAAK4F,OAAS,EAAG,CACzB,GAAI5F,EACJ,IAA2B,GAAvBmoB,EAAQnoB,KAAK4F,OACb5F,EAAOmoB,EAAQnoB,KAAK,OACnB,CACDA,KACAA,EAAKiD,SAAWklB,EAAQnoB,KAAKiI,OAAO,SAAS1B,EAAG2B,GAE5C,IAAK,GADD0wB,GAAKryB,EAAEsyB,OAAO3wB,EAAE+vB,MACXxwB,EAAI,EAAGA,EAAIlB,EAAEuyB,KAAKlzB,OAAQ6B,IAAK,CACpC,GAAIsxB,GAAMxyB,EAAEuyB,KAAKrxB,GACbuxB,EAAKzyB,EAAE0yB,OAAOxzB,eAAeszB,GAAOxyB,EAAE0yB,OAAOF,GAAO,CAC7C,OAAPH,IAAYryB,EAAE0yB,OAAOF,GAAOC,EAAK9wB,EAAEjF,SAAS81B,IACrC,MAAPH,IAAYryB,EAAE0yB,OAAOF,GAAOC,EAAK9wB,EAAEjF,SAAS81B,IAEpD,MAAOxyB,KAEPuyB,KAAM/wB,OAAOC,KAAKmgB,EAAQnoB,KAAK,GAAGiD,UAClC41B,OAAQpjB,EAAMxN,OAAO,SAAS1B,EAAG2B,GAE7B,MADA3B,GAAE2B,EAAE+vB,MAAQ/vB,EAAE8vB,GACPzxB,OAEX0yB,YACDA,MAEH,IAAIpyB,GAAQkB,OAAOC,KAAKhI,EAAKiD,UAAUgF,OAAO,SAAS1B,EAAG2B,GAGtD,MAFA3B,GAAEF,IAAM9I,KAAK8I,IAAIE,EAAEF,IAAKE,EAAE0L,OAAO/J,IACjC3B,EAAED,IAAM/I,KAAK+I,IAAIC,EAAEF,IAAKE,EAAE0L,OAAO/J,IAC1B3B,IAEP0L,OAAQjS,EAAKiD,SACboD,IAAKhB,EAAAA,EACLiB,MAAMjB,EAAAA,IAEVrF,GAAKqG,IAAMQ,EAAMR,IACjBrG,EAAKsG,IAAMO,EAAMP,IAIrB,GAQIyqB,GARAvlB,GAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAChFyG,EAASzG,EAAOmU,OAAO,EAAGviB,EAAG85B,SAASnlB,OAEtC/H,EAA6B,YAApB5M,EAAG45B,WAAWx2B,KAAoBc,EAAG43B,gBAAkB53B,EAAG63B,eAM/C,aAApB/7B,EAAG45B,WAAWx2B,MACdwJ,EAAM5D,OAAO2B,OAAOC,KAAKhI,GAAMmF,IAAI,SAASoF,GAAK,MAAOvK,GAAKuK,KAAOvK,KAAKA,KAAQ6G,MAAMoL,GACvF8e,EAAS/mB,EAAMovB,YAAYj0B,IAAI,SAASqB,GAAI,MAAO6yB,YAAW7yB,GAAG8yB,QAAQ,KACzEvI,EAAOwI,QAAQ,IACfxI,EAASA,EAAO5rB,IAAI,SAAS+C,EAAET,EAAEnH,GAC/B,MAAO,IAAHmH,EAAc,QAAkBnH,EAAE,GAC7BmH,GAAGnH,EAAEsF,OAAO,EACXtF,EAAEmH,GAAI,QAEXnH,EAAEmH,GAAI,MAAYnH,EAAEmH,EAAE,KAE7BwK,EAAS1Q,EAAEi4B,IAAIvnB,EAAQ8e,GAAQ5rB,IAAI,SAASqB,GAAI,OAAQmB,MAAMnB,EAAE,GAAIhG,KAAKgG,EAAE,QAE3EwD,EACC5D,QAAQpG,EAAKqG,IAAKrG,EAAKsG,MACvBO,MAAMoL,GACP8e,EAAS/mB,EAAMZ,MAAM6I,EAAOrM,QAAQT,IAAI,SAASqB,GAAK,MAAO,IAAI6yB,WAAW7yB,GAAG8yB,QAAQ,KACvFrnB,EAAS1Q,EAAEi4B,IAAIvnB,EAAQ8e,GAAQ5rB,IAAI,SAASqB,GAAI,OAAQmB,MAAMnB,EAAE,GAAIhG,KAAKgG,EAAE,OAE/ExG,EAAO+H,OAAOC,KAAKhI,EAAKiD,UAAUkC,IAAI,SAASU,GACvC,OACIA,GAAIA,EACJ8B,MAAOtK,KAAK2M,MAAM3M,KAAK4F,SAAS4C,IAChCkM,MAAO1U,KAAK4F,SAAS4C,MAGzB5C,SAAUjD,EAAKiD,SACf+G,MAAOA,IAEV/B,OAAO,SAAS1B,EAAG2B,GAGhB,MAFK3B,GAAEd,eAAeyC,EAAEP,SAAQpB,EAAE2B,EAAEP,WACpCpB,EAAE2B,EAAEP,OAAOa,KAAKN,EAAErC,IACXU,OAGfvG,EAAO+H,OAAOC,KAAKhI,GAAMmF,IAAI,SAASoF,GAClC,OACI5C,MAAO4C,EACP/J,KAAMnD,KAAKo8B,MAAMx5B,OAAO,SAASmqB,GAC7B,MAAOA,GAAEziB,OAAStK,KAAKsK,QAEvBA,MAAO4C,IACR,GAAG/J,KACNyR,OAAQ5U,KAAK2C,KAAKuK,MAGtBvK,KAAMA,EACNy5B,MAAOxnB,IAGXjS,EAAOA,EAAKK,KAAK,SAASC,EAAGC,GACzB,MAA+B,IAA3BD,EAAEE,KAAKL,QAAQ,MAAuB,GACX,IAA3BI,EAAEC,KAAKL,QAAQ,MAAuB,EACX,IAA3BG,EAAEE,KAAKL,QAAQ,MAAuB,EACX,IAA3BI,EAAEC,KAAKL,QAAQ,MAAuB,GACtCG,EAAEE,KAAOD,EAAEC,KAAa,GACxBF,EAAEE,KAAOD,EAAEC,KAAa,EACrB,IAEXR,EAAKwI,MACDb,MAAO,OACPnH,KAAM,OACNyR,YAGJzG,GACIkN,QAASxb,EAAM2C,gBAAgBgB,QAC/B8X,KAAM,QACNnY,KAAMiV,EAAMxN,OAAO,SAAS1B,EAAG2B,GAE3B,MADA3B,IAAK2B,EAAE8vB,GAAK9vB,EAAE+vB,KAAO,KAEtB,IACHj4B,KAAMA,GAEVgB,EAAgBqe,gBAAgB7T,GAEpCtO,EAAMyE,SAAQ,QArQ9Bm1B,EAAqBn4B,SAAW,QAAS,kBAAmB,KAAM,IApBlE,IAAIC,IACAC,SAAU,IACVC,YAAa,4CACbI,WAAY43B,EACZ33B,aAAc,KACdC,kBAAkB,EAClBL,OACI04B,MAAO,KAIf,OAAO74B,GAlBX9B,QACKC,OAAO,aACP6B,UAAU,eAAgBi4B,MAuSnC,WACI,YAOA,SAAS6C,KAcL,QAASC,GAAqBz8B,EAAO8D,EAAiBvB,EAAQwB,EAAQ9D,EAAU82B,EAAY3yB,GAExF,GAAIlE,GAAKC,IACTD,GAAG4N,WACH5N,EAAGw8B,mBAAqB,KACxBx8B,EAAGy8B,WAAa,GAChBz8B,EAAG08B,UAAY,aACf18B,EAAG28B,UAAY,aACf38B,EAAG48B,aAAe,aAClB58B,EAAG68B,UAAYz5B,KAAK,IACpBpD,EAAG88B,WAAa,SAASh6B,GACrB9C,EAAG68B,SAAW/5B,EACd9C,EAAG+8B,MAAO,GAGd/8B,EAAGmO,MAAO,EACVnO,EAAG+8B,MAAO,EAGVn5B,EAAgBud,gBAAgBrb,IAAI,SAASixB,GACzC/2B,EAAG4N,QAAUmpB,EACb/2B,EAAGmO,MAAO,EACVnO,EAAGg9B,qBACHp5B,EAAgB6B,oBAAoB,iBAGpBoxB,GAAWppB,IAAI,oBAAqB,SAAS7E,EAAO6uB,GAEpE,OAAOA,EAAQr0B,MACX,IAAK,UACL,IAAK,QACL,IAAK,aACDpD,EAAGmO,MAAO,CACV,MACJ,SACInO,EAAGmO,MAAO,IAItB0oB,GAAWppB,IAAI,WAAY,SAAS5F,GAChC7H,EAAGmO,MAAO,GAId,IAAIzN,GAAShB,QAAQiB,QAAQ,gBACzBM,EAAY,WACZP,EACKI,YAAY,wBAEjBI,EAAW,WACXR,EACKG,SAAS,wBAIdo8B,EAAgBv9B,QAAQiB,QAAQ,wBAChCu8B,EAAgBx9B,QAAQiB,QAAQ,oBACpCX,GAAGg9B,mBAAqB,WACpBC,EAAcp8B,SAAS,UACvBq8B,EAAWp8B,YAAY,UACvBd,EAAG4N,QAAUhK,EAAgBmK,oBAC7B/N,EAAG08B,UAAY94B,EAAgB4d,iBAC/BxhB,EAAG28B,UAAY/4B,EAAgB6B,iBAC/BzF,EAAG48B,aAAeh5B,EAAgBye,kBAEtCriB,EAAGm9B,gBAAkB,WACjBD,EAAWr8B,SAAS,UACpBo8B,EAAcn8B,YAAY,UAC1Bd,EAAG4N,QAAUhK,EAAgBkf,iBAC7B9iB,EAAG08B,UAAY94B,EAAgBof,cAC/BhjB,EAAG28B,UAAY/4B,EAAgBsf,cAC/BljB,EAAG48B,aAAeh5B,EAAgBqf,cAGtC,IAAIziB,IAAW,CACfR,GAAGS,OAAS,WACRD,GAAYA,EACZd,QAAQiB,QAAQ,oBACXE,SAASL,EAAW,UAAY,iBAChCM,YAAYN,EAAW,gBAAkB,WACzCO,KAAK,SAAUP,EAAW,OAAS,SAEpCA,EAEAE,EACKM,OAAO,YAAaC,GACpBD,OAAO,WAAYE,GACnBJ,YAAY,uBAIjBJ,EACKG,SAAS,uBACTO,KAAK,YAAaH,GAClBG,KAAK,WAAYF,GAG1BpB,EAAMuB,SAASC,WAKnB,IAAI87B,GAAU,SAAShzB,GAGnB,GAAgC,WAA5BpK,EAAGw8B,mBAAmBjhB,KAAgB,CACtC,GAAIoH,GAASvY,EAAE8d,MAAMrB,MAAM,KAAK9e,IAAI,SAASqB,GAAI,MAAOkwB,UAASlwB,KAC7DwZ,EAAO5iB,EAAGw8B,mBAAmB5Z;AACjChf,EAAgB8e,0BAA0BC,EAAQC,EAAM5iB,EAAGw8B,mBAAmBjhB,QAMlF7K,EAAMxM,EAAGiD,OAAO,qBAAqBE,OAAO,OAC3CtG,KAAK,QAAS,KACdA,KAAK,SAAU,KACfsG,OAAO,IAEZxD,GAAOoU,OAAO,wBAAyB,WAEnC,GAA2B,MAAvBjY,EAAGw8B,mBAAP,CACA,GAAI55B,GAAO5C,EAAGw8B,mBAAmB55B,KAE7B6S,EAAWtV,KAAK8K,MAAM,IAAIrI,EAAKy6B,KAC/Bz6B,GAAK06B,UAAU,GAAG,IAAG16B,EAAK06B,UAAU,IAAK,EAE7C,IAAI7uB,GAASvK,EAAGsF,cACXR,QAAQ,EAAEpG,EAAK06B,UAAU,KACzB7zB,OAAO,EAAE,MAEV8G,EAAOG,EACN/G,UAAU,0BACV/G,KAAKA,EAAK26B,KAEXhtB,GAAKpG,QACA9C,OAAO,QACPtG,KAAK,QAAQ,yBACbA,KAAK,IAAK,SAASqJ,EAAGC,GAAK,OAAQoL,EAAS,GAAKpL,IACjDtJ,KAAK,IAAK,SAASqJ,GAAK,MAAO,KAAIqE,EAAOrE,EAAEuK,SAC5C5T,KAAK,SAAU,SAASqJ,GAAK,MAAOqE,GAAOrE,EAAEuK,SAC7C5T,KAAK,QAAS0U,GACdjL,GAAG,QAAS4yB,GAEjB7sB,EACKxG,aACI5D,SAAS,KACTpF,KAAK,IAAK,SAASqJ,EAAGC,GAAK,OAAQoL,EAAS,GAAKpL,IACjDtJ,KAAK,IAAK,SAASqJ,GAAK,MAAO,KAAIqE,EAAOrE,EAAEuK,SAC5C5T,KAAK,SAAU,SAASqJ,GAAK,MAAOqE,GAAOrE,EAAEuK,SAC7C5T,KAAK,QAAS0U,GAEvBlF,EAAKzG,OACAC,aACI5D,SAAS,KACTpF,KAAK,IAAK,KACVA,KAAK,SAAU,GACfkJ,MAAM,eAAgB,MACtBL,QAET,IAAI+pB,GAASjjB,EACR/G,UAAU,QACV/G,KAAKA,EAAK26B,KAEf5J,GAAOxpB,QACF9C,OAAO,QACPtG,KAAK,IAAK,SAASqJ,EAAGC,GAAK,OAASoL,EAAS,GAAKpL,EAAe,GAAToL,IACxD1U,KAAK,IAAK,SAASqJ,GAChB,MAAO,KAAIqE,EAAOrE,EAAEuK,SAEvB5T,KAAK,OAAQ,QACbA,KAAK,SAAU,SAASqJ,GAAK,MAAOqE,GAAOrE,EAAEuK,SAC7C5T,KAAK,QAAS0U,GACd1U,KAAK,YAAa,OAClBA,KAAK,cAAe,UACpBsQ,KAAK,SAASjH,GAAI,MAAOA,GAAE8d,QAEhCyL,EACK5pB,aACI5D,SAAS,KACTpF,KAAK,IAAK,SAASqJ,EAAGC,GAAK,OAASoL,EAAS,GAAKpL,EAAe,GAAToL,IACxD1U,KAAK,IAAK,SAASqJ,GAChB,GAAIuF,GAAI,IAAIlB,EAAOrE,EAAEuK,MAErB,OADM,GAAFhF,IAAKA,EAAI,IACNA,IAEV0B,KAAK,SAASjH,GAAI,MAAOA,GAAE8d,QAEpCyL,EAAO7pB,OACFC,aACI5D,SAAS,KACTpF,KAAK,IAAK,KACVA,KAAK,SAAU,GACfkJ,MAAM,eAAgB,MACtBL,WAOjB,IAAI4zB,GAASt5B,EAAGiD,OAAO,wBAAwBE,OAAO,OAClDo2B,EAAWD,EAAOn2B,OAAO,KAAKtG,KAAK,QAAS,QAC5C28B,EAAWF,EAAOn2B,OAAO,KAAKtG,KAAK,QAAS,QAE5C48B,GACAp0B,MAAO,IACPD,OAAQ,IACRkF,OAAS,KACTC,OAAS,KACTC,MAAOxK,EAAG6H,aAAaC,MAAM,GAC7B2C,MAAOzK,EAAG0K,WAAW5C,MAAM,IAE3BsD,EAAW,SAASC,GAGpB,GAAIC,GAAYtL,EAAGuL,OACdC,EAAE,SAAStF,GAAK,MAAOuzB,GAAQnvB,OAAOpE,EAAE,MACxCuF,EAAE,SAASvF,GAAK,MAAOuzB,GAAQlvB,OAAOrE,EAAE,KAE7CozB,GAAOn2B,OAAO,QACTtG,KAAK,QAAS,QACdA,KAAK,eAAgBwO,EAAOkc,QAC5B1qB,KAAK,SAAUwO,EAAOhF,OACtBxJ,KAAK,OAAO,QACZA,KAAK,IAAKyO,EAAUD,EAAO3M,KAAK6M,MAErC,KAAK,GAAIpF,GAAE,EAAGA,EAAEkF,EAAO3M,KAAKgN,KAAKpH,OAAQ6B,IACrCmzB,EAAOn2B,OAAO,QACTtG,KAAK,QAAS,QACdA,KAAK,eAAgBwO,EAAOkc,QAC5B1qB,KAAK,SAAUwO,EAAOhF,OACtBxJ,KAAK,KAAM48B,EAAQnvB,OAAOe,EAAO3M,KAAKgN,KAAKvF,GAAG,KAC9CtJ,KAAK,KAAM48B,EAAQnvB,OAAOe,EAAO3M,KAAKgN,KAAKvF,GAAG,KAC9CtJ,KAAK,KAAM48B,EAAQlvB,OAAOc,EAAO3M,KAAKgN,KAAKvF,GAAG,KAC9CtJ,KAAK,KAAM48B,EAAQlvB,OAAOc,EAAO3M,KAAKgN,KAAKvF,GAAG,IAAI,GAG/DzG,GAAgByL,UAAUvJ,IAAI,SAASmJ,GACnC,GAAqB,mBAAjBA,EAAOrM,KAAKsM,IAAuB,CACnC,GAAItM,GAAOqM,EAAOrM,KAAKA,IACvB,IAAwB,wBAApBA,EAAKuM,cAAsC,CAE3CquB,EACKz8B,KAAK,QAAS,QACdA,KAAK,SAAU48B,EAAQr0B,QAE5Bq0B,EAAQnvB,OAAStK,EAAGsF,cACfR,QAAQiG,EAAOrM,KAAKA,KAAKqG,IAAMgG,EAAOrM,KAAKA,KAAKsG,MAChDO,OAAO,GAAIk0B,EAAQp0B,QAExBo0B,EAAQlvB,OAASvK,EAAGsF,cACfR,QAAQ,EAAE,MACVS,OAAOk0B,EAAQr0B,OAAO,GAAG,KAG9Bq0B,EAAQjvB,MAAM9B,MAAM+wB,EAAQnvB,QAC5BmvB,EAAQhvB,MAAM/B,MAAM+wB,EAAQlvB,QAE5BivB,EAAS38B,KAAK,YAAa,oBAAoB+F,KAAK62B,EAAQhvB,OAC5D8uB,EAAS18B,KAAK,YAAa,gBAAmB48B,EAAQlvB,OAAO,GAAM,KAAK3H,KAAK62B,EAAQjvB,OAErF8uB,EAAO7zB,UAAU,SAASC,QAC1B,KAAK,GAAIS,GAAE,EAAGA,EAAEzH,EAAKgL,QAAQpF,OAAQ6B,IAC7BA,EAAEzH,EAAKgL,QAAQpF,OAAO,EACtB5F,EAAKgL,QAAQvD,GAAGohB,OAAS,EAGzB7oB,EAAKgL,QAAQvD,GAAGohB,OAAS,IAE7Bnc,EAAS1M,EAAKgL,QAAQvD,QAetCzG,EAAgBgC,iBAAiBE,IAAI,SAASwc,GACtC5iB,QAAQ6W,YAAY+L,EAAI/X,SACxB+X,EAAI/X,MAAQ,QAEhBvK,EAAGy8B,WAAana,EAAIlf,KACpBQ,EAAgBse,kBAChB,IAAItU,GAAWlO,QAAQmO,SAASnO,QAAQoO,OAAOlK,EAAgBmK,qBAC/DH,GAAQxC,KAAKkX,GACb1e,EAAgByK,gBAAgBT,GAAQ,EAAK,0BAEjDhK,EAAgBsd,cAAcpb,IAAI,cAGlClC,EAAgByL,UAAUvJ,IAAI,SAASwc,GACjB,oBAAdA,EAAI1f,KAAKsM,KAEbnP,EAAS,WACLC,EAAG49B,aAAetb,EAAI1f,KAAKA,KAAK+pB,MAChC3sB,EAAG69B,gBAAkBvb,EAAI1f,KAAKA,KAAKkF,SACnC9H,EAAG89B,oBAAsBxb,EAAI1f,KAAKA,KAAKm7B,SACvC/9B,EAAGw8B,mBAA6C,MAAvBx8B,EAAGw8B,mBACxBx8B,EAAG89B,oBAAoB,GACvB99B,EAAG89B,oBAAoBj7B,OAAO,SAASuG,GACnC,MAAQA,GAAE8e,OAAOjoB,KAAKioB,OACvBloB,EAAGw8B,oBAAoB,OAKtCx8B,EAAGg9B,qBAjTPT,EAAqBh7B,SAAW,QAAS,kBAAmB,SAAU,SAAU,WAAY,aAAc,KArB1G,IAAIC,IACAC,SAAU,IACVC,YAAa,4CACbI,WAAYy6B,EACZx6B,aAAc,KACdJ,SACAK,kBAAkB,EAGtB,OAAOR,GAhBX9B,QACKC,OAAO,aACP6B,UAAU,eAAgB86B,MAkVnC,WACI,YAOA,SAAS0B,KAaL,QAASC,GAAmB/5B,EAAIpE,EAAO8D,EAAiBvB,EAAQtC,GAiG5D,QAASoB,KACL+8B,aAAaC,GACM,YAAfl+B,KAAK0U,MAAqBypB,IACzBC,IAGT,QAASD,KACLzuB,EAAE3G,QAAQ,EAAGs1B,IAEbnG,EAAKpuB,aACA5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAW,IAAJA,IAEVtJ,KAAK,IAAK,SAASqJ,EAAGC,EAAGk0B,GACtB,MAAO7uB,GAAEtF,EAAEsF,GAAKA,EAAE8uB,YAAcC,EAAIF,IAEvCx9B,KAAK,QAAS2O,EAAE8uB,YAAcC,GAC9B10B,aACAhJ,KAAK,IAAK,SAASqJ,GAChB,MAAOuF,GAAEvF,EAAEuF,KAEd5O,KAAK,SAAU,SAASqJ,GACrB,MAAOd,GAASqG,EAAEvF,EAAEuF,KAIhC,QAAS0uB,KACL1uB,EAAE3G,QAAQ,EAAG01B,IAEbvG,EAAKpuB,aACA5D,SAAS,KACT6D,MAAM,SAASI,EAAGC,GACf,MAAW,IAAJA,IAEVtJ,KAAK,IAAK,SAASqJ,GAChB,MAAOuF,GAAEvF,EAAEiI,GAAKjI,EAAEuF,KAErB5O,KAAK,SAAU,SAASqJ,GACrB,MAAOuF,GAAEvF,EAAEiI,IAAM1C,EAAEvF,EAAEiI,GAAKjI,EAAEuF,KAE/B5F,aACAhJ,KAAK,IAAK,SAASqJ,GAChB,MAAOsF,GAAEtF,EAAEsF,KAEd3O,KAAK,QAAS2O,EAAE8uB,aAIzB,QAASG,GAAUF,EAAGjO,GAElB,QAASoO,GAAK17B,GAIV,IAAK,GAHDwM,GAAI,GAAK,GAAKvP,KAAKC,UACnBuP,EAAI,EAAIxP,KAAKC,SAAW,GACxBy+B,EAAI,IAAM,GAAK1+B,KAAKC,UACfiK,EAAI,EAAOo0B,EAAJp0B,EAAOA,IAAK,CACxB,GAAI6G,IAAK7G,EAAIo0B,EAAI9uB,GAAKkvB,CACtB37B,GAAEmH,IAAMqF,EAAIvP,KAAK2+B,KAAK5tB,EAAIA,IAIlC,GACI7G,GADAnH,IAEJ,KAAKmH,EAAI,EAAOo0B,EAAJp0B,IAASA,EAAGnH,EAAEmH,GAAKmmB,EAAIA,EAAIrwB,KAAKC,QAC5C,KAAKiK,EAAI,EAAO,EAAJA,IAASA,EAAGu0B,EAAK17B,EAC7B,OAAOA,GAAE6E,IAAI,SAASqC,EAAGC,GACrB,OACIqF,EAAGrF,EACHsF,EAAGxP,KAAK+I,IAAI,EAAGkB,MAnK3B,GAAIpK,GAAKC,IACTD,GAAGwD,WAAa1D,EAAM2C,eAEtB,IAAIg8B,GAAI,EACJM,EAAI,GACJC,EAAQ96B,EAAGsH,OAAOwzB,QAClBC,EAASD,EAAM96B,EAAGuF,MAAMg1B,GAAG12B,IAAI,WAC3B,MAAO42B,GAAUI,EAAG,OAExBT,EAAYp6B,EAAGgF,IAAI+1B,EAAQ,SAASC,GAChC,MAAOh7B,GAAGgF,IAAIg2B,EAAO,SAAS90B,GAC1B,MAAOA,GAAEuF,MAGjB+uB,EAAYx6B,EAAGgF,IAAI+1B,EAAQ,SAASC,GAChC,MAAOh7B,GAAGgF,IAAIg2B,EAAO,SAAS90B,GAC1B,MAAOA,GAAEiI,GAAKjI,EAAEuF,MAIxBwvB,GACIC,IAAK,GACLzzB,MAAO,GACP0zB,OAAQ,GACR3zB,KAAM,IAEVnC,EAAQ,IAAM41B,EAAOzzB,KAAOyzB,EAAOxzB,MACnCrC,EAAS,IAAM61B,EAAOC,IAAMD,EAAOE,OAEnC3vB,EAAIxL,EAAG6M,eACN/H,OAAO9E,EAAGuF,MAAMs1B,IAChBO,iBAAiB,EAAG/1B,GAAQ,KAE7BoG,EAAIzL,EAAGsF,cACNR,QAAQ,EAAG01B,IACXj1B,OAAOH,EAAQ,IAEhBiB,EAAQrG,EAAGsF,cACVR,QAAQ,EAAGy1B,EAAI,IACfh1B,OAAO,OAAQ,SAEhBiF,EAAQxK,EAAGwM,IAAI7L,OACd+H,MAAM8C,GACN6vB,SAAS,GACTC,YAAY,GACZC,OAAO,UAER/uB,EAAMxM,EAAGiD,OAAO,QAAQE,OAAO,OAC9BtG,KAAK,QAASwI,EAAQ41B,EAAOzzB,KAAOyzB,EAAOxzB,OAC3C5K,KAAK,SAAUuI,EAAS61B,EAAOC,IAAMD,EAAOE,QAC5Ch4B,OAAO,KACPtG,KAAK,YAAa,aAAeo+B,EAAOzzB,KAAO,IAAMyzB,EAAOC,IAAM,KAEnEF,EAAQxuB,EAAI/G,UAAU,UACrB/G,KAAKq8B,GACL90B,QAAQ9C,OAAO,KACftG,KAAK,QAAS,SACdkJ,MAAM,OAAQ,SAASG,EAAGC,GACvB,MAAOE,GAAMF,KAGjB8tB,EAAO+G,EAAMv1B,UAAU,QACtB/G,KAAK,SAASwH,GACX,MAAOA,KAEVD,QAAQ9C,OAAO,QACftG,KAAK,IAAK,SAASqJ,GAChB,MAAOsF,GAAEtF,EAAEsF,KAEd3O,KAAK,IAAKuI,GACVvI,KAAK,QAAS2O,EAAE8uB,aAChBz9B,KAAK,SAAU,EAEpBo3B,GAAKpuB,aACAC,MAAM,SAASI,EAAGC,GACf,MAAW,IAAJA,IAEVtJ,KAAK,IAAK,SAASqJ,GAChB,MAAOuF,GAAEvF,EAAEiI,GAAKjI,EAAEuF,KAErB5O,KAAK,SAAU,SAASqJ,GACrB,MAAOuF,GAAEvF,EAAEiI,IAAM1C,EAAEvF,EAAEiI,GAAKjI,EAAEuF,KAGpCe,EAAIrJ,OAAO,KACNtG,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBuI,EAAS,KAC5CxC,KAAK4H,GAEVxK,EAAGyF,UAAU,SAASa,GAAG,SAAUrJ,EAEnC,IAAIg9B,GAAUp+B,EAAS,WACnBmE,EAAGiD,OAAO,0BAA4Bu4B,SAAS,WAAW,GAAM7pB,KAAK1U,IACtE,KApFP88B,EAAmB18B,SAAW,KAAM,QAAS,kBAAmB,SAAU,WAtB1E,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbI,WAAYm8B,EACZl8B,aAAc,KACdC,kBAAkB,EAGtB,OAAOR,GAfX9B,QACKC,OAAO,aACP6B,UAAU,aAAcw8B,MA8LjC,WACK,YAOA,SAAS2B,GAAS9I,EAAYx0B,EAAQ0B,EAAS67B,EAAmB9/B,EAAOsjB,GAGrErf,EAAQ87B,QAAU,SAA2B/E,EAASgF,EAAUC,EAAYC,EAAcC,GACjFA,IACDA,EAAQ,GAAIC,OAAMpF,GAClBmF,EAAMH,SAAWA,EACjBG,EAAMF,WAAaA,EACnBE,EAAMD,aAAgBA,GAAgB,GAE1CJ,EAAkBK,GAItB,IAAIE,GAAMtJ,EAAWppB,IAAI,oBAAqB,SAAS7E,EAAO6uB,EAAS2I,GAMnE,MAHAtgC,GAAMyE,SAAQ,GAGVkzB,EAAQ4I,eAAiBjd,EAAOO,mBAChCthB,EAAOy1B,aAAa,eACpBlvB,GAAM03B,kBAKN7I,EAAQj0B,aAAe9D,QAAQ6W,YAAY6pB,EAAS58B,aAAuC,KAAxB48B,EAAS58B,aAC5EnB,EAAOy1B,aAAa,kBACpBlvB,GAAM03B,sBAGNxgC,GAAM0lB,cAAc4a,EAAS58B,aAMrCqzB,GAAWppB,IAAI,WAAY0yB,GApB/BR,EAASp+B,SAAW,aAAc,SAAU,UAAW,oBAAqB,QAAS,UAvBrF7B,QACKC,OAAO,aACP4gC,IAAIZ,MA6Cd,WACI,YAOA,SAASa,GAAaC,EAAgBC,GAElCD,EACKE,MAAM,WACH3nB,IAAK,IACL4nB,SAAU,eACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,cACH3nB,IAAK,cACL4nB,SAAU,kBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,SACH3nB,IAAK,sBACL4nB,SAAU,aACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,WACH3nB,IAAK,wBACL4nB,SAAU,eACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,QACH3nB,IAAK,qBACL4nB,SAAU,YACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,OACH3nB,IAAK,oBACL4nB,SAAU,WACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,kBACH3nB,IAAK,+BACL4nB,SAAU,uBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,WACH3nB,IAAK,wBACL4nB,SAAU,eACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,YACH3nB,IAAK,yBACL4nB,SAAU,gBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,aACH3nB,IAAK,0BACL4nB,SAAU,iBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,YACH3nB,IAAK,yBACL4nB,SAAU,gBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,YACH3nB,IAAK,yBACL4nB,SAAU,gBACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,WACH3nB,IAAK,wBACL4nB,SAAU,eACVP,cAAc,EACd78B,YAAY,IAEfm9B,MAAM,aACH3nB,IAAK,yBACL4nB,SAAU,gBACVP,cAAc,EACd78B,YAAY,IAGpBk9B,EAAmBG,UAAU,KArEjCL,EAAaj/B,SAAW,iBAAkB,sBAxB1C7B,QACKC,OAAO,aACPmhC,OAAON,MAkGhB,WACI,YAEA9gC,SACKC,OAAO,aACPohC,SAAS,SAAU98B,QACnB88B,SAAS,KAAM78B,IACf68B,SAAS,YAAalkB,WACtBkkB,SAAS,UAAWhgB,SACpBggB,SAAS,IAAKnc,GACdmc,SAAS,OAAQC,OACjBD,SAAS,eAAgB7R,cACzB6R,SAAS,eAAgB/f,cACzB+f,SAAS,IAAK58B,MAIvB,WACI,YAOA,SAAS28B,GAAOG,GACZA,EAAaC,cAAa,GAmB9BJ,EAAOv/B,SAAW,gBAzBlB7B,QACKC,OAAO,aACPmhC,OAAOA,MAShBphC,QAAQC,OAAO,aAAa4gC,KAAK,iBAAkB,SAASY,GAAiBA,EAAeC,IAAI,wCAAwC,6cACxID,EAAeC,IAAI,4CAA4C,kjGAC/DD,EAAeC,IAAI,4CAA4C,oyEAC/DD,EAAeC,IAAI,sDAAsD,gpCACzED,EAAeC,IAAI,4CAA4C,ivBAC/DD,EAAeC,IAAI,oCAAoC,qrHACvDD,EAAeC,IAAI,sCAAsC,i+HACzDD,EAAeC,IAAI,sCAAsC,8iGACzDD,EAAeC,IAAI,sCAAsC;AACzDD,EAAeC,IAAI,oCAAoC,yPACvDD,EAAeC,IAAI,kCAAkC,yPACrDD,EAAeC,IAAI,sCAAsC,2rOACzDD,EAAeC,IAAI,wCAAwC,82CAC3DD,EAAeC,IAAI,8BAA8B,+5FACjDD,EAAeC,IAAI,gCAAgC,+xEACnDD,EAAeC,IAAI,wCAAwC,4hDAC3DD,EAAeC,IAAI,wCAAwC,0zCAC3DD,EAAeC,IAAI,0CAA0C,o1HAC7DD,EAAeC,IAAI,kCAAkC,suBACrDD,EAAeC,IAAI,gCAAgC","file":"scripts/app-e3c4bf5816.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n\n            var vm = this;\n            //osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n            osApi.query(\"lookup_oncoscape_tools\").then(function(response) {\n                var tools = osApi.getDataSource().tools;\n                console.log(tools);\n                vm.tools = response.data.filter(function(item){\n                    return (tools.indexOf(item.route)!=-1);\n                }).sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n            });\n\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osCohortService, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // Data\n            var patientsAll = [];\n            var patientsFiltered = [];\n            var patientsDomain = [];\n            var scaleX;\n            var heightRow = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var axis;\n            var brushY = d3.brushY();\n            var brushX = d3.brushX();\n            var brushSelect = d3.brushY();\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\");\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var onPatientsSelect = function(patients) {\n                selectedIds = patients.ids;\n                vm.update();\n            }\n            osCohortService.onPatientsSelect.add(onPatientsSelect);\n\n            // var setSelected = function() {\n            //     selectedIds = chart.bars.selectAll(\".timeline-selected\")[0].map(function(p) {\n            //         return p.__data__.id;\n            //     })\n            //     osCohortService.setPatientCohort(selectedIds, \"Timelines\");\n            // }\n\n            // View Model\n            var vm = (function(vm) {\n                vm.timescales = [{\n                    name: 'Log',\n                    valFn: function(val) {\n                        return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2)\n                    }\n                }, {\n                    name: 'Linear',\n                    valFn: function(val) {\n                        return moment.duration(val * 1000).asDays()\n                    }\n                }];\n                vm.timescale = vm.timescales[0];\n                vm.filters = [{\n                    name: 'Alive + Dead'\n                }, {\n                    name: 'Only Alive'\n                }, {\n                    name: 'Only Dead'\n                }];\n                vm.filter = vm.filters[2];\n                vm.modes = [{\n                    name: \"Highlight\"\n                }, {\n                    name: \"Filter\"\n                }];\n                vm.mode = vm.modes[0];\n                vm.displayModes = [{\n                    name: 'Selected Patients'\n                }, {\n                    name: 'All Patients'\n                }];\n                vm.displayMode = vm.displayModes[0];\n                vm.datasource = osApi.getDataSource();\n                return vm;\n            })(this);\n\n            vm.resetZoom = function() {\n                selectedIds = [];\n                osCohortService.setPatientCohort([], \"All Patients\");\n                chart.d3ScrollY.call(brushY.move, null);\n                chart.d3ScrollX.call(brushY.move, null);\n                vm.update();\n\n            };\n\n            // Chart Container Components\n            var chart = (function(angular, d3) {\n                var elTip = null;\n                var elChart = d3.select(\".timelines-content\");\n\n                var d3Chart = elChart.append(\"svg\");\n                d3Chart.attr(\"class\", \"timeline-chart\");\n\n                var d3ScrollY = elChart.append(\"svg\");\n                d3ScrollY.attr(\"class\", \"timeline-scroll-y\");\n\n                var d3ScrollX = elChart.append(\"svg\");\n                d3ScrollX.attr(\"class\", \"timeline-scroll-x\");\n\n                var rPatients = d3Chart.append(\"g\");\n                rPatients.attr(\"class\", \"timeline-patients-hitarea\");\n                var gPatients = d3Chart.append(\"g\");\n\n                var rAxis = d3Chart.append(\"rect\");\n                rAxis.attr(\"class\", \"timeline-axis-bg\");\n                var gAxis = d3Chart.append(\"g\");\n\n\n                return {\n                    elChart: angular.element(\".timelines-content\"),\n                    elTip: elTip,\n                    d3Chart: d3Chart,\n                    d3ScrollY: d3ScrollY,\n                    d3ScrollX: d3ScrollX,\n                    gPatients: gPatients,\n                    rPatients: rPatients,\n                    gAxis: gAxis,\n                    rAxis: rAxis\n                };\n\n            })(angular, d3);\n\n            var updateData = function() {\n\n                // Retrieve State\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Event Data\n                patientsFiltered = patientsAll;\n\n                // Filter\n                patientsDomain = [Infinity, -Infinity];\n                patientsFiltered.forEach(function(patient) {\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                    } else {\n\n                        // Filter Alive + Dead\n                        var status = patient.hash[\"Status\"].data.status;\n                        if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                            patient.visible = false;\n                        } else {\n                            if (vm.displayMode.name == \"Selected Patients\" && selectedIds.length > 0) {\n                                patient.visible = (selectedIds.indexOf(patient.id) != -1);\n                            } else {\n                                patient.visible = true;\n                            }\n                            if (patient.visible) {\n                                this.offset = 0 - patient.hash[this.align].tsStart;\n                                // Filter Events\n                                patient.events.forEach(function(event) {\n                                    event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                                    // Calculate Start + End Based On Alignment\n                                    if (event.visible) {\n                                        event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                                        event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                                        this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                                        this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                                    }\n                                }, this);\n                            }\n                        }\n                    }\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Remove Patients That Do Not Have Alignment Property\n                patientsFiltered = patientsFiltered.filter(function(p) {\n                    return p.visible;\n                });\n\n                // Set Selected\n                patientsFiltered.forEach(function(v) {\n                    v.selected = (selectedIds.indexOf(v.id) != -1);\n                });\n\n                // Sort Patients\n                patientsFiltered = patientsFiltered.sort(function(a, b) {\n                    if (a.status == b.status) {\n                        a = a.hash[sort].tsStartAligned;\n                        b = b.hash[sort].tsStartAligned;\n                        if (a > b) return 1;\n                        if (b > a) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            };\n\n            var updateEvents = function(height, width) {\n                height -= 70;\n                width -= 20;\n\n                // Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n\n                chart.gPatients.selectAll(\"*\").remove();\n\n                var rows = chart.gPatients.selectAll(\"g.patient\").data(patientsFiltered);\n                rows.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n                var rowEnter = rows.enter().append('g');\n                rowEnter.attr('class', 'patient')\n                rowEnter.attr('transform', function(d, i) {\n                    return \"translate(0,\" + (i * heightRow) + \")\";\n                });\n\n                var cols = rowEnter.selectAll(\"rect\").data(function(d) {\n                    return d.events.filter(function(v) {\n                        return v.visible;\n                    });\n                });\n                cols.exit().remove();\n                cols.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 3);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n                    .on(\"mouseover\", function() {\n                        var datum = d3.select(this).datum();\n\n                        if (datum.html == null) {\n                            var data = datum.data;\n                            datum.html =\n                                Object.keys(data).reduce(function(p, c) {\n                                    p.html += \"<li>\" + c + \":\" + p.data[c] + \"</li>\";\n                                    return p;\n                                }, {\n                                    html: \"<b>\" + datum.name + \"</b>\",\n                                    data: data\n                                }).html;\n                        }\n                        if (chart.elTip == null) chart.elTip = angular.element(\"#timelines-tip\");\n                        chart.elTip.html(datum.html);\n\n                    }).on(\"mouseout\", function() {\n                        chart.elTip.html(\"<b>Rollover Event For Details</b>\");\n                    });\n                cols\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n\n                // Brush\n                chart.rPatients.call(brushSelect);\n                brushSelect.on(\"end\", function() {\n                    if (d3.event.selection == null) {\n                        return;\n                    }\n                    var lowerIndex = Math.floor(d3.event.selection[0] / yZoom / 20);\n                    var upperIndex = Math.ceil(d3.event.selection[1] / yZoom / 20);\n                    var ids = [];\n                    for (var i = lowerIndex; i <= upperIndex; i++) {\n                        ids.push(patientsFiltered[i].id);\n                    }\n                    osCohortService.setPatientCohort(ids, \"All Patients\");\n                    chart.rPatients.call(d3.event.target.move, null);\n                });\n            };\n\n            var updateZoom = function(height) {\n                height -= 70;\n                baseZoomY = height / (patientsFiltered.length * heightRow);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                chart.gPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            };\n\n            var configSize = function(height, width, layout) {\n                height -= 70;\n                width -= 20;\n                chart.elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.d3ScrollY.attr(\"height\", height);\n                chart.d3ScrollX.attr(\"width\", width);\n                chart.d3Chart.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.rPatients.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.gAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                });\n                chart.rAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                }).attr(\"width\", width).attr(\"fill\", \"#FFF\");\n            };\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n            var updateAxis = function() {\n                axis = d3.axisBottom(scaleX).ticks(7);\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                chart.gAxis.call(axis);\n            };\n\n            var configScrollbars = function(height, width) {\n                chart.d3ScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height - 70;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (20 * patientsFiltered.length * yZoom) * -lowerPercent;\n                        } else {\n\n                            if (yZoom == baseZoomY && yTran == 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            chart.d3ScrollY.call(brushY.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                chart.d3ScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran == 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            chart.d3ScrollX.call(brushX.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        var st = d3.zoomIdentity.translate(xTran).scale(xZoom).rescaleX(scaleX);\n                        var axis = d3.axisBottom(st).ticks(7);\n                        if (vm.timescale.name == 'Linear') {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(d);\n                            });\n                        } else {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                            });\n                        }\n                        chart.gAxis.call(axis);\n\n                    })\n                );\n            };\n\n            vm.update = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                updateData();\n                configSize(height, width, layout);\n                configScrollbars(height, width);\n                updateEvents(height, width);\n                updateZoom(height, width);\n                updateAxis(height, width);\n            }\n\n            osApi.onResize.add(vm.update);\n\n            function resize() {\n                _.debounce(vm.update, 300);\n            }\n            angular.element($window).bind('resize', resize);\n\n            /* Init Data */\n            osApi.setBusy(true);\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start != null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end == null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end == null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        p[c.name] = c;\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n\n                patientsAll = data.filter(function(v) {\n                    try {\n                        v.status = v.hash[\"Status\"].data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                    return false;\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n                vm.update();\n                osApi.setBusy(false);\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osApi.onResize.remove(vm.update);\n                angular.element($window).unbind('resize', resize);\n                brushY.on(\"end\", null);\n                brushX.on(\"end\", null);\n\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            var cohorts = angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            } else {\n                if (pc.ids.length > 0) {\n                    cohorts.push({\n                        id: \"Last Selection\",\n                        ids: pc.ids,\n                        name: \"Last Selection\",\n                        time: new Date()\n                    });\n                }\n            }\n            // var selectedIds = (pc==null) ? [] : pc.ids;\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohorts = cohorts;\n\n            vm.all = {\n                show: true,\n                color: '#000'\n            };\n\n            var colors = [\"#E91E63\", \"#673AB7\", \"#2196F3\", \"#00BCD4\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\"]; //['#004358','#800080','#BEDB39','#FD7400','#1F8A70'];\n            for (var i = 0; i < vm.cohorts.length; i++) {\n                vm.cohorts[i].show = true;\n                vm.cohorts[i].color = colors[i];\n            }\n\n            vm.toggle = function() {\n                osCohortService.getSurvivalData(vm.cohorts.filter(function(c) {\n                    return c.show;\n                }), vm.all.show, \"SurvivalController\");\n            };\n\n            // Create D3 Elements\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n\n            // Create D3 Axis Objects + Layout\n            var data = {};\n\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n\n            var setScale = function(timelineDomain) {\n                var osLayout = osApi.getLayout();\n\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - 60;\n                layout.height = $window.innerHeight - 160;\n                angular.element(\"#survival-chart\").css(\"margin-left\", osLayout.left + 20);\n                elChart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", layout.height);\n\n                layout.xScale = d3.scaleLinear()\n                    .domain(timelineDomain)\n                    .range([50, layout.width]);\n\n                layout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([layout.height - 50, 0]);\n\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n\n                elYAxis.attr(\"transform\", \"translate(50, 10)\").call(layout.yAxis);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.yScale(0) + 10) + \")\").call(layout.xAxis);\n            }\n\n            var onSurvivalData = function(result) {\n                if (result.data.cmd == \"getSurvivalData\") {\n                    if (result.data.data.correlationId == \"SurvivalController\") {\n                        data = result.data.data;\n                        draw();\n                    }\n                }\n            }\n            osCohortService.onMessage.add(onSurvivalData);\n\n            var addCurve = function(points) {\n\n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) {\n                        return layout.xScale(d[0]);\n                    })\n                    .y(function(d) {\n                        return layout.yScale(d[2]) + 10;\n                    });\n\n                elChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", 1.5)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"d\", valueline(points.data.line))\n                    .on(\"mouseover\", function() {\n                        d3.select(this).attr(\"stroke-width\", 3)\n                    })\n                    .on(\"mouseout\", function() {\n                        d3.select(this).attr(\"stroke-width\", 1)\n                    });\n\n                for (var i = 0; i < points.data.tick.length; i++) {\n                    elChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", .5)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", layout.yScale(points.data.tick[i][2]) + 5)\n                        .attr(\"y2\", layout.yScale(points.data.tick[i][2]) + 10);\n                }\n            }\n\n            var draw = function() {\n\n                // Clear Lines\n                elChart.selectAll(\".line\").remove();\n\n                // Set Scale\n                setScale([data.min, data.max]);\n\n                // Draw Lines\n                for (var i = 0; i < data.cohorts.length; i++) {\n                    addCurve(data.cohorts[i]);\n                }\n                osApi.setBusy(false);\n\n            };\n\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onMessage.remove(onSurvivalData);\n\n            });\n\n            // Load Data\n            vm.toggle();\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n            \n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v){\n                                return {name:v, color:colorMap[v]};\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function(){\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v){ return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n                    \n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n  \n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n                    \n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var osCohortServiceUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (osCohortServiceUpdate) {\n                    selectedIds = patients.ids;\n                    setSelected();\n                } else {\n                    osCohortServiceUpdate = true;\n                }\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Points.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n         \n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model\n            var vm = (function(vm, osApi) {\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                vm.selectColor = function(e){\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d,i){\n                         if (ids.indexOf(d.id)!=-1) {\n                             d3.select(this).classed(\"pca-node-selected\", true);\n                             allIds.push(d.id);\n                         }else{\n                             if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                         }\n                    });\n                    osCohortService.setPatientCohort(allIds, \"PCA\")\n                    \n\n                }\n                vm.deselectColor = function(e){\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d,i){\n                        if (ids.indexOf(d.id)!=-1) {\n                            d3.select(this).classed(\"pca-node-selected\", false);\n                        }else{\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osCohortService.setPatientCohort(allIds, \"PCA\")\n                }\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        $fields: ['type', 'geneset', 'source']\n                    })\n                    .then(function(response) {\n                     \n                        var data = response.data.map(function(v){\n                            return {a:v.geneset,b:v.source,c:v.type}\n                        });\n                        \n                        var result = _.reduce(data,function(memo, val){ \n                            var tmp = memo;\n                                _.each(val, function(fldr){\n                                    if(!_.has(tmp, fldr)){\n                                        tmp[fldr] = {}\n                                    }\n                                    tmp = tmp[fldr]\n                                });\n                            return memo\n                        },{});\n                        vm.geneSets = Object.keys(result).map(function(geneset){return {name: geneset, sources:\n                            Object.keys(result[geneset]).map(function(source){ return {name:source, types:\n                                Object.keys(result[geneset][source]).map(function(type) { return {name:type\n                                }})\n                            }})\n                        }});\n\n                      \n                        vm.geneSet = vm.geneSets[0];\n                    });\n                return vm;\n\n            })(this, osApi);\n\n            // Updates PCA Types When Geneset Changes\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet==null) return;\n                vm.sources = vm.geneSet.sources;\n                vm.source = vm.sources[0];\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet==null) return;\n                vm.pcaTypes = vm.source.types;\n                vm.pcaType = vm.pcaTypes[0];\n            });\n\n            // Fetches PCA Data + Calculates Min Max for XYZ\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (geneset == null) return;\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        type: vm.pcaType.name,\n                        source: vm.pcaType.source\n                    })\n                    .then(function(response) {\n                        vm.pc1 = response.data[0].pc1;\n                        vm.pc2 = response.data[0].pc2;\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: response.data[0].data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n\n                        draw();\n                    });\n            });\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (this[v.id] != undefined) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 3)\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", .8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(5);\n                axisY = d3.axisLeft().scale(scaleY).ticks(5);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + scaleY(0) + \")\")\n                    .call(axisX)\n                    .append(\"text\")\n                    .attr(\"x\", 50)\n                    .attr(\"y\", 15)\n                    .text(\"PC1\");\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + scaleX(0) + \", 0)\")\n                    .call(axisY)\n                    .append(\"text\")\n                    .attr(\"y\", 55)\n                    .attr(\"x\", 25)\n                    .text(\"PC2\");\n\n                // Brush\n                var brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osCohortService.setPatientCohort([], \"PCA\");\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n         \n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n\n                        osCohortService.setPatientCohort(ids, \"PCA\");\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush)\n\n                setSelected();\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osCohortService, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            // History Integration\n            /*\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            */\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            }\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                    container: elChart,\n                    elements: markersNetwork.elements,\n                    style: getStyle(),\n                    minZoom: .1,\n                    maxZoom: 5,\n                    zoom: 0.2,\n                    wheelSensitivity: .5,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                })\n\n                //.on('select', 'node', _.debounce(saveSelected, 300))\n                .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            //vm.frame = $sce.trustAsResourceUrl(\"https://resources.sttrcancer.org/markers-patients\");\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    })\n\n                // Register History Component\n                /*\n                osHistory.onGeneSelectionChange.add(function(selection){\n                    selectedIds = selection.ids;\n                    setSelected();\n                });\n                setSelected();\n                */\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \"/api/\";\n         url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osCohortService', osCohortService);\n\n    /** @ngInject */\n    function osCohortService(osApi, moment, signals, localStorage) {\n\n        var onMessage = new signals.Signal();\n        var onPatientsSelect = new signals.Signal();\n        var onGenesSelect = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        var worker = new Worker(\"app/components/oncoscape/oncoscape.cohort.service.worker.js\");\n        worker.addEventListener('message', function(msg) {\n            if (msg.data.cmd == \"filterPatients\") {\n                setPatientCohort(msg.data.data, \"Filter\")\n            }else if (msg.data.cmd == \"validatePatientIds\"){\n                setPatientCohort(msg.data.data, \"Import\");\n                addPatientCohort();\n            }else {\n                onMessage.dispatch(msg);\n            }\n        }, false);\n\n        var allGeneCohorts = [],\n            activePatientCohort,\n            activeGeneCohort;\n\n        var allPatientCohorts = [];\n        var colors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70'];\n        osApi.onDataSource.add(function(datasource) {\n\n            worker.postMessage({\n                cmd: \"setPatientDataSource\",\n                data: datasource.clinical.patient\n            });\n\n            allPatientCohorts = localStorage.getItem(osApi.getDataSource().disease + \"PatientCohorts\");\n            allPatientCohorts = (allPatientCohorts == null) ? [] : angular.fromJson(allPatientCohorts);\n            for (var i = 0; i < allPatientCohorts.length; i++) {\n                allPatientCohorts[i].color = colors[i];\n            }\n            onCohortsChange.dispatch(allPatientCohorts);\n        });\n\n        var _patientColor = {\n            name: 'xxx',\n            data: [{\n                name: 'Patient',\n                color: '#1396DE',\n                show: true\n            }]\n        };\n\n\n        var setPatientColor = function(val) {\n            _patientColor = val;\n            onPatientColorChange.dispatch(_patientColor);\n        }\n\n        var getSurvivalData = function(cohorts, all, correlationId) {\n            worker.postMessage({\n                cmd: \"getSurvivalData\",\n                data: {\n                    cohorts: cohorts,\n                    all: all,\n                    correlationId: correlationId\n                }\n            });\n        };\n\n        var getPatientMetric = function() {\n            if (!activePatientCohort.ids) return;\n            worker.postMessage({\n                cmd: \"getPatientMetric\",\n                data: activePatientCohort.ids\n            });\n        };\n\n        var getPatientCohorts = function() {\n            return allPatientCohorts;\n        };\n        var getPatientCohort = function() {\n            return activePatientCohort;\n        };\n        var addPatientCohort = function() {\n            if (allPatientCohorts.indexOf(activePatientCohort) != -1) return;\n            activePatientCohort.color = colors[allPatientCohorts.length];\n            allPatientCohorts.push(activePatientCohort);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n        var importPatientCohort = function(ids){\n            worker.postMessage({\n               cmd: \"validatePatientIds\",\n               data: ids \n            });\n        }\n\n        var delPatientCohort = function(obj) {\n            allPatientCohorts.splice(allPatientCohorts.indexOf(obj), 1);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", angular.toJson(allPatientCohorts));\n        };\n\n        var setPatientCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activePatientCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onPatientsSelect.dispatch(activePatientCohort);\n        };\n        var filterActivePatientCohort = function(bounds, prop, type) {\n            worker.postMessage({\n                cmd: \"filterPatients\",\n                data: {\n                    ids: activePatientCohort.ids,\n                    type: type,\n                    bounds: bounds,\n                    prop: prop\n                }\n            });\n        }\n\n        var getGeneMetric = function() {};\n        var getGeneCohorts = function() {\n            return allGeneCohorts;\n        };\n        var getGeneCohort = function() {\n            return activeGeneCohort;\n        };\n        var addGeneCohort = function() {\n            allGeneCohorts.push(activeGeneCohort);\n        };\n        var delGeneCohort = function(obj) {\n            allGeneCohorts.splice(allGeneCohorts.indexOf(obj), 1);\n        };\n        var setGeneCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activeGeneCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onGenesSelect.dispatch(activeGeneCohort);\n        };\n\n        var api = {\n            onMessage: onMessage,\n            onPatientsSelect: onPatientsSelect,\n            onCohortsChange: onCohortsChange,\n            onPatientColorChange: onPatientColorChange,\n            getPatientCohorts: getPatientCohorts,\n            getPatientCohort: getPatientCohort,\n            setPatientCohort: setPatientCohort,\n            addPatientCohort: addPatientCohort,\n            delPatientCohort: delPatientCohort,\n            importPatientCohort: importPatientCohort,\n            getPatientMetric: getPatientMetric,\n            onGenesSelect: onGenesSelect,\n            getGeneCohorts: getGeneCohorts,\n            getGeneCohort: getGeneCohort,\n            setGeneCohort: setGeneCohort,\n            addGeneCohort: addGeneCohort,\n            delGeneCohort: delGeneCohort,\n            getGeneMetric: getGeneMetric,\n            getSurvivalData: getSurvivalData,\n            setPatientColor: setPatientColor,\n            filterActivePatientCohort: filterActivePatientCohort\n        };\n\n        return api;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n                id: 'guest',\n                name: 'Guest',\n                icon: 'fa fa-user'\n            },{\n                id: 'google',\n                name: 'Google',\n                icon: 'fa fa-google-plus',\n                key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }];\n            \n            /*}, {\n                id: 'facebook',\n                name: 'Facebook',\n                icon: 'fa fa-facebook',\n                key: '142281766208909',\n                mode: 'implicit'\n            }, {\n                id: 'github',\n                name: 'GitHub',\n                icon: 'fa fa-github-alt',\n                key: '78b5dbe2ba756151169e',\n                mode: 'explicit'\n            },{\n                id: 'instagram',\n                name: 'Instagram',\n                icon: 'fa fa-instagram',\n                key: '3578c1b7c8c248c6ba80784b9ede0c52',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }, {\n                id: 'twitter',\n                name: 'Twitter',\n                icon: 'fa fa-twitter',\n                key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n                mode: 'implicit'\n            }, {\n                id: 'windows',\n                name: 'Win Live',\n                icon: 'fa fa-windows',\n                key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n                mode: 'implicit'\n            }, {\n                id: 'dropbox',\n                name: 'Dropbox',\n                icon: 'fa fa-dropbox',\n                key: 'dropbox',\n                mode: 'implicit'\n            }, {\n                id: 'flickr',\n                name: 'Flickr',\n                icon: 'fa fa-flickr',\n                key: '',\n                mode: 'implicit'\n            }*/\n        \n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var loginGuest = function(){\n            user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n        }\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            loginGuest: loginGuest,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, $) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n        // DataSources\n        var _dataSources;\n        var _dataSource;\n        var getDataSources = function() {\n            return _dataSources;\n        };\n        var getDataSource = function() {\n            return _dataSource;\n        };\n        var setDataSource = function(value) {\n            if (angular.isObject(value)) {\n                if (_dataSource != value) {\n                    _dataSource = value;\n                    onDataSource.dispatch(_dataSource);\n                }\n            } else if (angular.isString(value)) {\n                if (_dataSource.disease != value) {\n                    if (_dataSource != value) {\n                        _dataSource = _dataSources.filter(function(v) {\n                            return v.disease == this.key\n                        }, {\n                            key: value\n                        })[0]\n                        onDataSource.dispatch(_dataSource);\n                    }\n                }\n            }\n        };\n\n        // Initialize\n        function init() {\n            return $q(function(resolve, reject) {\n                query(\"lookup_oncoscape_datasources\", {\n                    beta: false\n                }).then(function(response) {\n                    //query(\"lookup_oncoscape_datasources\").then(function(response) {\n                    _dataSources = response.data\n                        .filter(function(d) {\n                            return angular.isDefined(d.img)\n                        })\n                        .map(function(d) {\n                            d.name = d.name.trim();\n                            return d;\n                        })\n                        .sort(function(a, b) {\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                    resolve(_dataSources);\n                }, reject);\n            });\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        // Returns Promise\n        var _cpuApi;\n        (function(serviceEndpoint) {\n            var server = serviceEndpoint.substring(0, serviceEndpoint.replace(\"//\", \"--\").indexOf(\"/\"));\n            var createMethod = function(obj, method) {\n                var fnName = 'get' + method.charAt(0).toUpperCase() + method.slice(1).toLowerCase();\n                obj[fnName] = function(options) {\n                    return new Promise(function(resolve) {\n                        $.ajax({\n                            url: serviceEndpoint + \"/\" + method,\n                            type: \"POST\",\n                            data: angular.toJson(options),\n                            contentType: \"application/json; charset=utf-8\",\n                            dataType: \"text\",\n                            beforeSend: function(xhr, settings) {\n                                settings.xhrFields = settings.xhrFields || {};\n                                settings.xhrFields.withCredentials = false;\n                                settings.crossDomain = true;\n                            }\n                        }).done(function(response) {\n                            response = response.split(\"\\n\");\n                            var url = server + response[0];\n                            $.ajax({\n                                url: url,\n                                type: \"GET\",\n                                crossDomain: true,\n                                beforeSend: function(xhr, settings) {\n                                    settings.xhrFields = settings.xhrFields || {};\n                                    settings.xhrFields.withCredentials = false;\n                                    settings.crossDomain = true;\n                                }\n                            }).done(function(response) {\n                                resolve(response);\n                            });\n                        });\n                    });\n                }\n            }\n            return new Promise(function(resolve) {\n                $.get(serviceEndpoint).then(function(methods) {\n                    var api = methods.split(\"\\n\").reduce(function(obj, method) {\n                        if (method != \"\") createMethod(obj, method)\n                        return obj;\n                    }, {})\n                    api.getEndpoint = function() {\n                        return serviceEndpoint;\n                    }\n                    resolve(api);\n                });\n            });\n        })(\"https://oncoscape-test.fhcrc.org/ocpu/library/oncoscape/R\").then(function(v) {\n            _cpuApi = v;\n        });\n        var getCpuApi = function(){ return _cpuApi; };\n\n        return {\n            init: init,\n            query: query,\n            getCpuApi: getCpuApi,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            getLayout: getLayout,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            setBusy: setBusy\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, osCohortService, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            //'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            //'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"telomere\"]',\n                        style: {\n                            'background-color': \"#3993fa\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            //'border-opacity': .3,\n                            'border-width': 5\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"right\",\n                            'text-margin-x': 5,\n                            'color': '#000',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            'border-width': 5\n                                //'background-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"annotation-text\"]',\n                        style: {\n                            'font-size': '400px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFF',\n                            'height': '0px',\n                            'width': '0px',\n                            'shape': 'round',\n                            'label': \"data(label)\",\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: .5,\n                    //motionBlur: true,\n                    //motionBlurOpacity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: .05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#3993fa\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })()\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                }\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function() {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = [{\n                    name: 'mutation',\n                    abv: 'm',\n                    show: true,\n                    color: '#9C27B0',\n                    class: 'switch-mutation',\n                    count: '',\n                    id: 0\n                }, {\n                    name: 'cnGain.1',\n                    abv: 'cnG1',\n                    show: true,\n                    color: '#03A9F4',\n                    class: 'switch-cnG1',\n                    count: '',\n                    id: 1\n                }, {\n                    name: 'cnGain.2',\n                    abv: 'cnG2',\n                    show: true,\n                    color: '#3F51B5',\n                    class: 'switch-cnG2',\n                    count: '',\n                    id: 2\n                }, {\n                    name: 'cnLoss.1',\n                    abv: 'cnL1',\n                    show: true,\n                    color: '#FF9800',\n                    class: 'switch-cnL1',\n                    count: '',\n                    id: -1\n                }, {\n                    name: 'cnLoss.2',\n                    abv: 'cnL2',\n                    show: true,\n                    color: '#F44336',\n                    class: 'switch-cnL2',\n                    count: '',\n                    id: -2\n                }];\n\n                // Populate Dropdowns + Draw Chromosome\n                $q.all([\n                    osApi.query(\"render_chromosome\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'cluster',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'color',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    })\n                ]).then(function(results) {\n\n                    vm.optGeneSets = results[0].data;\n\n\n                    var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                    if (data===null) {\n                        if (osApi.getDataSource().disease == \"brain\") {\n                            vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                                return v.name == \"Marker genes 545\"; \n                                //  \"TCGA pancan mutated\";\n                                //  \"Marker genes 545\"; \n                            })[0]\n                        } else {\n                            vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                                return v.name == \"TCGA pancan mutated\";\n                            })[0]\n                        }\n                    }\n                    else{\n                        data = angular.fromJson(data);\n                        vm.optGeneSet = angular.fromJson(data).geneset;    // This is getting parsed x2.  Need to revisit\n                    }\n\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                });\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi);\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50)\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function() {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([.005, 20]).range([5, 1])\n            var nodeScale = d3.scaleLog().domain([.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([.01, 2]);\n            var resizeNodes = function() {\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < .375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n            }\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length==0) return;\n                        var items = data.map(function(item) {\n                            return this.getElementById(item);\n                        }, cyChart);\n                        cyChart.collection(items).remove();\n\n                    // } catch () {\n\n                    // }\n                };\n                // cmd.patients_html = function(data) {\n                //     patientHtml = data;\n                // };\n                // cmd.patients_resize = function() {\n\n                // };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.patients;\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 100\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                   \n                    //Initial Node Selection\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                            pc: pc\n                        });\n                        cyChart.endBatch();\n                        vm.zoom.reset()\n                        cyChart.center();\n                        cyChart.fit(cyChart.nodes(), 400);\n                    }\n                    \n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text'],edge[nodeType='annotation-line'],node[nodeType='annotation-point']\").remove();\n                    if (data.annotation) {\n                        cyChart.add(data.annotation);\n\n                    }\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        //try {\n                            var pos = data.data[node.id()];\n                            pos.x -= 4000;\n                            node.position(pos);\n                        //} catch (e) {}\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 500\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.add(data.edges);\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    var edges = osApi.getDataSource().edges.filter(function(f) {\n                        return f.name == this.geneset\n                    }, {\n                        geneset: geneset\n                    })[0];\n\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        edges: {\n                            patientWeights: edges.patientWeights,\n                            geneWeights: edges.genesWeights,\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.name == this)\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                }\n            })(cyChart, vm)\n\n            vm.cmd = function() {};\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function(vm, $scope) {\n                var watches = 1;\n\n                var firstTime = true;\n                var update = function(){\n                    if (firstTime){\n                        firstTime=false;\n                        if (hydrate()) return;    // If Hydration Was Possible\n                    }\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n                    \n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n                // Search\n                watches += 1;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    var needle = vm.search.toUpperCase().trim();\n                    if (needle.length > 0) cyChart.$('node').filter(function(i, ele) {\n                        return (ele.id().toUpperCase().indexOf(needle) == 0);\n                    }).select();\n                }, 600))\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize()\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length == 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n            \n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setPatientCohortUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (setPatientCohortUpdate) {\n                    cyChart.startBatch();\n                    cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (patients.ids.indexOf(node.id()) != -1) node.select();\n                    });\n                    cyChart.endBatch();\n                }\n                setPatientCohortUpdate = true;\n            });\n\n            function setPatientCohort() {\n                setPatientCohortUpdate = false;\n                osCohortService.setPatientCohort(\n                    cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                        return p.data().id\n                    }),\n                    \"Markers + Patients\"\n                );\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length == 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n\n                        }\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5')\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Hydration\n            var hydrateDisease;\n            var hydrate = function(){\n                hydrateDisease = osApi.getDataSource().disease;\n                var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                if (data===null) return false;\n                else{\n                    data = angular.fromJson(data);\n                    cyChart.load(data.chart.elements);\n                    vm.resize();\n                    var elements = cyChart.nodes('node[nodeType=\"patient\"]');\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n                     \n\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                            pc: pc\n                        });\n                        cyChart.endBatch();\n                    }\n                    \n                }\n                osApi.setBusy(false);\n                return true;\n            }\n            var dehydrate = function(){\n                var data = angular.toJson({\n                    geneset: vm.optGeneSet,\n                    chart: cyChart.json()\n                });\n                // Geneset / Edge Visibility / Color Option / Layout\n                localStorage.setItem(hydrateDisease + \"MarkersPatients\", data);\n            }\n            // Destroy\n            $scope.$on('$destroy', function() {\n                dehydrate();\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state, osApi, osAuth) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n            vm.getStarted = function(){\n                osApi.init().then(function() {\n                    alert(\"HI\");\n                    osAuth.loginGuest();\n                });\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osCohortService, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, Handsontable) {\n\n            var queryMethod = function (queryStr, value) {\n                if (queryStr==\"\") return false;\n                if (value==null) return false;\n                return (value.toString().toUpperCase().indexOf(queryStr)!=-1);\n            };\n\n            // Properties\n            var vm = this;\n            var elGrid, htGrid;\n            var data, filteredData, settings = {\n                manualColumnResize: true,\n                manualColumnMove: true,\n                fixedRowsTop: 0,\n                readOnly: true,\n                contextMenu: false,\n                columnSorting: true,\n                sortIndicator: true,\n                comments: false,\n                allowEmpty: true,\n                disableVisualSelection: ['current', 'area'],\n                currentRowClassName: 'currentRow',\n                autoColumnSize: {\n                    samplingRatio: 23\n                },\n                search: {\n                    queryMethod: queryMethod\n                },\n                mergeCells: false\n            };\n\n\n            elGrid = angular.element(\"#history-grid\");\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) osCohortService.setPatientCohort([], \"All Patients\");\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            // Intialize View State\n            (function(vm) {\n                vm.datasource = osApi.getDataSource();\n                vm.cohortMode = 'Filter';\n                vm.search = \"\";\n                vm.collections = Object.keys(vm.datasource.clinical)\n                    .map(function(key) {\n                        var v = this.data[key];\n                        return {\n                            name: key,\n                            collection: v\n                        };\n                    }, {\n                        data: vm.datasource.clinical\n                    })\n                    .filter(function(o) {\n                        return o.name != \"events\";\n                    });\n                vm.collection = vm.collections[0];\n\n            })(vm);\n\n            vm.exportCsv = function() {\n\n                var data = htGrid.getData();\n                var tmpColDelim = String.fromCharCode(11),\n                    tmpRowDelim = String.fromCharCode(0),\n                    colDelim = '\",\"',\n                    rowDelim = '\"\\r\\n\"',\n                    csv = '\"' + data.map(function(rval) {\n                        return rval.map(function(cval) {\n                            // escape double quotes\n                            var out = \"\";\n                            if (!cval) {\n                                out = cval.toString();\n                            }\n                            return out;\n                        }).join(tmpColDelim);\n                    }).join(tmpRowDelim)\n                    .split(tmpRowDelim).join(rowDelim)\n                    .split(tmpColDelim).join(colDelim) + '\"';\n                var encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csv);\n                $window.open(encodedUri);\n            }\n\n            var filterData = function(){\n                \n                filteredData = (selectedIds.length==0) ? data : data\n                    .filter(function(v){\n\n                        return (this.indexOf(v.patient_ID)!=-1)\n                    }, selectedIds);\n                \n                htGrid.loadData(filteredData);\n                render();\n                \n            }\n\n            var render = function(){};\n            var setData = function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        data = response.data.map(function(v){\n                            v.color = \"#0b97d3\";\n                            return v;\n                        });\n\n                        vm.columns = Object.keys(data[0]).map(function(v) {\n                            return {\n                                field: v,\n                                displayName: v.replace(/_/g, \" \").toUpperCase(),\n                                show: true\n                            };\n                        });\n                       \n                        if (htGrid == null) {\n                            settings.startCols = vm.columns.length;\n                            htGrid = new Handsontable(elGrid[0], settings);\n                            render = function(){\n                                for (var i=0; i<5; i++) htGrid.render();\n                            }\n                            Handsontable.hooks.add(\"afterSelection\",\n                            function(r,c,r2,c2){\n                                console.dir(r+\":\"+r2);\n                            }\n                            ,htGrid);\n                        }\n\n                        \n                        \n                        filterData();\n                        vm.setColumns(false);\n                        vm.setSize(false);\n                        osApi.setBusy(false);\n\n                    });\n            };\n            \n          \n            var rowRenderer = function(instance, td, row){\n                Handsontable.TextRenderer.apply(this, arguments);\n                td.style['color'] = filteredData[row]['color'];\n            }\n\n\n            vm.setColumns = function(exeRender) {\n                var cols = vm.columns.filter(function(v) {\n                    return v.show;\n                });\n\n                settings.colHeaders = cols.map(function(v) {\n                    return v.displayName;\n                });\n                settings.columns = cols.map(function(v) {\n                    return { data: v.field, readOnly:true };\n                });\n                settings.cells = function () {\n                    var cellProps = {};\n                    cellProps.renderer = rowRenderer;\n                    return cellProps;\n                };\n\n                htGrid.updateSettings(settings);\n                if (exeRender) render();\n            };\n\n            vm.setSize = function() {\n                var osLayout = osApi.getLayout();\n                \n                elGrid = angular.element(\".handsontable\")[0];\n                elGrid.style[\"margin-left\"] = (osLayout.left-30) + \"px\";\n                elGrid.style.width = ($window.innerWidth - osLayout.left - osLayout.right - 80) + \"px\";\n                elGrid.style.height = ($window.innerHeight - 170) + \"px\";\n                htGrid.updateSettings({\n                    width: $window.innerWidth - osLayout.left - osLayout.right - 80,\n                    height: $window.innerHeight - 170\n                }, true);\n               render();\n                \n            }\n\n            $scope.$watch(\"vm.collection\", setData);\n            $scope.$watch(\"vm.search\", function(v){\n                if (angular.isUndefined(htGrid)) return;\n                htGrid.search.query(v.toUpperCase().trim());\n                render();\n            });\n\n\n            // resize\n            osApi.onResize.add(vm.setSize);\n            var resize = function() {\n                    vm.setSize(true);\n                } // Should Debounce.\n            angular.element($window).bind('resize', resize);\n\n\n            vm.resetFilter = function(){\n                selectedIds = [];\n                filterData();\n            }\n\n            var onPatientSelect = function(patients){\n                selectedIds = patients.ids;\n                filterData();\n            };\n            osCohortService.onPatientsSelect.add(onPatientSelect);\n\n\n            var onPatientColorChange = function(colors){\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n\n                data.forEach(function(data){\n                    data.color = this[data.patient_ID]\n                }, degMap)\n            };\n            osCohortService.onPatientColorChange.add(onPatientColorChange)\n\n            // Load Datasets\n            osApi.setBusy(true);\n\n         \n            // Destroy\n            $scope.$on('$destroy', function() {\n                //osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osCohortService.onPatientColorChange.remove(onPatientColorChange)\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                {name:'Blues', value:[\"#303f9f\",\"#03a9f4\"]},\n                {name:'Black / Blue', value:[\"#000000\",\"#1d85cb\"]},\n                {name:'Black / Red', value:[\"#000000\",\"#D32F2F\"]},\n                {name:'Red / Yellow', value:[\"#D32F2F\",\"#FFEB3B\"]}\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{name:'None'},{name:'Row'},{name:'Column'}]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                {name:'One',value:1},\n                {name:'Two',value:2},\n                {name:'Three',value:3},\n                {name:'Four',value:4},\n                {name:'Five',value:5},\n                {name:'Six',value:6},\n                {name:'Seven',value:7},\n                {name:'Eight',value:8},\n                {name:'Nine',value:9},\n                {name:'Ten',value:10}\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n            \n            // Load Inital Data\n            var args;\n            var data;\n\n           \n            function axis(svg, data, width, height, x, y, rotated){\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n                    \n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\",x)\n                    .style(\"top\",y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width:height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n                \n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d,i) { return yScale(i+.8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\",\"12px\")\n                    .text( function(d){ return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n                \n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width,height] : [height,width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width,0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l){\n                    return {\n                        source: {x: l.source.x, y:l.source.data.height},\n                        target: {x: l.target.x, y:l.target.data.height},\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n                \n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\",\"#FFF\")\n\n                if (rotated){\n                    var transform = \"rotate(90,\" + height/2 + \",\" + height/2 + \") translate(0,\"+(-width+height)+\")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n                \n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d){\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                        y(d.source.y) + \",\" + d.target.x + \" \" +\n                        y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d){\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g:dendrG, \n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height,x,y){\n\n\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\",x).style(\"top\",y).style(\"position\",\"absolute\");\n\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n                \n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n\n                var cols = data.dim[0];\n                var rows = data.dim[1];\n\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n\n                console.log(height);\n\n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend(){\n\n                    \n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    var colBounds = d3.event.selection.map(function(v){ return this.invert(v[0], v[1]); },xScale).map(Math.round);\n                    var span = colBounds[1] - colBounds[0];\n                    var start = colBounds[0];\n                    var ids = data.cols.splice(start, span);\n                    \n                    var coords = d3.event.selection;\n                    //coords[0][0] = colBounds[0] * width;\n                    coords[0][1] = 0;\n                    //coords[1][0] = colBounds[1] * width;\n                    coords[1][1] = height;\n\n                    d3.select(this)\n                        .transition()\n                        .call(d3.event.target.move, coords);\n\n                    \n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n\n                var boxW = xScale(1)-grid;\n                var boxH = yScale(1)-grid;\n\n                var boxes = map.selectAll('rect').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .attr(\"class\", \"box\")\n                    .attr(\"colIndex\", function(d, i) { return i % cols; })\n                    .attr(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(i % rows); })\n                    .attr(\"width\", boxW)\n                    .attr(\"height\", boxH)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data.data,\n                    cols:cols,\n                    rows:rows,\n                    boxW:boxW,\n                    boxH:boxH\n                }\n            }\n\n            function zoom(){\n\n/*\n                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                colDendObj.g.call(xZoomBehavior);\n                rowDendObj.g.call(yZoomBehavior);\n                xZoomBehavior.on('zoom', function() {\n\n                    var map = colmapObj;\n                    var mapX = d3.event.transform.rescaleY(map.scaleX);\n\n                    var boxW = map.scaleX(1);\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return mapX(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return map.scaleY(i % map.rows); })\n                        .attr(\"width\", boxW)\n\n                    var col = colDendObj;\n                    var colY = col.scaleY;\n                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                    \n                    col.g.selectAll(\"polyline\")\n                        .data(col.data)\n                        .attr(\"points\", function(d){\n                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                        });\n                });\n                yZoomBehavior.on('zoom', function() {\n\n                    var row = rowDendObj;\n                    var rowY = row.scaleY;\n                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                    \n                    var map = colmapObj;\n                    var mapY = d3.event.transform.rescaleX(map.scaleY);\n\n                    var boxW = scaleX(1);\n                    var boxH = yScale(1)-grid;\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return map.scaleY(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return mapY(i % map.rows); })\n                        .attr(\"width\", boxW)\n                    \n                    row.g.selectAll(\"polyline\")\n                        .data(row.data)\n                        .attr(\"points\", function(d){\n                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                        });\n                });\n*/\n            }\n            \n            osApi.setBusy(true);\n             vm.loadData = function(){\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {data:response.data.map(function(v){ \n                        Object.keys(v.patients).forEach(function(key){\n                            if (this[key]==null) this[key] = 0;\n                        },v.patients);\n                        return v.patients; \n                    })};\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function(){\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v){\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function(){\n                \n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                colmapObj = heatmap(colmap, data.matrix, \n                    hmWidth, \n                    hmHeight, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, \n                    (vm.colDendrogram ? 80 : 0));\n\n                rowDendObj = dendrogram(rowDend, data.rows,    \n                    80, hmHeight, \n                    layout.left+20, (vm.colDendrogram ? 80 : 0) , false);\n\n                colDendObj = dendrogram(colDend, data.cols,    \n                    hmWidth, 80, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, 0, true);\n\n                axis(xaxis, \n                    data.matrix.rows,     \n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0)+layout.left+20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0)+layout.left+20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n            \n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw,300));\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osCohortService, osAuth, $stateParams, $state, $timeout, $rootScope) {\n\n            osApi.query(\"lookup_oncoscape_tools\", {\n                beta: false\n            }).then(function(response) {\n                vm.tools = response.data;\n\n            });\n\n            osApi.onDataSource.add(function() {\n                $timeout(function() {\n                    vm.datasets = osApi.getDataSources();\n                });\n            });\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.addPatientCohort = osCohortService.addPatientCohort;\n            vm.setPatientCohort = osCohortService.setPatientCohort;\n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n            });\n            vm.importPatientIds = \"\";\n            vm.importPatientCohort = function(){\n                var ids = vm.importPatientIds.split(\",\").map(function(v){ return v.trim(); });\n                osCohortService.importPatientCohort(ids);\n            };\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.showCohorts = false;\n            vm.showHelp = false;\n            vm.showLogout = false;\n\n            var currentTool;\n            var onStateChangeStart = $rootScope.$on('$stateChangeStart', function(event, toState) {\n                currentTool = toState.name;\n                switch (toState.name) {\n                    case \"landing\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        vm.showLogout = false;\n                        vm.showCohorts = false;\n                        vm.showHelp = false;\n                        break;\n                    case \"tools\":\n                        vm.showTools = true;\n                        break;\n                    case \"datasource\":\n                        vm.showHelp = true;\n                        vm.showDatasets = true;\n                        vm.showCohorts = true;\n                        vm.showLogout = true;\n                        vm.showTools = false;\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', onStateChangeStart);\n\n            vm.loadDataset = function(dataset) {\n                $state.go(currentTool, {\n                    datasource: dataset\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.loadTool = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            vm.logoutClick = function() {\n                osAuth.logout();\n                $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.disease\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, osCohortService, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                selectedIds = patients.ids;\n                setSelected();\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", false);\n                } else {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) == -1)\n                    });\n                }\n            }\n\n            // Properties\n            var vm = this;\n\n            var rows = 3;\n            var cell = {\n                w: 0,\n                h: 0\n            };\n\n\n            var datasource = {\n                \"disease\": \"brain\",\n                \"source\": \"TCGA\",\n                \"beta\": false,\n                \"name\": \"Brain\",\n                \"img\": \"DSbrain.png\",\n                \"category\": [{\n                    \"source\": \"tcga\",\n                    \"type\": \"color\",\n                    \"collection\": \"brain_color_tcga_import\"\n                }],\n                \"molecular\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_ucsc_gistic\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_ucsc_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_cbio_gistic\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut\",\n                    \"collection\": \"brain_mut_cbio_wxs\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_cbio_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"methylation\",\n                    \"collection\": \"brain_methylation_cbio_hm27\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"rna\",\n                    \"collection\": \"brain_rna_cbio_rnaseq-bc\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"protein\",\n                    \"collection\": \"brain_protein_cbio_rppa-zscore\"\n                }],\n                \"clinical\": {\n                    \"patient\": \"brain_patient_tcga_clinical\",\n                    \"followUp-v1p0\": \"brain_followup-v1p0_tcga_clinical\",\n                    \"drug\": \"brain_drug_tcga_clinical\",\n                    \"newTumor\": \"brain_newtumor_tcga_clinical\",\n                    \"otherMalignancy-v4p0\": \"brain_othermalignancy-v4p0_tcga_clinical\",\n                    \"events\": \"brain_events_tcga_clinical\"\n                },\n                \"calculated\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein-10000\"\n                }],\n                \"edges\": [{\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_oncovogel274-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_oncovogel274-mut01-cnv\"\n                }]\n            };\n\n            var elChart = angular.element(\"#compareclusterChart\");\n            var chart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n\n            vm.allClusters = datasource.calculated.map(function(v) {\n                v.selected = true;\n                return v;\n            });\n\n            var clusters = vm.allClusters\n                .filter(function(v) {\n                    return v.collection.indexOf(\"ucsc\") != -1;\n                })\n                .filter(function(v) {\n                    return v.type == \"mds\";\n                })\n\n            clusters.pop();\n\n            function plot(p) {\n                var rect = d3.select(this);\n                rect.append(\"svg:rect\")\n                    .attr(\"class\", \"cell\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0)\n                    .attr(\"width\", cell.w)\n                    .attr(\"height\", cell.h);\n\n                var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                rect.selectAll(\"circle\")\n                    .data(p.data)\n                    .enter().append(\"svg:circle\")\n                    .attr(\"class\", \"point\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.x);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.y);\n                    })\n                    .attr(\"r\", 1);\n\n                brush.create(rect);\n\n            }\n\n            // Brushes\n            var brush = (function(d3, cell, osCohortService) {\n\n                var _brushes = [];\n\n                var start = function() {\n                    if (d3.event.selection === null) return;\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush !== d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.rect.call(b.brush.move, null);\n                        });\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush === d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.brush.on(\"end\", end);\n                        });\n                };\n                var end = function() {\n                    if (d3.event.selection === null) {\n                        osCohortService.setPatientCohort([], \"Clusters\");\n                        return;\n                    }\n                    var bv = d3.event.selection;\n                    var xMin = bv[0][0];\n                    var xMax = bv[1][0];\n                    var yMin = bv[0][1];\n                    var yMax = bv[1][1];\n\n                    var brush = _brushes.filter(function(b) {\n                        return b.brush === d3.event.target\n                    })[0];\n                    brush.brush.on(\"end\", null);\n                    var rect = brush.rect.data()[0];\n                    var xScale = d3.scaleLinear().domain(rect.xDomain).range([0, cell.w]);\n                    var yScale = d3.scaleLinear().domain(rect.yDomain).range([0, cell.h]);\n                    var ids = rect.data.filter(function(c) {\n                            var x = xScale(c.x);\n                            var y = yScale(c.y);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        })\n                        .map(function(d) {\n                            return d.id;\n                        });\n                    osCohortService.setPatientCohort(ids, \"Clusters\");\n                };\n\n                var create = function(rect) {\n                    var brush = d3.brush()\n                        .on(\"start\", start);\n                    rect.call(brush);\n                    _brushes.push({\n                        brush: brush,\n                        rect: rect\n                    });\n                }\n\n                var clear = function() {\n\n                }\n\n                var destory = function() {\n\n                }\n\n                return {\n                    create: create,\n                    clear: clear,\n                    destory: destory\n                }\n            })(d3, cell, osCohortService);\n\n            function draw() {\n\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                chart.selectAll(\"g.graph\")\n                    .data(clusters)\n                    .enter().append(\"svg:g\")\n                    .attr(\"class\", \"graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    })\n                    .each(plot);\n            }\n\n            $q.all(\n                clusters.map(function(v) { return osApi.query(v.collection)})\n            ).then(function(data) {\n                clusters = clusters.map(function(v, i) {\n                    var data = this.data[i].data[0].data;\n                    var rv = {\n                        name: v,\n                        data: Object.keys(data).reduce(function(p, c) {\n                            var datum = p.data[c];\n                            p.value.push({\n                                id: c,\n                                x: datum.x,\n                                y: datum.y\n                            });\n                            return p;\n                        }, {\n                            data: data,\n                            value: []\n                        }).value,\n                        xDomain: null,\n                        yDomain: null,\n                        col: i % this.rows,\n                        row: parseInt(i / this.rows)\n                    };\n                    var xVal = function(d) {\n                        return d.x;\n                    };\n                    var yVal = function(d) {\n                        return d.x;\n                    };\n                    rv.xDomain = [d3.min(rv.data, xVal), d3.max(rv.data, xVal)];\n                    rv.yDomain = [d3.min(rv.data, yVal), d3.max(rv.data, yVal)];\n                    return rv;\n                }, {\n                    data: data,\n                    rows: rows\n                });\n\n                draw();\n            });\n            var resize = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width).attr(\"height\", height);\n                chart.selectAll(\"g.graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    }).each(function(p) {\n                        var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                        var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                        var g = d3.select(this);\n                        g.select(\".cell\")\n                            .attr(\"width\", cell.w)\n                            .attr(\"height\", cell.h);\n                        g.selectAll(\".point\")\n                            .attr(\"cx\", function(d) {\n                                return xScale(d.x);\n                            })\n                            .attr(\"cy\", function(d) {\n                                return yScale(d.y);\n                            })\n                            .attr(\"r\", 1);\n                    });\n            };\n\n            // Listen For Resize\n            osApi.onResize.add(resize);\n            angular.element($window).bind('resize',\n                _.debounce(resize, 300)\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, osCohortService, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{name:\"Quantile\"},{name:\"Quantize\"}];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2,3,4,5,6,7,8].map(function(v){ return {name:v+\" Bins\", value:v} });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (vm.colorOptions.length!=0) vm.colorOption = vm.colorOptions[0];\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n            \n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", {symbols:{$in:genes.map(function(v){ return v.gene;})}}).then(function(result){\n                    vm.close();\n                    genes.map(function(v){\n                        var gene = this.filter(function(s){\n                            return (s.symbols.indexOf(this)!=-1);\n                        },v.gene);\n\n                        if (gene.length==0){\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        }else if (gene.length>1){\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        }else if (gene.length==1){\n                            if (v.gene!=gene[0].hugo){\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v){ return v.status!=\"\"}), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene){ return gene.status; });\n\n                    var msg = \"\";\n                    \n                    if (types.Removed!=undefined && types.Removed.length>0){\n                        msg += \"Removed: \"+ types.Removed.map(function(v){ return v.message + \" - \"});\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length-2) + \"\\r\\n\";\n                    if (types.Converted!=undefined && types.Converted.length>0){\n                        msg += \"Converted: \"+ types.Converted.map(function(v){ return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length>0) alert(msg);\n                    var geneset = genes.filter(function(v){ return v.status!=\"Removed\"; }).map(function(v) {\n                                return v.gene.toUpperCase();\n                            });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n                        \n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\",\"#00a7f7\",\"#3d4eb8\",\"#ff9900\",\"#f7412d\",\"#795548\",\"#E91E63\",\"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name==\"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n                            \n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name==\"Quantile\"){\n                                scale.domain(Object.keys(data).map(function(key){return data[key]},{data:data})).range(values);\n                                labels = scale.quantiles().map(function(v){ return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c,i,a){ \n                                  if (i==0){ return \"-\\u221e \\u2194 \"+a[1]; }\n                                  else if (i==a.length-1){\n                                     return a[i] +\" \\u2194 +\\u221e\" //\\u226C\n                                  } \n                                return a[i] +\" \\u2194 \" +a[i+1];\n                                });\n                                values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                            }else{\n                                scale\n                                .domain([data.min, data.max])\n                                .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\"+parseFloat(v).toFixed(2); })\n                                values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            })\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\")!=-1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\")!=-1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\")!=-1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\")!=-1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            })\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osCohortService.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope:{ },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, osCohortService, $state, $scope, $timeout, $rootScope, d3) {\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.patientChartOption = null;\n            vm.cohortName = \"\";\n            vm.addCohort = function(){};\n            vm.setCohort = function(){};\n            vm.removeCohort = function(){};\n            vm.editItem = {name:''};\n            vm.editCohort = function(item){\n                vm.editItem = item;\n                vm.edit = true;\n            };\n            \n            vm.show = false;\n            vm.edit = false;\n            \n            \n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n                vm.show = true;\n                vm.showPatientHistory();\n                osCohortService.setPatientCohort([],\"All Patients\")\n            });\n\n            var onStateChange = $rootScope.$on('$stateChangeStart', function(event, toState){\n                 \n                switch(toState.name){\n                    case \"landing\":\n                    case \"tools\":\n                    case \"datasource\":\n                        vm.show = false;\n                        break;\n                    default:\n                        vm.show = true;\n                        break;\n                }\n            });\n            $rootScope.$on('$destroy', function(e){\n                vm.show = false;\n            });\n\n            // Configure Tray\n            var elTray = angular.element(\".cohort-menu\");\n            var mouseOver = function(){\n                elTray\n                    .removeClass(\"tray-collapsed-left\");\n            }\n            var mouseOut = function(){\n                elTray\n                    .addClass(\"tray-collapsed-left\");\n            }\n            \n            // Configure Tabs\n            var elTabPatients = angular.element('#cohort-tab-patients');\n            var elTabGenes    = angular.element('#cohort-tab-genes');\n            vm.showPatientHistory = function(){\n                elTabPatients.addClass(\"active\");\n                elTabGenes.removeClass(\"active\");\n                vm.cohorts = osCohortService.getPatientCohorts();\n                vm.addCohort = osCohortService.addPatientCohort;\n                vm.setCohort = osCohortService.setPatientCohort;\n                vm.removeCohort = osCohortService.delPatientCohort;\n            };\n            vm.showGeneHistory = function(){\n                elTabGenes.addClass(\"active\");\n                elTabPatients.removeClass(\"active\");\n                vm.cohorts = osCohortService.getGeneCohorts();\n                vm.addCohort = osCohortService.addGeneCohort;\n                vm.setCohort = osCohortService.setGeneCohort;\n                vm.removeCohort = osCohortService.delGeneCohort;\n            };\n\n            var isLocked = true;\n            vm.toggle = function(){\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                    \n                        \n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                   \n                }\n                osApi.onResize.dispatch();\n                    \n            }   \n\n\n            var barClick =function(d){\n                \n                \n                if (vm.patientChartOption.type==\"numeric\"){\n                    var bounds = d.label.split(\"-\").map(function(v){ return parseInt(v); });\n                    var prop = vm.patientChartOption.prop;\n                    osCohortService.filterActivePatientCohort(bounds, prop, vm.patientChartOption.type);\n                }\n            }\n\n\n            // Init SVG;\n            var svg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 238)\n                .attr(\"height\", 150)\n                .append(\"g\");\n          \n            $scope.$watch('vm.patientChartOption', function(){\n\n                if (vm.patientChartOption==null) return;\n                var data = vm.patientChartOption.data;\n\n                var barWidth = Math.floor(238/data.bins);\n                if (data.histRange[0]>0) data.histRange[0] -=2;\n                \n                var yScale = d3.scaleLinear()\n                    .domain([0,data.histRange[1]])\n                    .range([0,135]);\n\n                var bars = svg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"class\",\"cohort-menu-chart-bar\")\n                        .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                        .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .on(\"click\", barClick);\n\n                    bars\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                            .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                            .attr(\"height\", function(d) { return yScale(d.value); })\n                            .attr(\"width\", barWidth)\n\n                    bars.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n\n                    var labels = svg\n                        .selectAll(\"text\")\n                        .data(data.hist)\n\n                    labels.enter()\n                        .append(\"text\")\n                        .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                        .attr(\"y\", function(d) { \n                            return 145-yScale(d.value);\n                        })\n                        .attr(\"fill\", \"#000\")\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .attr(\"font-size\", \"8px\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(function(d){ return d.label; });\n\n                    labels\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                            .attr(\"y\", function(d) { \n                                var y = 145-yScale(d.value);\n                                if (y<0) y = 20;\n                                return y;\n                            })\n                            .text(function(d){ return d.label; });\n\n                    labels.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n                            \n\n            });\n\n\n            /* SURVIVAL - This very much needs to be refactored into a component */\n            var sChart = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            var sElXAxis = sChart.append(\"g\").attr(\"class\", \"axis\");\n            var sElYAxis = sChart.append(\"g\").attr(\"class\", \"axis\");\n\n            var sLayout = {\n                width: 238,\n                height: 170,\n                xScale : null,\n                yScale : null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n            var addCurve = function(points){\n            \n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) { return sLayout.xScale(d[0]); })\n                    .y(function(d) { return sLayout.yScale(d[2]); });\n\n                sChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", points.weight)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\",\"none\")\n                    .attr(\"d\", valueline(points.data.line));\n\n                for (var i=0; i<points.data.tick.length; i++){\n                    sChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", points.weight)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", sLayout.yScale(points.data.tick[i][2]))\n                        .attr(\"y2\", sLayout.yScale(points.data.tick[i][2])-5);\n                }\n            }\n            osCohortService.onMessage.add(function(result){\n                if (result.data.cmd==\"getSurvivalData\"){\n                    var data = result.data.data;\n                    if (data.correlationId==\"CohortMenuController\"){\n\n                        sChart\n                            .attr(\"width\", '100%')\n                            .attr(\"height\", sLayout.height);\n\n                        sLayout.xScale = d3.scaleLinear()\n                            .domain([result.data.data.min,  result.data.data.max])\n                            .range([30, sLayout.width]);\n\n                        sLayout.yScale = d3.scaleLinear()\n                            .domain([0,100])\n                            .range([sLayout.height-20,10]);\n\n\n                        sLayout.xAxis.scale(sLayout.xScale);\n                        sLayout.yAxis.scale(sLayout.yScale);\n\n                        sElYAxis.attr(\"transform\", \"translate(30, 0)\").call(sLayout.yAxis);\n                        sElXAxis.attr(\"transform\", \"translate(0, \" + (sLayout.yScale(0)) + \")\").call(sLayout.xAxis);\n\n                        sChart.selectAll(\".line\").remove();\n                        for (var i=0; i<data.cohorts.length; i++){\n                            if (i<data.cohorts.length-1){\n                                data.cohorts[i].weight = 1;\n                            }\n                            else{\n                                data.cohorts[i].weight = 1.5;\n                            }\n                            addCurve(data.cohorts[i]);\n                        }\n                        //addCurve(data.cohorts[0]);\n                        //data.cohorts[1].color = \"#0b97d3\";\n                        //addCurve(data.cohorts[1]);\n                    }\n                }\n            });\n            /* END SURVIVAL */\n\n\n\n\n\n\n            osCohortService.onPatientsSelect.add(function(obj){\n                if (angular.isUndefined(obj.color)){\n                    obj.color = \"#000\";\n                }\n                vm.cohortName = obj.name;\n                osCohortService.getPatientMetric();\n                var cohorts =  angular.fromJson(angular.toJson(osCohortService.getPatientCohorts()));\n                cohorts.push(obj);\n                osCohortService.getSurvivalData(cohorts,true,\"CohortMenuController\");\n            });\n            osCohortService.onGenesSelect.add(function(){\n\n            });\n            osCohortService.onMessage.add(function(obj){\n                if (obj.data.cmd!=\"setPatientMetric\") return;\n                \n                $timeout(function(){\n                    vm.patientTotal = obj.data.data.total;\n                    vm.patientSelected = obj.data.data.selected;\n                    vm.patientChartOptions = obj.data.data.features;\n                    vm.patientChartOption = (vm.patientChartOption==null) ? \n                        vm.patientChartOptions[0] :\n                        vm.patientChartOptions.filter(function(v){\n                            return (v.label==this.label)\n                        }, vm.patientChartOption)[0]\n                });                \n            });            \n\n            // And Go\n            vm.showPatientHistory();\n            \n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, osCohortService, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, .1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], .08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (.1 + Math.random()),\n                        y = 2 * Math.random() - .5,\n                        z = 10 / (.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n\n(function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .run(runBlock);\n\n     /** @ngInject */\n     function runBlock($rootScope, $state, $window, $exceptionHandler, osApi, osAuth) { //, $log\n\n         // Route Errors To Angular\n         $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n             if (!error) {\n                 error = new Error(message);\n                 error.fileName = fileName;\n                 error.lineNumber = lineNumber;\n                 error.columnNumber = (columnNumber || 0);\n             }\n             $exceptionHandler(error);\n         }\n\n         // Actions To Take On State Change\n         var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n             // Hide Busy Cursor\n             osApi.setBusy(false);\n\n             // Route unauthenticated users to landing page\n             if (toState.authenticate && !osAuth.isAuthenticated()) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n                 return;\n             }\n\n             //Redirect If Unable To Resolve Data Source\n             if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource === \"\")) {\n                 $state.transitionTo(\"datasource\")\n                 event.preventDefault();\n                 return;\n             } else {\n                 osApi.setDataSource(toParams.datasource);\n             }\n\n             //osApi.setDataSource({\"disease\":\"brca\",\"source\":\"TCGA\",\"name\":\"Breast\",\"img\":\"DSbreast.png\",\"beta\":false,\"collections\":{\"drug\":\"clinical_tcga_brca_drug\",\"f1\":\"clinical_tcga_brca_f1\",\"f2\":\"clinical_tcga_brca_f2\",\"f3\":\"clinical_tcga_brca_f3\",\"nte\":\"clinical_tcga_brca_nte\",\"nte_f1\":\"clinical_tcga_brca_nte_f1\",\"omf\":\"clinical_tcga_brca_omf\",\"pt\":\"clinical_tcga_brca_pt\",\"rad\":\"clinical_tcga_brca_rad\"},\"edges\":[{\"name\":\"TCGA GBM Classifiers\",\"edges\":\"edge_brca_tcgagbmclassifiers\",\"patientWeights\":\"edge_brca_tcgagbmclassifiers_patient_weight\",\"genesWeights\":\"edge_brca_tcgagbmclassifiers_gene_weight\"},{\"name\":\"Marker Genes 545\",\"edges\":\"edge_brca_markergenes545\",\"patientWeights\":\"edge_brca_markergenes545_patient_weight\",\"genesWeights\":\"edge_brca_markergenes545_gene_weight\"},{\"name\":\"TCGA Pan Cancer Mutated\",\"edges\":\"edge_brca_tcgapancancermutated\",\"patientWeights\":\"edge_brca_tcgapancancermutated_patient_weight\",\"genesWeights\":\"edge_brca_tcgapancancermutated_gene_weight\"},{\"name\":\"Onco Vogel 274\",\"edges\":\"edge_brca_oncovogel274\",\"patientWeights\":\"edge_brca_oncovogel274_patient_weight\",\"genesWeights\":\"edge_brca_oncovogel274_gene_weight\"}]});\n         });\n\n         $rootScope.$on('$destroy', off)\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('comparecluster', {\n                url: '/comparecluster/{datasource}',\n                template: '<os-compare-cluster>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                authenticate: false,\n                datasource: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, Handsontable:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('Handsontable', Handsontable)\n        .constant('localStorage', localStorage)\n        .constant('_', _);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n    \n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div ng-show=\\\"vm.show\\\" id=\\\"cohortMenu\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><ul class=\\\"nav nav-tabs\\\"><li id=\\\"cohort-tab-patients\\\" role=\\\"presentation\\\" style=\\\"width:50%;text-align:center;\\\" ng-click=\\\"vm.showPatientHistory()\\\"><a>Patients</a></li></ul><div style=\\\"background-color:#ffffff;border:#dddddd 1px solid;border-top-width:0px;padding:10px;\\\"><br><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;\\\">{{vm.patientChartOption.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li style=\\\"padding:0px 5px;\\\" ng-repeat=\\\"item in vm.patientChartOptions\\\" ng-click=\\\"vm.patientChartOption=item\\\">{{item.label}}</li></ul></div><br><div id=\\\"cohortmenu-survival\\\" style=\\\"border:0px solid #DDD;width:100%;height:180px;\\\"></div><br><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#000; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.addCohort()\\\" tooltip=\\\"Save Cohort\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-plus\\\"></i></button> <label>Selected Patients</label></div><div ng-if=\\\"vm.cohorts.length>0 && !vm.edit\\\"><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{cohort.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.editCohort(cohort)\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-edit\\\"></i></button> <a class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"margin-right:25px;\\\" ng-click=\\\"vm.setCohort(cohort)\\\">{{cohort.name}} ({{cohort.ids.length}})</a></div></div><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#0b97d3; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>All Patients</label></div><br><div ng-if=\\\"vm.edit\\\"><hr><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{vm.editItem.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>Edit Cohort</label></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-group\\\" style=\\\"margin-top:10px;\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.editItem.name\\\"></div><div class=\\\"col-xs-12 form-group\\\" style=\\\"text-align:right\\\"><button class=\\\"btn btn-sm btn-default\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.removeCohort(vm.editItem);vm.edit=false;\\\">Remove</button> <button class=\\\"btn btn-sm btn-primary\\\" style=\\\"width:80px\\\" ng-click=\\\"vm.edit=false\\\">Done</button></div></div></div></div></div></div><div id=\\\"cohortmenu-legand\\\"></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><br><h1>Step 1: Select A Data Source</h1><p>Oncoscape supports both public and private data sets. If you do not see the dataset you are interested in please contact us at <a href=\\\"mailto:oncoscape@fredhuth.org\\\">oncoscape@fredhutch.org</a>. To explore a new dataset use the naviation item in the top right.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{dataset.img}}\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}} ({{dataset.source}})</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Analysis Tools</a><ul class=\\\"dropdown-menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.tools\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a><ul class=\\\"dropdown-menu\\\" roll=\\\"menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.datasets\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showCohorts\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>My Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient IDs below and click save<br><input ng-model=\\\"vm.importPatientIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importPatientCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-8\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"max-width:200px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\">{{item.name}} ({{item.ids.length}})</div></div></div></div></li><li ng-show=\\\"vm.showHelp\\\"><a href=\\\"http://resources.sttrcancer.org/oncoscape\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li ng-show=\\\"vm.showLogout\\\"><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Highlight</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model-options=\\\"{ debounce: 200 }\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"\\\"></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Export</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.exportCsv()\\\">CSV</button></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patients</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.resetFilter()\\\">Show All</button></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Fields</label><div ng-repeat=\\\"column in vm.columns track by $index\\\" class=\\\"legend-bar\\\" style=\\\"position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;border-left-width: 0;\\\"><span style=\\\"max-width: 180px;font-size:12px;display: inline-block;\\\">{{column.displayName}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"column.show\\\" ng-change=\\\"vm.setColumns(true)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div></div></section></os-tray><section class=\\\"history-content history-grid-container\\\"><div class=\\\"container-fluid\\\" style=\\\"text-align:center;\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"history-grid\\\" style=\\\"overflow:hidden;\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing\\\"><header class=\\\"landing container-fluid\\\"><div class=\\\"row marquee\\\"><div class=\\\"col-sm-7\\\"><div class=\\\"header-content\\\"><div class=\\\"header-content-inner\\\"><h1>Oncoscape is a visualization platform for large-scale, heterogeneous clinical and molecular patient data.</h1><a class=\\\"btn btn-outline btn-xl page-scroll\\\" ng-click=\\\"vm.getStarted()\\\">Get Started</a></div></div></div></div></header><div class=\\\"container-fluid\\\" style=\\\"background-color:#000; color:#FFF;padding-top:200px;padding-bottom:200px;\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-7\\\"><h1 style=\\\"font-size:50px;\\\">Our Mission</h1><p style=\\\"font-size:30px;line-height:50px;\\\">Empower researchers to discover novel patterns and relationships between clinical and molecular factors.</p><a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">Publishing Guidelines</a></div><div class=\\\"col-sm-5\\\" style=\\\"text-align:center\\\"><img src=\\\"assets/images/thumb.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\" style=\\\"display:inline-block\\\"></div></div></div><div class=\\\"container-fluid\\\" style=\\\"background-color:#FFF;padding-top:200px;padding-bottom:200px;\\\"><div class=\\\"row\\\" style=\\\"background-color:#FFF;font-size:18px;\\\"><div class=\\\"col-sm-12\\\"><h1 style=\\\"font-size:50px;\\\">Steering Committee</h1></div><div class=\\\"col-sm-12 col-md-6\\\" style=\\\"padding:50px;\\\"><h2>Eric Holland, MD, PhD</h2><p>Director, Human Biology Division, Fred Hutch<br>Professor of Neurological Surgery, Chap and Eve Alvord and Elias Alvord Chair in Neuro-Oncology, and Director, Nancy and Buster Alvord Brain Tumor Center, UW Medicine<br>Director, Solid Tumor Translational Research, Fred Hutch and UW Medicine</p><p>Dr. Holland is a world-renowned physician-scientist who combines compassionate patient care with exacting laboratory research to discover more effective treatments for brain tumors. As a neurosurgeon, Dr. Holland specializes in caring for patients with glioblastomas, the most common malignant brain tumors in adults. He is committed to finding targeted treatment options for this aggressive cancer, which currently has few effective therapies. He continues to foster productive collaborations to spark discovery and advance precision oncology. He believes Oncoscape has the potential to transform patient treatment. Using this tool, researchers can now begin to group tumors by their genetic profiles to help physicians select therapies likely to work best for each patient.</p></div><div class=\\\"col-sm-12 col-md-6\\\" style=\\\"padding:50px;\\\"><h2>Matthew Trunnell</h2><p>Chief Information Officer &amp; VP of IT at Fred Hutch Cancer Research Center</p><p>Matthew works at the intersection of information technology and research in both academic and commercial environments. His contributions range from business systems analysis and solutions architecture to the management of complex informatics projects involving geographically distributed development and implementation teams. I have a proven ability to communicate with technical staff, to evaluate and assimilate new technologies and standards, and to develop effective computational solutions to address diverse needs.</p></div></div><div class=\\\"row\\\" style=\\\"background-color:#FFF; font-size:18px;\\\"><div class=\\\"col-sm-12 col-md-6\\\" style=\\\"padding:50px;\\\"><h2>Lisa McFerrin, PhD</h2><p>Bioinformatics project manager, Solid Tumor Translational Research, Fred Hutch</p><p>Dr. McFerrin specializes in the development of software and methods that bridge genomic and clinical data to advance the understanding of cancer biology and improve patient care. In her role as bioinformatics project manager within STTR, she designs tools that facilitate collaborative and reproducible research in order to lower the barriers in communication, analysis, and sharing of data, knowledge and methods. As an expert in bioinformatics, Dr. McFerrin applies mathematical and computational principles to understand large-scale biological data. Her background in such disciplines as computer science, mathematics, statistics and biology enables her to analyze data from genome sequences and clinical records to uncover novel, meaningful insights from datasets otherwise too complex to examine manually. Dr. McFerrin plays a key role in the development of Oncoscape, open-source software that helps scientists integrate information from molecular research in the laboratory with patient records and clinical studies. Her research includes the study of proteins that are involved in normal cell growth and metabolism but can also play a significant role in the development of cancer.</p></div><div class=\\\"col-sm-12 col-md-6\\\" style=\\\"padding:50px;\\\"><h2>Michael Zager</h2><p>Software Engineer, Solid Tumor Translational Research, Fred Hutch</p><p>Mr. Zager has been crafting digital strategies and executions for the past 16 years. He has served in leadership roles at notable experiential and digital agencies, founded two digtial studios and maintains a consulting business. Over the years he has executed initatives for bio-techs, start-ups and Fortune 500 companies such as Proctor & Gamble, Toyota and Coca-Cola. The diversity and scale of clients, industries and projects have given him experience working with a variety of technologies, languages and architectures. Michael’s passionate for transforming people’s lives with cutting edge technology lead him to the Fred Hutchinson. Today, he contributes enterprise architecture, software development best practices and big data expertise to Oncoscape, a visualization platform for large-scale, heterogeneous clinical and molecular patient data.</p></div></div></div><div class=\\\"container-fluid\\\" style=\\\"background-color:#000;padding-top:20px;padding-bottom:40px;text-align:center;\\\"><img src=\\\"http://www.sttrcancer.org/etc/designs/sttr/img/logo-fred-hutchinson-cancer-research-center.png\\\"> <img src=\\\"http://www.sttrcancer.org/etc/designs/sttr/img/logo-university-of-washington-medicine.png\\\" style=\\\"padding-left:50px;padding-right:50px;\\\"> <img src=\\\"http://www.sttrcancer.org/etc/designs/sttr/img/logo-seattle-cancer-care-alliance.png\\\"></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Gene or Patient\\\"></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <span class=\\\"h3-tool\\\">(Layout: {{vm.optPatientLayout.name}})</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><h3>Select a layout</h3></div><a class=\\\"col-sm-4 markers-command hvr-sweep-to-right\\\" style=\\\"padding-left:15px; padding-right:15px;\\\" ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\">{{item.name}}</a></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>PCA Type</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-label\\\"><h3>Variance</h3>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label>Cohorts</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">All Patients <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.all.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{cohort.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.displayMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.displayModes\\\" ng-click=\\\"vm.displayMode=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><div id=\\\"timelines-tip\\\" style=\\\"min-height:200px;\\\"><b>Rollover Event For Details</b></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-6\\\"><br><h1>Step 2: Select An Analysis Tool</h1><p>The list of tools depends upon the data source. If the requisite molecular or clinical data is not availbile for your disease please contact us at <a href=\\\"mailto:oncoscape@fredhuth.org\\\">oncoscape@fredhutch.org</a>. Use the navigation in the top right to switch between tools.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}