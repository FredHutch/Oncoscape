{"version":3,"sources":["scripts/app-ae0aba3994.js"],"names":["angular","module","trayPiechart","d3","TrayChartLink","scope","element","chart","select","append","attr","style","height","chart1","classed","chart2","$watch","data","draw","el","offset","arcs","pie","sort","value","d","arc","outerRadius","innerRadius","padAngle","cornerRadius","colors","block","selectAll","i","newBlock","enter","$inject","directive","restrict","data1","data2","link","replace","tray","TrayController","osApi","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","elIcon","addClass","removeClass","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","templateUrl","caption","content","controller","controllerAs","bindToController","transclude","trayBarchart","elTip","tip","html","call","newValue","barHeight","barWidth","length","binding","on","show","hide","transition","text","label","exit","remove","tools","ToolsController","$state","getTools","explore","tool","go","datasource","getDataSource","disease","setBusy","timelines","TimelinesController","osCohortService","$scope","$stateParams","$window","$document","moment","_","patientsAll","patientsFiltered","patientsDomain","xZoom","yZoom","xTran","yTran","scaleX","patientsSelectedIds","rowHeight","baseZoomX","baseZoomY","cohort","getCohort","timescales","name","valFn","val","log","abs","duration","asDays","filters","modes","displayModes","timescale","filter","mode","displayMode","events","align","resetZoom","setCohort","ALL","PATIENT","elScrollY","brushY","move","elScrollX","update","handleSize","brushX","brushSelect","elContainer","elAxis","elChart","elSelected","elHitarea","elPatients","layout","getLayout","width","innerWidth","left","right","innerHeight","updateData","updateSize","updateScrollbars","updateSelected","updatePatients","updateZoom","updateAxis","e","selected","map","toLowerCase","Infinity","forEach","patient","hash","hasOwnProperty","status","visible","indexOf","id","tsStart","event","tsStartAligned","tsEndAligned","tsEnd","domain","min","max","p","v","a","b","aTime","order","bTime","daysToUnit","round","axis","axisBottom","ticks","tickFormat","pow","css","selection","lower","upper","lowerPercent","upperPercent","deltaPercent","updateEvents","evts","color","selectedIndexes","selectedRows","scaleLinear","range","nice","patients","delay","patientEnter","lowerIndex","floor","upperIndex","ceil","ids","push","target","onCohortChange","c","patientIds","add","query","clinical","then","response","colorFn","Object","keys","key","evtArray","start","reduce","txt","charAt","toUpperCase","substr","unix","end","evtHash","groups","groupBy","prop","Status","$on","survival","SurvivalController","cohorts","getCohorts","formatPercent","formatDays","elBrush","elSurvival","elXAxis","elYAxis","brush","xScale","yScale","xAxis","yAxis","axisLeft","onBrushEnd","s","rangeSort","timeRange","invert","percentRange","cohortsToSearch","cohortFilter","line","time","survivalFrom","survivalTo","cohortReduce","union","alive","dead","execute","lines","setScale","timelineDomain","osLayout","scale","extent","addCurve","survivalDatum","datum","lastTick","lastLine","survivalData","minMax","debounce","sunburst","SunburstController","colorMap","charts","getColorMap","tags","object","barcharts","bars","radius","x","y","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","w","window","init","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","t","attrTween","drawSunburst","g","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","concat","apply","bar","values","difference","tree","barNode","reverse","tag","tagIndex","drawTree","chartLayer","yMax","yMin","chartHeight","nodes","node","each","spreadsheet","SpreadsheetController","$","$q","uiGridConstants","setSize","elGrid","ml","mr","gridApi","core","handleWindowResize","collections","collection","o","options","treeRowHeaderAlwaysVisible","enableGridMenu","enableSelectAll","onRegisterApi","rowSelectionChanged","rowSelectionChange","rowSelectionChangedBatch","exportCsv","type","cols","columnDefs","field","join","records","grid","api","getSelectedRows","open","encodeURI","sortSelectedFn","rowA","rowB","isSelected","sortSelected","col","columns","sortingAlgorithm","sortColumn","notifyDataChange","dataChange","OPTIONS","COLUMN","selectedIds","items","isUndefined","isArray","item","entity","patient_ID","clearSelectedRows","selectRow","ScatterController","setData","gl","d3Chart","dataset","geneSets","geneSet","search","$fields","geneset","source","result","memo","tmp","fldr","has","sources","types","pcaTypes","pcaType","pc1","pc2","pc3","xMin","xMax","zMin","zMax","animate","requestAnimationFrame","render","onMouseMove","mouse","clientX","clientY","onWindowResize","camera","aspect","updateProjectionMatrix","renderer","geometry","particles","attributes","raycaster","setFromCamera","intersects","intersectObject","INTERSECTED","index","array","PARTICLE_SIZE","needsUpdate","scene","THREE","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setClearColor","clear","domElement","Raycaster","Vector2","material","ShaderMaterial","uniforms","Color","texture","TextureLoader","load","vertexShader","document","getElementById","textContent","fragmentShader","alphaTest","BufferGeometry","Scene","PerspectiveCamera","position","z","controls","OrbitControls","enableDamping","dampingFactor","enableZoom","addEventListener","positions","Float32Array","sizes","l","si","setRGB","toArray","addAttribute","BufferAttribute","Points","setSelected","PlsrController","osHistory","$sce","saveSelected","addGeneSelection","__data__","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","frame","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","onGeneSelectionChange","linear","vectors","genes","bv","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","resize","PcaController","sampleIds","d3Points","setColors","legendCaption","legendNodes","degMap","isDefined","padding-left","d3Brush","scaleY","axisX","axisTop","axisY","d3xAxis","d3yAxis","SAMPLE","selectColor","allIds","deselectColor","toFixed","gene","onPatientColorChange","showPanelColor","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","endBatch","container","elements","minZoom","maxZoom","zoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","protocol","host","queryString","req","table","encodeURIComponent","toJson","method","headers","apikey","factory","signals","jStat","localStorage","_patientColor","Signal","onCohortsChange","getPatientColor","setPatientColor","patientColor","_dataSource","_data","_cohorts","_cohort","getData","statsFactory","getSurvivalSort","censor","getNumericStats","attribute","bin","props","pd","sd","stdev","count","hist","histogram","histRange","bins","pt","rv","getFactorStats","prev","curr","createHistogram","patientMap","total","features","createSurvival","stat","timeMap","isDead","pid","cohortFactory","cohortAll","numPatients","numSamples","sampleMap","numClinical","createWithSampleIds","ar","create","createWithPatientIds","samples","uuid","format","usedColors","availColors","loadData","Promise","resolve","all","samplemap","responses","sample","status_vital","trim","parseInt","days_to_last_follow_up","isNaN","days_to_death","loadCohorts","getItem","fromJson","saveCohort","setItem","deleteCohort","splice","importIds","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","loginGuest","network","thumb","login","response_type","force","logout","oauth_proxy","redirect_uri","thumbnail","initialized","reject","_tools","beta","_dataSources","img","onDataSource","onNavChange","rt","route","getDataSources","setDataSource","isObject","isString","markers","MarkersController","_stopLength","cyChart","deselect","setPatientCohort","setGeneCohort","tmpdata","worker","signal","over","out","edges","removeAll","mpState","mp","hasState","_colors","applyState","fn","optColors","getOptEdgeColors","optEdgeColors","abv","getGeneSet","genesets","optGeneSet","getPatientLayout","layouts","optPatientLayout","save","jsons","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","group","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optPatientLayouts","showPanelLayout","showPanelColorRna","searchCount","optCommandModes","optCommandMode","exeSearch","needle","doSearch","found","hideModal","filterModelEdge","vals","edge","cn","edgeToggle","cmd","lockPatients","lockGenes","lock","unselectify","selectify","results","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","weight","sizeNode","setOptions","Worker","msg","patients_html","patients_resize","patients_delete","patients_insert","degrees","patients_layout","annotation","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","edgeCounts","mouseIsOver","geneColors","postMessage","createOptions","f","opts","patientWeights","geneWeights","genesWeights","watches","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","terminate","LoginController","networks","loginSuccess","layoutPanel","LayoutPanelController","colorScales","colorScale","colorBins","colorBin","colorOptions","colorOption","tbl","category","subtype","optPatientColors","setColor","close","aname","bname","doClose","alert","setGeneColor","geneColor","match","op","message","symbols","$in","hugo","msgs","sortBy","undefined","Removed","Converted","lookup","pids","iv","output","labels","scaleQuantile","scaleQuantize","quantiles","parseFloat","unshift","zip","names","landing","LandingController","marquee","particlesNumber","particle","speed","getStarted","heatmap","HeatmapController","rotated","colLabels","rowLabels","textAnchor","textX","dendrogram","xPos","yPos","colDendrogram","rowDendrogram","cluster","separation","edgePar","dendrG","transform","brushend","sourceEvent","coords","minValue","colorScheme","dim","rows","boxW","boxH","boxes","gridlines","colorSchemes","scales","dendrogramClusters","dendrogramCluster","args","colDend","rowDend","colmap","xaxis","yaxis","$limit","loadHeatmap","kcol","krow","getCpuApi","getHeatmap","hmWidth","hmHeight","matrix","header","HeaderController","showImport","showTools","showDatasets","datasources","state","addPatientCohort","importCohort","split","importName","loadDataset","current","collapse","loadTool","DatasourceController","datasets","compareCluster","CompareClusterController","zoomed","elPlots","plot","scaleExtent","translateExtent","optionColors","optionLayouts","clusterIndexes","clusterColors","clusterLayouts","elBrushes","elHitareas","elPlot","hitArea","elLines","clusterIndex","loadState","calculated","extend","brushStart","brushEnd","loadLayout","drawLines","drawCluster","boxWidth","boxHeight","colorPanel","ColorPanelController","cohortMenu","CohortMenuController","$rootScope","$filter","cohortFeatures","cohortFeature","cohortSummary","summary","trustAsHtml","featureIdx","updateSurvival","updateCohort","histSvg","histSingleValueLabel","surSvg","surLines","surXAxis","surLayout","surAddCurve","curve","visibleCohorts","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","rect","j","rangeBand","n","yStackMax","bumpLayer","bump","exp","m","stack","layers","layer","margin","top","bottom","rangeRoundBands","tickSize","tickPadding","orient","property","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","error","Error","run","routerConfig","$stateProvider","$urlRouterProvider","resolveDatasource","resolveTools","resolveTool","resolveLanding","template","otherwise","config","constant","hello","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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AAgB,QAChBD,eAAgB,MAChBU,eAAgB,YAGpBf,SAAY,0BACZznB,OACI4D,QAAW,cACXikB,mBAAoB,qBACpBD,MAAS,UACTle,MAAS,QACTzJ,OAAU,QACVsoB,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZznB,OACI4D,QAAW,cACXikB,mBAAoB,oBACpBD,MAAS,UACTle,MAAS,OACTzJ,OAAU,QACVsoB,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,uBACZznB,OACI4D,QAAW,cACXikB,mBAAoB,oBACpBD,MAAS,UACTle,MAAS,OACTzJ,OAAU,OACVsoB,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZznB,OACI4D,QAAW,cACXikB,mBAAoB,qBACpBD,MAAS,iBACTle,MAAS,QACTzJ,OAAU,OACVsoB,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,sBACZznB,OACI4D,QAAW,cACXikB,mBAAoB,oBACpBD,MAAS,UACTle,MAAS,QACTzJ,OAAU,OACVsoB,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,+BACZznB,OACI4D,QAAW,cACXgkB,MAAS,iBACTW,YAAa,OACbR,eAAgB,MAChBD,eAAgB,SAGpBL,SAAY,gBACZznB,OACIsoB,gBAAiB,OACjBD,kBAAmB,SAGvBZ,SAAY,4BACZznB,OACI0J,MAAS,SAGb+d,SAAY,0BACZznB,OACIgoB,aAAcT,KAGlBE,SAAY,4BACZznB,OACIgoB,aAAc,MACdte,MAAS,MACTue,aAAc,SACdC,qBAAsB,WACtBC,qBAAsB,WAG1BV,SAAY,0BACZznB,OACIgoB,aAAc,QACdte,MAAS,MACTue,aAAc,SACdC,qBAAsB,WACtBO,qBAAsB,WACtBN,qBAAsB,QACtBO,qBAAsB,SAG1BjB,SAAY,8BACZznB,OACIgoB,aAAc,QACdte,MAAS,MACTue,aAAc,WAGlBR,SAAY,8BACZznB,OACIgoB,aAAc,QACdte,MAAS,SAGb+d,SAAY,8BACZznB,OACIgoB,aAAc,MACdte,MAAS,SAv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","file":"scripts/app-ae0aba3994.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui.grid',\n            'ui.grid.selection',\n            'ui.grid.cellNav',\n            'ui.grid.resizeColumns',\n            'ui.grid.moveColumns',\n            'ui.grid.pinning',\n            // 'ui.grid.grouping',\n            'ui.grid.autoResize',\n            'toastr'\n        ]);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayPiechart', trayPiechart);\n\n    /** @ngInject */\n    function trayPiechart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data1: '=chartData1',\n                data2: '=chartData2',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var chart1 = chart.append(\"g\").classed(\"chartLayer\", true);\n            var chart2 = chart.append(\"g\").classed(\"chartLayer\", true);\n\n            // var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n            //     return d.tip;\n            // });\n            // chart.call(elTip);\n            scope.$watch('data1', function(data) { draw(chart1, data, 0); });\n            scope.$watch('data2', function(data) { draw(chart2, data, scope.height - 10); });\n\n\n            var draw = function(el, data, offset) {\n\n                var arcs = d3.pie()\n                    .sort(null)\n                    .value(function(d) {\n                        return d.value;\n                    })\n                    (data);\n\n                var arc = d3.arc()\n                    .outerRadius((scope.height / 3) + 3)\n                    .innerRadius((scope.height / 3) - 13)\n                    .padAngle(0.03)\n                    .cornerRadius(0);\n\n\n                el.attr(\"transform\", \"translate(\" + [(scope.height / 2) + offset, scope.height / 2] + \")\");\n                var colors = [\"#0b97d3\", \"#EAEAEA\"];\n                var block = el.selectAll(\".arc\")\n                    .data(arcs)\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n                var newBlock = block.enter().append(\"g\").classed(\"arc\", true);\n\n                newBlock.append(\"path\")\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    //.attr(\"stroke\", \"gray\")\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n\n\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayBarchart', trayBarchart);\n\n    /** @ngInject */\n    function trayBarchart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data: '=chartData',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return d.tip;\n            });\n            chart.call(elTip);\n            scope.$watch('data', function(newValue) {\n                var barHeight = scope.height - 10;\n                var barWidth = (250 / newValue.length) - 1;\n                var binding = chart\n                    .selectAll(\"rect\")\n                    .data(scope.data);\n                binding.enter()\n                    .append(\"rect\")\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide)\n                    .transition()\n                    .attr(\"class\", \"tray-bar\")\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; })\n                    .text(function(d) { return d.label; });\n                binding.exit().remove();\n                binding\n                    .transition()\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; });\n\n\n\n            });\n\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n            var vm = this;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osCohortService, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var patientsAll, patientsFiltered, patientsDomain;\n            var patientsSelectedIds = [];\n            var rowHeight = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var scaleX;\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohort = osCohortService.getCohort();\n            vm.timescales = [\n                { name: 'Log', valFn: function(val) { return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2); } },\n                { name: 'Linear', valFn: function(val) { return moment.duration(val * 1000).asDays(); } }\n            ];\n            vm.filters = [\n                { name: 'Alive + Dead' },\n                { name: 'Only Alive' },\n                { name: 'Only Dead' }\n            ];\n            vm.modes = [\n                { name: \"Highlight\" },\n                { name: \"Filter\" }\n            ];\n            vm.displayModes = [\n                { name: 'All Patients' },\n                { name: 'Selected Patients' }\n            ];\n            vm.timescale = vm.timescales[0];\n            vm.filter = vm.filters[2];\n            vm.mode = vm.modes[0];\n            vm.displayMode = vm.displayModes[0];\n            vm.events = null;\n            vm.align = null;\n            vm.sort = null;\n            vm.resetZoom = function() {\n                patientsSelectedIds = [];\n                osCohortService.setCohort([], osCohortService.ALL, osCohortService.PATIENT);\n                elScrollY.call(brushY.move, null);\n                elScrollX.call(brushY.move, null);\n                vm.update();\n            };\n\n            // Elements\n            var brushY = d3.brushY().handleSize(3);\n            var brushX = d3.brushX().handleSize(3);\n            var brushSelect = d3.brushY().handleSize(1);\n            var elContainer = d3.select(\".timelines-content\");\n            var elAxis = elContainer.append(\"svg\").attr(\"class\", \"timeline-axis\");\n            var elScrollY = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-y\");\n            var elScrollX = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-x\");\n            var elChart = elContainer.append(\"svg\").attr(\"class\", \"timeline-chart\");\n            var elSelected = elChart.append(\"g\");\n            var elHitarea = elChart.append(\"g\");\n            var elPatients = elChart.append(\"g\");\n\n\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) { return d.tip; });\n            elChart.call(elTip);\n\n            elContainer = angular.element(\".timelines-content\");\n\n            // Utility\n            vm.update = function() {\n\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n                var height = $window.innerHeight - 200;\n\n\n                updateData();\n                updateSize(width, height, layout);\n                updateScrollbars(width, height);\n                updateSelected(width, height);\n                updatePatients(width, height);\n                updateZoom(width, height);\n                updateAxis(width, height);\n            };\n\n\n            // Update Data Models\n            var updateData = function() {\n                // Retrieve State\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected;\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Event Data\n                patientsFiltered = patientsAll;\n\n                // Filter\n                patientsDomain = [Infinity, -Infinity];\n                patientsFiltered.forEach(function(patient) {\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                    } else {\n\n                        // Filter Alive + Dead\n                        var status = patient.hash[\"Status\"].data.status;\n                        if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                            patient.visible = false;\n                        } else {\n                            if (vm.displayMode.name == \"Selected Patients\" && patientsSelectedIds.length > 0) {\n                                patient.visible = (patientsSelectedIds.indexOf(patient.id) != -1);\n                            } else {\n                                patient.visible = true;\n                            }\n                            if (patient.visible) {\n                                this.offset = 0 - patient.hash[this.align].tsStart;\n                                // Filter Events\n                                patient.events.forEach(function(event) {\n                                    event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                                    // Calculate Start + End Based On Alignment\n                                    if (event.visible) {\n                                        event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                                        event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                                        this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                                        this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                                    }\n                                }, this);\n                            }\n                        }\n                    }\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Remove Patients That Do Not Have Alignment Property\n                patientsFiltered = patientsFiltered.filter(function(p) {\n                    return p.visible;\n                });\n\n                // Set Selected\n                patientsFiltered.forEach(function(v) {\n                    v.selected = (patientsSelectedIds.indexOf(v.id) != -1);\n                });\n\n                // Sort Patients\n                patientsFiltered = patientsFiltered.sort(function(a, b) {\n                    if (a.status == b.status) {\n                        var aTime = a.events.filter(function(e) { return (e.name == sort && e.order == 1) })[0].tsStartAligned;\n                        var bTime = b.events.filter(function(e) { return (e.name == sort && e.order == 1) })[0].tsStartAligned;\n                        if (aTime > bTime) return 1;\n                        if (bTime > aTime) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            };\n            var daysToUnit = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n            var updateAxis = function() {\n                var axis = d3.axisBottom(scaleX).ticks(7);\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                elAxis.call(axis);\n            };\n\n            // Update Size\n            var updateSize = function(width, height, layout) {\n                elContainer.css(\"background\", \"#FAFAFA\").css(\"margin-left\", layout.left + 30).css(\"margin-right\", layout.right).css(\"width\", width + 20).css(\"height\", height + 20);\n                elScrollY.attr(\"height\", height);\n                elScrollX.attr(\"width\", width);\n                elChart.attr(\"height\", height).attr(\"width\", width).attr(\"fill\", \"blue\").attr('transform', 'translate(20,20)');\n                elPatients.attr(\"height\", height).attr(\"width\", width);\n                elSelected.attr(\"height\", height).attr(\"width\", width);\n                elAxis.style(\"top\", height + 20).attr(\"width\", width);\n                elHitarea.attr(\"width\", width).attr(\"height\", height);\n            };\n\n            // Update Zoom\n            var updateZoom = function(width, height) {\n                baseZoomY = height / (patientsFiltered.length * rowHeight);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                elPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n                elSelected.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            };\n\n\n\n            var updateScrollbars = function(width, height) {\n                elScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (rowHeight * patientsFiltered.length * yZoom) * -lowerPercent;\n                        } else {\n                            if (yZoom == baseZoomY && yTran === 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            elScrollY.call(brushY.move, null);\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        elSelected\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                elScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran == 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            elScrollX.call(brushX.move, null);\n\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n                    })\n                );\n            };\n\n\n\n            brushX.on(\"end\", null);\n            // Update Patients\n            var updateEvents = function(evts) {\n                evts.exit()\n                    .on(\"mouseover\", null)\n                    .on(\"mouseout\", null)\n                    .remove();\n                evts.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? (rowHeight - 2) / 2 : rowHeight - 2; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 1); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; })\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                evts\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? rowHeight / 2 : rowHeight; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 0); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; })\n            };\n\n            var updateSelected = function() {\n                // Transform Selections Into Index Positions - Don't need to render unselected'\n                var selectedIndexes = patientsFiltered.map(function(v, i) {\n                    return (v.selected) ? i : -1;\n                }).filter(function(v) { return v != -1; });\n\n\n                var selectedRows = elSelected.selectAll(\"rect\").data(selectedIndexes);\n\n                selectedRows.exit()\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"0\")\n                    .remove();\n\n                selectedRows.enter()\n                    .append('rect')\n                    .attr('width', '0')\n                    .attr('height', rowHeight - 2)\n                    .attr('y', 1)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; })\n                    .style(\"fill\", \"#cacaca\")\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"100%\");\n\n                selectedRows\n                    .transition()\n                    .duration(600)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; })\n\n            };\n            var updatePatients = function(width) {\n\n                // Set Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n                var patients = elPatients.selectAll(\"g.patient\").data(patientsFiltered);\n                patients.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n\n                var patientEnter = patients.enter()\n                    .append('g')\n                    .attr(\"class\", \"patient\")\n                    .attr('transform', function(d, i) {\n                        return \"translate(0,\" + (i * rowHeight) + \")\";\n                    });\n\n                updateEvents(patients.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n                updateEvents(patientEnter.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n                elHitarea.call(brushSelect);\n                brushSelect.on(\"end\", function() {\n                    if (d3.event.selection === null) {\n                        //osCohortService.setCohort([], \"Timelines\", osCohortService.PATIENT);\n                        return;\n                    }\n                    var lowerIndex = Math.floor(d3.event.selection[0] / yZoom / 20);\n                    var upperIndex = Math.ceil(d3.event.selection[1] / yZoom / 20);\n                    lowerIndex = Math.max(lowerIndex, 0);\n                    upperIndex = Math.min(upperIndex, patientsFiltered.length - 1);\n                    var ids = [];\n                    for (var i = lowerIndex; i <= upperIndex; i++) {\n                        ids.push(patientsFiltered[i].id);\n                    }\n                    osCohortService.setCohort(ids, \"Timelines\", osCohortService.PATIENT);\n                    elHitarea.call(d3.event.target.move, null);\n                });\n            };\n\n\n\n            // Application Events\n            var onCohortChange = function(c) {\n                vm.cohort = c;\n                patientsSelectedIds = vm.cohort.patientIds;\n                vm.update();\n\n            };\n            osCohortService.onCohortChange.add(onCohortChange);\n\n\n\n            // Load + Format Data\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start != null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            if (v.hasOwnProperty(\"data\")) {\n                                v.tip = Object.keys(v.data).reduce(function(p, c) {\n                                    try {\n                                        if (v.data[c] !== null) {\n                                            p += \"<br>\" + c\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .replace(/\\w\\S*/g, function(txt) {\n                                                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                                                }) + \": \" + v.data[c].toString()\n                                                .replace(/\\w\\S*/g, function(txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n                                        }\n                                    } catch (e) {\n                                        return \"\";\n                                    }\n                                    return p;\n                                }, v.name);\n                            } else if (v.hasOwnProperty(\"name\")) {\n                                v.tip = v.name;\n                            } else {\n                                v.tip = \"Unknown\";\n                            }\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end === null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end === null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            v.order = 1;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.name)) {\n                            if (p[c.name].tsStart > c.tsStart) p[c.name] = c;\n                        } else {\n                            p[c.name] = c;\n                        }\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n                data.forEach(function(patient) {\n                    var groups = _.groupBy(patient.events, 'name');\n                    var keys = Object.keys(groups).filter(function(prop) {\n                        return (this[prop].length > 1);\n                    }, groups);\n                    keys.forEach(function(v) {\n                        var i = 1;\n                        patient.events\n                            .filter(function(e) { return e.name == v; })\n                            .sort(function(a, b) {\n                                return a.tsStart - b.tsStart;\n                            }).forEach(function(v) {\n                                v.order = i;\n                                i++;\n                            });\n                    });\n                });\n                patientsAll = data.filter(function(v) {\n                    try {\n                        v.status = v.hash.Status.data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n                vm.update();\n                osApi.setBusy(false);\n            });\n\n            // Resize Events\n            osApi.onResize.add(vm.update);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n\n                osCohortService.onCohortChange.remove(onCohortChange);\n                brushX.on(\"end\", null);\n                brushY.on(\"end\", null);\n                brushSelect.on(\"end\", null);\n                osApi.onResize.remove(vm.update);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohorts = osCohortService.getCohorts();\n            vm.cohort = osCohortService.getCohort();\n            var onCohortChange = function(c) {\n                vm.cohort = c;\n                draw();\n            };\n            osCohortService.onCohortChange.add(onCohortChange);\n\n\n            vm.toggle = function() {\n                draw();\n            };\n\n            var formatPercent = function(d) {\n                return d + \"%\";\n            }\n            var formatDays = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n\n            // Create D3 Elements\n            var elContainer = angular.element(\"#survival-chart\");\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\");\n            var elBrush = elChart.append(\"g\").attr(\"class\", \"brush\");\n            var elSurvival = elChart.append(\"g\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var brush = d3.brush();\n\n\n\n\n            // Base Layout\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(5).tickFormat(formatDays),\n                yAxis: d3.axisLeft().ticks(5).tickFormat(formatPercent)\n            };\n\n            var onBrushEnd = function() {\n\n                if (!d3.event.selection) {\n                    osCohortService.setCohort([], \"Survival\", osCohortService.PATIENT);\n                    return;\n                }\n                var s = d3.event.selection;\n                osApi.setBusy(true);\n\n                // Map Selection To Time + Percent Ranges\n                var rangeSort = function(a, b) { return a - b; };\n\n                var timeRange = [s[0][0], s[1][0]].map(layout.xScale.invert).sort(rangeSort);\n                var percentRange = [s[0][1] - 10, s[1][1] - 10].map(layout.yScale.invert).sort(rangeSort);\n\n\n                // Determine Cohorts To Search (If All Patients Cohort Is Included, No Need To Look At Others)\n                var cohortsToSearch = vm.cohorts.filter(function(v) { return (v.show); });\n                if (cohortsToSearch.indexOf(vm.cohort) == -1) cohortsToSearch.push(vm.cohort);\n\n\n                // Build Patient Ids\n                var patientIds = [];\n                var cohortFilter = function(line) {\n                    return (\n                        (line.time >= timeRange[0]) &&\n                        (line.time <= timeRange[1]) &&\n                        (line.survivalFrom <= percentRange[1]) &&\n                        (line.survivalTo >= percentRange[0])\n                    );\n                };\n                var cohortReduce = function(p, c) {\n                    return _.union(p, c.alive, c.dead);\n                };\n                var execute = function() {\n                    for (var i = 0; i < cohortsToSearch.length; i++) {\n                        var data = cohortsToSearch[i].survival.data;\n                        patientIds = data.lines.filter(cohortFilter).reduce(cohortReduce, patientIds);\n                        patientIds = data.ticks.filter(cohortFilter).reduce(cohortReduce, patientIds);\n\n                    }\n                    osCohortService.setCohort(patientIds, \"Survival\", osCohortService.PATIENT);\n                };\n\n                // Loop Through Cohorts To Add Patient Ids Of Qualifying Lines + Ticks\n                if (cohortsToSearch.length > 2) $timeout(execute, 50);\n                else execute();\n            };\n            // Utility Methods\n            var setScale = function(timelineDomain) {\n                var osLayout = osApi.getLayout();\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - 60;\n                layout.height = $window.innerHeight - 125;\n                elContainer.css(\"margin-left\", osLayout.left + 20);\n                elChart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", layout.height);\n\n                layout.xScale = d3.scaleLinear()\n                    .domain(timelineDomain)\n                    .range([50, layout.width]);\n\n                layout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([layout.height - 50, 1]);\n\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n\n                elYAxis.attr(\"transform\", \"translate(50, 10)\").call(layout.yAxis);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.yScale(0) + 10) + \")\").call(layout.xAxis);\n\n\n                brush.extent([\n                    [50, 10],\n                    [layout.width, layout.height - 40]\n                ]);\n                brush.on(\"end\", onBrushEnd);\n                elBrush.call(brush);\n\n            }\n\n            var addCurve = function(survivalDatum) {\n\n                var data = survivalDatum.survival.data;\n                var color = survivalDatum.color;\n\n                var time = 0;\n                data.lines.forEach(function(element) {\n\n                    elSurvival.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", layout.xScale(element.time))\n                        .attr(\"x2\", layout.xScale(element.time))\n                        .attr(\"y1\", layout.yScale(element.survivalFrom) + 10)\n                        .attr(\"y2\", layout.yScale(element.survivalTo) + 10)\n                        .datum(element);\n                    elSurvival.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", layout.xScale(time))\n                        .attr(\"x2\", layout.xScale(element.time))\n                        .attr(\"y1\", layout.yScale(element.survivalFrom) + 10)\n                        .attr(\"y2\", layout.yScale(element.survivalFrom) + 10)\n\n                    time = element.time;\n                });\n\n                data.ticks.forEach(function(element) {\n                    elSurvival.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", layout.xScale(element.time))\n                        .attr(\"x2\", layout.xScale(element.time))\n                        .attr(\"y1\", layout.yScale(element.survivalFrom) + 12)\n                        .attr(\"y2\", layout.yScale(element.survivalFrom) + 8)\n                        .datum(element);\n                }, this);\n\n                // If Censor Occurs After Last Death Add line\n                if (data.ticks.length > 1 && data.lines.length > 1) {\n                    var lastTick = data.ticks[data.ticks.length - 1];\n                    var lastLine = data.lines[data.lines.length - 1];\n                    if (lastTick.time > lastLine.time) {\n                        elSurvival.append(\"line\")\n                            .attr(\"class\", \"line\")\n                            .attr(\"stroke-width\", 0.5)\n                            .attr(\"stroke\", color)\n                            .attr(\"x1\", layout.xScale(lastLine.time))\n                            .attr(\"x2\", layout.xScale(lastTick.time))\n                            .attr(\"y1\", layout.yScale(lastTick.survivalFrom) + 10)\n                            .attr(\"y2\", layout.yScale(lastTick.survivalFrom) + 10);\n                    }\n                }\n\n\n            };\n\n\n            var draw = function() {\n                osApi.setBusy(true);\n\n                // Clear Lines\n                elSurvival.selectAll(\".line\").remove();\n                elSurvival.selectAll(\".tick\").remove();\n\n                var survivalData = vm.cohorts.filter(function(v) { return v.show });\n                var minMax = survivalData.reduce(function(p, c) {\n                    p.min = Math.min(p.min, c.survival.min);\n                    p.max = Math.max(p.max, c.survival.max);\n                    return p;\n                }, { min: Infinity, max: -Infinity });\n\n                // Add Survival\n                minMax.min = Math.min(minMax.min, vm.cohort.survival.min);\n                minMax.max = Math.max(minMax.max, vm.cohort.survival.max);\n\n                // Set Scale\n                setScale([minMax.min - 1, minMax.max + 1]);\n\n                // Draw Lines\n                for (var i = 0; i < survivalData.length; i++) {\n                    addCurve(survivalData[i]);\n                }\n\n                if (survivalData.indexOf(vm.cohort) == -1) addCurve(vm.cohort);\n\n                osApi.setBusy(false);\n            };\n\n            draw();\n\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onCohortChange.add(onCohortChange);\n            });\n\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n            \n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v){\n                                return {name:v, color:colorMap[v]};\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function(){\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v){ return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n                    \n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n  \n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n                    \n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSpreadsheet', spreadsheet);\n\n    /** @ngInject */\n    function spreadsheet() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/spreadsheet/spreadsheet.html',\n            controller: SpreadsheetController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SpreadsheetController(osApi, osCohortService, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, uiGridConstants) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.setSize = function() {\n                var elGrid = angular.element(\"#spreadsheet-grid\")[0];\n                var osLayout = osApi.getLayout();\n                var ml = osLayout.left - 1;\n                var mr = osLayout.right - 1;\n                if (ml === -1) ml = 19;\n                if (mr === -1) mr = 19;\n                elGrid.style[\"margin-left\"] = ml + \"px\";\n                elGrid.style[\"margin-right\"] = mr + \"px\";\n                elGrid.style.width = ($window.innerWidth - ml - mr - 2) + \"px\";\n                elGrid.style.height = ($window.innerHeight - 140) + \"px\";\n                vm.gridApi.core.handleWindowResize();\n            };\n            vm.collections = Object.keys(osApi.getDataSource().clinical)\n                .map(function(key) {\n                    var v = this.data[key];\n                    return {\n                        name: key,\n                        collection: v\n                    };\n                }, {\n                    data: osApi.getDataSource().clinical\n                })\n                .filter(function(o) {\n                    return (o.name != \"events\" && o.name != \"samplemap\");\n                });\n            vm.collection = vm.collections[0];\n            vm.options = {\n                treeRowHeaderAlwaysVisible: false,\n                enableGridMenu: true,\n                enableSelectAll: true,\n                onRegisterApi: function(gridApi) {\n                    vm.gridApi = gridApi;\n                    gridApi.selection.on.rowSelectionChanged($scope, rowSelectionChange);\n                    gridApi.selection.on.rowSelectionChangedBatch($scope, rowSelectionChange);\n                }\n            };\n            vm.exportCsv = function(type) {\n                var cols = vm.options.columnDefs.filter(function(c) { return c.visible; }).map(function(v) { return v.field; });\n                var data = \"data:text/csv;charset=utf-8,\\\"\" + cols.join(\"\\\",\\\"\") + \"\\\"\\n\";\n                var records = (type == \"selected\") ? vm.gridApi.grid.api.selection.getSelectedRows() : vm.options.data;\n\n                records\n                    .forEach(function(v) {\n                        var datum = cols.map(function(v) {\n                            return this[v];\n                        }, v);\n                        data += \"\\\"\" + datum.join(\"\\\",\\\"\") + \"\\\"\\n\";\n                    });\n                $window.open(encodeURI(data));\n            };\n\n            var sortSelectedFn = function(a, b, rowA, rowB) {\n                if (!rowA.hasOwnProperty(\"isSelected\")) rowA.isSelected = false;\n                if (!rowB.hasOwnProperty(\"isSelected\")) rowB.isSelected = false;\n                if (rowA.isSelected === rowB.isSelected) return 0;\n                if (rowA.isSelected) return -1;\n                return 1;\n            };\n\n            vm.sortSelected = function() {\n                var col = vm.gridApi.grid.columns[0];\n                col.sortingAlgorithm = sortSelectedFn;\n                vm.gridApi.grid.sortColumn(col, \"asc\", false);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.OPTIONS);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n            };\n\n            var selectedIds = [];\n            var rowSelectionChange = function(items, e) {\n                if (angular.isUndefined(e)) return; // Programatic Selection\n                if (!angular.isArray(items)) items = [items];\n                items.forEach(function(item) {\n                    if (item.isSelected) selectedIds.push(item.entity.patient_ID);\n                    else selectedIds = selectedIds.filter(function(v) { return v != item.entity.patient_ID; });\n                });\n                osCohortService.setCohort(selectedIds,\n                    \"Spreadsheet\",\n                    osCohortService.PATIENT\n                );\n            };\n\n            // Initialize\n            vm.datasource = osApi.getDataSource();\n\n            // App Event :: Resize\n            osApi.onResize.add(vm.setSize);\n\n            // App Event :: Cohort Change\n            var onCohortChange = function(cohort) {\n                vm.gridApi.grid.api.selection.clearSelectedRows();\n                selectedIds = cohort.patientIds;\n                var selected = vm.options.data.filter(function(v) {\n                    return selectedIds.indexOf(v.patient_ID) != -1;\n                });\n                selected.forEach(function(i) { vm.gridApi.grid.api.selection.selectRow(i); });\n            };\n            osCohortService.onCohortChange.add(onCohortChange);\n\n            // Setup Watches\n            $scope.$watch(\"vm.collection\", function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        angular.element(\".ui-grid-icon-menu\").text(\"Columns\");\n                        var cols = Object.keys(response.data[0])\n                            .map(function(col) {\n                                return { field: col, name: col.replace(/_/gi, ' '), width: 250, visible: true };\n                            });\n                        vm.options.columnDefs = cols;\n                        vm.options.data = response.data.map(function(v) {\n                            v.color = \"#F0DDC0\";\n                            v.selected = false;\n                            return v;\n                        });\n                        $timeout(function() {\n                            onCohortChange(osCohortService.getCohort());\n                        }, 1);\n                        vm.setSize();\n                        osApi.setBusy(false);\n                    });\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(vm.setSize);\n                osCohortService.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osScatter', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/scatter/scatter.html',\n            controller: ScatterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ScatterController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n          \n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model\n            var vm = (function(vm, osApi) {\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        $fields: ['type', 'geneset', 'source']\n                    })\n                    .then(function(response) {\n                     \n                        var data = response.data.map(function(v){\n                            return {a:v.geneset,b:v.source,c:v.type}\n                        });\n                        \n                        var result = _.reduce(data,function(memo, val){ \n                            var tmp = memo;\n                                _.each(val, function(fldr){\n                                    if(!_.has(tmp, fldr)){\n                                        tmp[fldr] = {}\n                                    }\n                                    tmp = tmp[fldr]\n                                });\n                            return memo\n                        },{});\n                        vm.geneSets = Object.keys(result).map(function(geneset){return {name: geneset, sources:\n                            Object.keys(result[geneset]).map(function(source){ return {name:source, types:\n                                Object.keys(result[geneset][source]).map(function(type) { return {name:type\n                                }})\n                            }})\n                        }});\n                      \n                        vm.geneSet = vm.geneSets[0];\n                    });\n                return vm;\n\n            })(this, osApi);\n\n            // Updates PCA Types When Geneset Changes\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet==null) return;\n                vm.sources = vm.geneSet.sources;\n                vm.source = vm.sources[0];\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet==null) return;\n                vm.pcaTypes = vm.source.types;\n                vm.pcaType = vm.pcaTypes[0];\n            });\n\n            // Fetches PCA Data + Calculates Min Max for XYZ\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (geneset == null) return;\n                osApi.query(\"brain_pcascores_cbio_prcomp-allgenes-cnv\")\n                    .then(function(response) {\n\n                        vm.pc1 = response.data[0].pc1;\n                        vm.pc2 = response.data[0].pc2;\n                        vm.pc3 = response.data[0].pc3;\n\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: response.data[0].data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            p.zMin = Math.min(p.zMin, c[2]);\n                            p.zMax = Math.max(p.zMax, c[2]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            zMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity,\n                            zMax: -Infinity\n                        });\n\n                        \n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n                        minMax.zMax = Math.max(Math.abs(minMax.zMin), minMax.zMax);\n                        minMax.zMin = -minMax.zMax;\n\n                        setData();\n                    });\n            });\n\n            var gl = (function(){\n\n    \n                // Renderer\n                var renderer = new THREE.WebGLRenderer({antialias: true});\n                renderer.setPixelRatio( window.devicePixelRatio );\n                renderer.setSize(500,560);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n                renderer.clear();\n                $(\"#scatter-chart\").append(renderer.domElement);\n\n                // Raycaster\n                var raycaster = new THREE.Raycaster();\n\t\t\t\tvar mouse = new THREE.Vector2();\n                var intersects, INTERSECTED;\n                var PARTICLE_SIZE = 3;\n\n                // Material\n                var material = new THREE.ShaderMaterial( {\n\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tcolor:   { value: new THREE.Color( 0xffffff ) },\n\t\t\t\t\t\ttexture: { value: new THREE.TextureLoader().load( \"assets/images/disc.png\" ) }\n\t\t\t\t\t},\n\t\t\t\t\tvertexShader: document.getElementById( 'vertexshader' ).textContent,\n\t\t\t\t\tfragmentShader: document.getElementById( 'fragmentshader' ).textContent,\n\n\t\t\t\t\talphaTest: 0.3,\n\n\t\t\t\t} );\n\n                // geometry\n                var particles;\n                var geometry = new THREE.BufferGeometry();\n\n                // Scene\n                var scene = new THREE.Scene();\n\n                // Camera\n                var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\n\t\t\t    camera.position.z = 250;\n\n                var controls = new THREE.OrbitControls( camera, renderer.domElement );\n\t\t\t\tcontrols.enableDamping = true;\n\t\t\t\tcontrols.dampingFactor = 0.25;\n\t\t\t\tcontrols.enableZoom = true;\n\n                function animate() {\n\t\t\t\t    requestAnimationFrame( animate );\n\t\t\t\t    render();\n                }\n\n                // Track mouseunction \n                function onMouseMove( event ) {\n                    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n                    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\t\t\n                }\n                window.addEventListener( 'mousemove', onMouseMove, false );\n\t            function onWindowResize() {\n\t\t\t\t    camera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\t    camera.updateProjectionMatrix();\n\t\t\t\t    renderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t    }\n                window.addEventListener( 'resize', onWindowResize, false );\n\n                var setData = function(data, minMax){\n                    var positions = new Float32Array( data.length * 3 );\n                    var colors = new Float32Array( data.length * 3 );\n                    var sizes = new Float32Array( data.length );\n                    var color = new THREE.Color();\n                    for ( var i = 0, l = data.length; i < l; i ++ ) {\n                        var si = i*3;\n                        positions[si] = data[i][0];\n                        positions[si+1] = data[i][1];\n                        positions[si+2] = data[i][2];\n                        color.setRGB(.5,.5,.5);\n                        color.toArray(colors, i*3);\n                        sizes[i] = PARTICLE_SIZE;\n                    }\n\n                    geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n                    geometry.addAttribute( 'customColor', new THREE.BufferAttribute( colors, 3 ) );\n\t\t\t\t    geometry.addAttribute( 'size', new THREE.BufferAttribute( sizes, 1 ) );\n\n                    particles = new THREE.Points( geometry, material );\n                    scene.add( particles );                  \n                    animate();\n                }\n                var setSelected = function(ids){\n\n                }\n\n                var selectedColor =  new THREE.Color( 0xff0000 );\n\n                function render() {\n//                    \tparticles.rotation.x += 0.0005;\n//\t\t\t\tparticles.rotation.y += 0.001;\n\n\t\t\t\tvar geometry = particles.geometry;\n\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\traycaster.setFromCamera( mouse, camera );\n\n\t\t\t\tintersects = raycaster.intersectObject( particles );\n\n\t\t\t\tif ( intersects.length > 0 ) {\n\n\t\t\t\t\tif ( INTERSECTED != intersects[ 0 ].index ) {\n\n\t\t\t\t\t\tattributes.size.array[ INTERSECTED ] = PARTICLE_SIZE;\n\n\t\t\t\t\t\tINTERSECTED = intersects[ 0 ].index;\n\n\t\t\t\t\t\tattributes.size.array[ INTERSECTED ] = PARTICLE_SIZE * 1.25;\n\t\t\t\t\t\tattributes.size.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( INTERSECTED !== null ) {\n\n\t\t\t\t\tattributes.size.array[ INTERSECTED ] = PARTICLE_SIZE;\n\t\t\t\t\tattributes.size.needsUpdate = true;\n\t\t\t\t\tINTERSECTED = null;\n\n\t\t\t\t}\n                //     //particles.rotation.x += 0.0005;\n                //     //particles.rotation.y += 0.001;\n\n                   \n                //     raycaster.setFromCamera( mouse, camera );\n\n                //     intersects = raycaster.intersectObject( particles );\n   \n                //     if (intersects.length>0){\n                //         intersects[0].object.material.color = selectedColor;\n                //     }\n                //     // if ( intersects.length > 0 ) {\n\n                //     //     if ( INTERSECTED != intersects[ 0 ].index ) {\n\n                //     //         //attributes.size.array[ INTERSECTED ] = PARTICLE_SIZE;\n\n                //     //         INTERSECTED = intersects[ 0 ].index;\n\n                //     //         //attributes.size.array[ INTERSECTED ] = PARTICLE_SIZE * 1.25;\n                //     //         //attributes.size.needsUpdate = true;\n\n                //     //     }\n\n                //     // } else if ( INTERSECTED !== null ) {\n\n                //     //     //attributes.size.array[ INTERSECTED ] = PARTICLE_SIZE;\n                //     //     //attributes.size.needsUpdate = true;\n                //     //     INTERSECTED = null;\n\n                //     // }\n\n                    renderer.render( scene, camera );\n                }\n\n                return {\n                    setData:setData,\n                    setSelected: setSelected\n                }\n            })();\n\n            var d3 = (function(){\n\n                var setData = function(data, minMax){\n                    \n                }\n                var setSelected = function(ids){\n                    \n                }\n                return {\n                    setData:setData,\n                    setSelected: setSelected\n                }\n            })();\n        \n            function setData() {\n                gl.setData(data, minMax);\n                d3.setData(data, minMax);\n            }\n\n         \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var brush;\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Add Labels\n            d3xAxis.append(\"text\")\n                .attr(\"x\", 50)\n                .attr(\"y\", 15)\n                .text(\"PC1\");\n\n\n            d3yAxis.append(\"text\")\n                .attr(\"y\", 55)\n                .attr(\"x\", 25)\n                .text(\"PC2\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model Update\n            var vm = (function(vm, osApi) {\n                vm.loadings = [];\n                vm.pc1 = vm.pc2 = [];\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                vm.selectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", true);\n                            allIds.push(d.id);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osCohortService.setCohort(allIds, \"PCA\", osCohortService.SAMPLE);\n                };\n                vm.deselectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", false);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osCohortService.setCohort(allIds, \"PCA\", osCohortService.SAMPLE);\n                };\n                return vm;\n            })(this, osApi);\n\n            // Setup Watches\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet === null) return;\n                vm.sources = vm.geneSet.sources;\n                vm.source = vm.sources[0];\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet === null) return;\n                vm.pcaTypes = vm.source.types;\n                vm.pcaType = vm.pcaTypes[0];\n            });\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (angular.isUndefined(geneset)) return;\n                osApi.query(vm.datasource.disease + \"_loadings\", { type: 'ucsc_prcomp-allgenes-cnv' }).then(function(response) {\n\n                    var loadings = response.data[0].loadings;\n                    var scale = d3.scaleLinear()\n                        .domain([loadings[loadings.length - 1].max, loadings[0].max])\n                        .range([.1, 1]);\n                    vm.loadings = response.data[0].loadings.map(function(v) {\n                        return {\n                            tip: v.values.reduce(function(p, c) {\n                                p.index += 1;\n                                p.text += \"<br>PC\" + p.index + \": \" + (c * 100).toFixed(2) + \"%\";\n                                return p;\n                            }, { text: v.gene, index: 0 }).text,\n                            value: this(v.max)\n                        };\n                    }, scale);\n\n                });\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        type: vm.pcaType.name,\n                        source: vm.source.name\n                    })\n                    .then(function(response) {\n                        var d = response.data[0];\n                        vm.pc1 = [\n                            { name: 'PC1', value: d.pc1 },\n                            { name: '', value: 100 - d.pc1 }\n\n                        ];\n                        vm.pc2 = [\n                            { name: 'PC2', value: d.pc2 },\n                            { name: '', value: 100 - d.pc2 }\n                        ];\n\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: d.data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n\n                        draw();\n                    });\n            });\n\n\n            // Utility Functions\n            function setSelected() {\n                var selectedIds = cohort.sampleIds;\n                d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                    return (selectedIds.indexOf(this.__data__.id) >= 0);\n                });\n            }\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (angular.isDefined(this[v.id])) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 3)\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", 0.8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(5);\n                axisY = d3.axisLeft().scale(scaleY).ticks(5);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + scaleY(0) + \")\")\n                    .call(axisX);\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + scaleX(0) + \", 0)\")\n                    .call(axisY);\n\n\n                // Brush\n                brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osCohortService.setCohort([], osCohortService.ALL, osCohortService.SAMPLE);\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n\n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n                        osCohortService.setCohort(ids, \"PCA\", osCohortService.SAMPLE);\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush);\n                onCohortChange(osCohortService.getCohort());\n                osApi.setBusy(false);\n            }\n\n            // App Event :: Resize\n            osApi.onResize.add(draw);\n\n            // App Event :: Color change\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            };\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // App Event :: Cohort Change\n            var cohort = osCohortService.getCohorts();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osCohortService.onCohortChange.add(onCohortChange);\n\n            // Initialize\n            // var pcaScores = vm.datasource.calculated.filter(function(v) { return v.type == \"pcaScores\"; });\n\n\n            osApi.query(\"render_pca\", {\n                    disease: vm.datasource.disease,\n                    $fields: ['type', 'geneset', 'source']\n                })\n                .then(function(response) {\n                    var data = response.data.map(function(v) {\n                        return {\n                            a: v.geneset,\n                            b: v.source,\n                            c: v.type\n                        };\n                    });\n\n                    var result = _.reduce(data, function(memo, val) {\n                        var tmp = memo;\n                        _.each(val, function(fldr) {\n                            if (!_.has(tmp, fldr)) {\n                                tmp[fldr] = {};\n                            }\n                            tmp = tmp[fldr];\n                        });\n                        return memo;\n                    }, {});\n\n                    vm.geneSets = Object.keys(result).map(function(geneset) {\n                        return {\n                            name: geneset,\n                            sources: Object.keys(result[geneset]).map(function(source) {\n                                return {\n                                    name: source,\n                                    types: Object.keys(result[geneset][source]).map(function(type) {\n                                        return {\n                                            name: type\n                                        };\n                                    })\n                                };\n                            })\n                        };\n                    });\n                    vm.geneSet = vm.geneSets[0];\n                });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(draw);\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                osCohortService.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osCohortService, $state, $stateParams, $scope, $sce, $window, moment, cytoscape) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            }\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                    container: elChart,\n                    elements: markersNetwork.elements,\n                    style: getStyle(),\n                    minZoom: .1,\n                    maxZoom: 5,\n                    zoom: 0.2,\n                    wheelSensitivity: .5,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                })\n\n                //.on('select', 'node', _.debounce(saveSelected, 300))\n                .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            //vm.frame = $sce.trustAsResourceUrl(\"https://resources.sttrcancer.org/markers-patients\");\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    })\n\n                // Register History Component\n                /*\n                osHistory.onGeneSelectionChange.add(function(selection){\n                    selectedIds = selection.ids;\n                    setSelected();\n                });\n                setSelected();\n                */\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \"/api/\";\n         url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osCohortService', osCohortService);\n\n    /** @ngInject */\n    function osCohortService(osApi, moment, signals, $q, jStat, _, localStorage) {\n\n        // There are three types of cohorts: ALL = All users, SAVED: Saved, UNSAVED\n\n        // Messages\n        var onCohortChange = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        // Patient Color\n        var _patientColor;\n        var getPatientColor = function() { return _patientColor; };\n        var setPatientColor = function(patientColor) {\n            _patientColor = patientColor;\n            onPatientColorChange.dispatch(patientColor);\n        };\n\n        // State Variables\n        var _dataSource = null;\n        var _data = null; // This is the clinical and sample to patient mapping data. \n        var _cohorts = null; // Collection of Cohorts\n        var _cohort = null;\n\n        // Accessors\n        var getCohorts = function() { return _cohorts; };\n        var getCohort = function() { return _cohort; };\n        var getData = function() { return _data; };\n\n        // Stats Factory\n        var statsFactory = (function(jStat) {\n\n            function getSurvivalSort(a, b) {\n                // Sort By Time Then Censor (0=dead, 1=alive)\n                return (a.time > b.time) ? 1 :\n                    (a.time < b.time) ? -1 :\n                    (a.censor > b.censor) ? 1 :\n                    (a.censor < b.censor) ? -1 :\n                    0;\n            }\n\n            function getNumericStats(patients, attribute) {\n                var len = patients.length;\n                var bin =\n                    (len < 2) ? 1 :\n                    (len < 6) ? 2 :\n                    (len < 9) ? 3 :\n                    (len < 18) ? 6 :\n                    (len < 36) ? 8 :\n                    10;\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n\n                var data = {\n                    type: \"numeric\",\n                    min: jStat.min(props),\n                    max: jStat.max(props),\n                    range: jStat.range(props),\n                    sd: jStat.stdev(props),\n                    count: 0,\n                    hist: jStat.histogram(props, bin),\n                    histRange: [],\n                    bins: bin\n                };\n\n                data.histRange = [jStat.min(data.hist), jStat.max(data.hist)];\n                data.count = data.hist.reduce(function(p, c) { p += c; return p; }, 0);\n\n                bin = Math.round(data.range / bin);\n                data.hist = data.hist.map(function(pt) {\n                    var rv = {\n                        label: this.start + \"-\" + (this.start + this.bin),\n                        value: pt\n                    };\n                    this.start += this.bin;\n                    return rv;\n                }, {\n                    bin: bin,\n                    start: data.min\n                });\n                return data;\n            }\n\n            function getFactorStats(patients, attribute) {\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n                var factors = props\n                    .reduce(function(prev, curr) {\n                        prev[curr] = (prev.hasOwnProperty(curr)) ? prev[curr] + 1 : 1;\n                        return prev;\n                    }, {});\n\n                factors = Object.keys(factors).map(function(key) {\n                    return {\n                        label: key,\n                        value: this.factors[key]\n                    };\n                }, {\n                    factors: factors\n                });\n\n                var values = factors.map(function(v) {\n                    return v.value;\n                });\n                var data = {\n                    type: \"factor\",\n                    min: jStat.min(values),\n                    max: jStat.max(values),\n                    range: jStat.range(values),\n                    sd: jStat.stdev(values),\n                    count: 0,\n                    hist: factors,\n                    histRange: [],\n                    bins: factors.length\n                };\n                data.histRange = [data.min, data.max];\n                data.count = data.hist.reduce(function(p, c) { p += c.value; return p; }, 0);\n                return data;\n            }\n\n            var createHistogram = function(ids, data) {\n\n                // Transform Ids Into Clinical Records + Remove Nulls\n                var clinical = ids.map(function(v) {\n                    var patient = this[v];\n                    if (patient === null) return null;\n                    return patient.clinical;\n                }, data.patientMap).filter(function(v) { return v != null; })\n\n                return {\n                    total: Object.keys(data.patientMap).length,\n                    selected: clinical.length,\n                    features: [{\n                            label: \"Age At Diagnosis\",\n                            data: getNumericStats(clinical, \"age_at_diagnosis\"),\n                            prop: \"age_at_diagnosis\",\n                            type: \"numeric\"\n                        },\n                        //{label: \"Death\", data:getNumericStats(data,\"days_to_death\"), prop:\"days_to_death\" , type:\"numeric\"},\n                        {\n                            label: \"Gender\",\n                            data: getFactorStats(clinical, \"gender\"),\n                            prop: \"gender\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Race\",\n                            data: getFactorStats(clinical, \"race\"),\n                            prop: \"race\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Ethnicity\",\n                            data: getFactorStats(clinical, \"ethnicity\"),\n                            prop: \"ethnicity\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Vital\",\n                            data: getFactorStats(clinical, \"status_vital\"),\n                            prop: \"status_vital\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Disease Status\",\n                            data: getFactorStats(clinical, \"last_known_disease_status\"),\n                            prop: \"last_known_disease_status\",\n                            type: \"factor\"\n                        }\n                    ]\n                };\n            };\n\n            var createSurvival = function(ids, data) {\n\n                // Transform Ids Into Survival Records + Remove Nulls\n                var survival = ids.map(function(v) {\n                        var patient = this[v];\n                        if (patient === null) return null;\n                        return patient.survival;\n                    }, data.patientMap)\n                    .filter(function(v) { return angular.isDefined(v); })\n                    .sort(getSurvivalSort);\n\n\n                // Add 0,0 Point To Line\n                //survival.unshift({ time: 0, censor: 1, pid: \"\" });\n\n                // Build Object To Hold Stats\n                var stat = {\n                    total: survival.length,\n                    alive: survival.reduce(function(p, c) { return p + c.censor; }, 0),\n                    dead: survival.reduce(function(p, c) { return p + Math.abs(c.censor - 1); }, 0),\n                    min: survival.reduce(function(p, c) { return Math.min(p, c.time); }, Infinity),\n                    max: survival.reduce(function(p, c) { return Math.max(p, c.time); }, -Infinity),\n                    data: survival\n                };\n\n\n                var timeMap = stat.data\n                    .reduce(function(p, c) {\n                        var isDead = (c.censor === 0);\n                        if (isDead) p.dead += 1;\n                        var time = (p.hasOwnProperty(c.time)) ? p[c.time] : { survivalFrom: p.survival, time: 0, dead: [], alive: [] };\n                        time.time = c.time;\n                        time.survivalTo = Math.round((1 - (p.dead / p.total)) * 100);\n                        time[isDead ? \"dead\" : \"alive\"].push(c.pid);\n                        p[time.time] = time;\n                        p.survival = time.survivalTo;\n                        return p;\n                    }, { dead: 0, total: stat.total, survival: 100 });\n\n                delete timeMap.survival;\n                delete timeMap.total;\n                delete timeMap.dead;\n                stat.data = Object.keys(timeMap)\n                    .map(function(key) { return this[key]; }, timeMap)\n                    .reduce(function(p, c) {\n                        if (c.dead.length > 0) p.lines.push(c);\n                        if (c.alive.length > 0) p.ticks.push(c);\n                        return p;\n                    }, { ticks: [], lines: [] });\n\n\n                return stat;\n            };\n\n            return {\n                createHistogram: createHistogram,\n                createSurvival: createSurvival\n            };\n        })(jStat);\n\n        // Cohort Factory\n        var cohortFactory = (function(osApi, statsFactory) {\n\n            var _data = null;\n            var cohortAll = null;\n\n            // Set Data Create Internal Reference + Also Calc's Cohort All Group\n            var setData = function(data) {\n\n                _data = data;\n                cohortAll = {\n                    color: '#0b97d3',\n                    patientIds: [],\n                    sampleIds: [],\n                    name: 'All Patients + Samples',\n                    histogram: statsFactory.createHistogram(Object.keys(data.patientMap), data),\n                    survival: statsFactory.createSurvival(Object.keys(data.patientMap), data),\n                    numPatients: Object.keys(_data.patientMap).length,\n                    numSamples: Object.keys(_data.sampleMap).length,\n                    numClinical: Object.keys(_data.patientMap).reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                    show: true,\n                    type: 'ALL'\n                };\n            };\n\n            var createWithSampleIds = function(name, sampleIds, data) {\n\n                if (sampleIds.length === 0) return cohortAll;\n                var patientIds = sampleIds\n                    .map(function(v) { return this.hasOwnProperty(v) ? this[v] : null; }, data.sampleMap)\n                    .filter(function(v) { return (v !== null); }) // Remove Null\n                    .filter(function(item, i, ar) { return ar.indexOf(item) === i; }); // Remove Dups\n\n                return create(name, patientIds, sampleIds);\n            };\n\n            var createWithPatientIds = function(name, patientIds, data) {\n\n                if (patientIds.length === 0) return cohortAll;\n                var sampleIds = [].concat\n                    .apply([], patientIds\n                        .map(function(v) { return this.hasOwnProperty(v) ? this[v].samples : null; }, data.patientMap))\n                    .filter(function(item, i, ar) { return ar.indexOf(item) === i; });\n\n                return create(name, patientIds, sampleIds);\n            };\n\n            var create = function(name, patientIds, sampleIds) {\n                var rv = {\n                    uuid: Math.random().toString().substr(2),\n                    color: '#000',\n                    patientIds: patientIds,\n                    sampleIds: sampleIds,\n                    name: name,\n                    histogram: statsFactory.createHistogram(patientIds, _data),\n                    survival: statsFactory.createSurvival(patientIds, _data),\n                    numPatients: patientIds.length,\n                    numSamples: sampleIds.length,\n                    numClinical: patientIds.reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                    show: true,\n                    type: 'UNSAVED'\n                };\n                return rv;\n            };\n\n            return {\n                setData: setData,\n                createWithSampleIds: createWithSampleIds,\n                createWithPatientIds: createWithPatientIds\n            };\n\n        })(osApi, statsFactory, _data);\n\n        var colors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70', '#B71C1C', '#880E4F', '#4A148C', '#311B92', '#0D47A1', '#006064', '#1B5E20'];\n        var setCohort = function(cohort, name, type) {\n            // Create Cohort If Array Passed\n            if (angular.isArray(cohort)) {\n                name += \"  (\" + moment().format('hh:mm:ss') + \")\";\n                cohort = cohortFactory[(type == \"PATIENT\") ? \"createWithPatientIds\" : \"createWithSampleIds\"](name, cohort, _data);\n                cohort.type = (cohort.patientIds.length === 0) ? \"ALL\" : \"UNSAVED\";\n                if (cohort.type != \"ALL\") {\n                    var usedColors = _cohorts.map(function(v) { return v.color; });\n                    var availColors = colors.filter(function(v) { return (usedColors.indexOf(v) == -1); });\n                    cohort.color = availColors[0];\n                }\n            }\n            _cohort = cohort;\n            onCohortChange.dispatch(_cohort);\n        };\n\n        // Loads Data Nessisary To Map Patients + Samples + Clinical Data To Derive Stats\n        var loadData = function() {\n            return new Promise(function(resolve) {\n                if (_data !== null) resolve(_data);\n                _dataSource = osApi.getDataSource();\n                $q.all([\n                    osApi.query(_dataSource.clinical.samplemap),\n                    osApi.query(_dataSource.clinical.patient)\n                ]).then(function(responses) {\n                    var data = {};\n\n                    // Map of Samples To Patients\n                    data.sampleMap = responses[0].data[0];\n\n                    // Map of Patients To Samples + Clinical Using Samples Ids\n                    data.patientMap = Object.keys(data.sampleMap).reduce(function(p, c) {\n                        var patient = data.sampleMap[c];\n                        var sample = c;\n                        if (p.hasOwnProperty(patient)) {\n                            p[patient].samples.push(sample);\n                        } else {\n                            p[patient] = { samples: [sample] };\n                        }\n                        return p;\n                    }, {});\n                    responses[1].data.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.patient_ID)) {\n                            p[c.patient_ID].clinical = c;\n                        } else {\n                            p[c.patient_ID] = { clinical: c, samples: [] };\n                        }\n                        return p;\n                    }, data.patientMap);\n\n                    // Survival Data \n                    responses[1].data.map(function(v) {\n\n                        // No Status - Exclude\n                        if (!v.hasOwnProperty(\"status_vital\")) return null;\n                        if (v.status_vital === null) return null;\n\n                        // Get Time - Or Exclude    \n                        var status = v.status_vital.toString().trim().toUpperCase();\n                        var time;\n                        if (status == \"ALIVE\") { // Alive = Sensor 2\n                            if (!v.hasOwnProperty(\"days_to_last_follow_up\")) return null;\n                            time = parseInt(v.days_to_last_follow_up);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, censor: 1, time: time };\n                        }\n                        if (status == \"DEAD\") { // Dead = Sensor 1\n                            if (!v.hasOwnProperty(\"days_to_death\")) return null;\n                            time = parseInt(v.days_to_death);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, censor: 0, time: time };\n                        }\n                        return null;\n                    }).reduce(function(p, c) {\n                        if (c !== null) {\n                            p[c.pid].survival = c;\n                        }\n                        return p;\n                    }, data.patientMap);\n                    cohortFactory.setData(data);\n                    _data = data;\n                    resolve(_data);\n                });\n            });\n        };\n\n        var loadCohorts = function() {\n            return new Promise(function(resolve) {\n                loadData().then(function() {\n\n                    // Try + Pull From Local Storage\n                    _cohorts = localStorage.getItem(osApi.getDataSource().disease + 'Cohorts');\n\n                    // If Successful Set Selected + Resolve\n                    if (_cohorts !== null) {\n                        _cohorts = angular.fromJson(_cohorts);\n                        _cohort = _cohorts[0];\n                    } else {\n                        _cohorts = [cohortFactory.createWithPatientIds(\"ALL\", [], _data)];\n                        _cohort = _cohorts[0];\n                        _cohort.type = \"ALL\";\n                    }\n\n                    onCohortsChange.dispatch(_cohorts);\n                    onCohortChange.dispatch(_cohort);\n                    resolve(_cohorts);\n                });\n            });\n        };\n\n        var saveCohort = function() {\n            _cohort.type = \"SAVED\";\n            _cohorts.push(_cohort);\n            localStorage.setItem(osApi.getDataSource().disease + 'Cohorts', angular.toJson(_cohorts));\n\n        };\n        var deleteCohort = function(cohort) {\n            _cohorts.splice(_cohorts.indexOf(cohort), 1);\n            localStorage.setItem(osApi.getDataSource().disease + 'Cohorts', angular.toJson(_cohorts));\n            setCohort([], \"\", \"PATIENT\");\n        };\n\n        // Converts Sample Ids To A List of Sample Ids\n        var importIds = function(ids, name) {\n            var sampleIds = _.union.apply(null, ids\n                .map(function(id) { // Convert All Ids to Patient Ids\n                    id = id.toUpperCase().trim(); // Clean input\n                    return _data.sampleMap.hasOwnProperty(id) ? _data.sampleMap[id] : id;\n                })\n                .filter(function(id) { // Remove Invalid Patient Ids\n                    return _data.patientMap.hasOwnProperty(id);\n                })\n                .map(function(id) { // Convert Patient Ids To Sample Arrays\n                    return _data.patientMap[id].samples;\n                })); // Union Merges Arrays + Removes Dups\n\n            setCohort(sampleIds, name, \"SAMPLE\");\n            saveCohort();\n        }\n\n\n        var api = {\n            ALL: \"All Patients\",\n            SAMPLE: \"SAMPLE\",\n            PATIENT: \"PATIENT\",\n\n            onPatientColorChange: onPatientColorChange,\n            setPatientColor: setPatientColor,\n            getPatientColor: getPatientColor,\n\n            onCohortChange: onCohortChange,\n            onCohortsChange: onCohortsChange,\n\n            importIds: importIds,\n            loadCohorts: loadCohorts,\n            getData: getData,\n            getCohorts: getCohorts,\n            getCohort: getCohort,\n            setCohort: setCohort,\n            saveCohort: saveCohort,\n            deleteCohort: deleteCohort\n        };\n\n        return api;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n            id: 'guest',\n            name: 'Guest',\n            icon: 'fa fa-user'\n        }, {\n            id: 'google',\n            name: 'Google',\n            icon: 'fa fa-google-plus',\n            key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }];\n\n        /*}, {\n            id: 'facebook',\n            name: 'Facebook',\n            icon: 'fa fa-facebook',\n            key: '142281766208909',\n            mode: 'implicit'\n        }, {\n            id: 'github',\n            name: 'GitHub',\n            icon: 'fa fa-github-alt',\n            key: '78b5dbe2ba756151169e',\n            mode: 'explicit'\n        },{\n            id: 'instagram',\n            name: 'Instagram',\n            icon: 'fa fa-instagram',\n            key: '3578c1b7c8c248c6ba80784b9ede0c52',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }, {\n            id: 'twitter',\n            name: 'Twitter',\n            icon: 'fa fa-twitter',\n            key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n            mode: 'implicit'\n        }, {\n            id: 'windows',\n            name: 'Win Live',\n            icon: 'fa fa-windows',\n            key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n            mode: 'implicit'\n        }, {\n            id: 'dropbox',\n            name: 'Dropbox',\n            icon: 'fa fa-dropbox',\n            key: 'dropbox',\n            mode: 'implicit'\n        }, {\n            id: 'flickr',\n            name: 'Flickr',\n            icon: 'fa fa-flickr',\n            key: '',\n            mode: 'implicit'\n        }*/\n\n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var loginGuest = function() {\n            user = {\n                network: 'guest',\n                id: 'x',\n                name: 'Guest',\n                thumb: 'Guest.png'\n            };\n            osApi.init().then(function() {\n                onLogin.dispatch();\n            });\n        }\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            loginGuest: loginGuest,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, $, $window, _) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n        var onNavChange = new signals.Signal();\n\n        // Resize\n        angular.element($window).bind('resize', _.debounce(onResize.dispatch, 900));\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n        // DataSources\n        var _dataSources;\n        var _dataSource;\n        var _tools;\n        var getTools = function() {\n            return _tools.filter(function(item) {\n                return (_dataSource.tools.indexOf(item.route) !== -1);\n            }).sort(function(a, b) {\n                if (a.name < b.name) return -1;\n                if (a.name > b.name) return 1;\n                return 0;\n            });\n        };\n        var getDataSources = function() {\n            return _dataSources;\n        };\n        var getDataSource = function() {\n            return _dataSource;\n        };\n        var setDataSource = function(value) {\n            if (angular.isObject(value)) {\n                if (_dataSource != value) {\n                    _dataSource = value;\n                    onDataSource.dispatch(_dataSource);\n                }\n            } else if (angular.isString(value)) {\n                if (_dataSource.disease != value) {\n                    if (_dataSource != value) {\n                        _dataSource = _dataSources.filter(function(v) {\n                            return v.disease == this.key\n                        }, {\n                            key: value\n                        })[0]\n                        onDataSource.dispatch(_dataSource);\n                    }\n                }\n            }\n        };\n\n        // Initialize (Load Tools Raw Data + DataSources)\n        var initialized = false;\n\n        function init() {\n            if (initialized) return new Promise(function(resolve) { resolve(); });\n            initialized = true;\n            return Promise.all([\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_tools\").then(function(response) {\n                        _tools = response.data;\n                        resolve(_tools);\n                    }, reject);\n                }),\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_datasources\", {\n                        beta: false\n                    }).then(function(response) {\n                        _dataSource = { disease: '' };\n                        _dataSources = response.data\n                            .filter(function(d) {\n                                return angular.isDefined(d.img)\n                            })\n                            .map(function(d) {\n                                d.name = d.name.trim();\n                                return d;\n                            })\n                            .sort(function(a, b) {\n                                return (a.img < b.img) ? -1 :\n                                    (a.img > b.img) ? 1 :\n                                    (a.disease < b.disease) ? -1 :\n                                    (a.disease > b.disease) ? 1 :\n                                    0;\n                            });\n                        resolve(_dataSources);\n                    }, reject);\n                })\n            ]);\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        return {\n            init: init,\n            query: query,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            getTools: getTools,\n            getLayout: getLayout,\n            onNavChange: onNavChange,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            setBusy: setBusy\n        }\n    }\n})();\n\n// Returns Promise\n// var _cpuApi;\n// (function(serviceEndpoint) {\n//     var server = serviceEndpoint.substring(0, serviceEndpoint.replace(\"//\", \"--\").indexOf(\"/\"));\n//     var createMethod = function(obj, method) {\n//         var fnName = 'get' + method.charAt(0).toUpperCase() + method.slice(1).toLowerCase();\n//         obj[fnName] = function(options) {\n//             return new Promise(function(resolve) {\n//                 $.ajax({\n//                     url: serviceEndpoint + \"/\" + method,\n//                     type: \"POST\",\n//                     data: angular.toJson(options),\n//                     contentType: \"application/json; charset=utf-8\",\n//                     dataType: \"text\",\n//                     beforeSend: function(xhr, settings) {\n//                         settings.xhrFields = settings.xhrFields || {};\n//                         settings.xhrFields.withCredentials = false;\n//                         settings.crossDomain = true;\n//                     }\n//                 }).done(function(response) {\n//                     response = response.split(\"\\n\");\n//                     var url = server + response[0];\n//                     $.ajax({\n//                         url: url,\n//                         type: \"GET\",\n//                         crossDomain: true,\n//                         beforeSend: function(xhr, settings) {\n//                             settings.xhrFields = settings.xhrFields || {};\n//                             settings.xhrFields.withCredentials = false;\n//                             settings.crossDomain = true;\n//                         }\n//                     }).done(function(response) {\n//                         resolve(response);\n//                     });\n//                 });\n//             });\n//         }\n//     }\n//     return new Promise(function(resolve) {\n//         $.get(serviceEndpoint).then(function(methods) {\n//             var api = methods.split(\"\\n\").reduce(function(obj, method) {\n//                 if (method != \"\") createMethod(obj, method)\n//                 return obj;\n//             }, {})\n//             api.getEndpoint = function() {\n//                 return serviceEndpoint;\n//             }\n//             resolve(api);\n//         });\n//     });\n// })(\"https://oncoscape-test.fhcrc.org/ocpu/library/oncoscape/R\").then(function(v) {\n//     _cpuApi = v;\n// });\n// var getCpuApi = function() {\n//     return _cpuApi;\n// };\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, osCohortService, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n\n            // State\n            var mpState = (function(osApi, osCohortService) {\n                // Retrieve State\n                var mp = localStorage.getItem(\"MP-\" + osApi.getDataSource().disease);\n                var hasState = (mp !== null)\n                if (hasState) mp = angular.fromJson(mp);\n\n                var _colors = null;\n                var setColors = function(c) {\n                    _colors = c;\n                }\n                var applyState = function(fn, cyChart) {\n                    if (!hasState) return;\n                    osCohortService.onPatientColorChange.dispatch(mp.optColors);\n                    requestAnimationFrame(function() {\n                        cyChart.startBatch();\n                        cyChart.add(mp.edges);\n                        cyChart.endBatch();\n                    });\n                };\n\n                var getOptEdgeColors = function() {\n\n                    if (hasState) return mp.optEdgeColors;\n                    return [{\n                        name: 'Mutation',\n                        abv: 'm',\n                        show: true,\n                        color: '#9C27B0',\n                        class: 'switch-mutation',\n                        count: '',\n                        id: 0\n                    }, {\n                        name: 'Amplification',\n                        abv: 'cnG2',\n                        show: true,\n                        color: '#3F51B5',\n                        class: 'switch-cnG2',\n                        count: '',\n                        id: 2\n                    }, {\n                        name: 'Gain',\n                        abv: 'cnG1',\n                        show: true,\n                        color: '#03A9F4',\n                        class: 'switch-cnG1',\n                        count: '',\n                        id: 1\n                    }, {\n                        name: 'Loss',\n                        abv: 'cnL1',\n                        show: true,\n                        color: '#FF9800',\n                        class: 'switch-cnL1',\n                        count: '',\n                        id: -1\n                    }, {\n                        name: 'Deletion',\n                        abv: 'cnL2',\n                        show: true,\n                        color: '#F44336',\n                        class: 'switch-cnL2',\n                        count: '',\n                        id: -2\n                    }];\n                };\n\n                var getGeneSet = function(genesets) {\n                    if (hasState) {\n                        return genesets.filter(function(v) {\n                            return v.name == mp.optGeneSet.name;\n                        }, mp.optGeneSet.name)[0];\n                    }\n                    if (osApi.getDataSource().disease == \"brain\") {\n                        return genesets.filter(function(v) {\n                            return v.name == \"Marker genes 545\";\n                        })[0];\n                    } else {\n                        return genesets.filter(function(v) {\n                            return v.name == \"TCGA pancan mutated\";\n                        })[0];\n                    }\n                };\n\n                var getPatientLayout = function(layouts) {\n                    if (hasState) {\n                        return layouts.filter(function(v) {\n                            return v.name == mp.optPatientLayout.name;\n                        }, mp.optPatientLayout.name)[0];\n                    } else {\n                        return layouts[0];\n                    }\n                };\n                var save = function(vm, cyChart) {\n                    var s = {};\n                    s.optEdgeColors = vm.optEdgeColors;\n                    s.optGeneSet = vm.optGeneSet;\n                    s.optPatientLayout = vm.optPatientLayout;\n                    s.optColors = _colors;\n                    s.edges = cyChart.$('edge[edgeType=\"cn\"]').jsons();\n                    localStorage.setItem(\"MP-\" + osApi.getDataSource().disease, angular.toJson(s));\n                };\n\n                return {\n                    applyState: applyState,\n                    getOptEdgeColors: getOptEdgeColors,\n                    getGeneSet: getGeneSet,\n                    getPatientLayout: getPatientLayout,\n                    setColors: setColors,\n                    save: save\n                };\n            })(osApi, osCohortService);\n\n\n\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    'container': elChart,\n                    'style': [{\n                        'selector': 'core',\n                        'style': {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        'selector': 'node',\n                        'style': {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"telomere\"]',\n                        'style': {\n                            'background-color': \"#3993fa\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]:selected',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'border-color': \"#000\",\n                            'border-width': 5\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]',\n                        'style': {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"right\",\n                            'text-margin-x': 5,\n                            'color': '#000',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'background-color': \"#000000\",\n                            'border-color': \"#000\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"centromere\"]',\n                        'style': {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"annotation-text\"]',\n                        'style': {\n                            'font-size': '400px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFF',\n                            'height': '0px',\n                            'width': '0px',\n                            'shape': 'round',\n                            'label': \"data(label)\",\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: .5,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: 0.05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#3993fa\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })()\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi, mpState) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n                vm.optGeneSets = [];\n                vm.optGeneSet = null;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout = null;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n                vm.searchCount = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.exeSearch = function() {\n                    var needle = vm.search.toUpperCase().trim();\n                    var count = 0;\n                    var doSearch = (needle.length > 0);\n                    cyChart.$('node').forEach(function(el) {\n                        var found = (doSearch) ? (el.id().toUpperCase().indexOf(needle) === 0) : false;\n                        if (found) count += 1;\n                        el[found ? \"select\" : \"deselect\"]();\n                    });\n                    vm.searchCount = (count === 0) ? \"\" : \"(\" + count + \" found)\";\n                    $timeout(function() { vm.searchCount = \"\"; }, 3000, true);\n                };\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                }\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function() {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = mpState.getOptEdgeColors();\n\n                // Populate Dropdowns + Draw Chromosome\n                $q.all([\n                    osApi.query(\"render_chromosome\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'cluster',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'color',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    })\n                ]).then(function(results) {\n\n                    vm.optGeneSets = results[0].data;\n                    vm.optGeneSet = mpState.getGeneSet(vm.optGeneSets);\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = mpState.getPatientLayout(vm.optPatientLayouts);\n                });\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi, mpState);\n\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50)\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function() {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([.005, 20]).range([5, 1])\n            var nodeScale = d3.scaleLog().domain([.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([.01, 2]);\n            var resizeNodes = function() {\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < .375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n                cyChart.endBatch();\n            }\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length == 0) return;\n                    var items = data.map(function(item) {\n                        return this.getElementById(item);\n                    }, cyChart);\n                    try {\n                        cyChart.collection(items).remove();\n                    } catch (e) {}\n                };\n                cmd.patients_html = function() {\n\n                };\n                cmd.patients_resize = function() {\n\n                };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 100\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n\n\n                    //Initial Node Selection & Color\n                    var cohort = osCohortService.getCohort();\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (this.indexOf(node.id()) != -1) node.select();\n\n                    }, cohort.sampleIds);\n                    cyChart.endBatch();\n                    vm.zoom.reset()\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n                    mpState.applyState(onPatientColorChange, cyChart);\n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text'],edge[nodeType='annotation-line'],node[nodeType='annotation-point']\").remove();\n                    if (data.annotation) {\n                        cyChart.add(data.annotation);\n\n                    }\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        try {\n                            var pos = data.data[node.id()];\n                            pos.x -= 4000;\n                            node.position(pos);\n                        } catch (e) {}\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 500\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        try {\n                            cyChart.add(data.edges);\n                        } catch (e) {}\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    var edges = osApi.getDataSource().edges.filter(function(f) {\n                        return f.name == this.geneset\n                    }, {\n                        geneset: geneset\n                    })[0];\n\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        edges: {\n                            patientWeights: edges.patientWeights,\n                            geneWeights: edges.genesWeights,\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.name == this)\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                }\n            })(cyChart, vm)\n\n            vm.cmd = function() {};\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function(vm, $scope) {\n                var watches = 1;\n\n                var update = function() {\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n\n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize()\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length == 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var _stopLength = 0; // Hack - need to fix\n            function onCohortChange(cohort) {\n                if (cohort.sampleIds.length == _stopLength) return; // Preform more robust check\n                _stopLength = cohort.sampleIds.length;\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (cohort.sampleIds.indexOf(node.id()) != -1) node.select();\n                });\n                cyChart.endBatch();\n            }\n            osCohortService.onCohortChange.add(onCohortChange);\n\n            function setPatientCohort() {\n                var cohort = cyChart.$('node[nodeType=\"patient\"]:selected');\n                if (cohort.length == _stopLength) return; // Preform more robust check\n                _stopLength = cohort.length;\n                osCohortService.setCohort(\n                    cohort.map(function(p) {\n                        return p.data().id\n                    }),\n                    \"Markers + Patients\",\n                    osCohortService.SAMPLE\n                );\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length == 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n\n                        }\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                if (colors === null) return;\n                mpState.setColors(colors);\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5')\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            };\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                mpState.save(vm, cyChart);\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLayoutPanel', layoutPanel);\n\n    /** @ngInject */\n    function layoutPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/layoutPanel/layoutPanel.html',\n            controller: LayoutPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LayoutPanelController(osApi, osCohortService, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v } });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length != 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n\n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n            vm.doClose = function() {\n                alert(\"HI\");\n            }\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length == 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status != \"\" }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (types.Removed != undefined && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \" });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (types.Converted != undefined && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key] }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i == 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\" //\\u226C\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] } });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); })\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] } });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            })\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            })\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osCohortService.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            }\n        }\n    }\n})();\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n\n            angular.element(\".marquee-x\").marquee({\n                particlesNumber: 49,\n                color: '#1396de',\n                particle: {\n                    speed: 49\n                }\n            });\n\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n            vm.getStarted = function() {\n                $state.go(\"datasource\");\n            };\n\n\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                {name:'Blues', value:[\"#303f9f\",\"#03a9f4\"]},\n                {name:'Black / Blue', value:[\"#000000\",\"#1d85cb\"]},\n                {name:'Black / Red', value:[\"#000000\",\"#D32F2F\"]},\n                {name:'Red / Yellow', value:[\"#D32F2F\",\"#FFEB3B\"]}\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{name:'None'},{name:'Row'},{name:'Column'}]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                {name:'One',value:1},\n                {name:'Two',value:2},\n                {name:'Three',value:3},\n                {name:'Four',value:4},\n                {name:'Five',value:5},\n                {name:'Six',value:6},\n                {name:'Seven',value:7},\n                {name:'Eight',value:8},\n                {name:'Nine',value:9},\n                {name:'Ten',value:10}\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            //var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            //var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            //var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n            \n            // Load Inital Data\n            var args;\n            var data;\n\n           \n            function axis(svg, data, width, height, x, y, rotated){\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n                    \n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\",x)\n                    .style(\"top\",y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width:height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n                \n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d,i) { return yScale(i+.8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\",\"12px\")\n                    .text( function(d){ return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n                \n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width,height] : [height,width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width,0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l){\n                    return {\n                        source: {x: l.source.x, y:l.source.data.height},\n                        target: {x: l.target.x, y:l.target.data.height},\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n                \n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\",\"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\",\"#FFF\")\n\n                if (rotated){\n                    var transform = \"rotate(90,\" + height/2 + \",\" + height/2 + \") translate(0,\"+(-width+height)+\")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n                \n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d){\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                        y(d.source.y) + \",\" + d.target.x + \" \" +\n                        y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d){\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g:dendrG, \n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height,x,y){\n\n\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\",x).style(\"top\",y).style(\"position\",\"absolute\");\n\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n                \n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n\n                var cols = data.dim[0];\n                var rows = data.dim[1];\n\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n\n           \n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend(){\n\n                    \n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    //var colBounds = \n                    d3.event.selection.map(function(v){ return this.invert(v[0], v[1]); },xScale).map(Math.round);\n                    //var span = colBounds[1] - colBounds[0];\n                    //var start = colBounds[0];\n                    //var ids = data.cols.splice(start, span);\n                    \n                    var coords = d3.event.selection;\n                    //coords[0][0] = colBounds[0] * width;\n                    coords[0][1] = 0;\n                    //coords[1][0] = colBounds[1] * width;\n                    coords[1][1] = height;\n\n                    d3.select(this)\n                        .transition()\n                        .call(d3.event.target.move, coords);\n\n                    \n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n\n                var boxW = xScale(1)-grid;\n                var boxH = yScale(1)-grid;\n\n                var boxes = map.selectAll('rect').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .attr(\"class\", \"box\")\n                    .attr(\"colIndex\", function(d, i) { return i % cols; })\n                    .attr(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(i % rows); })\n                    .attr(\"width\", boxW)\n                    .attr(\"height\", boxH)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data.data,\n                    cols:cols,\n                    rows:rows,\n                    boxW:boxW,\n                    boxH:boxH\n                }\n            }\n\n            function zoom(){\n\n/*\n                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                colDendObj.g.call(xZoomBehavior);\n                rowDendObj.g.call(yZoomBehavior);\n                xZoomBehavior.on('zoom', function() {\n\n                    var map = colmapObj;\n                    var mapX = d3.event.transform.rescaleY(map.scaleX);\n\n                    var boxW = map.scaleX(1);\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return mapX(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return map.scaleY(i % map.rows); })\n                        .attr(\"width\", boxW)\n\n                    var col = colDendObj;\n                    var colY = col.scaleY;\n                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                    \n                    col.g.selectAll(\"polyline\")\n                        .data(col.data)\n                        .attr(\"points\", function(d){\n                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                        });\n                });\n                yZoomBehavior.on('zoom', function() {\n\n                    var row = rowDendObj;\n                    var rowY = row.scaleY;\n                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                    \n                    var map = colmapObj;\n                    var mapY = d3.event.transform.rescaleX(map.scaleY);\n\n                    var boxW = scaleX(1);\n                    var boxH = yScale(1)-grid;\n\n                    map.g.selectAll('.box').data(map.data)\n                        .attr(\"x\", function(d, i) { return map.scaleY(i % map.cols); })\n                        .attr(\"y\", function(d, i) { return mapY(i % map.rows); })\n                        .attr(\"width\", boxW)\n                    \n                    row.g.selectAll(\"polyline\")\n                        .data(row.data)\n                        .attr(\"points\", function(d){\n                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                        });\n                });\n*/\n            }\n            \n            osApi.setBusy(true);\n             vm.loadData = function(){\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {data:response.data.map(function(v){ \n                        Object.keys(v.patients).forEach(function(key){\n                            if (this[key]==null) this[key] = 0;\n                        },v.patients);\n                        return v.patients; \n                    })};\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function(){\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v){\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function(){\n                \n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                //colmapObj = \n                heatmap(colmap, data.matrix, \n                    hmWidth, \n                    hmHeight, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, \n                    (vm.colDendrogram ? 80 : 0));\n\n                //rowDendObj = \n                dendrogram(rowDend, data.rows,    \n                    80, hmHeight, \n                    layout.left+20, (vm.colDendrogram ? 80 : 0) , false);\n\n                //colDendObj = \n                dendrogram(colDend, data.cols,    \n                    hmWidth, 80, \n                    (vm.rowDendrogram ? 80 : 0)+layout.left+20, 0, true);\n\n                axis(xaxis, \n                    data.matrix.rows,     \n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0)+layout.left+20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0)+layout.left+20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n            \n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw,300));\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osCohortService, osAuth, $stateParams, $state) {\n\n            // View Model\n            var vm = this;\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.datasources = [];\n            vm.tools = [];\n            vm.cohorts = [];\n\n            // State Management\n            osApi.onNavChange.add(function(state) {\n                switch (state) {\n                    case \"TOOLS\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                    case \"TOOL\":\n                        vm.showTools = true;\n                        vm.showDatasets = true;\n                        vm.datasources = osApi.getDataSources();\n                        vm.tools = osApi.getTools();\n                        vm.cohorts = osCohortService.getCohorts();\n                        break;\n                    default:\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                }\n            });\n\n            // Cohort Commands\n            vm.addPatientCohort = function() {\n                osCohortService.saveCohort();\n            };\n\n            // State Command\n            vm.setPatientCohort = function(cohort) {\n                osCohortService.setCohort(cohort);\n            };\n\n            // Import Cohorts Command \n            vm.importIds = \"\";\n            vm.importCohort = function() {\n                var ids = vm.importIds.split(\",\").map(function(v) { return v.trim(); });\n                osCohortService.importIds(ids, vm.importName);\n                vm.importIds = \"\";\n                vm.importName = \"\";\n                vm.showImport = false;\n            };\n\n            // Update Cohorts When Datasource Changes\n            osCohortService.onCohortsChange.add(function() {\n                vm.cohorts = osCohortService.getCohorts();\n            });\n\n\n            // Load Dataset Command - Navigation\n            vm.loadDataset = function(dataset) {\n                $state.go($state.current.url.split(\"/\")[1], { datasource: dataset });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n            // Load Tool Command - Navigation\n            vm.loadTool = function(tool) {\n                $state.go(tool, { datasource: osApi.getDataSource().disease });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, osCohortService, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, { datasource: datasource.disease });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, osCohortService, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n\n            function zoomed() {\n                elPlots.forEach(function(plot) {\n                    plot.attr(\"transform\", d3.event.transform);\n                });\n\n            }\n            var layout = osApi.getLayout();\n            var width = ($window.innerWidth - layout.left - layout.right);\n            var height = ($window.innerHeight - 120);\n            var zoom = d3.zoom()\n                .scaleExtent([1, 40])\n                .translateExtent([\n                    [-100, -100],\n                    [width + 90, height + 100]\n                ])\n                .on(\"zoom\", zoomed);\n\n            // Cohort\n            var cohort = osCohortService.getCohort();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osCohortService.onCohortChange.add(onCohortChange);\n\n            // Datasource\n            var datasource = osApi.getDataSource();\n\n            // View Model\n            var vm = this;\n            vm.optionColors = [];\n            vm.optionLayouts = [];\n\n            // State\n            var clusterIndexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n            var clusterColors = [];\n            var clusterLayouts = [];\n\n            // Elements\n            var elChart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n            var elBrushes = clusterIndexes.map(function() { return d3.brush(); });\n            elChart.call(zoom);\n            var elPlots = clusterIndexes.map(function() { return elChart.append(\"svg:g\"); });\n            var elHitareas = elPlots.map(function(elPlot) { return elPlot.append(\"svg:rect\"); });\n            elHitareas.forEach(function(hitArea) {\n                hitArea.attr(\"fill\", \"black\");\n                hitArea.attr(\"opacity\", 0);\n            });\n            var elLines = [0, 1, 2, 3].map(function() { return elChart.append(\"svg:line\"); });\n            elLines.forEach(function(line) {\n                line.attr(\"stroke\", \"#cbcbcb\");\n                line.attr(\"stroke-width\", \"1px\");\n            });\n\n            // State Management\n            var setSelected = function() {\n                var selectedIds = cohort.sampleIds;\n                clusterIndexes.forEach(function(clusterIndex) {\n                    elPlots[clusterIndex].selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                });\n            };\n            // var saveState = function() {\n\n            // }\n            var loadState = function() {\n                vm.optionLayouts = datasource.calculated.filter(function(v) { return (v.type === \"pcaScores\" || v.type === \"mds\"); });\n                return new Promise(function(resolve) {\n                    osApi.query('brain_color_tcga_import').then(function(v) {\n\n                        // This piece of magic creates an object who's key is a sampleID and value is a color\n                        vm.optionColors = v.data.map(function(colorOption) {\n                            colorOption.lookup = colorOption.data.map(function(c) {\n                                var colorMap = c.values.reduce(function(p, c) {\n                                    p[c] = p.color;\n                                    return p;\n                                }, { color: (c.color === null) ? \"black\" : c.color });\n                                delete colorMap.color;\n                                //delete c.values;\n                                return colorMap;\n                            }).reduce(function(p, c) {\n                                _.extend(p, c);\n                                return p;\n                            }, {});\n                            return colorOption;\n                        });\n\n                        // Set Default Cluster Colors + layouts\n                        clusterLayouts = vm.optionLayouts.splice(0, 9).map(function(v) { return { name: v.collection }; });\n                        clusterColors = vm.optionColors.splice(0, 9);\n                        resolve();\n                    });\n                });\n            };\n\n            // Brushes\n            var brushStart = function() {\n                if (d3.event.selection === null) return;\n                var target = d3.event.target;\n                elBrushes\n                    .filter(function(b) {\n                        return b.brush !== target;\n                    })\n                    .forEach(function(b) {\n                        elPlots[b.index].call(b.move, null);\n                    });\n            };\n            var brushEnd = function() {\n\n                if (d3.event.selection === null) {\n\n                    elChart.selectAll(\"circle\")\n                        .classed(\"pca-node-selected\", false);\n                    //    osCohortService.setCohort([], \"Clusters\", osCohortService.SAMPLE);\n                    return;\n                }\n                var target = d3.event.target;\n                var bv = d3.event.selection;\n                var xScale = target.xScale;\n                var yScale = target.yScale;\n                var xMin = xScale.invert(bv[0][0]);\n                var xMax = xScale.invert(bv[1][0]);\n                var yMin = yScale.invert(bv[0][1]);\n                var yMax = yScale.invert(bv[1][1]);\n\n                elChart.selectAll(\"circle\")\n                    .classed(\"pca-node-selected\", function(v) {\n                        return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                        //return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                // Convert To PIDs\n                // var sids = data.filter(function(v) {\n                //     return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                // }).map(function(v) { return v.id; });\n\n                // elPlots[target.index].call(elBrushes[target.index].move, null);\n\n                // osCohortService.setCohort(sids, \"Clusters\", osCohortService.SAMPLE)\n            };\n\n            // Layout Methods\n            var loadLayout = function(clusterIndex) {\n                return new Promise(function(resolve) {\n\n                    var collection = clusterLayouts[clusterIndex].name;\n                    osApi.query(collection).then(function(result) {\n                        var data = result.data[0].data;\n                        result.data[0].domain = Object.keys(data).reduce(function(p, c) {\n                            var datum = data[c];\n                            if (isNaN(datum.x) || isNaN(datum.y)) return p;\n                            p.pc1[0] = Math.min(p.pc1[0], datum.x);\n                            p.pc1[1] = Math.max(p.pc1[1], datum.x);\n                            p.pc2[0] = Math.min(p.pc2[0], datum.y);\n                            p.pc2[1] = Math.max(p.pc2[1], datum.y);\n                            return p;\n                        }, { pc1: [Infinity, -Infinity], pc2: [Infinity, -Infinity] });\n                        result.data[0].bind = Object.keys(data).map(function(v) {\n                            var rv = data[v];\n                            rv.id = v;\n                            return rv;\n                        });\n                        clusterLayouts[clusterIndex].data = result.data[0];\n                        resolve(result.data[0]);\n                    });\n                });\n            };\n\n            loadState().then(function() {\n                Promise.all(\n                    clusterIndexes.map(function(clusterIndex) { return loadLayout(clusterIndex); })\n                ).then(function() {\n                    draw();\n                    setSelected();\n                });\n            });\n\n            var draw = function() {\n                drawLines();\n                clusterIndexes.forEach(drawCluster);\n            }\n\n            var drawLines = function() {\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elLines[0].attr(\"x1\", 0).attr(\"y1\", height * (1 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 1 / 3));\n                elLines[1].attr(\"x1\", 0).attr(\"y1\", height * (2 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 2 / 3));\n                elLines[2].attr(\"x1\", width * (1 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (1 / 3)).attr(\"y2\", height);\n                elLines[3].attr(\"x1\", width * (2 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (2 / 3)).attr(\"y2\", height);\n            };\n\n            var drawCluster = function(clusterIndex) {\n\n                // Inefficent\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elChart.attr(\"width\", width).attr(\"height\", height);\n                var boxWidth = Math.floor(width / 3);\n                var boxHeight = Math.floor(height / 3);\n\n                // Resize Hitarea\n                var elHitarea = elHitareas[clusterIndex];\n                elHitarea\n                    .attr(\"width\", boxWidth)\n                    .attr(\"height\", boxHeight);\n\n                // Figure Out Scale Hitarea\n                var data = clusterLayouts[clusterIndex].data;\n                var xScale = d3.scaleLinear().domain(data.domain.pc1).range([5, Math.min(boxWidth) - 5]);\n                var yScale = d3.scaleLinear().domain(data.domain.pc2).range([5, Math.min(boxHeight) - 5]);\n                var elPlot = elPlots[clusterIndex];\n\n\n                var brush = elBrushes[clusterIndex];\n                brush.on(\"start\", brushStart);\n                brush.on(\"end\", brushEnd);\n                brush.extent([\n                    [0, 0],\n                    [boxWidth, boxHeight]\n                ]);\n\n                elPlot.call(brush);\n                brush.index = clusterIndex;\n                brush.xScale = xScale;\n                brush.yScale = yScale;\n                elPlot.attr(\"transform\", \"translate(\" + ((clusterIndex % 3) * boxWidth) + \",\" + (parseInt(clusterIndex / 3) * boxHeight) + \")\");\n                var circles = elPlot.selectAll(\"circle\")\n                    .data(data.bind);\n\n\n                circles.enter()\n                    .append(\"svg:circle\")\n                    .attr(\"cx\", 0).attr(\"cy\", 0)\n                    .attr(\"class\", \"point\")\n                    .attr(\"r\", 1)\n                    .style(\"fill\", function(d) { return clusterColors[clusterIndex].lookup[d.id]; })\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n                circles\n                    .transition()\n                    .duration(750)\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n\n            };\n\n            // // Listen For Resize\n            osApi.onResize.add(draw);\n            // angular.element($window).bind('resize',\n            //     _.debounce(resize, 300)\n            // );\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, osCohortService, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v } });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length != 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n\n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n            vm.doClose = function() {\n                alert(\"HI\");\n            }\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length == 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status != \"\" }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (types.Removed != undefined && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \" });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (types.Converted != undefined && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key] }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i == 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\" //\\u226C\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] } });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); })\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] } });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            })\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            })\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osCohortService.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            }\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope: {},\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, osCohortService, $state, $scope, $sce, $timeout, $rootScope, $filter, d3) {\n\n\n            // View Model\n            var vm = this;\n            vm.cohorts = [];\n            vm.cohort = null;\n            vm.cohortFeatures = [];\n            vm.cohortFeature = null;\n            vm.cohortSummary = \"\";\n\n\n            // Cohort Service Integration\n            osCohortService.onCohortsChange.add(function(cohorts) {\n                vm.cohorts = cohorts;\n            });\n            osCohortService.onCohortChange.add(function(cohort) {\n                var summary =\n                    $filter('number')(cohort.numSamples) + \" Samples<br /> \" +\n                    $filter('number')(cohort.numPatients) + \" Patients <br />\" +\n                    $filter('number')(cohort.numClinical) + \" Patients with Clinical Data<br />\" +\n                    $filter('number')(cohort.survival.total) + \" Patients with Survival Outcome<br />\";\n                vm.cohortSummary = $sce.trustAsHtml(summary);\n\n                if (angular.isUndefined(cohort)) return;\n                $timeout(function() {\n                    var featureIdx = (vm.cohortFeature !== null) ? vm.cohortFeatures.indexOf(vm.cohortFeature) : 0;\n                    vm.cohort = cohort;\n                    vm.cohortFeatures = cohort.histogram.features;\n                    vm.cohortFeature = cohort.histogram.features[featureIdx];\n                });\n                updateSurvival(vm.cohorts.concat([cohort]));\n            });\n\n            // Cohort edit\n            vm.setCohort = function(cohort) {\n                if (angular.isString(cohort)) {\n                    osCohortService.setCohort([], osCohortService.ALL, osCohortService.SAMPLE)\n                } else {\n                    osCohortService.setCohort(cohort);\n                }\n            };\n\n            vm.updateCohort = function() {\n                if (vm.cohort.type == \"UNSAVED\") {\n                    osCohortService.saveCohort(vm.cohort);\n                } else {\n                    osCohortService.deleteCohort(vm.cohort);\n                }\n            }\n\n\n\n\n            // Tray Expand / Collapse\n            var elTray = angular.element(\".cohort-menu\");\n            var isLocked = true;\n            var mouseOver = function() { elTray.removeClass(\"tray-collapsed-left\"); };\n            var mouseOut = function() { elTray.addClass(\"tray-collapsed-left\"); };\n            vm.toggle = function() {\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                }\n                osApi.onResize.dispatch();\n            };\n\n\n\n            // Histogram \n            var histSvg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 260)\n                .attr(\"height\", 150)\n                .append(\"g\");\n            var histSingleValueLabel = angular.element(\"#cohortmenu-single-value\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return \"Range: \" + d.label + \"<br>Count: \" + d.value + \" of \" + vm.cohortFeature.data.count + \"<br>Percent: \" + $filter('number')((d.value / vm.cohortFeature.data.count) * 100, 2) + \"%\";\n            });\n            histSvg.call(elTip);\n            $scope.$watch('vm.cohortFeature', function() {\n\n                // Histogram\n                if (vm.cohortFeature === null) return;\n                var data = vm.cohortFeature.data;\n                if (data.type == \"factor\") {\n                    if (data.hist.length == 1) {\n                        histSingleValueLabel.text(data.hist[0].label).css(\"display\", \"block\").removeClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                } else {\n                    if (data.min == data.max) {\n                        histSingleValueLabel.text(data.min).css(\"display\", \"block\").addClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                }\n                histSingleValueLabel.text('').css(\"display\", \"none\");\n                histSvg.classed(\"cohort-chart-hide\", false);\n                var barWidth = Math.floor((250 - data.bins) / data.bins);\n\n\n                if (data.histRange[0] > 0) data.histRange[0] -= 2;\n                var yScale = d3.scaleLinear()\n                    .domain([0, data.histRange[1]])\n                    .range([0, 135]);\n                var bars = histSvg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n                bars.enter()\n                    .append(\"rect\")\n                    .attr(\"class\", \"cohort-menu-chart-bar\")\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                bars\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth);\n                bars.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n                var labels = histSvg\n                    .selectAll(\"text\")\n                    .data(data.hist);\n                labels.enter()\n                    .append(\"text\")\n                    .attr(\"x\", function(d, i) { return ((4 + (barWidth + 1) * i) + (barWidth * 0.5)) + 1; })\n                    .attr(\"y\", function(d) { return 145 - yScale(d.value); })\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .attr(\"font-size\", \"8px\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .text(function(d) { return d.label; });\n                labels\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return (((barWidth + 1) * i) + (barWidth * 0.5)) + 5; })\n                    .attr(\"y\", function(d) {\n                        var y = 145 - yScale(d.value);\n                        if (y < 0) y = 20;\n                        return y;\n                    })\n                    .text(function(d) { return d.label; });\n                labels.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n\n            });\n\n\n            var formatDays = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Mos\";\n                return Math.round((d / 365) * 10) / 10 + \" Yrs\";\n            };\n\n\n\n            // Survival\n            var surSvg = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            var surLines = surSvg.append(\"g\")\n                .selectAll(\"cohortmenu-survival-percent-line\")\n                .data([0.25, 0.5, 0.75]);\n\n            surLines.enter()\n                .append(\"line\").attr(\"class\", \"cohortmenu-survival-percent-line\")\n                .attr(\"stroke-width\", 1)\n                .attr(\"stroke\", \"#EAEAEA\")\n                .attr(\"x1\", 0).attr(\"x2\", 250).attr(\"y1\", function(d) {\n                    return (d * 140);\n                }).attr(\"y2\", function(d) {\n                    return (d * 140);\n                });\n\n            var surXAxis = surSvg.append(\"g\").attr(\"class\", \"axisCohort\");\n            var surLayout = {\n                width: 250,\n                height: 170,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(4).tickFormat(formatDays)\n            };\n            surSvg.attr(\"width\", '100%').attr(\"height\", surLayout.height);\n            var surAddCurve = function(curve, color) {\n\n\n                // ticks\n                var data = curve.data;\n                var time = 0;\n                data.lines.forEach(function(element) {\n\n                    surSvg.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", surLayout.xScale(element.time))\n                        .attr(\"x2\", surLayout.xScale(element.time))\n                        .attr(\"y1\", surLayout.yScale(element.survivalFrom))\n                        .attr(\"y2\", surLayout.yScale(element.survivalTo));\n\n                    surSvg.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", surLayout.xScale(time))\n                        .attr(\"x2\", surLayout.xScale(element.time))\n                        .attr(\"y1\", surLayout.yScale(element.survivalFrom))\n                        .attr(\"y2\", surLayout.yScale(element.survivalFrom));\n\n                    time = element.time;\n                });\n\n                data.ticks.forEach(function(element) {\n                    surSvg.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", surLayout.xScale(element.time))\n                        .attr(\"x2\", surLayout.xScale(element.time))\n                        .attr(\"y1\", surLayout.yScale(element.survivalFrom))\n                        .attr(\"y2\", surLayout.yScale(element.survivalFrom) - 2);\n                }, this);\n\n                // If Censor Occurs After Last Death Add line\n                if (data.ticks.length === 0 || data.lines.length === 0) return;\n                var lastTick = data.ticks[data.ticks.length - 1];\n                var lastLine = data.lines[data.lines.length - 1];\n                if (lastTick.time > lastLine.time) {\n                    surSvg.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", 0.5)\n                        .attr(\"stroke\", color)\n                        .attr(\"x1\", surLayout.xScale(lastLine.time))\n                        .attr(\"x2\", surLayout.xScale(lastTick.time))\n                        .attr(\"y1\", surLayout.yScale(lastTick.survivalFrom))\n                        .attr(\"y2\", surLayout.yScale(lastTick.survivalFrom));\n                }\n            };\n\n            var updateSurvival = function(cohorts) {\n                var visibleCohorts = cohorts;\n                // .filter(function(v) {\n                //     return v.show;\n                // });\n                var minMax = visibleCohorts.reduce(function(p, c) {\n                    p.max = Math.max(p.max, c.survival.max);\n                    p.min = Math.min(p.min, c.survival.min);\n                    return p;\n                }, { max: -Infinity, min: Infinity });\n\n                surLayout.xScale = d3.scaleLinear()\n                    .domain([minMax.min, minMax.max])\n                    .range([0, surLayout.width - 1]);\n\n                surLayout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([surLayout.height - 30, 0]);\n\n                surLayout.xAxis.scale(surLayout.xScale);\n                surXAxis.attr(\"transform\", \"translate(0, \" + (surLayout.yScale(0)) + \")\")\n                    .call(surLayout.xAxis)\n                    .selectAll(\"text\")\n                    .style(\"text-anchor\", function(d, i) { return (i === 0) ? \"start\" : \"center\"; });\n\n                surSvg.selectAll(\".line\").remove();\n                for (var i = 0; i < visibleCohorts.length; i++) {\n                    surAddCurve(visibleCohorts[i].survival, visibleCohorts[i].color);\n                }\n            };\n\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, osCohortService, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, .1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], .08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (.1 + Math.random()),\n                        y = 2 * Math.random() - .5,\n                        z = 10 / (.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($window, $exceptionHandler) { //, $log\n\n        // Force Cohort Menu & Header To Hide On Page Refresh.  Not applying in chrome.\n        // $timeout(function() {\n        // angular.element(\"#cohortMenu\").css({ \"display\": \"none\" });\n        // angular.element(\"#header\").css({ display: \"none\" });\n        // }, 200);\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n            if (!error) {\n                error = new Error(message);\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = (columnNumber || 0);\n            }\n            $exceptionHandler(error);\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        // Resolutions\n        var resolveDatasource = function(osApi) {\n            osApi.setBusy(true);\n            return new Promise(function(resolve) {\n                osApi.init().then(function() {\n                    resolve();\n                    angular.element(\"#main\").removeClass(\"container-main-full\");\n                    angular.element(\"#header\").css({ display: \"block\" });\n                    angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                    osApi.onNavChange.dispatch(\"\");\n                });\n            });\n        };\n\n        var resolveTools = function(osApi, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveDatasource(osApi).then(function() {\n                    osApi.setDataSource($stateParams.datasource);\n                    resolve();\n                    angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                    osApi.onNavChange.dispatch(\"TOOLS\");\n                });\n            });\n        };\n\n        var resolveTool = function(osApi, osCohortService, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveTools(osApi, $stateParams).then(function() {\n                    osCohortService.loadCohorts().then(function() {\n                        resolve();\n                        angular.element(\"#cohortMenu\").css({ display: \"block\" });\n                        osApi.onNavChange.dispatch(\"TOOL\");\n                    });\n                });\n            });\n\n        };\n\n        var resolveLanding = function(osApi, $timeout) {\n            $timeout(function() {\n                angular.element(\"#main\").addClass(\"container-main-full\");\n                angular.element(\"#header\").css({ display: \"none\" });\n                angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                osApi.onNavChange.dispatch(\"\");\n            }, 200);\n        }\n\n\n        // States\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                datasource: false,\n                resolve: {\n                    resolveLanding: resolveLanding\n                }\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                datasource: false,\n                resolve: {\n                    resolveDatasource: resolveDatasource\n                }\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                datasource: true,\n                resolve: {\n                    resolveTools: resolveTools\n                }\n            })\n            .state('scatter', {\n                url: '/scatter',\n                template: '<os-scatter>',\n                datasource: false,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('history', {\n                url: '/spreadsheet/{datasource}',\n                template: '<os-spreadsheet>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('comparecluster', {\n                url: '/cc/{datasource}',\n                template: '<os-compare-cluster>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                datasource: false,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                datasource: true,\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, jStat:false, THREE:false*/\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('THREE', THREE)\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('jStat', jStat)\n        .constant('localStorage', localStorage)\n        .constant('_', _);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n\n})();\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div id=\\\"cohortMenu\\\" style=\\\"display:none\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label>Selected Cohort</label><div class=\\\"input-group\\\"><input class=\\\"form-control\\\" aria-label=\\\"Text input with segmented button dropdown\\\" ng-model=\\\"vm.cohort.name\\\" onfocus=\\\"this.select();\\\"><div class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" tooltip=\\\"{{vm.cohort.type == \\'UNSAVED\\' ? \\'Save Cohort\\' : \\'Delete Cohort\\'}}\\\" tooltip-placement=\\\"left\\\" ng-if=\\\"vm.cohort.type!=\\'ALL\\'\\\" ng-click=\\\"vm.updateCohort()\\\"><span class=\\\"fa {{vm.cohort.type == \\'UNSAVED\\' ? \\'fa-plus\\' : \\'fa-times\\'}}\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" tooltip=\\\"Change Cohort\\\" tooltip-placement=\\\"left\\\"><span class=\\\"caret\\\"></span> <span class=\\\"sr-only\\\">Toggle Dropdown</span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\"><li ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-histogram\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Clinical Histogram <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-histogram\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;\\\"><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"><div id=\\\"cohortmenu-single-value\\\" class=\\\"cohortmenu-single-value\\\"></div></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;border:0px solid #eaeaea;border-top-width:1px;\\\">{{vm.cohortFeature.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-repeat=\\\"item in vm.cohortFeatures\\\" ng-click=\\\"vm.cohortFeature=item\\\">{{item.label}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-survival-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Survival Curve <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-survival-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\"><div id=\\\"cohortmenu-survival\\\"></div><label>Cohorts</label><div ng-repeat=\\\"item in vm.cohorts\\\" class=\\\"legend-bar markers-command\\\" style=\\\"border-color:{{item.color}};padding-left:10px;\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</div><label>Selected Cohort</label><div class=\\\"legend-bar\\\" style=\\\"height:25px;border-color:{{vm.cohort.color}};\\\">{{vm.cohort.name}} ({{vm.cohort.type}})</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-summary-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Cohort Summary <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-summary-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\" ng-bind-html=\\\"vm.cohortSummary\\\"></div></div><div id=\\\"cohortmenu-legand\\\"></div></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"left\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Disease Datasets</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{dataset.img}}\\\"><p class=\\\"datasource-h1\\\">{{dataset.name}}</p><p class=\\\"datasource-h2\\\">{{dataset.source}} | 11-17-2016</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div id=\\\"header\\\" class=\\\"header\\\" style=\\\"display:none\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#header-navbar\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"position:relative;\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo-white.png\\\" class=\\\"header-logo-img\\\"> <span class=\\\"header-logo-text\\\">Oncoscape</span></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"header-navbar\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Tools</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:80vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\" style=\\\"border-right: 1px solid #eaeaea\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.desc}}</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Datasets</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:88vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.datasources\\\" style=\\\"padding-bottom:10px\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.source}} | 11-17-2016</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click create cohort.<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient or sample IDs below and click import<br><input ng-model=\\\"vm.importName\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"Enter Cohort Name\\\"> <input ng-model=\\\"vm.importIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-9\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right header-cohort-btn\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.numPatients}} patients<br>{{item.numSamples}} samples<br>{{item.numClinical}} clinical records</p></div></div></div></div></li><li><a href=\\\"http://resources.sttrcancer.org/oncoscape\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"mailto:contact@oncoscape.org\\\" class=\\\"header-link\\\"><span class=\\\"fa fa-comments\\\"></span>Feedback</a></li></ul></div></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing\\\"><header class=\\\"landing container\\\"><div class=\\\"row marquee marquee-bg\\\"><div class=\\\"col-sm-12\\\"><div class=\\\"marquee-x\\\"></div><div class=\\\"header-content\\\" style=\\\"text-align:center;z-index: 999;pointer-events:none;\\\"><h1 class=\\\"landing-h1\\\">Oncoscape</h1><p class=\\\"landing-h2\\\">Cancer Genomics</p><span class=\\\"landing-buttons\\\" style=\\\"pointer-events:all;\\\"><a class=\\\"btn btn-outline btn-xl page-scroll\\\" ng-click=\\\"vm.getStarted()\\\">Explore</a> <a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://resources.sttrcancer.org/oncoscape\\\">Learn More</a></span></div></div></div></header><div class=\\\"container-fluid\\\" style=\\\"background-color:#000; color:#FFF;padding-top:150px;padding-bottom:150px;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-7\\\"><h1 style=\\\"font-size:50px;pointer-events:none;\\\">Our Mission</h1><p style=\\\"font-size:30px;line-height:50px;\\\">Empower researchers to discover novel patterns and relationships between clinical and molecular factors.</p><a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">Publishing Guidelines</a></div><div class=\\\"hidden-xs col-sm-5\\\" style=\\\"text-align:center\\\"><img src=\\\"assets/images/thumb.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\" style=\\\"display:inline-block;height:100%;\\\"></div></div></div><div class=\\\"container-fluid hidden-xs\\\" style=\\\"padding-top:150px;padding-bottom:300px;background:#EEE;;\\\"><div class=\\\"row\\\" style=\\\"font-size:18px;\\\"><div class=\\\"col-sm-12\\\"><h1 style=\\\"font-size:50px;\\\">Affiliations</h1><br></div><div class=\\\"col-sm-3\\\"><a href=\\\"http://www.fredhutch.org\\\"><img src=\\\"/assets/images/logo-hutch.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><a href=\\\"http://www.washington.edu/\\\"><img src=\\\"/assets/images/logo-uw.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><a href=\\\"https://www.seattlecca.org/\\\"><img src=\\\"/assets/images/logo-scca.jpg\\\"></a></div><div class=\\\"col-sm-3\\\"><img src=\\\"/assets/images/logo-sarc.jpg\\\"></div></div></div></div>\");\n$templateCache.put(\"app/components/layoutpanel/layoutpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\" tooltip=\\\"Toggle Visibility\\\" tooltip-placement=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button tooltip=\\\"Deselect {{item.name}}\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button tooltip=\\\"Select {{item.name}}\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Search {{vm.searchCount}}</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"\\\"><div class=\\\"input-group-addon btn-help-icon\\\" ng-click=\\\"vm.exeSearch()\\\">Go</div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Fit</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <span class=\\\"h3-tool\\\">(Layout: {{vm.optPatientLayout.name}})</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12\\\"><h3>Select a layout</h3></div><a class=\\\"col-sm-4 markers-command hvr-sweep-to-right\\\" style=\\\"padding-left:15px; padding-right:15px;\\\" ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\">{{item.name}}</a></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Type</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></div></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Variance Explained</label><div><os-tray-piechart chart-data1=\\\"vm.pc1\\\" chart-data2=\\\"vm.pc2\\\" chart-height=\\\"130\\\"></os-tray-piechart><div class=\\\"pca-pc1-label\\\"><span>PC1</span><br>{{vm.pc1[0].value}}%</div><div class=\\\"pca-pc2-label\\\"><span>PC2</span><br>{{vm.pc2[0].value}}%</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Loadings</label><os-tray-barchart chart-data=\\\"vm.loadings\\\" chart-height=\\\"100\\\"></os-tray-barchart></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/scatter/scatter.html\",\"<script type=\\\"x-shader/x-vertex\\\" id=\\\"vertexshader\\\">attribute float size; attribute vec3 customColor; varying vec3 vColor; void main() { vColor = customColor; vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 ); gl_PointSize = size * ( 300.0 / -mvPosition.z ); gl_Position = projectionMatrix * mvPosition; }</script><script type=\\\"x-shader/x-fragment\\\" id=\\\"fragmentshader\\\">uniform vec3 color; uniform sampler2D texture; varying vec3 vColor; void main() { gl_FragColor = vec4( color * vColor, 1.0 ); gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord ); if ( gl_FragColor.a < ALPHATEST ) discard; }</script><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>PCA Type</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-label\\\"><h3>Variance</h3>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%<br>PC3: {{vm.pc3}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"scatter-chart\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/spreadsheet/spreadsheet.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>CSV Export</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'selected\\')\\\">Selected</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'all\\')\\\">All</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Spreadsheet</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <button ng-click=\\\"vm.sortSelected()\\\" class=\\\"btn btn-default\\\" style=\\\"position:absolute; left: 310px;top: 30px;\\\" tooltip=\\\"Move Selected Rows To The Top Of The Grid\\\" tooltip-placement=\\\"right\\\">Selected On Top</button><div class=\\\"grid\\\" id=\\\"spreadsheet-grid\\\" ui-grid=\\\"vm.options\\\" ui-grid-selection=\\\"\\\" ui-grid-resize-columns=\\\"\\\" ui-grid-move-columns=\\\"\\\" ui-grid-pinning=\\\"\\\" ui-grid-autoresize=\\\"\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Cohorts</label><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{cohort.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Cohort</label><div class=\\\"legend-bar\\\" style=\\\"border-color:{{vm.cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{vm.cohort.name}}</div></div></div></section></os-tray><section class=\\\"tray-content-block survival\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.displayMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.displayModes\\\" ng-click=\\\"vm.displayMode=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"><label class=\\\"timeline-zoom-x-label\\\">Click + Drag To Zoom</label> <label class=\\\"timeline-zoom-y-label\\\">Click + Drag To Zoom</label></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4\\\" ng-click=\\\"vm.explore(tool.route)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\" style=\\\"border-right:1px solid #DDD;\\\"><p class=\\\"datasource-h1\\\" style=\\\"padding-top:10px;\\\">{{tool.name}}</p><p class=\\\"datasource-h2\\\">{{tool.desc}}</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\" tooltip=\\\"Expand / Collapse\\\" tooltip-placement=\\\"left\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}