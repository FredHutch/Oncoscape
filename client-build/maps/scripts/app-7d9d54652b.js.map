{"version":3,"sources":["scripts/app-7d9d54652b.js"],"names":["angular","module","datasource","DatasourceController","osApi","$state","vm","this","datasets","getDataSources","explore","tool","setDataSource","go","disease","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","tray","TrayController","$timeout","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","scope","caption","content","replace","transclude","tools","ToolsController","query","then","response","data","sort","a","b","name","getDataSource","timelines","TimelinesController","osCohortService","$scope","$stateParams","$window","$document","moment","d3","_","resize","debounce","update","setBusy","scaleX","xZoom","yZoom","xTran","yTran","axis","patientsAll","patientsFiltered","patientsDomain","heightRow","baseZoomX","baseZoomY","brushY","brushX","brushSelect","pc","getPatientCohort","setPatientCohort","selectedIds","ids","onPatientsSelect","patients","add","timescales","valFn","val","log","abs","duration","asDays","timescale","filters","filter","modes","mode","displayModes","displayMode","resetZoom","chart","d3ScrollY","call","move","d3ScrollX","elTip","elChart","select","d3Chart","append","rPatients","gPatients","rAxis","gAxis","updateData","align","events","e","selected","map","toLowerCase","Infinity","forEach","patient","hash","hasOwnProperty","status","visible","length","indexOf","id","offset","tsStart","event","tsStartAligned","tsEndAligned","tsEnd","domain","min","max","p","v","updateEvents","height","width","scaleLinear","range","nice","selectAll","remove","rows","exit","transition","delay","style","rowEnter","enter","d","i","cols","color","on","datum","html","Object","keys","reduce","c","selection","lowerIndex","floor","upperIndex","ceil","push","target","updateZoom","configSize","layout","css","left","right","daysToUnit","round","updateAxis","axisBottom","ticks","tickFormat","pow","configScrollbars","lower","upper","lowerPercent","upperPercent","deltaPercent","st","zoomIdentity","translate","scale","rescaleX","getLayout","innerHeight","innerWidth","clinical","colorFn","key","evtArray","start","unix","end","evtHash","$on","survival","SurvivalController","cohorts","JSON","parse","stringify","getPatientCohorts","time","Date","all","show","colors","getSurvivalData","elXAxis","elYAxis","xScale","yScale","xAxis","yAxis","axisLeft","setScale","timelineDomain","osLayout","onSurvivalData","result","cmd","correlationId","draw","onMessage","addCurve","points","valueline","line","x","y","tick","sunburst","SunburstController","colorMap","charts","getColorMap","tags","groups","union","object","barcharts","bars","arc","radius","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","format","w","window","init","text","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","t","attrTween","drawSunburst","g","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","innerRadius","outerRadius","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","concat","apply","value","values","bar","difference","tree","barNode","reverse","tag","index","tagIndex","drawTree","el","chartLayer","yMax","yMin","barWidth","console","chartHeight","nodes","node","each","PlsrController","osHistory","$sce","saveSelected","addGeneSelection","__data__","toUpperCase","setSelected","classed","isUndefined","xMax","brush","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","$watch","onGeneSelectionChange","linear","vectors","genes","bv","extent","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","lines","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","loadings","item","loadingNames","vectorNames","maxValue","PcaController","$q","d3Points","setColors","legendCaption","legendNodes","degMap","undefined","padding-left","d3Brush","minMax","xMin","scaleY","axisX","axisTop","axisY","d3yAxis","d3xAxis","osCohortServiceUpdate","dataset","type","search","$fields","mr","geneset","source","label","rv","types","pcaTypes","pcaType","pc1","pc2","onPatientColorChange","showPanelColor","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","substr","endBatch","container","elements","minZoom","maxZoom","zoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","protocol","host","queryString","req","table","isDefined","encodeURIComponent","method","headers","apikey","factory","signals","localStorage","Signal","onGenesSelect","onCohortsChange","worker","Worker","addEventListener","msg","activePatientCohort","activeGeneCohort","allGeneCohorts","allPatientCohorts","onDataSource","postMessage","getItem","_patientColor","setPatientColor","getPatientMetric","addPatientCohort","setItem","delPatientCohort","obj","splice","S4","isArray","filterActivePatientCohort","bounds","prop","getGeneMetric","getGeneCohorts","getGeneCohort","addGeneCohort","delGeneCohort","setGeneCohort","Array","api","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","login","network","thumb","response_type","force","logout","prev","curr","oauth_proxy","redirect_uri","thumbnail","resolve","reject","beta","_dataSources","img","trim","_dataSource","hide","isObject","isString","markers","MarkersController","opts","setPatientCohortUpdate","cyChart","$","tmpdata","patientHtml","signal","over","out","edges","clear","removeAll","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","group","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","position","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","showPanelLayout","showPanelColorRna","optCommandModes","optCommandMode","hideModal","filterModelEdge","vals","optEdgeColors","edge","cn","edgeToggle","selectColor","deselectColor","lockPatients","lockGenes","lock","unselectify","selectify","abv","count","results","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","toArray","weight","sizeNode","setOptions","items","getElementById","collection","patients_html","patients_resize","patients_delete","patients_insert","degrees","patients_layout","annotation","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","total","edgeCounts","mouseIsOver","geneColors","eles","options","createOptions","f","patientWeights","geneWeights","genesWeights","watches","firstTime","hydrate","needle","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","deselect","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","load","setTimeout","dehydrate","json","terminate","LoginController","networks","loginSuccess","landing","LandingController","history","HistoryController","Handsontable","elGrid","htGrid","settings","manualColumnResize","manualColumnMove","fixedRowsTop","readonly","contextMenu","columnSorting","sortIndicator","comments","allowEmpty","autoColumnSize","samplingRatio","mergeCells","collections","o","setData","columns","field","displayName","startCols","htG","setSize","setColumns","loadData","render","colHeaders","updateSettings","heatmap","HeatmapController","gChart","$limit","gene","zoomed","transform","cellHeight","cellWidth","colorScale","scaleExtent","translateExtent","pda","header","HeaderController","$rootScope","showTools","allCohorts","showMenu","currentTool","toState","showtools","loadDataset","loadTool","logoutClick","transitionTo","compareCluster","CompareClusterController","plot","rect","cell","h","xDomain","yDomain","create","clusters","col","row","category","molecular","followUp-v1p0","drug","newTumor","otherMalignancy-v4p0","calculated","allClusters","pop","_brushes","destory","parseInt","xVal","yVal","colorPanel","ColorPanelController","colorScales","colorBins","colorBin","colorOptions","colorOption","tbl","subtype","optPatientColors","setColor","aname","isNaN","bname","close","setGeneColor","geneColor","match","op","$in","fn","lookup","pids","pid","iv","output","labels","scaleQuantile","scaleQuantize","quantiles","parseFloat","toFixed","unshift","zip","names","cohortMenu","CohortMenuController","patientChartOption","cohortName","addCohort","setCohort","removeCohort","editItem","editCohort","edit","showPatientHistory","elTabPatients","elTabGenes","showGeneHistory","barClick","split","bins","histRange","hist","sChart","sLayout","patientTotal","patientSelected","patientChartOptions","features","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","j","rangeBand","n","yStackMax","bumpLayer","bump","z","exp","m","stack","layers","layer","margin","top","bottom","rangeRoundBands","tickSize","tickPadding","orient","property","runBlock","$exceptionHandler","onerror","message","fileName","lineNumber","columnNumber","error","Error","off","toParams","DataTable","ext","authenticate","preventDefault","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","config","constant","hello","prototype","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-7d9d54652b.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.disease\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'glyphicon-menu-hamburger' : 'glyphicon-remove')\n                    .removeClass(isLocked ? 'glyphicon-remove' : 'glyphicon-menu-hamburger');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n\n            var vm = this;\n            //osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n            osApi.query(\"lookup_oncoscape_tools\").then(function(response) {\n                vm.tools = response.data.sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n            });\n\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osCohortService, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // Data\n            var patientsAll = [];\n            var patientsFiltered = [];\n            var patientsDomain = [];\n            var scaleX;\n            var heightRow = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var axis;\n            var brushY = d3.brushY();\n            var brushX = d3.brushX();\n            var brushSelect = d3.brushY();\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\");\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var onPatientsSelect = function(patients) {\n                selectedIds = patients.ids;\n                vm.update();\n            }\n            osCohortService.onPatientsSelect.add(onPatientsSelect);\n\n            // var setSelected = function() {\n            //     selectedIds = chart.bars.selectAll(\".timeline-selected\")[0].map(function(p) {\n            //         return p.__data__.id;\n            //     })\n            //     osCohortService.setPatientCohort(selectedIds, \"Timelines\");\n            // }\n\n            // View Model\n            var vm = (function(vm) {\n                vm.timescales = [{\n                    name: 'Log',\n                    valFn: function(val) {\n                        return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2)\n                    }\n                }, {\n                    name: 'Linear',\n                    valFn: function(val) {\n                        return moment.duration(val * 1000).asDays()\n                    }\n                }];\n                vm.timescale = vm.timescales[0];\n                vm.filters = [{\n                    name: 'Alive + Dead'\n                }, {\n                    name: 'Only Alive'\n                }, {\n                    name: 'Only Dead'\n                }];\n                vm.filter = vm.filters[2];\n                vm.modes = [{\n                    name: \"Highlight\"\n                }, {\n                    name: \"Filter\"\n                }];\n                vm.mode = vm.modes[0];\n                vm.displayModes = [{\n                    name: 'Selected Patients'\n                }, {\n                    name: 'All Patients'\n                }];\n                vm.displayMode = vm.displayModes[0];\n                vm.datasource = osApi.getDataSource();\n                return vm;\n            })(this);\n\n            vm.resetZoom = function() {\n                selectedIds = [];\n                osCohortService.setPatientCohort([], \"All Patients\");\n                chart.d3ScrollY.call(brushY.move, null);\n                chart.d3ScrollX.call(brushY.move, null);\n                vm.update();\n\n            };\n\n            // Chart Container Components\n            var chart = (function(angular, d3) {\n                var elTip = null;\n                var elChart = d3.select(\".timelines-content\");\n\n                var d3Chart = elChart.append(\"svg\");\n                d3Chart.attr(\"class\", \"timeline-chart\");\n\n                var d3ScrollY = elChart.append(\"svg\");\n                d3ScrollY.attr(\"class\", \"timeline-scroll-y\");\n\n                var d3ScrollX = elChart.append(\"svg\");\n                d3ScrollX.attr(\"class\", \"timeline-scroll-x\");\n\n                var rPatients = d3Chart.append(\"g\");\n                rPatients.attr(\"class\", \"timeline-patients-hitarea\");\n                var gPatients = d3Chart.append(\"g\");\n\n                var rAxis = d3Chart.append(\"rect\");\n                rAxis.attr(\"class\", \"timeline-axis-bg\");\n                var gAxis = d3Chart.append(\"g\");\n\n\n                return {\n                    elChart: angular.element(\".timelines-content\"),\n                    elTip: elTip,\n                    d3Chart: d3Chart,\n                    d3ScrollY: d3ScrollY,\n                    d3ScrollX: d3ScrollX,\n                    gPatients: gPatients,\n                    rPatients: rPatients,\n                    gAxis: gAxis,\n                    rAxis: rAxis\n                };\n\n            })(angular, d3);\n\n            var updateData = function() {\n\n                // Retrieve State\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Event Data\n                patientsFiltered = patientsAll;\n\n                // Filter\n                patientsDomain = [Infinity, -Infinity];\n                patientsFiltered.forEach(function(patient) {\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                    } else {\n\n                        // Filter Alive + Dead\n                        var status = patient.hash[\"Status\"].data.status;\n                        if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                            patient.visible = false;\n                        } else {\n                            if (vm.displayMode.name == \"Selected Patients\" && selectedIds.length > 0) {\n                                patient.visible = (selectedIds.indexOf(patient.id) != -1);\n                            } else {\n                                patient.visible = true;\n                            }\n                            if (patient.visible) {\n                                this.offset = 0 - patient.hash[this.align].tsStart;\n                                // Filter Events\n                                patient.events.forEach(function(event) {\n                                    event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                                    // Calculate Start + End Based On Alignment\n                                    if (event.visible) {\n                                        event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                                        event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                                        this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                                        this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                                    }\n                                }, this);\n                            }\n                        }\n                    }\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Remove Patients That Do Not Have Alignment Property\n                patientsFiltered = patientsFiltered.filter(function(p) {\n                    return p.visible;\n                });\n\n                // Set Selected\n                patientsFiltered.forEach(function(v) {\n                    v.selected = (selectedIds.indexOf(v.id) != -1);\n                });\n\n                // Sort Patients\n                patientsFiltered = patientsFiltered.sort(function(a, b) {\n                    if (a.status == b.status) {\n                        a = a.hash[sort].tsStartAligned;\n                        b = b.hash[sort].tsStartAligned;\n                        if (a > b) return 1;\n                        if (b > a) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            };\n\n            var updateEvents = function(height, width) {\n                height -= 70;\n                width -= 20;\n\n                // Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n\n                chart.gPatients.selectAll(\"*\").remove();\n\n                var rows = chart.gPatients.selectAll(\"g.patient\").data(patientsFiltered);\n                rows.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n                var rowEnter = rows.enter().append('g');\n                rowEnter.attr('class', 'patient')\n                rowEnter.attr('transform', function(d, i) {\n                    return \"translate(0,\" + (i * heightRow) + \")\";\n                });\n\n                var cols = rowEnter.selectAll(\"rect\").data(function(d) {\n                    return d.events.filter(function(v) {\n                        return v.visible;\n                    });\n                });\n                cols.exit().remove();\n                cols.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 3);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n                    .on(\"mouseover\", function() {\n                        var datum = d3.select(this).datum();\n\n                        if (datum.html == null) {\n                            var data = datum.data;\n                            datum.html =\n                                Object.keys(data).reduce(function(p, c) {\n                                    p.html += \"<li>\" + c + \":\" + p.data[c] + \"</li>\";\n                                    return p;\n                                }, {\n                                    html: \"<b>\" + datum.name + \"</b>\",\n                                    data: data\n                                }).html;\n                        }\n                        if (chart.elTip == null) chart.elTip = angular.element(\"#timelines-tip\");\n                        chart.elTip.html(datum.html);\n\n                    }).on(\"mouseout\", function() {\n                        chart.elTip.html(\"<b>Rollover Event For Details</b>\");\n                    });\n                cols\n                    .attr('width', function(d) {\n                        return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2);\n                    })\n                    .attr('height', function(d) {\n                        return (d.name == \"Radiation\" || d.name == \"Drug\") ? heightRow / 2 : heightRow;\n                    })\n                    .attr('y', function(d) {\n                        return ((d.name == \"Radiation\") ? heightRow / 2 : 0);\n                    })\n                    .attr('x', function(d) {\n                        return scaleX(d.tsStartAligned);\n                    })\n                    .style('fill', function(d) {\n                        return d.color;\n                    })\n\n                // Brush\n                chart.rPatients.call(brushSelect);\n                brushSelect.on(\"end\", function() {\n                    if (d3.event.selection == null) {\n                        return;\n                    }\n                    var lowerIndex = Math.floor(d3.event.selection[0] / yZoom / 20);\n                    var upperIndex = Math.ceil(d3.event.selection[1] / yZoom / 20);\n                    var ids = [];\n                    for (var i = lowerIndex; i <= upperIndex; i++) {\n                        ids.push(patientsFiltered[i].id);\n                    }\n                    osCohortService.setPatientCohort(ids, \"All Patients\");\n                    chart.rPatients.call(d3.event.target.move, null);\n                });\n            };\n\n            var updateZoom = function(height) {\n                height -= 70;\n                baseZoomY = height / (patientsFiltered.length * heightRow);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                chart.gPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            };\n\n            var configSize = function(height, width, layout) {\n                height -= 70;\n                width -= 20;\n                chart.elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.d3ScrollY.attr(\"height\", height);\n                chart.d3ScrollX.attr(\"width\", width);\n                chart.d3Chart.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.rPatients.attr(\"height\", height + 70).attr(\"width\", width);\n                chart.gAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                });\n                chart.rAxis.attr('transform', function() {\n                    return \"translate(0,\" + (height) + \")\";\n                }).attr(\"width\", width).attr(\"fill\", \"#FFF\");\n            };\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) == 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n            var updateAxis = function() {\n                axis = d3.axisBottom(scaleX).ticks(7);\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                chart.gAxis.call(axis);\n            };\n\n            var configScrollbars = function(height, width) {\n                chart.d3ScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height - 70;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (20 * patientsFiltered.length * yZoom) * -lowerPercent;\n                        } else {\n\n                            if (yZoom == baseZoomY && yTran == 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            chart.d3ScrollY.call(brushY.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                chart.d3ScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n                        if (d3.event.selection != null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran == 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            chart.d3ScrollX.call(brushX.move, null);\n\n                        }\n                        chart.gPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        var st = d3.zoomIdentity.translate(xTran).scale(xZoom).rescaleX(scaleX);\n                        var axis = d3.axisBottom(st).ticks(7);\n                        if (vm.timescale.name == 'Linear') {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(d);\n                            });\n                        } else {\n                            axis.tickFormat(function(d) {\n                                return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                            });\n                        }\n                        chart.gAxis.call(axis);\n\n                    })\n                );\n            };\n\n            vm.update = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                updateData();\n                configSize(height, width, layout);\n                configScrollbars(height, width);\n                updateEvents(height, width);\n                updateZoom(height, width);\n                updateAxis(height, width);\n            }\n\n            osApi.onResize.add(vm.update);\n\n            function resize() {\n                _.debounce(vm.update, 300);\n            }\n            angular.element($window).bind('resize', resize);\n\n            /* Init Data */\n            osApi.setBusy(true);\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start != null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end == null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end == null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        p[c.name] = c;\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n\n                patientsAll = data.filter(function(v) {\n                    try {\n                        v.status = v.hash[\"Status\"].data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                    return false;\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Drug\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n                vm.update();\n                osApi.setBusy(false);\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientsSelect.remove(onPatientsSelect);\n                osApi.onResize.remove(vm.update);\n                angular.element($window).unbind('resize', resize);\n                brushY.on(\"end\", null);\n                brushX.on(\"end\", null);\n\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            var cohorts = JSON.parse(JSON.stringify(osCohortService.getPatientCohorts()));\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            } else {\n                if (pc.ids.length > 0) {\n                    cohorts.push({\n                        id: \"Last Selection\",\n                        ids: pc.ids,\n                        name: \"Last Selection\",\n                        time: new Date()\n                    });\n                }\n            }\n            // var selectedIds = (pc==null) ? [] : pc.ids;\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohorts = cohorts;\n\n            vm.all = {\n                show: true,\n                color: '#000'\n            };\n\n            var colors = [\"#E91E63\", \"#673AB7\", \"#2196F3\", \"#00BCD4\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\"]; //['#004358','#800080','#BEDB39','#FD7400','#1F8A70'];\n            for (var i = 0; i < vm.cohorts.length; i++) {\n                vm.cohorts[i].show = true;\n                vm.cohorts[i].color = colors[i];\n            }\n\n            vm.toggle = function() {\n                osCohortService.getSurvivalData(vm.cohorts.filter(function(c) {\n                    return c.show;\n                }), vm.all.show, \"SurvivalController\");\n            };\n\n            // Create D3 Elements\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n\n            // Create D3 Axis Objects + Layout\n            var data = {};\n\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(5),\n                yAxis: d3.axisLeft().ticks(5)\n            }\n\n            var setScale = function(timelineDomain) {\n                var osLayout = osApi.getLayout();\n\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - 60;\n                layout.height = $window.innerHeight - 160;\n                angular.element(\"#survival-chart\").css(\"margin-left\", osLayout.left + 20);\n                elChart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", layout.height);\n\n                layout.xScale = d3.scaleLinear()\n                    .domain(timelineDomain)\n                    .range([50, layout.width]);\n\n                layout.yScale = d3.scaleLinear()\n                    .domain([0, 100])\n                    .range([layout.height - 50, 0]);\n\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n\n                elYAxis.attr(\"transform\", \"translate(50, 10)\").call(layout.yAxis);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.yScale(0) + 10) + \")\").call(layout.xAxis);\n            }\n\n            var onSurvivalData = function(result) {\n                if (result.data.cmd == \"getSurvivalData\") {\n                    if (result.data.data.correlationId == \"SurvivalController\") {\n                        data = result.data.data;\n                        draw();\n                    }\n                }\n            }\n            osCohortService.onMessage.add(onSurvivalData);\n\n            var addCurve = function(points) {\n\n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) {\n                        return layout.xScale(d[0]);\n                    })\n                    .y(function(d) {\n                        return layout.yScale(d[2]) + 10;\n                    });\n\n                elChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", 1.5)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"d\", valueline(points.data.line))\n                    .on(\"mouseover\", function() {\n                        d3.select(this).attr(\"stroke-width\", 3)\n                    })\n                    .on(\"mouseout\", function() {\n                        d3.select(this).attr(\"stroke-width\", 1)\n                    });\n\n                for (var i = 0; i < points.data.tick.length; i++) {\n                    elChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", .5)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", layout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", layout.yScale(points.data.tick[i][2]) + 5)\n                        .attr(\"y2\", layout.yScale(points.data.tick[i][2]) + 10);\n                }\n            }\n\n            var draw = function() {\n\n                // Clear Lines\n                elChart.selectAll(\".line\").remove();\n\n                // Set Scale\n                setScale([data.min, data.max]);\n\n                // Draw Lines\n                for (var i = 0; i < data.cohorts.length; i++) {\n                    addCurve(data.cohorts[i]);\n                }\n                osApi.setBusy(false);\n\n            };\n\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onMessage.remove(onSurvivalData);\n\n            });\n\n            // Load Data\n            vm.toggle();\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n            \n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v){\n                                return {name:v, color:colorMap[v]};\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function(){\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function(d) {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g, x, y) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var data;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    };\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v){ return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag, index) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n                    console.log(barWidth)\n                    var newBars = bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    var newNode = node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n  \n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n                    \n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, osCohortService, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n\n            var osCohortServiceUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (osCohortServiceUpdate) {\n                    selectedIds = patients.ids;\n                    setSelected();\n                } else {\n                    osCohortServiceUpdate = true;\n                }\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Points.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Properties\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model\n            var vm = (function(vm, osApi) {\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        $fields: ['type', 'geneset', 'source']\n                    })\n                    .then(function(response) {\n                        var mr = response.data.reduce(function(p, c) {\n                            if (!p.hasOwnProperty(c.geneset)) p[c.geneset] = [];\n                            p[c.geneset].push({\n                                name: c.type,\n                                source: c.source,\n                                label: (c.type + \"-\" + c.source).toUpperCase().replace(/-/gi, \" - \")\n                            });\n                            return p;\n                        }, {});\n                        vm.geneSets = Object.keys(mr).reduce(function(p, c) {\n                            p.rv.push({\n                                name: c,\n                                types: p.values[c],\n                                label: c.toUpperCase()\n                            });\n                            return p;\n                        }, {\n                            rv: [],\n                            values: mr\n                        }).rv.sort(function(a, b) {\n                            return a.label > b.label;\n                        });\n\n                        vm.geneSet = vm.geneSets[0];\n                    });\n                return vm;\n\n            })(this, osApi);\n\n            // Updates PCA Types When Geneset Changes\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet==null) return;\n                \n                // Sort PCA Types Alphabetically Then By Source R-Alpha (to put ucsc first)\n                vm.pcaTypes = vm.geneSet.types.sort(function(a, b) {\n                    if (a.name != b.name) return a.name > b.name;\n                    else return a.source < b.source;\n                });\n                vm.pcaType = vm.pcaTypes[0];\n            });\n\n            // Fetches PCA Data + Calculates Min Max for XYZ\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (geneset == null) return;\n                osApi.query(\"render_pca\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        type: vm.pcaType.name,\n                        source: vm.pcaType.source\n                    })\n                    .then(function(response) {\n                        vm.pc1 = response.data[0].pc1;\n                        vm.pc2 = response.data[0].pc2;\n                        var keys = Object.keys(response.data[0].data);\n                        data = keys.map(function(key) {\n                            this.data[key].id = key;\n                            return this.data[key];\n                        }, {\n                            data: response.data[0].data\n                        });\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n                        minMax.xMax = Math.max(Math.abs(minMax.xMin), minMax.xMax);\n                        minMax.xMin = -minMax.xMax;\n                        minMax.yMax = Math.max(Math.abs(minMax.yMin), minMax.yMax);\n                        minMax.yMin = -minMax.yMax;\n\n                        draw();\n                    });\n            });\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (this[v.id] != undefined) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right;\n                var height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", .8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(5);\n                axisY = d3.axisLeft().scale(scaleY).ticks(5);\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + scaleY(0) + \")\")\n                    .call(axisX)\n                    .append(\"text\")\n                    .attr(\"x\", 50)\n                    .attr(\"y\", 15)\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + scaleX(0) + \", 0)\")\n                    .call(axisY)\n                    .append(\"text\")\n                    .attr(\"y\", 55)\n                    .attr(\"x\", 25)\n                    .text(\"PC2\");\n\n                // Brush\n                var brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osCohortService.setPatientCohort([], \"PCA\");\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n\n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n\n                        osCohortService.setPatientCohort(ids, \"PCA\");\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush)\n\n                setSelected();\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(draw);\n            angular.element($window).bind('resize', _.debounce(draw, 300));\n\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osCohortService, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            // History Integration\n            /*\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            */\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            }\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                    container: elChart,\n                    elements: markersNetwork.elements,\n                    style: getStyle(),\n                    minZoom: .1,\n                    maxZoom: 5,\n                    zoom: 0.2,\n                    wheelSensitivity: .5,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                })\n\n                //.on('select', 'node', _.debounce(saveSelected, 300))\n                .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            //vm.frame = $sce.trustAsResourceUrl(\"https://resources.sttrcancer.org/markers-patients\");\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    })\n\n                // Register History Component\n                /*\n                osHistory.onGeneSelectionChange.add(function(selection){\n                    selectedIds = selection.ids;\n                    setSelected();\n                });\n                setSelected();\n                */\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \"/api/\";\n         //var url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(JSON.stringify(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osCohortService', osCohortService);\n\n    /** @ngInject */\n    function osCohortService(osApi, moment, signals, localStorage) {\n\n        var onMessage = new signals.Signal();\n        var onPatientsSelect = new signals.Signal();\n        var onGenesSelect = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        var worker = new Worker(\"app/components/oncoscape/oncoscape.cohort.service.worker.js\");\n        worker.addEventListener('message', function(msg) {\n            if (msg.data.cmd == \"filterPatients\") {\n                setPatientCohort(msg.data.data, \"Filter\")\n            } else {\n                onMessage.dispatch(msg);\n            }\n        }, false);\n\n        var allGeneCohorts = [],\n            activePatientCohort,\n            activeGeneCohort;\n\n        var allPatientCohorts = [];\n        var colors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70'];\n        osApi.onDataSource.add(function(datasource) {\n\n            worker.postMessage({\n                cmd: \"setPatientDataSource\",\n                data: datasource.clinical.patient\n            });\n\n            allPatientCohorts = localStorage.getItem(osApi.getDataSource().disease + \"PatientCohorts\");\n            allPatientCohorts = (allPatientCohorts == null) ? [] : JSON.parse(allPatientCohorts);\n            for (var i = 0; i < allPatientCohorts.length; i++) {\n                allPatientCohorts[i].color = colors[i];\n            }\n            onCohortsChange.dispatch(allPatientCohorts);\n        });\n\n        var _patientColor = {\n            name: 'xxx',\n            data: [{\n                name: 'Patient',\n                color: '#1396DE',\n                show: true\n            }]\n        };\n\n        var getPatientColor = function() {\n            return _patientColor;\n        }\n\n        var setPatientColor = function(val) {\n            _patientColor = val;\n            onPatientColorChange.dispatch(_patientColor);\n        }\n\n        var getSurvivalData = function(cohorts, all, correlationId) {\n            worker.postMessage({\n                cmd: \"getSurvivalData\",\n                data: {\n                    cohorts: cohorts,\n                    all: all,\n                    correlationId: correlationId\n                }\n            });\n        };\n\n        var getPatientMetric = function() {\n            if (!activePatientCohort.ids) return;\n            worker.postMessage({\n                cmd: \"getPatientMetric\",\n                data: activePatientCohort.ids\n            });\n        };\n\n        var getPatientCohorts = function() {\n            return allPatientCohorts;\n        };\n        var getPatientCohort = function() {\n            return activePatientCohort;\n        };\n        var addPatientCohort = function(disease) {\n            if (allPatientCohorts.indexOf(activePatientCohort) != -1) return;\n            activePatientCohort.color = colors[allPatientCohorts.length];\n            allPatientCohorts.push(activePatientCohort);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", JSON.stringify(allPatientCohorts));\n        };\n\n        var delPatientCohort = function(obj) {\n            allPatientCohorts.splice(allPatientCohorts.indexOf(obj), 1);\n            localStorage.setItem(osApi.getDataSource().disease + \"PatientCohorts\", JSON.stringify(allPatientCohorts));\n        };\n\n        var setPatientCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activePatientCohort = (!angular.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onPatientsSelect.dispatch(activePatientCohort);\n        };\n        var filterActivePatientCohort = function(bounds, prop, type) {\n            worker.postMessage({\n                cmd: \"filterPatients\",\n                data: {\n                    ids: activePatientCohort.ids,\n                    type: type,\n                    bounds: bounds,\n                    prop: prop,\n                }\n            });\n        }\n\n        var getGeneMetric = function() {};\n        var getGeneCohorts = function() {\n            return allGeneCohorts;\n        };\n        var getGeneCohort = function() {\n            return activeGeneCohort;\n        };\n        var addGeneCohort = function() {\n            allGeneCohorts.push(activeGeneCohort);\n        };\n        var delGeneCohort = function(obj) {\n            allGeneCohorts.splice(allGeneCohorts.indexOf(obj), 1);\n        };\n        var setGeneCohort = function(ids, name) {\n            function S4() {\n                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n            }\n            activeGeneCohort = (!Array.isArray(ids)) ? ids : {\n                id: (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substr(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase(),\n                ids: ids,\n                name: name,\n                time: new Date()\n            };\n            onGenesSelect.dispatch(activeGeneCohort);\n        };\n\n        var api = {\n            onMessage: onMessage,\n            onPatientsSelect: onPatientsSelect,\n            onCohortsChange: onCohortsChange,\n            onPatientColorChange: onPatientColorChange,\n            getPatientCohorts: getPatientCohorts,\n            getPatientCohort: getPatientCohort,\n            setPatientCohort: setPatientCohort,\n            addPatientCohort: addPatientCohort,\n            delPatientCohort: delPatientCohort,\n            getPatientMetric: getPatientMetric,\n            onGenesSelect: onGenesSelect,\n            getGeneCohorts: getGeneCohorts,\n            getGeneCohort: getGeneCohort,\n            setGeneCohort: setGeneCohort,\n            addGeneCohort: addGeneCohort,\n            delGeneCohort: delGeneCohort,\n            getGeneMetric: getGeneMetric,\n            getSurvivalData: getSurvivalData,\n            setPatientColor: setPatientColor,\n            filterActivePatientCohort: filterActivePatientCohort\n        };\n\n        return api;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n                id: 'guest',\n                name: 'Guest',\n                icon: 'fa fa-user'\n            }, {\n                id: 'facebook',\n                name: 'Facebook',\n                icon: 'fa fa-facebook',\n                key: '142281766208909',\n                mode: 'implicit'\n            }, {\n                id: 'github',\n                name: 'GitHub',\n                icon: 'fa fa-github-alt',\n                key: '78b5dbe2ba756151169e',\n                mode: 'explicit'\n            }, {\n                id: 'google',\n                name: 'Google',\n                icon: 'fa fa-google-plus',\n                key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n                mode: 'implicit'\n            }, {\n                id: 'instagram',\n                name: 'Instagram',\n                icon: 'fa fa-instagram',\n                key: '3578c1b7c8c248c6ba80784b9ede0c52',\n                mode: 'implicit'\n            }, {\n                id: 'linkedin',\n                name: 'LinkedIn',\n                icon: 'fa fa-linkedin',\n                key: '7869gkuwwnacez',\n                mode: 'explicit'\n            }, {\n                id: 'twitter',\n                name: 'Twitter',\n                icon: 'fa fa-twitter',\n                key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n                mode: 'implicit'\n            }, {\n                id: 'windows',\n                name: 'Win Live',\n                icon: 'fa fa-windows',\n                key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n                mode: 'implicit'\n            }, {\n                id: 'dropbox',\n                name: 'Dropbox',\n                icon: 'fa fa-dropbox',\n                key: 'dropbox',\n                mode: 'implicit'\n            }, {\n                id: 'flickr',\n                name: 'Flickr',\n                icon: 'fa fa-flickr',\n                key: '',\n                mode: 'implicit'\n            }\n            //{id:'tinder',   name:'Tinder', icon:'fa fa-fire',       key:'', mode:'implicit'}\n        ];\n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n\n        // Layout Metrics\n        var getLayout = function() {\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (angular.element(\".tray-right\").attr(\"locked\") === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n        // DataSources\n        var _dataSources;\n        var _dataSource;\n        var getDataSources = function() {\n            return _dataSources;\n        };\n        var getDataSource = function() {\n            return _dataSource;\n        };\n        var setDataSource = function(value) {\n            if (angular.isObject(value)) {\n                if (_dataSource != value) {\n                    _dataSource = value;\n                    onDataSource.dispatch(_dataSource);\n                }\n            } else if (angular.isString(value)) {\n                if (_dataSource.disease != value) {\n                    if (_dataSource != value) {\n                        _dataSource = _dataSources.filter(function(v) {\n                            return v.disease == this.key\n                        }, {\n                            key: value\n                        })[0]\n                        onDataSource.dispatch(_dataSource);\n                    }\n                }\n            }\n        };\n\n        // Initialize\n        function init() {\n            return $q(function(resolve, reject) {\n                query(\"lookup_oncoscape_datasources\",{beta:false}).then(function(response){ \n                //query(\"lookup_oncoscape_datasources\").then(function(response) {\n                    _dataSources = response.data\n                        .filter(function(d) {\n                            return angular.isDefined(d.img)\n                        })\n                        .map(function(d) {\n                            d.name = d.name.trim();\n                            return d;\n                        })\n                        .sort(function(a, b) {\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                    resolve(_dataSources);\n                }, reject);\n            });\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        return {\n            init: init,\n            query: query,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            getLayout: getLayout,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            setBusy: setBusy\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, osCohortService, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, patientHtml, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            //'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            //'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"telomere\"]',\n                        style: {\n                            'background-color': \"#3993fa\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            //'border-opacity': .3,\n                            'border-width': 5\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"right\",\n                            'text-margin-x': 5,\n                            'color': '#000',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            'border-width': 5\n                                //'background-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"annotation-text\"]',\n                        style: {\n                            'font-size': '400px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFF',\n                            'height': '0px',\n                            'width': '0px',\n                            'shape': 'round',\n                            'label': \"data(label)\",\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: .5,\n                    //motionBlur: true,\n                    //motionBlurOpacity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: .05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#3993fa\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })()\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                }\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    var elements = cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function(item) {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = [{\n                    name: 'mutation',\n                    abv: 'm',\n                    show: true,\n                    color: '#9C27B0',\n                    class: 'switch-mutation',\n                    count: '',\n                    id: 0\n                }, {\n                    name: 'cnGain.1',\n                    abv: 'cnG1',\n                    show: true,\n                    color: '#03A9F4',\n                    class: 'switch-cnG1',\n                    count: '',\n                    id: 1\n                }, {\n                    name: 'cnGain.2',\n                    abv: 'cnG2',\n                    show: true,\n                    color: '#3F51B5',\n                    class: 'switch-cnG2',\n                    count: '',\n                    id: 2\n                }, {\n                    name: 'cnLoss.1',\n                    abv: 'cnL1',\n                    show: true,\n                    color: '#FF9800',\n                    class: 'switch-cnL1',\n                    count: '',\n                    id: -1\n                }, {\n                    name: 'cnLoss.2',\n                    abv: 'cnL2',\n                    show: true,\n                    color: '#F44336',\n                    class: 'switch-cnL2',\n                    count: '',\n                    id: -2\n                }];\n\n                // Populate Dropdowns + Draw Chromosome\n                $q.all([\n                    osApi.query(\"render_chromosome\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'cluster',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    }),\n                    osApi.query(\"render_patient\", {\n                        type: 'color',\n                        dataset: osApi.getDataSource().disease,\n                        $fields: ['name']\n                    })\n                ]).then(function(results) {\n\n                    vm.optGeneSets = results[0].data;\n\n                    if (osApi.getDataSource().disease == \"brain\") {\n                        vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                            return v.name == \"TCGA pancan mutated\";\n                            //    \"Marker genes 545\"; \n                        })[0]\n                    } else {\n                        vm.optGeneSet = vm.optGeneSets.filter(function(v) {\n                            return v.name == \"TCGA pancan mutated\";\n                        })[0]\n                    }\n\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                });\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi);\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50)\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function(e) {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([.005, 20]).range([5, 1])\n            var nodeScale = d3.scaleLog().domain([.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([.01, 2]);\n            var resizeNodes = function() {\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < .375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n            }\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n                    try {\n                        var items = data.map(function(item) {\n                            return this.getElementById(item);\n                        }, cyChart);\n                        cyChart.collection(items).remove();\n                    } catch (e) {}\n                };\n                cmd.patients_html = function(data) {\n                    patientHtml = data;\n                };\n                cmd.patients_resize = function() {\n\n                };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    var signals = signal.patients;\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 100\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                    //---//---//\n                    // Initial Node Selection\n                    var pc = osCohortService.getPatientCohort();\n                    if (pc == null) {\n                        osCohortService.setPatientCohort([], \"All Patients\")\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                        }, {\n                            pc: pc\n                        });\n                        cyChart.endBatch();\n                        vm.zoom.reset()\n                        cyChart.zoom(cyChart.zoom() * .4);\n                        cyChart.center();\n                    }\n                    //---//---//\n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text'],edge[nodeType='annotation-line'],node[nodeType='annotation-point']\").remove();\n                    if (data.annotation) {\n                        cyChart.add(data.annotation);\n\n                    }\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        try {\n                            var pos = data.data[node.id()];\n                            pos.x -= 4000;\n                            node.position(pos);\n                        } catch (e) {}\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n\n                        } catch (e) {\n                            node.data({\n                                'weight': 500\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele, i, eles) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        cyChart.add(data.edges);\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    var edges = osApi.getDataSource().edges.filter(function(f) {\n                        return f.name == this.geneset\n                    }, {\n                        geneset: geneset\n                    })[0];\n\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id\n                            })\n                        },\n                        edges: {\n                            patientWeights: edges.patientWeights,\n                            geneWeights: edges.genesWeights,\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.name == this)\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                }\n            })(cyChart, vm)\n\n            vm.cmd = function() {}\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            var watch = (function(vm, $scope) {\n                var watches = 1;\n\n                var firstTime = true;\n                var update = function(){\n                    if (firstTime){\n                        firstTime=false;\n                        if (hydrate()) return;    // If Hydration Was Possible\n                    }\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n                    \n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n                // Search\n                watches += 1;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    var needle = vm.search.toUpperCase().trim();\n                    cyChart.$('node').unselect();\n                    if (needle.length > 0) cyChart.$('node').filter(function(i, ele) {\n                        return (ele.id().toUpperCase().indexOf(needle) == 0);\n                    }).select();\n                }, 600))\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize()\n                });\n\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length == 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            }\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setPatientCohortUpdate = true;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                if (setPatientCohortUpdate) {\n                    cyChart.startBatch();\n                    cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (patients.ids.indexOf(node.id()) != -1) node.select();\n                    });\n                    cyChart.endBatch();\n                }\n                setPatientCohortUpdate = true;\n            });\n\n            function setPatientCohort(opts) {\n                setPatientCohortUpdate = false;\n                osCohortService.setPatientCohort(\n                    cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                        return p.data().id\n                    }),\n                    \"Markers + Patients\"\n                );\n            };\n\n            function setGeneCohort(opts) {\n\n            };\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length == 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    var opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    var opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele, i, eles) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n\n                        }\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5')\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            }\n\n            osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Hydration\n            var hydrate = function(){\n                var data = localStorage.getItem(osApi.getDataSource().disease + \"MarkersPatients\");\n                if (data===null) return false;\n                data = JSON.parse(data);\n                cyChart.load(data.elements);\n                vm.resize();\n                var elements = cyChart.nodes('node[nodeType=\"patient\"]');\n                elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                elements.on(\"mouseover\", signal.patients.over.dispatch);\n                elements.on(\"mouseout\", signal.patients.out.dispatch);\n\n                //---//---//\n                // Initial Node Selection\n                setTimeout(function(v){\n                var pc = osCohortService.getPatientCohort();\n                if (pc == null) {\n                    osCohortService.setPatientCohort([], \"All Patients\")\n                } else {\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (pc.ids.indexOf(node.id()) != -1) node.select();\n\n                    }, {\n                        pc: pc\n                    });\n                    cyChart.endBatch();\n                    vm.zoom.reset()\n                    cyChart.zoom(cyChart.zoom() * .4);\n                    cyChart.center();\n                }\n            },3000);\n                //---//---//\n\n\n                osApi.setBusy(false);\n                return true;\n            }\n            var dehydrate = function(){\n                var data = JSON.stringify(cyChart.json());\n                // Geneset / Edge Visibility / Color Option / Layout\n                localStorage.setItem(osApi.getDataSource().disease + \"MarkersPatients\", data);\n            }\n            // Destroy\n            $scope.$on('$destroy', function() {\n                dehydrate();\n                osCohortService.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osCohortService, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, Handsontable) {\n\n            // Properties\n            var vm = this;\n            var elGrid, htGrid;\n            var data, settings = {\n                manualColumnResize: true,\n                manualColumnMove: true,\n                fixedRowsTop:0,\n                readonly: true, \n                contextMenu: true,\n                columnSorting: true,\n                sortIndicator: true,\n                comments:true,\n                allowEmpty: true,\n                autoColumnSize: {\n                    samplingRatio: 23\n                },\n                mergeCells: true,\n\n\n            };\n\n            elGrid = angular.element(\"#history-grid\");\n            \n\n            \n\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc==null) osCohortService.setPatientCohort([],\"All Patients\");\n            var selectedIds = (pc==null) ? [] : pc.ids;\n\n            // Intialize View State\n            (function(vm) {\n                vm.datasource = osApi.getDataSource();\n                vm.collections = Object.keys(vm.datasource.clinical)\n                    .map(function(key){\n                        var v = this.data[key];\n                       return {name:key, collection:v};\n                        },{data:vm.datasource.clinical})\n                    .filter(function(o){\n                        return o.name!=\"events\" ;\n                    });\n                vm.collection = vm.collections[0];\n\n                \n            })(vm);\n\n         \n            var setData = function(){\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                .then(function(response) {\n                    data = response.data;\n\n                    vm.columns = Object.keys(data[0]).map(function(v){ return {\n                        field:v, \n                        displayName:v.replace(/_/g, \" \").toUpperCase(),\n                        show: true\n                    }});\n\n                    if (htGrid==null){\n                        settings.startCols = vm.columns.length;\n                        htGrid = new Handsontable(elGrid[0], settings);\n                        window.htG = htGrid;\n                    } \n\n                    vm.setSize(false);\n                    vm.setColumns(false);\n                    \n                    htGrid.loadData(data);\n                    htGrid.render();\n                \n                    osApi.setBusy(false);\n                    \n                });\n          \n            }\n\n            vm.setColumns = function(render){\n                var cols = vm.columns.filter(function(v){ return v.show; });\n                settings.colHeaders = cols.map(function(v){ return v.displayName; });  \n                settings.columns = cols.map(function(v){return { \n                    data: v.field \n                } });\n\n                htGrid.updateSettings(settings);\n                htGrid.render();\n                if (render) htGrid.render();\n            };\n\n            vm.setSize = function(render){\n\n            \n                var osLayout = osApi.getLayout();\n                elGrid.css(\"margin-left\",osLayout.left+\"px\");\n                elGrid.css(\"width\", ($window.innerWidth - osLayout.left - osLayout.right - 120) + \"px\");\n                elGrid.css(\"height\", ($window.innerHeight - 150) + \"px\");\n                elGrid.css(\"margin-left\", osLayout.left+ \"px\");\n                elGrid.css(\"overflow\", \"hidden\");\n                elGrid.css(\"border\", \"1px solid #DDD\");\n                if (render) htGrid.render();\n\n                \n            }\n\n            $scope.$watch(\"vm.collection\", setData)\n\n\n            // resize\n            osApi.onResize.add(vm.setSize);\n            var resize = function() { vm.setSize(true); } // Should Debounce.\n            angular.element($window).bind('resize', resize);\n            \n\n\n\n\n            // // Get Column Definitions\n            // var fields = ['patient_ID', 'gender', 'race', 'age_at_diagnosis', 'days_to_death', 'status_vital'];\n            // var columns = fields.map(function(column) {\n            //     return {\n            //         data: column,\n            //         title: column.replace(/_/g, \" \"),\n            //         defaultContent: 'NA'\n            //     };\n            // });\n            // columns[0].renderer = function(data, type, full, meta){\n            //     return '!!'+data;\n            // };\n\n\n            // var initDataTable = function(vm, columns, data) {\n\n            //     // Override Filter Function\n            //     angular.element.fn.DataTable.ext.search = [function(settings, data) {                    \n            //         if (selectedIds.length != 0) { if (selectedIds.indexOf(data[0]) == -1) return false; }\n            //         return true;\n            //     }];\n\n            //     // Specify Data\n            //     table = angular.element('#history-datatable').dataTable({\n            //         paging: false,\n            //         columns: columns,\n            //         data: data,\n            //         \"scrollY\": \"60vh\",\n            //         \"scrollCollapse\": true\n            //     });\n            //     table.api().draw();\n            // }\n\n            // var lo = function(){\n            //     var layout = osApi.getLayout();\n            //         angular.element(\".history-content\").css(\"margin-left\", layout.left).css(\"margin-right\", layout.right);\n            //         table.api().draw();\n            // };\n            // osApi.onResize.add(lo);\n            // angular.element($window).bind('resize',\n            //         _.debounce(lo, 300)\n            //     );\n\n            // var initEvents = function(vm) {\n\n            //     // Export CSV Button\n            //     vm.exportCsv = function() {\n\n            //         var csv = table._('tr', {\n            //             \"filter\": \"applied\"\n            //         }).map(function(item) {\n            //             var row = \"\";\n            //             for (var i = 0; i < fields.length; i++) {\n            //                 if (i > 0) row += \",\";\n            //                 row += item[fields[i]];\n            //             }\n            //             return row;\n            //         });\n            //         csv.unshift(fields.join(\",\"));\n            //         csv = csv.join(\"\\n\");\n            //         var encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csv);\n            //         $window.open(encodedUri);\n            //     }\n\n\n            //     // Apply Fitler\n            //     vm.applyFilter = function(filter) {\n\n            //         selectedIds = [];\n\n            //         table.api().draw();\n\n            //         var o = table._('tr', {\n            //             \"filter\": \"applied\"\n            //         }).map(function(item) {\n            //             return item[\"patient_ID\"].toString().toUpperCase()\n            //         });\n            //         o = $.map(o, function(value) {\n            //             return [value];\n            //         });\n            //         osCohortService.setPatientCohort(o, \"Patient History\");\n            //     };\n\n            //     osCohortService.onPatientsSelect.add(function(patients){\n            //         selectedIds = patients.ids;\n            //         table.api().draw();\n\n            //     });\n            //     lo();\n\n            // }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            // osApi.query(vm.datasource.clinical.patient, {\n            //         $fields: fields\n            //     })\n            //     .then(function(response) {\n            //         data = response.data;\n            //         initDataTable(vm, columns, response.data);\n            //         initEvents(vm, $scope, osApi)\n            //         osApi.setBusy(false);\n            //         $timeout(lo, 200);\n                    \n            //     });\n\n\n            // var onPatientColorChange = function(colors){\n            //     vm.showPanelColor = false;\n            //     vm.legendCaption = colors.name;\n            //     vm.legendNodes = colors.data;\n\n            //     if(colors.name==\"None\"){\n            //         vm.legendCaption = \"\";\n            //         table.api().rows().every( function ( rowIdx, tableLoop, rowLoop ) {\n            //             angular.element(this.node()).children().first().attr(\"style\",\"border-left-color:inherit;border-left-width:inherit;\");\n            //         });\n            //         return;\n            //     }\n\n            //     var degMap =colors.data.reduce(function(p,c){\n            //         for (var i=0; i<c.values.length; i++){\n            //             p[c.values[i]] = c.color;\n            //         }\n            //         return p;\n            //     },{});\n\n            //     table.api().rows().every( function ( rowIdx, tableLoop, rowLoop ) {\n                    \n            //         var pid = this.data().patient_ID;\n            //         var color = degMap.hasOwnProperty(pid) ? degMap[pid] : \"#EEE\";\n            //         angular.element(this.node()).children().first().attr(\"style\",\"border-left-color:\"+color+\";border-left-width:10px;\");\n                    \n            //     } );\n\n            //     lo();\n   \n            // }\n            \n            // osCohortService.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                //osCohortService.onPatientColorhange.remove(onPatientColorChange);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, osCohortService, $state, $timeout, $scope, $stateParams, $window) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var elChart = d3.select(\"#heatmap-chart\");\n            var d3Chart = elChart.append(\"svg\");\n            var gChart = d3Chart.append(\"g\");\n\n\n            var data;\n            var patients;\n            var genes;\n\n            osApi.setBusy(true);\n            osApi.query(\"brca_psi_bradleylab_miso\", {\n                '$limit': 50\n            }).then(function(response) {\n                osApi.setBusy(false);\n                data = response.data;\n                patients = Object.keys(data[0].patients);\n                genes = data.map(function(v) {\n                    return v.gene;\n                });\n\n                var d = data.map(function(datum) {\n                    var patients = datum.patients;\n                    return Object.keys(patients).map(function(key) {\n                        return (this[key] == null) ? 0.00 : this[key];\n                    }, patients);\n                });\n                var c = Object.keys(data[0].patients);\n                var r = data.map(function(datum) {\n                    return datum.gene;\n                });\n\n                var x = {\n                    data: d,\n                    colnames: c,\n                    rownames: r\n                };\n\n                console.log(JSON.stringify(d));\n\n                // ocpu.seturl(\"//localhost/ocpu/library/oncoscape/R\");\n                // $(\"#test\").rplot(\"oheatmap\", {\n                //     data: d\n                // }, function(e) {\n                //     debugger;\n                // });\n\n                draw(data);\n            });\n\n            var draw = function(data) {\n\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var cellHeight = height / data.length;\n                var cellWidth = width / patients.length;\n\n                var colorScale = d3.scaleLinear()\n                    .domain([0, .5, 1])\n                    .range(['#3c82f7', 'white', '#f6b500']);\n\n                var zoom = d3.zoom()\n                    .scaleExtent([1, 40])\n                    .translateExtent([\n                        [0, 0],\n                        [width, height]\n                    ])\n                    .on(\"zoom\", zoomed);\n\n                d3Chart.call(zoom);\n\n                function zoomed() {\n                    gChart.attr(\"transform\", d3.event.transform);\n                    //gX.call(xAxis.scale(d3.event.transform.rescaleX(x)));\n                    //gY.call(yAxis.scale(d3.event.transform.rescaleY(y)));\n                }\n\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                gChart.attr(\"width\", width).attr(\"height\", height);\n                var rowEnter = gChart.selectAll(\"g.geneEvent\")\n                    .data(data).enter().append(\"g\");\n                rowEnter\n                    .attr(\"class\", \"geneEvent\")\n                    .attr(\"transform\", function(d, i) {\n                        return \"translate(0,\" + (cellHeight * i) + \")\";\n                    })\n\n                var cols = rowEnter.selectAll(\"rect\").data(function(d) {\n                    if (d.pda == null) d.pda = Object.keys(d.patients).map(function(key) {\n                        return this[key];\n                    }, d.patients);\n                    return d.pda;\n                });\n                cols.exit().remove();\n                cols.enter().append(\"rect\")\n                    .attr(\"width\", cellWidth)\n                    .attr(\"height\", cellHeight)\n                    .attr(\"x\", function(d, i) {\n                        return cellWidth * i;\n                    })\n                    .style(\"fill\", function(d) {\n\n                        return colorScale(d);\n                    })\n                    //   .on(\"mouseover\", function(d){\n                    //      //highlight text\n                    //      d3.select(this).classed(\"cell-hover\",true);\n                    //      d3.selectAll(\".rowLabel\").classed(\"text-highlight\",function(r,ri){ return ri==(d.row-1);});\n                    //      d3.selectAll(\".colLabel\").classed(\"text-highlight\",function(c,ci){ return ci==(d.col-1);});\n\n                //      //Update the tooltip position and value\n                //      d3.select(\"#tooltip\")\n                //        .style(\"left\", (d3.event.pageX+10) + \"px\")\n                //        .style(\"top\", (d3.event.pageY-10) + \"px\")\n                //        .select(\"#value\")\n                //        .text(\"lables:\"+rowLabel[d.row-1]+\",\"+colLabel[d.col-1]+\"\\ndata:\"+d.value+\"\\nrow-col-idx:\"+d.col+\",\"+d.row+\"\\ncell-xy \"+this.x.baseVal.value+\", \"+this.y.baseVal.value);  \n                //      //Show the tooltip\n                //      d3.select(\"#tooltip\").classed(\"hidden\", false);\n                // })\n                // .on(\"mouseout\", function(){\n                //        d3.select(this).classed(\"cell-hover\",false);\n                //        d3.selectAll(\".rowLabel\").classed(\"text-highlight\",false);\n                //        d3.selectAll(\".colLabel\").classed(\"text-highlight\",false);\n                //        d3.select(\"#tooltip\").classed(\"hidden\", true);\n                // });\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osCohortService, osAuth, $stateParams, $state, $timeout, $rootScope) {\n\n            osApi.query(\"lookup_oncoscape_tools\", {\n                beta: false\n            }).then(function(response) {\n                vm.tools = response.data;\n\n            });\n\n            osApi.onDataSource.add(function() {\n                $timeout(function() {\n                    vm.datasets = osApi.getDataSources();\n                    vm.showTools = true;\n                });\n            });\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.addPatientCohort = osCohortService.addPatientCohort;\n            vm.setPatientCohort = osCohortService.setPatientCohort;\n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n            });\n            vm.showMenu = false;\n            vm.showTools = false;\n\n            var currentTool;\n            $rootScope.$on('$stateChangeStart', function(event, toState) {\n                currentTool = toState.name;\n                switch (toState.name) {\n                    case \"landing\":\n                    case \"tools\":\n                    case \"datasource\":\n                        vm.showMenu = false;\n                        vm.showtools = false;\n                        break;\n                    default:\n                        vm.showMenu = true;\n                        vm.showTools = true;\n                        break;\n                }\n            });\n\n            vm.loadDataset = function(dataset) {\n                $state.go(currentTool, {\n                    datasource: dataset\n                });\n            };\n\n            vm.loadTool = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n\n            vm.logoutClick = function() {\n                osAuth.logout();\n                $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, osCohortService, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n            // Retrieve Selected Patient Ids From OS Service\n            var pc = osCohortService.getPatientCohort();\n            if (pc == null) {\n                osCohortService.setPatientCohort([], \"All Patients\")\n            }\n            var selectedIds = (pc == null) ? [] : pc.ids;\n            osCohortService.onPatientsSelect.add(function(patients) {\n                selectedIds = patients.ids;\n                setSelected();\n            });\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", false);\n                } else {\n                    chart.selectAll(\".point\").classed(\"point-unselected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) == -1)\n                    });\n                }\n            }\n\n            // Properties\n            var vm = this;\n\n            var rows = 3;\n            var cell = {\n                w: 0,\n                h: 0\n            };\n\n\n            var datasource = {\n                \"disease\": \"brain\",\n                \"source\": \"TCGA\",\n                \"beta\": false,\n                \"name\": \"Brain\",\n                \"img\": \"DSbrain.png\",\n                \"category\": [{\n                    \"source\": \"tcga\",\n                    \"type\": \"color\",\n                    \"collection\": \"brain_color_tcga_import\"\n                }],\n                \"molecular\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_ucsc_gistic\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_ucsc_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"cnv\",\n                    \"collection\": \"brain_cnv_cbio_gistic\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut\",\n                    \"collection\": \"brain_mut_cbio_wxs\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mut01\",\n                    \"collection\": \"brain_mut01_cbio_import\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"methylation\",\n                    \"collection\": \"brain_methylation_cbio_hm27\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"rna\",\n                    \"collection\": \"brain_rna_cbio_rnaseq-bc\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"protein\",\n                    \"collection\": \"brain_protein_cbio_rppa-zscore\"\n                }],\n                \"clinical\": {\n                    \"patient\": \"brain_patient_tcga_clinical\",\n                    \"followUp-v1p0\": \"brain_followup-v1p0_tcga_clinical\",\n                    \"drug\": \"brain_drug_tcga_clinical\",\n                    \"newTumor\": \"brain_newtumor_tcga_clinical\",\n                    \"otherMalignancy-v4p0\": \"brain_othermalignancy-v4p0_tcga_clinical\",\n                    \"events\": \"brain_events_tcga_clinical\"\n                },\n                \"calculated\": [{\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_ucsc_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"ucsc\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_ucsc_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-allgenes-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgagbmclassifiers-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-markergenes545-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-tcgapancanmutated-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-cbio\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"mds\",\n                    \"collection\": \"brain_mds_cbio_mds-oncovogel274-cnv-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-cnv-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-mut01-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-methylation-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgagbmclassifiers-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-markergenes545-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-tcgapancanmutated-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-oncovogel274-rna-10000\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein\"\n                }, {\n                    \"source\": \"cBio\",\n                    \"type\": \"pcaScores\",\n                    \"collection\": \"brain_pcascores_cbio_prcomp-allgenes-protein-10000\"\n                }],\n                \"edges\": [{\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"ucsc\",\n                    \"edges\": \"brain_edges_ucsc_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_ucsc_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_ucsc_oncovogel274-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA GBM classifiers\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgagbmclassifiers-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgagbmclassifiers-mut01-cnv\"\n                }, {\n                    \"name\": \"Marker genes 545\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_markergenes545-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_markergenes545-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_markergenes545-mut01-cnv\"\n                }, {\n                    \"name\": \"TCGA pancan mutated\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_tcgapancanmutated-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_tcgapancanmutated-mut01-cnv\"\n                }, {\n                    \"name\": \"oncoVogel274\",\n                    \"source\": \"cbio\",\n                    \"edges\": \"brain_edges_cbio_oncovogel274-mut01-cnv\",\n                    \"patientWeights\": \"brain_ptdegree_cbio_oncovogel274-mut01-cnv\",\n                    \"genesWeights\": \"brain_genedegree_cbio_oncovogel274-mut01-cnv\"\n                }]\n            };\n\n            var elChart = angular.element(\"#compareclusterChart\");\n            var chart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n\n            vm.allClusters = datasource.calculated.map(function(v) {\n                v.selected = true;\n                return v;\n            });\n\n            var clusters = vm.allClusters\n                .filter(function(v) {\n                    return v.collection.indexOf(\"ucsc\") != -1;\n                })\n                .filter(function(v) {\n                    return v.type == \"mds\";\n                })\n\n            clusters.pop();\n\n            function plot(p) {\n                var rect = d3.select(this);\n                rect.append(\"svg:rect\")\n                    .attr(\"class\", \"cell\")\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0)\n                    .attr(\"width\", cell.w)\n                    .attr(\"height\", cell.h);\n\n                var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                rect.selectAll(\"circle\")\n                    .data(p.data)\n                    .enter().append(\"svg:circle\")\n                    .attr(\"class\", \"point\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.x);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.y);\n                    })\n                    .attr(\"r\", 1);\n\n                brush.create(rect);\n\n            }\n\n            // Brushes\n            var brush = (function(d3, cell, osCohortService) {\n\n                var _brushes = [];\n\n                var start = function() {\n                    if (d3.event.selection === null) return;\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush !== d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.rect.call(b.brush.move, null);\n                        });\n                    _brushes\n                        .filter(function(b) {\n                            return b.brush === d3.event.target\n                        })\n                        .forEach(function(b) {\n                            b.brush.on(\"end\", end);\n                        });\n                };\n                var end = function() {\n                    if (d3.event.selection === null) {\n                        osCohortService.setPatientCohort([], \"Clusters\");\n                        return;\n                    }\n                    var bv = d3.event.selection;\n                    var xMin = bv[0][0];\n                    var xMax = bv[1][0];\n                    var yMin = bv[0][1];\n                    var yMax = bv[1][1];\n\n                    var brush = _brushes.filter(function(b) {\n                        return b.brush === d3.event.target\n                    })[0];\n                    brush.brush.on(\"end\", null);\n                    var rect = brush.rect.data()[0];\n                    var xScale = d3.scaleLinear().domain(rect.xDomain).range([0, cell.w]);\n                    var yScale = d3.scaleLinear().domain(rect.yDomain).range([0, cell.h]);\n                    var ids = rect.data.filter(function(c) {\n                            var x = xScale(c.x);\n                            var y = yScale(c.y);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        })\n                        .map(function(d) {\n                            return d.id;\n                        });\n                    osCohortService.setPatientCohort(ids, \"Clusters\");\n                };\n\n                var create = function(rect) {\n                    var brush = d3.brush()\n                        .on(\"start\", start);\n                    rect.call(brush);\n                    _brushes.push({\n                        brush: brush,\n                        rect: rect\n                    });\n                }\n\n                var clear = function() {\n\n                }\n\n                var destory = function() {\n\n                }\n\n                return {\n                    create: create,\n                    clear: clear,\n                    destory: destory\n                }\n            })(d3, cell, osCohortService);\n\n            function draw() {\n\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                chart.selectAll(\"g.graph\")\n                    .data(clusters)\n                    .enter().append(\"svg:g\")\n                    .attr(\"class\", \"graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    })\n                    .each(plot);\n            }\n\n            $q.all(\n                clusters.map(function(v) { return osApi.query(v.collection)})\n            ).then(function(data) {\n                clusters = clusters.map(function(v, i) {\n                    var data = this.data[i].data[0].data;\n                    var rv = {\n                        name: v,\n                        data: Object.keys(data).reduce(function(p, c) {\n                            var datum = p.data[c];\n                            p.value.push({\n                                id: c,\n                                x: datum.x,\n                                y: datum.y\n                            });\n                            return p;\n                        }, {\n                            data: data,\n                            value: []\n                        }).value,\n                        xDomain: null,\n                        yDomain: null,\n                        col: i % this.rows,\n                        row: parseInt(i / this.rows)\n                    };\n                    var xVal = function(d) {\n                        return d.x;\n                    };\n                    var yVal = function(d) {\n                        return d.x;\n                    };\n                    rv.xDomain = [d3.min(rv.data, xVal), d3.max(rv.data, xVal)];\n                    rv.yDomain = [d3.min(rv.data, yVal), d3.max(rv.data, yVal)];\n                    return rv;\n                }, {\n                    data: data,\n                    rows: rows\n                });\n\n                draw();\n            });\n            var resize = function() {\n                var layout = osApi.getLayout();\n                var height = $window.innerHeight - 180;\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                cell.w = Math.floor(width / rows);\n                cell.h = Math.floor(height / Math.ceil(clusters.length / rows));\n\n                elChart.css(\"margin-left\", layout.left + 20).css(\"margin-right\", layout.right + 20).css(\"width\", width).css(\"height\", height + 70);\n                chart.attr(\"width\", width).attr(\"height\", height);\n                chart.selectAll(\"g.graph\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + (d.col * cell.w) + \",\" + (d.row * cell.h) + \")\";\n                    }).each(function(p) {\n                        var xScale = d3.scaleLinear().domain(p.xDomain).range([0, cell.w]);\n                        var yScale = d3.scaleLinear().domain(p.yDomain).range([0, cell.h]);\n                        var g = d3.select(this);\n                        g.select(\".cell\")\n                            .attr(\"width\", cell.w)\n                            .attr(\"height\", cell.h);\n                        g.selectAll(\".point\")\n                            .attr(\"cx\", function(d) {\n                                return xScale(d.x);\n                            })\n                            .attr(\"cy\", function(d) {\n                                return yScale(d.y);\n                            })\n                            .attr(\"r\", 1);\n                    });\n            };\n\n            // Listen For Resize\n            osApi.onResize.add(resize);\n            angular.element($window).bind('resize',\n                _.debounce(resize, 300)\n            );\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, osCohortService, d3) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{name:\"Quantile\"},{name:\"Quantize\"}];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2,3,4,5,6,7,8].map(function(v){ return {name:v+\" Bins\", value:v} });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            vm.colorOption = vm.colorOptions[0];\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n            \n\n\n            vm.setColor = function(item) {\n\n                if (item.name == \"None\") {\n                    osCohortService.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    })\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name == \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    })\n\n                    // debugger;\n                    osCohortService.setPatientColor(v.data[0]);\n                    vm.close();\n                });\n            };\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1)\n                    };\n                });\n                osApi.query(vm.colorOption.collection, {\n                    gene: {\n                        '$in': genes.map(function(v) {\n                            return v.gene;\n                        })\n                    }\n                }).then(function(results) {\n                    if (results.data.length > 0) {\n                        var data;\n                        if (results.data.length == 1)\n                            data = results.data[0];\n                        else {\n                            data = {};\n                            data.patients = results.data.reduce(function(p, c) {\n                                var fn = p.lookup[c.gene];\n                                for (var i = 0; i < p.pids.length; i++) {\n                                    var pid = p.pids[i];\n                                    var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                    if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                    if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                }\n                                return p;\n                            }, {\n                                pids: Object.keys(results.data[0].patients),\n                                lookup: genes.reduce(function(p, c) {\n                                    p[c.gene] = c.op;\n                                    return p;\n                                }, {}),\n                                output: {}\n                            }).output;\n\n                            var range = Object.keys(data.patients).reduce(function(p, c) {\n                                p.min = Math.min(p.min, p.values[c]);\n                                p.max = Math.max(p.min, p.values[c]);\n                                return p;\n                            }, {\n                                values: data.patients,\n                                min: Infinity,\n                                max: -Infinity\n                            });\n                            data.min = range.min;\n                            data.max = range.max;\n                        }\n\n                        // Color Patients\n                        var colors = [\"#9d1cb2\",\"#00a7f7\",\"#3d4eb8\",\"#ff9900\",\"#f7412d\",\"#795548\",\"#E91E63\",\"#673AB7\"];\n                        var values = colors.splice(0, vm.colorBin.value);\n\n                        var scale = (vm.colorScale.name==\"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n                        \n\n                        // Combine Colors + Scale Into Name + Value\n                        var labels;\n                        if (vm.colorScale.name==\"Quantile\"){\n                            debugger;\n                            scale.domain(Object.keys(data).map(function(key){return data[key]},{data:data})).range(values);\n                            labels = scale.quantiles().map(function(v){ return parseFloat(v).toFixed(3); });\n                            labels.unshift(\"\");\n                            labels = labels.map(function(c,i,a){ \n                              if (i==0){ return \"-\\u221e \\u2194 \"+a[1]; }\n                              else if (i==a.length-1){\n                                 return a[i] +\" \\u2194 +\\u221e\" //\\u226C\n                              } \n                            return a[i] +\" \\u2194 \" +a[i+1];\n                            });\n                            values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                        }else{\n                            debugger;\n                            scale\n                            .domain([data.min, data.max])\n                            .range(values);\n                            labels = scale.ticks(values.length).map(function(v) { return \"~\"+parseFloat(v).toFixed(2); })\n                            values = _.zip(values, labels).map(function(v){ return {color:v[0], name:v[1]} });\n                        }\n                        data = Object.keys(data.patients).map(function(id) {\n                                return {\n                                    id: id,\n                                    color: this.scale(this.patients[id]),\n                                    value: this.patients[id]\n                                };\n                            }, {\n                                patients: data.patients,\n                                scale: scale\n                            })\n                            .reduce(function(p, c) {\n                                if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                p[c.color].push(c.id);\n                                return p;\n                            }, {});\n\n                        data = Object.keys(data).map(function(key) {\n                            return {\n                                color: key,\n                                name: this.names.filter(function(f) {\n                                    return f.color == this.color\n                                }, {\n                                    color: key\n                                })[0].name,\n                                values: this.data[key]\n                            };\n                        }, {\n                            data: data,\n                            names: values\n                        })\n\n                        data = data.sort(function(a, b) {\n                            if (a.name.indexOf(\"-\\u221e\")!=-1) return -1;\n                            if (b.name.indexOf(\"-\\u221e\")!=-1) return 1;\n                            if (a.name.indexOf(\"+\\u221e\")!=-1) return 1;\n                            if (b.name.indexOf(\"+\\u221e\")!=-1) return -1;\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                        data.push({\n                            color: '#DDD',\n                            name: 'Null',\n                            values: []\n                        })\n                        debugger;\n\n                        var colors = {\n                            dataset: osApi.getDataSource().disease,\n                            type: 'color',\n                            name: genes.reduce(function(p, c) {\n                                p += c.op + c.gene + \" \";\n                                return p;\n                            }, \"\"),\n                            data: data\n                        };\n                        osCohortService.setPatientColor(colors);\n                    }\n\n                });\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope:{ },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, osCohortService, $state, $scope, $timeout, $rootScope, d3) {\n\n            var vm = this;\n            vm.cohorts = [];\n            vm.patientChartOption = null;\n            vm.cohortName = \"\";\n            vm.addCohort = function(){};\n            vm.setCohort = function(){};\n            vm.removeCohort = function(){};\n            vm.editItem = {name:''};\n            vm.editCohort = function(item){\n                vm.editItem = item;\n                vm.edit = true;\n            };\n            \n            vm.show = false;\n            vm.edit = false;\n            \n            \n            osCohortService.onCohortsChange.add(function(allCohorts){\n                vm.cohorts = allCohorts;\n                vm.show = true;\n                vm.showPatientHistory();\n                osCohortService.setPatientCohort([],\"All Patients\")\n            });\n\n            $rootScope.$on('$stateChangeStart', function(event, toState){ \n                switch(toState.name){\n                    case \"landing\":\n                    case \"tools\":\n                    case \"datasource\":\n                        vm.show = false;\n                        break;\n                    default:\n                        vm.show = true;\n                        break;\n                }\n            });\n\n            // Configure Tray\n            var elTray = angular.element(\".cohort-menu\");\n            var mouseOver = function(){\n                elTray\n                    .removeClass(\"tray-collapsed-left\");\n            }\n            var mouseOut = function(){\n                elTray\n                    .addClass(\"tray-collapsed-left\");\n            }\n            \n            // Configure Tabs\n            var elTabPatients = angular.element('#cohort-tab-patients');\n            var elTabGenes    = angular.element('#cohort-tab-genes');\n            vm.showPatientHistory = function(){\n                elTabPatients.addClass(\"active\");\n                elTabGenes.removeClass(\"active\");\n                vm.cohorts = osCohortService.getPatientCohorts();\n                vm.addCohort = osCohortService.addPatientCohort;\n                vm.setCohort = osCohortService.setPatientCohort;\n                vm.removeCohort = osCohortService.delPatientCohort;\n            };\n            vm.showGeneHistory = function(){\n                elTabGenes.addClass(\"active\");\n                elTabPatients.removeClass(\"active\");\n                vm.cohorts = osCohortService.getGeneCohorts();\n                vm.addCohort = osCohortService.addGeneCohort;\n                vm.setCohort = osCohortService.setGeneCohort;\n                vm.removeCohort = osCohortService.delGeneCohort;\n            };\n\n            var isLocked = true;\n            vm.toggle = function(){\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                    \n                        \n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                   \n                }\n                osApi.onResize.dispatch();\n                    \n            }   \n\n\n            var barClick =function(d){\n                \n                \n                if (vm.patientChartOption.type==\"numeric\"){\n                    var bounds = d.label.split(\"-\").map(function(v){ return parseInt(v); });\n                    var prop = vm.patientChartOption.prop;\n                    osCohortService.filterActivePatientCohort(bounds, prop, vm.patientChartOption.type);\n                }\n            }\n\n\n            // Init SVG;\n            var svg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 238)\n                .attr(\"height\", 150)\n                .append(\"g\");\n          \n            $scope.$watch('vm.patientChartOption', function(){\n\n                if (vm.patientChartOption==null) return;\n                var data = vm.patientChartOption.data;\n\n                var barWidth = Math.floor(238/data.bins);\n                if (data.histRange[0]>0) data.histRange[0] -=2;\n\n                var yScale = d3.scaleLinear()\n                    .domain(data.histRange)\n                    .range([0,135]);\n\n                var bars = svg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"class\",\"cohort-menu-chart-bar\")\n                        .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                        .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .on(\"click\", barClick);\n\n                    bars\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return (barWidth+1) * i; })\n                            .attr(\"y\", function(d) { return 150-yScale(d.value); })\n                            .attr(\"height\", function(d) { return yScale(d.value); })\n                            .attr(\"width\", barWidth)\n\n                    bars.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n\n                    var labels = svg\n                        .selectAll(\"text\")\n                        .data(data.hist)\n\n                    labels.enter()\n                        .append(\"text\")\n                        .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                        .attr(\"y\", function(d) { \n                            return 145-yScale(d.value);\n                        })\n                        .attr(\"fill\", \"#000\")\n                        .attr(\"height\", function(d) { return yScale(d.value); })\n                        .attr(\"width\", barWidth)\n                        .attr(\"font-size\", \"8px\")\n                        .attr(\"text-anchor\", \"middle\")\n                        .text(function(d){ return d.label; });\n\n                    labels\n                        .transition()\n                            .duration(300)\n                            .attr(\"x\", function(d, i) { return ((barWidth+1) * i) + (barWidth*.5); })\n                            .attr(\"y\", function(d) { \n                                var y = 145-yScale(d.value);\n                                if (y<0) y = 20;\n                                return y;\n                            })\n                            .text(function(d){ return d.label; });\n\n                    labels.exit()\n                        .transition()\n                            .duration(300)\n                            .attr(\"y\", 150)\n                            .attr(\"height\", 0)\n                            .style('fill-opacity', 1e-6)\n                            .remove();\n                            \n\n            });\n\n\n            /* SURVIVAL - This very much needs to be refactored into a component */\n            var sChart = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            \n            var sLayout = {\n                width: 238,\n                height: 170,\n                xScale : null,\n                yScale : null\n            }\n            var addCurve = function(points){\n            \n                // Define Line\n                var valueline = d3.line()\n                    .x(function(d) { return sLayout.xScale(d[0]); })\n                    .y(function(d) { return sLayout.yScale(d[2])+10; });\n\n                sChart.append(\"path\")\n                    .attr(\"class\", \"line\")\n                    .attr(\"stroke-width\", points.weight)\n                    .attr(\"stroke\", points.color)\n                    .attr(\"fill\",\"none\")\n                    .attr(\"d\", valueline(points.data.line));\n\n                for (var i=0; i<points.data.tick.length; i++){\n                    sChart.append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .attr(\"stroke-width\", points.weight)\n                        .attr(\"stroke\", points.color)\n                        .attr(\"x1\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"x2\", sLayout.xScale(points.data.tick[i][0]))\n                        .attr(\"y1\", sLayout.yScale(points.data.tick[i][2])+5)\n                        .attr(\"y2\", sLayout.yScale(points.data.tick[i][2])+10);\n                }\n            }\n            osCohortService.onMessage.add(function(result){\n                if (result.data.cmd==\"getSurvivalData\"){\n                    var data = result.data.data;\n                    if (data.correlationId==\"CohortMenuController\"){\n\n                        sChart\n                            .attr(\"width\", '100%')\n                            .attr(\"height\", sLayout.height+10);\n\n                        sLayout.xScale = d3.scaleLinear()\n                            .domain([result.data.data.min,  result.data.data.max])\n                            .range([0, sLayout.width]);\n\n                        sLayout.yScale = d3.scaleLinear()\n                            .domain([0,100])\n                            .range([sLayout.height,0]);\n\n                        sChart.selectAll(\".line\").remove();\n                        for (var i=0; i<data.cohorts.length; i++){\n                            if (i<data.cohorts.length-1){\n                                data.cohorts[i].weight = 1;\n                            }\n                            else{\n                                data.cohorts[i].weight = 1.5;\n                            }\n                            addCurve(data.cohorts[i]);\n                        }\n                        //addCurve(data.cohorts[0]);\n                        //data.cohorts[1].color = \"#0b97d3\";\n                        //addCurve(data.cohorts[1]);\n                    }\n                }\n            });\n            /* END SURVIVAL */\n\n\n\n\n\n\n            osCohortService.onPatientsSelect.add(function(obj){\n                if (angular.isUndefined(obj.color)){\n                    obj.color = \"#000\";\n                }\n                \n                vm.cohortName = obj.name;\n                osCohortService.getPatientMetric();\n                var cohorts =  JSON.parse(JSON.stringify(osCohortService.getPatientCohorts()));\n                cohorts.push(obj);\n                osCohortService.getSurvivalData(cohorts,true,\"CohortMenuController\");\n            });\n            osCohortService.onGenesSelect.add(function(){\n\n            });\n            osCohortService.onMessage.add(function(obj){\n                if (obj.data.cmd!=\"setPatientMetric\") return;\n                $timeout(function(){\n                    vm.patientTotal = obj.data.data.total,\n                    vm.patientSelected = obj.data.data.selected,\n                    vm.patientChartOptions = obj.data.data.features;\n                    vm.patientChartOption = vm.patientChartOptions[0];\n                });                \n            });            \n\n            // And Go\n            vm.showPatientHistory();\n            \n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, osCohortService, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, .1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], .08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (.1 + Math.random()),\n                        y = 2 * Math.random() - .5,\n                        z = 10 / (.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n\n(function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .run(runBlock);\n\n     /** @ngInject */\n     function runBlock($rootScope, $state, $window, $exceptionHandler, osApi, osAuth) { //, $log\n\n         // Route Errors To Angular\n         $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n             if (!error) {\n                 error = new Error(message);\n                 error.fileName = fileName;\n                 error.lineNumber = lineNumber;\n                 error.columnNumber = (columnNumber || 0);\n             }\n             $exceptionHandler(error);\n         }\n\n         // Actions To Take On State Change\n         var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n             // Hide Busy Cursor\n             osApi.setBusy(false);\n\n             // Reset DataTable Custom Filters\n             angular.element.fn.DataTable.ext.search = [];\n\n             // Route unauthenticated users to landing page\n             if (toState.authenticate && !osAuth.isAuthenticated()) {\n                 $state.transitionTo(\"landing\");\n                 event.preventDefault();\n                 return;\n             }\n\n             //Redirect If Unable To Resolve Data Source\n             if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource === \"\")) {\n                 $state.transitionTo(\"datasource\")\n                 event.preventDefault();\n                 return;\n             } else {\n                 osApi.setDataSource(toParams.datasource);\n             }\n\n             //osApi.setDataSource({\"disease\":\"brca\",\"source\":\"TCGA\",\"name\":\"Breast\",\"img\":\"DSbreast.png\",\"beta\":false,\"collections\":{\"drug\":\"clinical_tcga_brca_drug\",\"f1\":\"clinical_tcga_brca_f1\",\"f2\":\"clinical_tcga_brca_f2\",\"f3\":\"clinical_tcga_brca_f3\",\"nte\":\"clinical_tcga_brca_nte\",\"nte_f1\":\"clinical_tcga_brca_nte_f1\",\"omf\":\"clinical_tcga_brca_omf\",\"pt\":\"clinical_tcga_brca_pt\",\"rad\":\"clinical_tcga_brca_rad\"},\"edges\":[{\"name\":\"TCGA GBM Classifiers\",\"edges\":\"edge_brca_tcgagbmclassifiers\",\"patientWeights\":\"edge_brca_tcgagbmclassifiers_patient_weight\",\"genesWeights\":\"edge_brca_tcgagbmclassifiers_gene_weight\"},{\"name\":\"Marker Genes 545\",\"edges\":\"edge_brca_markergenes545\",\"patientWeights\":\"edge_brca_markergenes545_patient_weight\",\"genesWeights\":\"edge_brca_markergenes545_gene_weight\"},{\"name\":\"TCGA Pan Cancer Mutated\",\"edges\":\"edge_brca_tcgapancancermutated\",\"patientWeights\":\"edge_brca_tcgapancancermutated_patient_weight\",\"genesWeights\":\"edge_brca_tcgapancancermutated_gene_weight\"},{\"name\":\"Onco Vogel 274\",\"edges\":\"edge_brca_oncovogel274\",\"patientWeights\":\"edge_brca_oncovogel274_patient_weight\",\"genesWeights\":\"edge_brca_oncovogel274_gene_weight\"}]});\n         });\n\n         $rootScope.$on('$destroy', off)\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('comparecluster', {\n                url: '/comparecluster/{datasource}',\n                template: '<os-compare-cluster>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                authenticate: false,\n                datasource: true\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                authenticate: true,\n                datasource: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, Handsontable:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('Handsontable', Handsontable)\n        .constant('localStorage', localStorage)\n        .constant('_', _);\n        \n    // Util Functions\n    Number.prototype.map = function(in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div ng-show=\\\"vm.show\\\"><label class=\\\"tray-label tray-label-left\\\">Cohorts</label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><ul class=\\\"nav nav-tabs\\\"><li id=\\\"cohort-tab-patients\\\" role=\\\"presentation\\\" style=\\\"width:50%;text-align:center;\\\" ng-click=\\\"vm.showPatientHistory()\\\"><a>Patients</a></li></ul><div style=\\\"background-color:#ffffff;border:#dddddd 1px solid;border-top-width:0px;padding:10px;\\\"><br><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;\\\">{{vm.patientChartOption.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li style=\\\"padding:0px 5px;\\\" ng-repeat=\\\"item in vm.patientChartOptions\\\" ng-click=\\\"vm.patientChartOption=item\\\">{{item.label}}</li></ul></div><br><div id=\\\"cohortmenu-survival\\\" style=\\\"border:0px solid #DDD;width:100%;height:180px;\\\"></div><br><div ng-if=\\\"vm.edit\\\"><hr style=\\\"margin:5px;\\\"><label>Edit Cohort (Rename &amp; Remove)</label><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-group\\\" style=\\\"margin-top:10px;\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.editItem.name\\\"></div><button class=\\\"col-xs-5 btn btn-sm btn-default\\\" ng-click=\\\"vm.removeCohort(vm.editItem);vm.edit=false;\\\">Remove</button> <button class=\\\"col-xs-5 col-xs-push-2 btn btn-sm btn-primary\\\" ng-click=\\\"vm.edit=false\\\">Done</button></div></div><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#000; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.addCohort()\\\" tooltip=\\\"Save Cohort\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-plus\\\"></i></button> <label>Selected Patients</label></div><div ng-if=\\\"vm.cohorts.length>0 && !vm.edit\\\"><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:{{cohort.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><button class=\\\"btn-xs btn btn-default\\\" style=\\\"float:right;\\\" ng-click=\\\"vm.editCohort(cohort)\\\"><i style=\\\"color:#0b97d3\\\" class=\\\"glyphicon glyphicon-edit\\\"></i></button> <a class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"margin-right:25px;\\\" ng-click=\\\"vm.setCohort(cohort)\\\">{{cohort.name}} ({{cohort.ids.length}})</a></div></div><div class=\\\"legend-bar ng-binding ng-scope\\\" style=\\\"border-color:#0b97d3; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\"><label>All Patients</label></div></div></div></div><div id=\\\"cohortmenu-legand\\\"></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-7\\\"><br><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{dataset.img}}\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}} ({{dataset.source}})</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a><ul class=\\\"dropdown-menu\\\" roll=\\\"menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.datasets\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Analysis Tools</a><ul class=\\\"dropdown-menu\\\"><li class=\\\"header-dropdown-menu-li\\\" ng-repeat=\\\"item in vm.tools\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><a><img class=\\\"header-dropdown-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\">{{item.name}}</a></li></ul></li><li class=\\\"dropdown\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-4\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort()\\\">Create Cohort</button></div><div class=\\\"col-xs-12 col-sm-8\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right\\\" style=\\\"max-width:200px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\">{{item.name}} ({{item.ids.length}})</div></div></div></div></li><li><a href=\\\"http://resources.sttrcancer.org/oncoscape\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label>Export</label><div><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.exportCsv()\\\">Excel (CSV)</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Fields</label><div ng-repeat=\\\"column in vm.columns track by $index\\\" class=\\\"legend-bar\\\" style=\\\"position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;border-left-width: 0;\\\"><span style=\\\"max-width: 180px;font-size:12px;display: inline-block;\\\">{{column.displayName}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"column.show\\\" ng-change=\\\"vm.setColumns(true)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div></div></section></os-tray><section class=\\\"history-content history-grid-container\\\"><div class=\\\"container-fluid\\\" style=\\\"text-align:center;\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"history-grid\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-12\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-7\\\"><p class=\\\"landing-copy\\\">Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Seattle Translational Tumor Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"landing-copy\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><p class=\\\"landing-copy\\\"><ul><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul></p><p class=\\\"landing-copy\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-5\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-left:5px\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Genes or Patients\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <span class=\\\"h3-tool\\\">(Layout: {{vm.optPatientLayout.name}})</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div><label>Select a layout</label></div><div class=\\\"row\\\"><a class=\\\"col-sm-4 markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</a></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.label}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>PCA Type</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.label}}</li></ul></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-label\\\"><h3>Variance</h3>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label>Cohorts</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">All Patients <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.all.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div ng-repeat=\\\"cohort in vm.cohorts track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{cohort.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><div id=\\\"timelines-tip\\\" style=\\\"min-height:200px;\\\"><b>Rollover Event For Details</b></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}