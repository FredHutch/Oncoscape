{"version":3,"sources":["scripts/app-1f6bb706af.js"],"names":["angular","module","trayPiechart","d3","TrayChartLink","scope","element","chart","select","append","attr","style","height","chart1","classed","chart2","$watch","data","draw","el","offset","arcs","pie","sort","value","d","arc","outerRadius","innerRadius","padAngle","cornerRadius","colors","block","selectAll","i","newBlock","enter","$inject","directive","restrict","data1","data2","link","replace","tray","TrayController","osApi","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","elIcon","addClass","removeClass","unbind","mouseOver","mouseOut","change","bind","onResize","dispatch","templateUrl","caption","content","controller","controllerAs","bindToController","transclude","trayBarchart","elTip","tip","html","call","newValue","barHeight","barWidth","length","binding","on","show","hide","transition","text","label","exit","remove","tools","ToolsController","$state","getTools","explore","tool","go","datasource","getDataSource","disease","setBusy","timelines","TimelinesController","$scope","$stateParams","$window","$document","moment","_","onCohortChange","updatePatientsVisible","drawSelected","calculateSelection","event","selection","lowerIndex","round","yTran","yZoom","upperIndex","patientsVisible","ids","push","id","setCohort","PATIENT","elHitarea","target","move","selectedIndexes","map","v","filter","selectedRows","elSelected","duration","rowHeight","drawPatients","layout","getLayout","width","innerWidth","left","right","scaleX","scaleLinear","domain","patientsDomain","range","nice","patients","elPatients","delay","patientEnter","drawEvents","events","visible","evts","max","tsEndAligned","tsStartAligned","name","color","updateScale","innerHeight","elContainer","css","elScrollY","elScrollX","elChart","elAxis","baseZoomY","baseZoomX","xZoom","xTran","Infinity","cohort","getCohort","align","e","selected","toLowerCase","patientsAll","forEach","patient","patientIds","indexOf","hash","hasOwnProperty","status","Status","displayMode","tsStart","timescale","valFn","tsEnd","min","a","b","aTime","order","bTime","timescales","val","log","abs","asDays","filters","modes","displayModes","mode","resetZoom","ALL","brushY","brushX","handleSize","brushSelect","drawScrollbars","lower","upper","lowerPercent","upperPercent","deltaPercent","drawAxis","daysToUnit","zi","zoomIdentity","translate","scale","ns","rescaleX","axis","axisBottom","ticks","tickFormat","pow","query","clinical","then","response","colorFn","Object","keys","key","evtArray","start","reduce","p","c","txt","charAt","toUpperCase","substr","unix","end","evtHash","groups","groupBy","prop","add","update","$on","survival","SurvivalController","cohorts","getCohorts","concat","pValues","formatPercent","formatDays","elBrush","elCurves","elXAxis","elYAxis","brush","xScale","yScale","xDomain","yDomain","xAxis","yAxis","axisLeft","curveFunction","line","curve","curveStepAfter","x","t","y","s","onCurveMouseOver","onCurveMouseOut","addCurve","g","compute","tx","ty","datum","logrank","pValue","dataChange","resize","onBrushEnd","type","rangeSort","timeRange","invert","percentRange","visibleCohorts","visibleCompute","computeInRange","combinedIds","uniqueIds","unique","osLayout","margin-left","selectedColor","rgb","each","me","n","km","logranktest","all","unshift","extent","onCohortsChange","cohortsLegend","alert","lrt","pSelected","dof","sunburst","SunburstController","colorMap","charts","getColorMap","tags","union","object","barcharts","bars","radius","svg","labelTumor","labelNormal","sunburstNormal","sunburstTumor","scaleOrdinal","schemeCategory20","tooltip","w","window","init","mousemove","layerY","layerX","mouseover","mouseout","Name","click","root","parent","tween","xd","interpolate","x0","x1","yd","y0","yr","attrTween","drawSunburst","partition","hierarchy","sum","size","decendants","descendants","path","children","PI","scaleSqrt","startAngle","endAngle","y1","tumor","normal","transformedData","viewModel","getLayoutMetrics","widthTotal","widthChart","floor","heightChart","yChart","xChart","numCharts","getTransformedData","cartesianProductOf","arguments","flatten","apply","bar","values","difference","tree","barNode","reverse","tag","tagIndex","drawTree","chartLayer","yMax","yMin","chartHeight","nodes","node","spreadsheet","SpreadsheetController","$","$q","uiGridConstants","saveAs","showPanelColumns","closePanelColumns","gridApi","grid","refresh","setSize","elGrid","ml","mr","core","handleWindowResize","collections","collection","o","options","treeRowHeaderAlwaysVisible","enableSelectionBatchEvent","enableGridMenu","enableSelectAll","onRegisterApi","rowSelectionChanged","debounce","rowSelectionChange","exportCsv","cols","columnDefs","field","join","records","api","getSelectedRows","blob","Blob","showColumns","hideColumns","sortSelectedFn","rowA","rowB","isSelected","sortSelected","col","columns","sortingAlgorithm","sortColumn","notifyDataChange","OPTIONS","COLUMN","selectedIds","supressCohortEvent","patient_ID","clearSelectedRows","selectRow","ScatterController","signals","THREE","float32ArrayToVec3Array","arr","res","Vector3","particleGeometry","geometry","BufferGeometry","addAttribute","BufferAttribute","positions","computeBoundingSphere","geom","pts","eigen","primary","quaternary","quinary","secondary","senary","shy","tertiary","orbitControl","requestAnimationFrame","controls","camera","updateMatrixWorld","pc1Dir","unproject","pc2Dir","pc1","setDirection","clone","normalize","setLength","pc2","pc3","getCamera","position","renderer","render","scene","Scene","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","domElement","OrthographicCamera","z","zoom","updateProjectionMatrix","OrthographicTrackballControls","dynamicDampingFactor","noZoom","noPan","noRoll","addEventListener","onChange","material","ShaderMaterial","uniforms","Color","pointSize","shouldResize","vertexShader","textContent","fragmentShader","transparent","particles","Points","ArrowHelper","getHex","top","bottom","near","far","handleResize","setSelected","setData","h","l","aspect","Signal","rotY","clock","getDelta","cameraPosOffset","Matrix4","setPosition","cameraRot","makeRotationFromEuler","Euler","cameraMat","multiplyMatrices","cameraPosCenter","matrix","orbitCamera","PerspectiveCamera","setLens","matrixAutoUpdate","axisOffset","gridHelper","GridHelper","PointCloud","Clock","selectControl","toScreenXY","pos3D","project","percX","percY","percZ","onBrush","selections","points","rect1","rect2","groupLines","groupBrushes","groupX","groupY","groupZ","brushZ","loadings","layouts","initialized","setLayout","geneset","input","source","metadata","variance","slice","index","toFixed","scores","Float32Array","posIndex","dataType","$fields","PlsrController","osHistory","$sce","saveSelected","d3Chart","addGeneSelection","__data__","isUndefined","xMax","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","getGeneSelection","setDataset","mtx","payload","rownames","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","onGeneSelectionChange","setScale","linear","vectors","genes","bv","circles","class","cx","cy","r","pageX","pageY","modal","url","$apply","trustAsResourceUrl","lines","stroke-width","x2","y2","text-anchor","fill","factors","low","Number","high","getCalculatedPLSR","item","loadingNames","vectorNames","maxValue","PcaController","sampleIds","d3Points","setColors","legendCaption","legendNodes","degMap","isDefined","padding-left","d3Brush","minMax","xMin","scaleY","axisX","axisTop","axisY","d3xAxis","d3yAxis","SAMPLE","clusterCollection","dataset","search","selectColor","allIds","deselectColor","sources","newSource","pcaTypes","types","pcaType","onPatientColorChange","showPanelColor","result","memo","tmp","fldr","has","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","csChart","linkTitle","links","center","term","len","startBatch","ele","unselect","endBatch","container","elements","minZoom","maxZoom","wheelSensitivity","fit","cyTarget","nodeType","pmid","osSound","beep","_beep","play","Audio","service","oncoscape","$http","$location","queryString","req","table","encodeURIComponent","toJson","method","headers","apikey","factory","attrs","which","$eval","ngEnter","preventDefault","osAuth","osHttp","auth","onLogin","onLogout","user","getUser","isAuthenticated","authSource","authSources","icon","getAuthSources","loginGuest","network","thumb","login","response_type","force","logout","prev","curr","oauth_proxy","redirect_uri","thumbnail","jStat","Promise","resolve","_dataSources","reject","_toolsAll","beta","_dataSource","img","trim","onDataSource","onNavChange","onCohortToolInfo","_tools","_cohortAll","_patientColor","rt","statsFactory","getNumericStats","attribute","bin","props","pd","sd","stdev","count","hist","histogram","histRange","bins","pt","rv","getFactorStats","multiply","transpose","timeTable","tte","ev","exits","sortBy","uexits","uniq","pluck","gexits","group","last","dini","dn","rate","expectedObservedEventNumber","si","expectedNumber","observedNumber","dataByTimeTable","pointerInData","find","expected","observed","timeNumber","covariance","allGroupsRes","OETable","j","N","Ki","Kj","vv","zeros","solve","bT","aInv","inv","allGroupsKm","groupedDataTable","KMStats","OMinusEVector","chisquare","cdf","exports","obj","createHistogram","patientMap","total","features","createSurvival","cohortAll","te","omit","cd","time","pid","firstEvent","_data","_cohorts","_cohort","_cohortToolInfo","numSamples","numPatients","_cohortDatasetInfo","getCohortToolInfo","getCohortDatasetInfo","getData","getPatientColor","getDataSources","setPatientColor","patientColor","setCohortToolInfo","cohortToolData","setDataSource","resolveDataSource","isObject","isString","route","samplemap","responses","sampleMap","sample","samples","status_vital","parseInt","days_to_last_follow_up","isNaN","days_to_death","numClinical","localStorage","getItem","fromJson","createWithSampleIds","ar","create","createWithPatientIds","uuid","isArray","format","usedColors","availColors","saveCohort","setItem","deleteCohort","splice","importIds","markers","MarkersController","_stopLength","skipCohortRefresh","cyChart","deselect","setPatientCohort","setGeneCohort","tmpdata","worker","signal","over","out","edges","clear","removeAll","mpState","mp","hasState","_colors","applyState","fn","optColors","moved","getOptEdgeColors","optEdgeColors","abv","getGeneSet","genesets","optGeneSet","datasetGeneset","gs","getPatientLayout","optPatientLayout","save","isMatch","jsons","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","text-margin-x","text-transform","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","degree","sizeLbl","subType","q","showPopupSelection","detail","title","optGeneSets","optPatientLayouts","showPanelLayout","showPanelColorRna","searchCount","optCommandModes","optCommandMode","exeSearch","needle","doSearch","found","hideModal","filterModelEdge","vals","edge","cn","edgeToggle","cmd","lockPatients","lockGenes","lock","unselectify","selectify","results","patientLayout","reset","resizeNodes","borderScale","scaleLog","nodeScale","labelScale","expressionScale","scalePow","resizeNodesByType","toArray","weight","sizeNode","setOptions","Worker","msg","items","getElementById","patients_html","patients_resize","patients_delete","patients_insert","degrees","patients_layout","pos","genes_html","genes_delete","genes_insert","edges_delete","edges_insert","counts","edgeCounts","mouseIsOver","geneColors","postMessage","createOptions","opts","f","watches","updatePatientCounts","selectedPatients","setPatientInfo","setGeneInfo","neighborhood","_private","patientsUnselect","patientsSelect","genesUnselect","genesSelect","terminate","LoginController","networks","loginSuccess","layoutPanel","LayoutPanelController","colorScales","colorScale","colorBins","colorBin","colorOptions","colorOption","tbl","category","subtype","optPatientColors","setColor","close","aname","bname","setGeneColor","geneColor","match","op","gene","message","symbols","$in","hugo","msgs","Removed","Converted","lookup","pids","iv","output","labels","scaleQuantile","scaleQuantize","quantiles","parseFloat","zip","names","landing","LandingController","marquee","particlesNumber","particle","speed","getStarted","help","HelpController","heatmap","HeatmapController","rotated","colLabels","rowLabels","textAnchor","textX","dendrogram","xPos","yPos","colDendrogram","rowDendrogram","cluster","separation","edgePar","dendrG","transform","brushend","sourceEvent","coords","minValue","colorScheme","dim","rows","boxW","boxH","boxes","gridlines","colorSchemes","scales","dendrogramClusters","dendrogramCluster","args","colDend","rowDend","colmap","xaxis","yaxis","loadData","$limit","loadHeatmap","kcol","krow","getCpuApi","getHeatmap","hmWidth","hmHeight","header","HeaderController","showImport","showTools","showDatasets","datasources","state","addPatientCohort","importCohort","split","importName","location","href","showHelp","open","current","loadDataset","collapse","loadTool","DatasourceController","datasets","compareCluster","CompareClusterController","zoomed","elPlots","plot","scaleExtent","translateExtent","optionColors","optionLayouts","clusterIndexes","clusterColors","clusterLayouts","elBrushes","elHitareas","elPlot","hitArea","elLines","clusterIndex","loadState","calculated","extend","brushStart","brushEnd","loadLayout","drawLines","drawCluster","boxWidth","boxHeight","colorPanel","ColorPanelController","regx","resetColor","barchart","BarchartController","clearTimeout","timeout","transitionGrouped","transitionStacked","yGroupMax","rect","rangeBand","yStackMax","bumpLayer","bump","exp","m","stack","layers","layer","margin","rangeRoundBands","tickSize","tickPadding","orient","property","cohortMenu","CohortMenuController","$rootScope","$filter","cohortFeatures","cohortFeature","cohortSummary","updateSurvival","dataInfo","summary","trustAsHtml","featureIdx","updateCohort","histSvg","histSingleValueLabel","surSvg","surLines","surXAxis","surLayout","lineFunction","curveStepBefore","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","error","Error","run","routerConfig","$stateProvider","$urlRouterProvider","resolveDatasource","resolveTools","prevDatasource","resolveTool","resolveLanding","template","otherwise","config","constant","hello","TextEncoder","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-1f6bb706af.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui.grid',\n            'ui.grid.selection',\n            'ui.grid.cellNav',\n            'ui.grid.resizeColumns',\n            'ui.grid.moveColumns',\n            'ui.grid.pinning',\n            'ui.grid.grouping',\n            'ui.grid.autoResize',\n            'toastr'\n        ]);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayPiechart', trayPiechart);\n\n    /** @ngInject */\n    function trayPiechart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data1: '=chartData1',\n                data2: '=chartData2',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var chart1 = chart.append(\"g\").classed(\"chartLayer\", true);\n            var chart2 = chart.append(\"g\").classed(\"chartLayer\", true);\n\n            // var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n            //     return d.tip;\n            // });\n            // chart.call(elTip);\n            scope.$watch('data1', function(data) { draw(chart1, data, 0); });\n            scope.$watch('data2', function(data) { draw(chart2, data, scope.height - 10); });\n\n\n            var draw = function(el, data, offset) {\n\n                var arcs = d3.pie()\n                    .sort(null)\n                    .value(function(d) {\n                        return d.value;\n                    })\n                    (data);\n\n                var arc = d3.arc()\n                    .outerRadius((scope.height / 3) + 3)\n                    .innerRadius((scope.height / 3) - 13)\n                    .padAngle(0.03)\n                    .cornerRadius(0);\n\n\n                el.attr(\"transform\", \"translate(\" + [(scope.height / 2) + offset, scope.height / 2] + \")\");\n                var colors = [\"#039BE5\", \"#EAEAEA\"];\n                var block = el.selectAll(\".arc\")\n                    .data(arcs)\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n                var newBlock = block.enter().append(\"g\").classed(\"arc\", true);\n\n                newBlock.append(\"path\")\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    //.attr(\"stroke\", \"gray\")\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n\n\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayBarchart', trayBarchart);\n\n    /** @ngInject */\n    function trayBarchart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data: '=chartData',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return d.tip;\n            });\n            chart.call(elTip);\n            scope.$watch('data', function(newValue) {\n                var barHeight = scope.height - 10;\n                var barWidth = (250 / newValue.length) - 1;\n                var binding = chart\n                    .selectAll(\"rect\")\n                    .data(scope.data);\n                binding.enter()\n                    .append(\"rect\")\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide)\n                    .transition()\n                    .attr(\"class\", \"tray-bar\")\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; })\n                    .text(function(d) { return d.label; });\n                binding.exit().remove();\n                binding\n                    .transition()\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; });\n\n\n\n            });\n\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n            var vm = this;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var patientsAll = []; // All Patient Data\n            var patientsVisible = []; // Visible Patient Data\n            var patientsDomain = []; // Min + Max Times\n            var rowHeight = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var scaleX;\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohort = osApi.getCohort();\n            vm.timescales = [\n                { name: 'Log', valFn: function(val) { return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2); } },\n                { name: 'Linear', valFn: function(val) { return moment.duration(val * 1000).asDays(); } }\n            ];\n            vm.filters = [\n                { name: 'Alive + Dead' },\n                { name: 'Only Alive' },\n                { name: 'Only Dead' }\n            ];\n            vm.modes = [\n                { name: \"Highlight\" },\n                { name: \"Filter\" }\n            ];\n            vm.displayModes = [\n                { name: 'All Patients' },\n                { name: 'Selected Patients' }\n            ];\n            vm.timescale = vm.timescales[0];\n            vm.filter = vm.filters[0];\n            vm.mode = vm.modes[0];\n            vm.displayMode = vm.displayModes[0];\n            vm.events = null;\n            vm.align = null;\n            vm.sort = null;\n            vm.resetZoom = function() {\n                osApi.setCohort([], osApi.ALL, osApi.PATIENT);\n                elScrollY.call(brushY.move, null);\n                elScrollX.call(brushX.move, null);\n            };\n\n            // Elements\n            var brushY = d3.brushY().handleSize(3);\n            var brushX = d3.brushX().handleSize(3);\n            var brushSelect = d3.brushY().handleSize(1);\n            var elContainer = d3.select(\".timelines-content\");\n            var elAxis = elContainer.append(\"svg\").attr(\"class\", \"timeline-axis\");\n            var elScrollY = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-y\");\n            var elScrollX = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-x\");\n            var elChart = elContainer.append(\"svg\").attr(\"class\", \"timeline-chart\");\n            var elSelected = elChart.append(\"g\");\n            var elHitarea = elChart.append(\"g\");\n            var elPatients = elChart.append(\"g\");\n\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) { return d.tip; });\n            elChart.call(elTip);\n\n            elContainer = angular.element(\".timelines-content\");\n\n            var drawScrollbars = function() {\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n                var height = $window.innerHeight - 200;\n                elScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (rowHeight * patientsVisible.length * yZoom) * -lowerPercent;\n                        } else {\n                            if (yZoom == baseZoomY && yTran === 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            elScrollY.call(brushY.move, null);\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        elSelected\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                elScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n\n\n\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran === 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            elScrollX.call(brushX.move, null);\n\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n\n\n                        drawAxis();\n\n                    })\n                );\n            };\n\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n\n            var drawAxis = function() {\n                var zi = d3.zoomIdentity.translate(xTran).scale(xZoom);\n                var ns = zi.rescaleX(scaleX);\n                var axis = d3.axisBottom(ns).ticks(5);\n\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                elAxis.transition().duration(900).call(axis);\n            };\n\n\n            function onCohortChange() {\n                updatePatientsVisible();\n                drawSelected();\n            }\n\n            function calculateSelection() {\n                if (d3.event.selection === null) return;\n                var lowerIndex = Math.round(Math.round(d3.event.selection[0] - yTran) / yZoom / 20);\n                var upperIndex = Math.round(Math.round(d3.event.selection[1] - yTran) / yZoom / 20);\n                if (lowerIndex < 0) lowerIndex = 0;\n                if (upperIndex >= patientsVisible.length) upperIndex = patientsVisible.length - 1;\n                if (lowerIndex == upperIndex) upperIndex = lowerIndex + 1;\n                var ids = [];\n                for (var i = lowerIndex; i <= upperIndex; i++) {\n                    ids.push(patientsVisible[i].id);\n                }\n                osApi.setCohort(ids, \"Timelines\", osApi.PATIENT);\n                elHitarea.call(d3.event.target.move, null);\n            }\n\n            function drawSelected() {\n\n                // Transform Selections Into Index Positions - Don't need to render unselected\n                var selectedIndexes = patientsVisible.map(function(v, i) {\n                    return (v.selected) ? i : -1;\n                }).filter(function(v) { return v != -1; });\n\n                var selectedRows = elSelected.selectAll(\"rect\").data(selectedIndexes);\n\n                selectedRows.exit()\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"0\")\n                    .remove();\n\n                selectedRows.enter()\n                    .append('rect')\n                    .attr('width', '0')\n                    .attr('height', rowHeight - 2)\n                    .attr('y', 1)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; })\n                    .style(\"fill\", \"#cacaca\")\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"100%\");\n\n                selectedRows\n                    .transition()\n                    .duration(600)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; });\n            }\n\n            function drawPatients() {\n\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n\n                // Set Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n                var patients = elPatients.selectAll(\"g.patient\").data(patientsVisible);\n                patients.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n\n                var patientEnter = patients.enter()\n                    .append('g')\n                    .attr(\"class\", \"patient\")\n                    .attr('transform', function(d, i) {\n                        return \"translate(0,\" + (i * rowHeight) + \")\";\n                    });\n\n                drawEvents(patients.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n                drawEvents(patientEnter.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n\n            }\n\n            // Gets called by Draw Patients Don't call manually\n            function drawEvents(evts) {\n                evts.exit()\n                    .on(\"mouseover\", null)\n                    .on(\"mouseout\", null)\n                    .remove();\n                evts.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? (rowHeight - 2) / 2 : rowHeight - 2; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 1); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; })\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                evts\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? rowHeight / 2 : rowHeight; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 0); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; });\n            }\n\n            function updateScale() {\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n                var height = $window.innerHeight - 200;\n                elContainer.css(\"background\", \"#FAFAFA\").css(\"margin-left\", layout.left + 30).css(\"margin-right\", layout.right).css(\"width\", width + 20).css(\"height\", height + 20);\n                elScrollY.attr(\"height\", height);\n                elScrollX.attr(\"width\", width);\n                elChart.attr(\"height\", height).attr(\"width\", width).attr(\"fill\", \"blue\").attr('transform', 'translate(20,20)');\n                elPatients.attr(\"height\", height).attr(\"width\", width);\n                elSelected.attr(\"height\", height).attr(\"width\", width);\n                elAxis.style(\"top\", height + 20).attr(\"width\", width);\n                elHitarea.attr(\"width\", width).attr(\"height\", height);\n\n                // Set Zoom + Transition Data\n                baseZoomY = height / (patientsVisible.length * rowHeight);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                if (baseZoomY == Infinity) baseZoomY = 10;\n\n                // Scale + Transform\n                elPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n                elSelected.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            }\n\n            // Filter + Sort Patients = Set patientsFiltered\n            function updatePatientsVisible() {\n\n                vm.cohort = osApi.getCohort();\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected;\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Dataset + Calculate Domain\n                patientsDomain = [Infinity, -Infinity];\n                patientsAll.forEach(function(patient) {\n\n                    // Set Selected\n                    patient.selected = (vm.cohort.patientIds.indexOf(patient.id) !== -1);\n                    patient.visible = true;\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                        return;\n                    }\n\n                    // Filter Based On Alive Dead Status\n                    var status = patient.hash.Status.data.status;\n                    if ((this.filter == \"Only Alive\" && status == \"Dead\") || (this.filter == \"Only Dead\" && status != \"Dead\")) {\n                        patient.visible = false;\n                        return;\n                    }\n\n                    // Filter Selected\n                    if (vm.displayMode.name == \"Selected Patients\" && !patient.selected) {\n                        patient.visible = false;\n                        return;\n                    }\n\n                    this.offset = 0 - patient.hash[this.align].tsStart;\n\n                    // Filter Events\n                    patient.events.forEach(function(event) {\n                        event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                        // Calculate Start + End Based On Alignment\n                        if (event.visible) {\n                            event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                            event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                            this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                            this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                        }\n                    }, this);\n\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Sort Patients\n                patientsVisible = patientsAll.filter(function(v) { return v.visible; }).sort(function(a, b) {\n                    if (a.status == b.status) {\n                        var aTime = a.events.filter(function(e) { return (e.name == sort && e.order == 1); })[0].tsStartAligned;\n                        var bTime = b.events.filter(function(e) { return (e.name == sort && e.order == 1); })[0].tsStartAligned;\n                        if (aTime > bTime) return 1;\n                        if (bTime > aTime) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n            }\n\n            // Load Data\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start !== null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            if (v.hasOwnProperty(\"data\")) {\n                                v.tip = Object.keys(v.data).reduce(function(p, c) {\n                                    try {\n                                        if (v.data[c] !== null) {\n                                            p += \"<br>\" + c\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .replace(/\\w\\S*/g, function(txt) {\n                                                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                                                }) + \": \" + v.data[c].toString()\n                                                .replace(/\\w\\S*/g, function(txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n                                        }\n                                    } catch (e) {\n                                        return \"\";\n                                    }\n                                    return p;\n                                }, v.name);\n                            } else if (v.hasOwnProperty(\"name\")) {\n                                v.tip = v.name;\n                            } else {\n                                v.tip = \"Unknown\";\n                            }\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end === null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end === null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            v.order = 1;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.name)) {\n                            if (p[c.name].tsStart > c.tsStart) p[c.name] = c;\n                        } else {\n                            p[c.name] = c;\n                        }\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n                data.forEach(function(patient) {\n                    var groups = _.groupBy(patient.events, 'name');\n                    var keys = Object.keys(groups).filter(function(prop) {\n                        return (this[prop].length > 1);\n                    }, groups);\n                    keys.forEach(function(v) {\n                        var i = 1;\n                        patient.events\n                            .filter(function(e) { return e.name == v; })\n                            .sort(function(a, b) {\n                                return a.tsStart - b.tsStart;\n                            }).forEach(function(v) {\n                                v.order = i;\n                                i++;\n                            });\n                    });\n                });\n                patientsAll = data.filter(function(v) {\n                    try {\n\n                        v.status = v.hash.Status.data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n\n\n\n                updatePatientsVisible();\n                updateScale(); // Depends on Visible Patients\n\n                drawPatients();\n                drawSelected();\n                drawScrollbars();\n                drawAxis();\n                elHitarea.call(brushSelect);\n                brushSelect.on(\"end\", calculateSelection);\n                osApi.onCohortChange.add(onCohortChange);\n                osApi.setBusy(false);\n            });\n\n            vm.update = function() {\n\n                elScrollY.call(brushY.move, null);\n                elScrollX.call(brushX.move, null);\n\n                updatePatientsVisible();\n                updateScale(); // Depends on Visible Patients\n                drawAxis();\n                drawPatients();\n                drawScrollbars();\n                drawSelected();\n            };\n            osApi.onResize.add(vm.update);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onCohortChange.remove(onCohortChange);\n                brushX.on(\"end\", null);\n                brushY.on(\"end\", null);\n                brushSelect.on(\"end\", null);\n                osApi.onResize.remove(vm.update);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n\n            vm.cohort = osApi.getCohort();\n            vm.cohorts = (osApi.getCohorts().indexOf(vm.cohort) == -1) ?\n                osApi.getCohorts().concat([vm.cohort]) : osApi.getCohorts();\n\n\n            vm.pValues = [];\n            vm.setCohort = function(cohort) {\n                osApi.setCohort(cohort);\n            };\n\n\n            // Format Elements\n            var formatPercent = function(d) { return Math.round(d * 100) + \"%\"; };\n            var formatDays = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n\n            // Create D3 Elements\n            var elContainer = angular.element(\"#survival-chart\");\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n            var elBrush = elChart.append(\"g\");\n            var elCurves = elChart.append(\"g\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(50, 10)\");\n            var brush = d3.brush();\n\n\n            // Base Layout\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: d3.scaleLinear(),\n                yScale: d3.scaleLinear(),\n                xDomain: [0, 1], // Effected By Survival Min Max\n                yDomain: [0, 1],\n                xAxis: d3.axisBottom().ticks(5).tickFormat(formatDays),\n                yAxis: d3.axisLeft().ticks(5).tickFormat(formatPercent)\n            };\n\n            // Curve Functions + Events\n            var curveFunction = d3.line()\n                .curve(d3.curveStepAfter)\n                .x(function(d) { return Math.round(layout.xScale(d.t)); })\n                .y(function(d) {\n                    return layout.yScale(d.s);\n                });\n            var onCurveMouseOver = function() {}; // d3.event.target.style.strokeWidth = \"3px\"; };\n            var onCurveMouseOut = function() {}; // d3.event.target.style.strokeWidth = \"1px\"; };\n\n            var addCurve = function(cohort) {\n\n                // Create Group To Hold Curve\n                var g = elCurves.append(\"g\")\n                    .attr(\"class\", \"curve\")\n                    .attr(\"transform\", \"translate(0, 10)\");\n\n                // Add Ticks\n                var ticks = cohort.survival.compute.filter(function(v) { return v.c.length > 0; });\n                ticks.forEach(function(t) {\n                    var tx = Math.round(layout.xScale(t.t));\n                    var ty = Math.round(layout.yScale(t.s));\n                    g.append(\"line\")\n                        .attr(\"class\", \"survival-tick\")\n                        .style(\"stroke\", cohort.color)\n                        .attr(\"x1\", tx)\n                        .attr(\"x2\", tx)\n                        .attr(\"y1\", ty - 3)\n                        .attr(\"y2\", ty + 3);\n                });\n\n                // Append Path\n                g.append(\"path\")\n                    .datum(cohort.survival.compute)\n                    .attr(\"tip\", cohort.name + \" Vs. All Patients + Samples<br> p : \" + cohort.survival.logrank.pValue)\n                    .attr(\"class\", \"survival-line\")\n                    .style(\"stroke\", cohort.color)\n                    .attr(\"d\", curveFunction)\n                    .on(\"mouseover\", onCurveMouseOver)\n                    .on(\"mouseout\", onCurveMouseOut)\n                    .on(\"click\", function() {\n                        osApi.setCohort(cohort);\n                    });\n            };\n\n\n\n            // Drawing Methods\n            var dataChange = function() {\n\n                // Determine The XDomain\n                layout.xDomain = vm.cohorts\n                    .filter(function(v) { return v.show; })\n                    .reduce(function(p, c) {\n                        p[0] = Math.min(p[0], c.survival.compute[0].t);\n                        p[1] = Math.max(p[1], c.survival.compute[c.survival.compute.length - 1].t);\n                        return p;\n                    }, [Infinity, -Infinity]);\n\n                // Trigger Resize\n                resize();\n\n            };\n\n\n            var onBrushEnd = function() {\n\n\n                if (!d3.event.selection) {\n                    osApi.setCohort(vm.cohorts.filter(function(c) { return c.type == \"ALL\"; })[0]);\n                    return;\n                }\n                var s = d3.event.selection;\n                osApi.setBusy(true);\n\n                // Calculate Bounds Of Selection\n                var rangeSort = function(a, b) { return a - b; };\n                var timeRange = [s[0][0], s[1][0]].map(layout.xScale.invert).sort(rangeSort);\n                var percentRange = [s[0][1] - 10, s[1][1] - 10].map(layout.yScale.invert).sort(rangeSort);\n                var visibleCohorts = vm.cohorts.filter(function(v) { return v.show; });\n                var visibleCompute = visibleCohorts.reduce(function(p, c) { return p.concat(c.survival.compute); }, []);\n                var computeInRange = visibleCompute.filter(function(v) {\n                    return (\n                        (v.t >= this.timeRange[0]) &&\n                        (v.t <= this.timeRange[1]) &&\n                        (v.s >= this.percentRange[0]) &&\n                        (v.s <= this.percentRange[1])\n                    );\n                }, { timeRange: timeRange, percentRange: percentRange });\n\n                var combinedIds = computeInRange.reduce(function(p, c) { return p.concat(c.c, c.d); }, []);\n                var uniqueIds = _.unique(combinedIds);\n                osApi.setCohort(uniqueIds, \"Survival\", osApi.PATIENT);\n\n\n                //     vm.cohorts[0].survival.compute.filter(function(v) {\n                //                 var rv = (\n                //                     (v.t >= this.timeRange[0]) &&\n                //                     (v.t <= this.timeRange[1]) &&\n                //                     (v.s >= this.percentRange[0]) &&\n                //                     (v.s <= this.percentRange[1])\n                //                 );\n                //                 return rv;\n                //             }, { timeRange: timeRange, percentRange: percentRange }).reduce(function(p,c){ return p.concat(c.c, c.d); },[]);\n\n                // var patientIds = _.union.apply(null,\n                //     vm.cohorts.filter(function(v) {\n                //         return v.show;\n                //     }).map(function(v) {\n                //         return v.survival.compute.filter(function(v) {\n                //                 var rv = (\n                //                     (v.t >= this.timeRange[0]) &&\n                //                     (v.t <= this.timeRange[1]) &&\n                //                     (v.s >= this.percentRange[0]) &&\n                //                     (v.s <= this.percentRange[1])\n                //                 );\n                //                 return rv;\n                //             }, this)\n                //             .map(function(v) {\n                //                 return v.c.concat(v.d);\n                //             })\n                //             .reduce(function(p, c) {\n                //                 return p.concat(c);\n                //             }, []);\n                //     }, { timeRange: timeRange, percentRange: percentRange }));\n\n                // debugger;\n\n                // osApi.setCohort(patientIds, \"Survival\", osApi.PATIENT);\n                osApi.setBusy(false);\n            };\n\n            var resize = function() {\n\n                // Get Screen Dimensions\n                var osLayout = osApi.getLayout();\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - ((osLayout.left === 0) ? 20 : 0) - ((osLayout.right === 0) ? 20 : 0);\n                layout.height = $window.innerHeight - 125;\n\n                // Position container\n                elContainer.css({ 'width': layout.width, 'height': layout.height, 'margin-left': (osLayout.left === 0) ? 20 : osLayout.left });\n\n                // Scale Axis\n                layout.xScale.domain(layout.xDomain).range([40, layout.width - 40]);\n                layout.yScale.domain(layout.yDomain).range([layout.height - 40, 10]);\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.height - 30) + \")\").call(layout.xAxis);\n                elYAxis.attr(\"transform\", \"translate(40, 10)\").call(layout.yAxis);\n\n                // Draw Cohorts\n                elCurves.selectAll(\".curve\").remove();\n                vm.cohorts\n                    .filter(function(v) { return v.show; })\n                    .map(addCurve);\n                if (vm.cohorts.indexOf(vm.cohort) == -1) {\n                    addCurve(vm.cohort);\n                }\n\n                // Set Selected + Set P Values\n                var selectedColor = d3.rgb(vm.cohort.color).toString();\n                elCurves.selectAll(\".curve\").each(function() {\n                    var me = d3.select(this);\n                    var selected = (d3.select(this).select(\".survival-line\").style(\"stroke\") == selectedColor);\n                    me.classed(\"survival-line-selected\", selected);\n                });\n\n                var pValues = vm.cohorts.filter(function(v) { return v != vm.cohort; }).map(function(v) {\n                    return {\n                        c: [vm.cohort.color, v.color],\n                        n: v.name,\n                        p: osApi.km.logranktest([vm.cohort.survival.data, v.survival.data]).pValue\n                    };\n\n                });\n\n                var all = vm.cohorts.filter(function(v) { return v.show; });\n                if (all.length !== 1) {\n\n\n                    if (vm.cohorts.indexOf(vm.cohort) == -1) {\n                        all.unshift(vm.cohort);\n                    }\n                    all.sort(function(a) {\n                        if (vm.cohort.color == a.color) return -1;\n                        if (a.color == \"#E91E63\") return -1;\n                        return 0;\n                    });\n                }\n\n                pValues.unshift({\n                    c: all.map(function(v) { return v.color; }),\n                    n: 'Visible Cohorts',\n                    p: osApi.km.logranktest(all.map(function(v) { return v.survival.data; })).pValue\n                });\n                vm.pValues = pValues;\n\n                brush.extent([\n                    [40, 20],\n                    [layout.width - 30, layout.height - 30]\n                ]);\n                brush.on(\"end\", onBrushEnd);\n                elBrush.call(brush);\n            };\n\n            var onCohortsChange = function() {\n                vm.cohorts = osApi.getCohorts();\n                vm.cohort = osApi.getCohort();\n                vm.cohort.show = true;\n                vm.cohortsLegend = vm.cohorts.filter(function(v) { return v != vm.cohort; });\n                resize();\n            };\n\n            var onCohortChange = function() {\n                onCohortsChange();\n            };\n\n            vm.toggle = function(cohort) {\n                if (vm.cohorts.reduce(function(p, c) { p += c.show ? 1 : 0; return p; }, 0) === 0) {\n                    alert(\"You must have at least one cohort visible\");\n                    cohort.show = true;\n                    return;\n                }\n                dataChange();\n                var lrt = osApi.km.logranktest(vm.cohorts.filter(function(v) { return v.show; }).map(function(v) { return v.survival.data; }));\n                vm.pSelected = \"P: \" + lrt.pValue + \" DOF: \" + lrt.dof;\n            };\n\n\n            // Create\n            osApi.onResize.add(resize);\n            osApi.onCohortChange.add(onCohortChange);\n            osApi.onCohortsChange.add(onCohortsChange);\n            dataChange();\n            onCohortChange(osApi.getCohort());\n            osApi.setBusy(false);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(resize);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n\n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v) {\n                                return { name: v, color: colorMap[v] };\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function() {\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v) { return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n\n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n\n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSpreadsheet', spreadsheet);\n\n    /** @ngInject */\n    function spreadsheet() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/spreadsheet/spreadsheet.html',\n            controller: SpreadsheetController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SpreadsheetController(osApi, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, uiGridConstants, saveAs) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.showPanelColumns = false;\n            vm.closePanelColumns = function() {\n                vm.showPanelColumns = false;\n                vm.gridApi.grid.refresh();\n            };\n\n            vm.setSize = function() {\n                var elGrid = angular.element(\"#spreadsheet-grid\")[0];\n                var osLayout = osApi.getLayout();\n                var ml = osLayout.left - 1;\n                var mr = osLayout.right - 1;\n                if (ml === -1) ml = 19;\n                if (mr === -1) mr = 19;\n                elGrid.style[\"margin-left\"] = ml + \"px\";\n                elGrid.style[\"margin-right\"] = mr + \"px\";\n                elGrid.style.width = ($window.innerWidth - ml - mr - 2) + \"px\";\n                elGrid.style.height = ($window.innerHeight - 140) + \"px\";\n                vm.gridApi.core.handleWindowResize();\n            };\n            vm.collections = Object.keys(osApi.getDataSource().clinical)\n                .map(function(key) {\n                    var v = this.data[key];\n                    return {\n                        name: key,\n                        collection: v\n                    };\n                }, {\n                    data: osApi.getDataSource().clinical\n                }).filter(function(o) {\n                    return (o.name != \"events\" && o.name != \"samplemap\");\n                });\n\n\n            vm.collection = vm.collections.reduce(function(p, c) {\n                if (c.name == \"patient\") p = c;\n                return p;\n            }, vm.collections[0]);\n            vm.options = {\n                treeRowHeaderAlwaysVisible: false,\n                enableSelectionBatchEvent: false,\n                enableGridMenu: false,\n                enableSelectAll: true,\n                onRegisterApi: function(gridApi) {\n                    vm.gridApi = gridApi;\n                    gridApi.selection.on.rowSelectionChanged($scope, _.debounce(rowSelectionChange, 300));\n                }\n            };\n            vm.exportCsv = function(type) {\n                var cols = vm.options.columnDefs.filter(function(c) { return c.visible; }).map(function(v) { return v.field; });\n                var data = \"\\\"\" + cols.join(\"\\\",\\\"\") + \"\\\"\\n\";\n\n                var records = (type == \"selected\") ? vm.gridApi.grid.api.selection.getSelectedRows() : vm.options.data;\n\n                records\n                    .forEach(function(v) {\n                        var datum = cols.map(function(v) {\n                            return this[v];\n                        }, v);\n                        data += \"\\\"\" + datum.join(\"\\\",\\\"\") + \"\\\"\\n\";\n                    });\n\n                var blob = new Blob([data], { type: 'text/csv;charset=windows-1252;' });\n                saveAs(blob, 'oncoscape.csv');\n\n            };\n            vm.showColumns = function() {\n                vm.options.columnDefs.forEach(function(v) { v.visible = true; });\n                vm.gridApi.grid.refresh();\n            };\n            vm.hideColumns = function() {\n                vm.options.columnDefs.forEach(function(v) { v.visible = false; });\n                vm.gridApi.grid.refresh();\n            };\n\n            var sortSelectedFn = function(a, b, rowA, rowB) {\n                if (!rowA.hasOwnProperty(\"isSelected\")) rowA.isSelected = false;\n                if (!rowB.hasOwnProperty(\"isSelected\")) rowB.isSelected = false;\n                if (rowA.isSelected === rowB.isSelected) return 0;\n                if (rowA.isSelected) return -1;\n                return 1;\n            };\n\n            vm.sortSelected = function() {\n                var col = vm.gridApi.grid.columns[0];\n                col.sortingAlgorithm = sortSelectedFn;\n                vm.gridApi.grid.sortColumn(col, \"asc\", false);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.OPTIONS);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n            };\n\n            var selectedIds = [];\n            var supressCohortEvent = false;\n            var rowSelectionChange = function() {\n\n                selectedIds = vm.gridApi.grid.api.selection.getSelectedRows().map(function(v) { return v.patient_ID; });\n                supressCohortEvent = true;\n                if (selectedIds.length == vm.options.data.length || selectedIds.length == 0) {\n                    osApi.setCohort([], osApi.ALL, osApi.PATIENT);\n                } else {\n                    osApi.setCohort(selectedIds, \"Spreadsheet\", osApi.PATIENT);\n                }\n            };\n\n            // Initialize\n            vm.datasource = osApi.getDataSource();\n\n            // App Event :: Resize\n            osApi.onResize.add(vm.setSize);\n\n            // App Event :: Cohort Change\n            var onCohortChange = function(cohort) {\n                if (supressCohortEvent) {\n                    supressCohortEvent = false;\n                    return;\n                }\n                vm.gridApi.grid.api.selection.clearSelectedRows();\n                selectedIds = cohort.patientIds;\n                var selected = vm.options.data.filter(function(v) {\n                    return selectedIds.indexOf(v.patient_ID) != -1;\n                });\n                selected.forEach(function(i) { vm.gridApi.grid.api.selection.selectRow(i); });\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n            // Setup Watches\n            $scope.$watch(\"vm.collection\", function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        angular.element(\".ui-grid-icon-menu\").text(\"Columns\");\n                        var cols = Object.keys(response.data[0])\n                            .map(function(col) {\n                                return { field: col, name: col.replace(/_/gi, ' '), width: 250, visible: true };\n                            });\n                        vm.options.columnDefs = cols;\n                        vm.options.data = response.data.map(function(v) {\n                            v.color = \"#F0DDC0\";\n                            v.selected = false;\n                            return v;\n                        });\n                        $timeout(function() {\n                            onCohortChange(osApi.getCohort());\n                        }, 1);\n                        vm.setSize();\n                        osApi.setBusy(false);\n                    });\n            });\n\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(vm.setSize);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osScatter', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/scatter/scatter.html',\n            controller: ScatterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ScatterController($q, osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, signals, _, THREE) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // Elements\n            var color = {\n                difference: \"#cbcbcb\",\n                eigen: \"#cbcbcb\",\n                primary: \"#FF9800\",\n                quaternary: \"#f1c40f\",\n                quinary: \"#2c3e50\",\n                secondary: \"#673AB7\",\n                senary: \"#039BE5\",\n                shy: \"rgba(0, 0, 0, 0.2)\",\n                tertiary: \"#4CAF50\"\n            };\n\n            function float32ArrayToVec3Array(arr) {\n                var res = [];\n                for (var i = 0; i < arr.length; i += 3) {\n                    res[i / 3] = new THREE.Vector3(arr[i], arr[i + 1], arr[i + 2])\n                }\n                return res;\n            }\n\n\n            var positions; // Float32Array of adjusted points\n            var colors;\n            var geom; // Three Buffer of Points Based on 'positions'\n            var pts; // Vec 3 Array of Adjusted points  \n            var ids; // Array of Ids\n\n            function particleGeometry() {\n                var geometry = new THREE.BufferGeometry()\n                geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n                geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n                geometry.computeBoundingSphere();\n                return geometry;\n            }\n\n\n            var orbitControl = (function() {\n\n                var onChange = new signals.Signal();\n                var scene, renderer, camera, material, controls, particles;\n                var pc1, pc2, pc3;\n                var width, height, xScale, yScale;\n                var element;\n\n                function update() {\n\n                    requestAnimationFrame(update);\n\n                    controls.update();\n                    camera.updateMatrixWorld(true);\n\n                    // Orient Arrows\n                    var pc1Dir = new THREE.Vector3(1, 0, -9 / 11).unproject(camera);\n                    var pc2Dir = new THREE.Vector3(0, 1, -9 / 11).unproject(camera);\n                    pc1.setDirection(pc1Dir.clone().normalize());\n                    pc1.setLength(4, 1, 0.5);\n                    pc2.setDirection(pc2Dir.clone().normalize());\n                    pc2.setLength(4, 1, 0.5);\n                    pc3.setDirection(getCamera().position.clone().normalize());\n                    pc3.setLength(4, 1, 0.5);\n                    renderer.render(scene, camera);\n                }\n\n                function init(el, color, geometry) {\n                    element = el;\n                    width = 500;\n                    height = 500;\n                    xScale = d3.scaleLinear().domain([-10, 10]).range([0, width]);\n                    yScale = d3.scaleLinear().domain([10, -10]).range([0, height]);\n\n                    scene = new THREE.Scene();\n                    renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n                    renderer.setPixelRatio($window.devicePixelRatio);\n\n                    el.node().append(renderer.domElement);\n                    d3.select(renderer.domElement).style('cursor', 'move');\n\n                    camera = new THREE.OrthographicCamera(\n                        xScale.invert(0), xScale.invert(width),\n                        yScale.invert(0), yScale.invert(height),\n                        1,\n                        100\n                    );\n                    camera.position.z = 10;\n                    camera.zoom = 1.5;\n                    camera.updateProjectionMatrix();\n\n\n                    controls = new THREE.OrthographicTrackballControls(camera, renderer.domElement);\n                    controls.dynamicDampingFactor = 0.4;\n                    controls.noZoom = true;\n                    controls.noPan = true;\n                    controls.noRoll = true;\n                    controls.addEventListener(\"change\", _.debounce(onChange.dispatch, 300));\n\n                    material = new THREE.ShaderMaterial({\n                        uniforms: {\n                            color: {\n                                type: 'c',\n                                value: new THREE.Color(color.senary)\n                            },\n                            alpha: { type: 'f', value: 0.4 },\n                            pointSize: { type: 'f', value: 10 },\n                            shouldResize: { type: '1i', value: 0 }\n                        },\n                        vertexShader: d3.select('#vertexshader').node().textContent,\n                        fragmentShader: d3.select('#fragmentshader').node().textContent,\n                        transparent: true\n                    });\n\n                    particles = new THREE.Points(geometry, material);\n                    scene.add(particles);\n\n                    // Add Arrows\n                    pc1 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.primary).getHex(),\n                        0.5,\n                        0.5\n                    );\n                    scene.add(pc1);\n                    pc2 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.secondary).getHex(),\n                        0.5,\n                        0.5\n                    );\n                    scene.add(pc2);\n                    pc3 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.tertiary).getHex(),\n                        0.5,\n                        0.5\n                    );\n                    scene.add(pc3);\n\n\n                    camera.left = width / -2;\n                    camera.right = width / 2;\n                    camera.top = height / 2;\n                    camera.bottom = height / -2;\n                    camera.near = 1;\n                    camera.far = 100;\n                    renderer.setSize(width, height);\n                    controls.handleResize();\n\n                    update();\n                }\n\n                function getCamera() {\n                    return camera;\n                }\n\n                function setSelected(data) {\n\n                }\n\n                function setData(data) {\n                    scene.remove(particles);\n                    particles = new THREE.Points(data, material);\n                    scene.add(particles);\n                }\n\n\n                function resize(w, h, l) {\n\n                    width = w;\n                    height = h;\n\n                    camera.aspect = width / height;\n                    camera.left = width / -2;\n                    camera.right = width / 2;\n                    camera.top = height / 2;\n                    camera.bottom = height / -2;\n                    renderer.setSize(width, height);\n                    element.style({ left: l + \"px\" });\n\n                    xScale.range([0, width]);\n                    yScale.range([0, height]);\n                    update();\n                }\n\n                return {\n                    onChange: onChange,\n                    init: init,\n                    setSelected: setSelected,\n                    getCamera: getCamera,\n                    setData: setData,\n                    resize: resize\n                };\n            })(signals);\n\n            var chart = (function() {\n\n                var onChange = new signals.Signal();\n                var scene, renderer, camera, orbitCamera, material, particles, pc1, pc2, pc3;\n                var rotY = 0;\n                var clock = new THREE.Clock();\n\n                function update() {\n                    requestAnimationFrame(update)\n\n                    rotY += 25 * Math.PI / 180 * clock.getDelta();\n\n                    var cameraPosOffset = new THREE.Matrix4();\n                    cameraPosOffset.setPosition(new THREE.Vector3(0, 0, 25));\n\n                    var cameraRot = new THREE.Matrix4();\n                    cameraRot.makeRotationFromEuler(new THREE.Euler(0, rotY, 0, 'XYZ'));\n\n                    var cameraMat = new THREE.Matrix4();\n                    cameraMat.multiplyMatrices(cameraRot, cameraPosOffset);\n\n                    var cameraPosCenter = new THREE.Matrix4()\n                    cameraMat = cameraPosCenter.multiplyMatrices(cameraPosCenter, cameraMat)\n\n                    camera.matrix = cameraMat;\n                    camera.updateMatrixWorld(true);\n                    renderer.render(scene, camera);\n\n                    // Orient Arrows\n                    var pc1Dir = new THREE.Vector3(1, 0, -9 / 11).unproject(orbitCamera);\n                    var pc2Dir = new THREE.Vector3(0, 1, -9 / 11).unproject(orbitCamera);\n                    pc1.setDirection(pc1Dir.clone().normalize());\n                    pc1.setLength(4, 1, 0.5);\n                    pc2.setDirection(pc2Dir.clone().normalize());\n                    pc2.setLength(4, 1, 0.5);\n                    pc3.setDirection(camera.position.clone().normalize());\n                    pc3.setLength(4, 1, 0.5);\n                    pc1.setDirection(pc1Dir.clone().normalize());\n                    pc1.setLength(4, 1, 0.5);\n                    pc2.setDirection(pc2Dir.clone().normalize());\n                    pc2.setLength(4, 1, 0.5);\n                    pc3.setDirection(orbitCamera.position.clone().normalize());\n                    pc3.setLength(4, 1, 0.5);\n                }\n\n                function init(el, color, geometry, orbitControl) {\n\n                    orbitCamera = orbitControl.getCamera();\n                    scene = new THREE.Scene();\n                    renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n                    renderer.setPixelRatio($window.devicePixelRatio);\n                    renderer.setSize(260, 260);\n                    el.node().append(renderer.domElement);\n                    camera = new THREE.PerspectiveCamera(50, 1, 0.1, 1000);\n                    camera.zoom = 1.2;\n                    camera.setLens(50);\n                    camera.aspect = 1;\n                    camera.matrixAutoUpdate = false;\n\n                    // Material\n                    material = new THREE.ShaderMaterial({\n                        uniforms: {\n                            color: {\n                                type: 'c',\n                                value: new THREE.Color(color.senary)\n                            },\n                            alpha: { type: 'f', value: 0.4 },\n                            pointSize: { type: 'f', value: 10 },\n                            shouldResize: { type: '1i', value: 1 }\n                        },\n                        vertexShader: d3.select('#vertexshader').node().textContent,\n                        fragmentShader: d3.select('#fragmentshader').node().textContent,\n                        transparent: true\n                    });\n\n                    // Particles\n                    particles = new THREE.Points(geometry, material);\n                    scene.add(particles);\n\n                    // Arrows\n                    pc1 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.primary).getHex(),\n                        0.5,\n                        0.5\n                    );\n                    scene.add(pc1);\n\n                    pc2 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.secondary).getHex(),\n                        0.5,\n                        10\n                    );\n                    scene.add(pc2);\n                    pc3 = new THREE.ArrowHelper(\n                        new THREE.Vector3(1, 0, 0),\n                        new THREE.Vector3(0, 0, 0),\n                        2.5,\n                        new THREE.Color(color.tertiary).getHex(),\n                        0.5,\n                        0.5\n                    );\n                    scene.add(pc3);\n\n                    // Grid\n                    var axisOffset = { x: -2, y: -2, z: -4 };\n                    var gridHelper = new THREE.GridHelper(20, 20, 0xBBBBBB, 0xEAEAEA);\n                    gridHelper.position.x = axisOffset.x;\n                    gridHelper.position.z = axisOffset.y;\n                    gridHelper.position.y = axisOffset.z;\n                    scene.add(gridHelper);\n\n\n\n\n\n                    // Start Update Loop\n                    update();\n                }\n\n\n                function setSelected(data) {\n\n                }\n\n                function setData(data) {\n                    scene.remove(particles);\n                    particles = new THREE.PointCloud(data, material);\n                    scene.add(particles);\n                }\n\n                return {\n                    onChange: onChange,\n                    init: init, // Element, Colors, Geometry\n                    setSelected: setSelected,\n                    setData: setData\n                };\n            })();\n\n            var selectControl = (function() {\n                var onChange = new signals.Signal();\n                var svg, rect1, rect2, groupLines, groupBrushes, orbitCamera, pts, data;\n\n                function toScreenXY(pos3D) {\n                    var v = pos3D.clone().project(orbitCamera);\n                    var percX = (v.x + 1) / 2;\n                    var percY = (-v.y + 1) / 2;\n                    var percZ = (v.z + 1) / 2;\n                    var left = percX * 120;\n                    var top = percY * 120;\n                    var z = percZ * (120 * 6); // magic!\n                    return [left * 2, top * 2, z * 2];\n                }\n\n                function draw() {\n                    data = pts.map(toScreenXY);\n\n                    var layout = osApi.getLayout();\n                    var width = $window.innerWidth - layout.left - layout.right;\n                    var height = $window.innerHeight - 120; //10\n\n                    // var lines = groupLines.selectAll(\".scatter-bottom\").data(data);\n                    // lines.exit().remove();\n                    // lines.enter()\n                    //     .append(\"rect\").attr(\"width\", 1).attr(\"height\", 10).style(\"fill\", color.primary).attr(\"class\", \"scatter-bottom\")\n                    //     .attr(\"y\", height).attr(\"x\", function(d) { return d[0]; });\n                    // lines.transition(500).duration(500).attr(\"x\", function(d) { return d[0]; });\n\n                    // lines = groupLines.selectAll(\".scatter-left\").data(data);\n                    // lines.exit().remove();\n                    // lines.enter().append(\"rect\").attr(\"width\", 10).attr(\"height\", 1).style(\"fill\", color.secondary).attr(\"class\", \"scatter-left\")\n                    //     .attr(\"x\", 0).attr(\"y\", function(d) { return d[1]; });\n                    // lines.transition(500).duration(500).attr(\"y\", function(d) { return d[1]; });\n\n                    // lines = groupLines.selectAll(\".scatter-right\").data(data);\n                    // lines.exit().remove();\n                    // lines.enter().append(\"rect\").attr(\"width\", 10).attr(\"height\", 1).style(\"fill\", color.tertiary).attr(\"class\", \"scatter-right\")\n                    //     .attr(\"x\", width - 10).attr(\"y\", function(d) { return d[2]; });\n                    // lines.transition(500).duration(500).attr(\"y\", function(d) { return d[2]; });\n                }\n\n                var selections = { x: null, y: null, z: null };\n\n\n                function onBrush(brush, selection) {\n                    if (!d3.event.selection) return;\n                    selections[brush] = selection;\n                    data;\n                    if (selection !== null) debugger;\n                }\n\n                function init(el, color, points, orbitControl) {\n                    pts = points;\n                    orbitCamera = orbitControl.getCamera();\n                    orbitControl.onChange.add(draw)\n                    svg = el.append('svg');\n                    // rect1 = svg.append(\"rect\").attr(\"width\", 259.5).attr(\"height\", 259.5).style(\"shape-rendering\", \"crispEdges\").style(\"stroke-width\", 1).style(\"stroke\", \"#EAEAEA\").style(\"fill\", \"#FFF\").attr(\"x\", 0).attr(\"y\", 0);\n                    // rect2 = svg.append(\"rect\").attr(\"width\", 239.5).attr(\"height\", 249.5).style(\"shape-rendering\", \"crispEdges\").style(\"stroke-width\", 1).style(\"stroke\", \"#EAEAEA\").style(\"fill\", \"#FFF\").attr(\"x\", 10).attr(\"y\", 0);\n                    rect1 = svg.append(\"rect\").style(\"shape-rendering\", \"crispEdges\").style(\"stroke-width\", 1).style(\"stroke\", \"#EAEAEA\").style(\"fill\", \"#FFF\").attr(\"x\", 0).attr(\"y\", 0);\n                    rect2 = svg.append(\"rect\").style(\"shape-rendering\", \"crispEdges\").style(\"stroke-width\", 1).style(\"stroke\", \"#EAEAEA\").style(\"fill\", \"#FFF\").attr(\"x\", 10).attr(\"y\", 0);\n\n                    groupLines = svg.append(\"g\");\n\n                    groupBrushes = svg.append(\"g\");\n                    var groupX = groupBrushes.append(\"g\");\n                    var groupY = groupBrushes.append(\"g\");\n                    var groupZ = groupBrushes.append(\"g\");\n\n                    var brushX = d3.brushX().extent([\n                            [10, 250],\n                            [250, 260]\n                        ]).handleSize(3)\n                        .on(\"start\", function() { onBrush(\"x\", null); })\n                        .on(\"end\", function() { onBrush(\"x\", d3.event.selection); });\n\n                    groupX.call(brushX);\n\n                    var brushY = d3.brushY().extent([\n                            [0, 10],\n                            [10, 250]\n                        ]).handleSize(3)\n                        .on(\"start\", function() { onBrush(\"y\", null); })\n                        .on(\"end\", function() { onBrush(\"y\", d3.event.selection); });\n                    groupY.call(brushY);\n\n                    var brushZ = d3.brushY().extent([\n                            [250, 10],\n                            [260, 250]\n                        ]).handleSize(3)\n                        .on(\"start\", function() { onBrush(\"z\", null); })\n                        .on(\"end\", function() { onBrush(\"z\", d3.event.selection); });\n                    groupZ.call(brushZ);\n\n                    draw(pts);\n\n                }\n\n                function setData(points) {\n\n                    // Clear Brushes\n                    selections = { x: null, y: null, z: null };\n                    pts = points;\n                    draw();\n                }\n\n                function resize(width, height, left) {\n                    //width, height, layout.left\n                    svg.attr(\"height\", height + \"px\");\n                    svg.attr(\"width\", width + \"px\");\n                    rect1.attr(\"width\", width).attr(\"height\", height);\n                    rect2.attr(\"width\", width - 20).attr(\"height\", height - 10);\n                    draw();\n                }\n\n                return {\n                    onChange: onChange,\n                    init: init,\n                    setData: setData,\n                    resize: resize\n                };\n            })(signals);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.loadings = vm.pc1 = vm.pc2 = vm.layouts = [];\n            vm.layout = {};\n\n            // View Model Call Backs\n            var initialized = false;\n            vm.setLayout = function(layout) {\n                vm.layout = layout;\n                osApi.query(osApi.getDataSource().disease + \"_cluster\", {\n                        disease: vm.datasource.disease,\n                        geneset: vm.layout.geneset,\n                        input: vm.layout.input,\n                        source: vm.layout.source\n                    })\n                    .then(function(response) {\n                        var d = response.data[0];\n                        // Process PCA Variance\n                        vm.pc1 = [\n                            { name: 'PC1', value: d.metadata.variance[0] },\n                            { name: '', value: 100 - d.metadata.variance[0] }\n                        ];\n                        vm.pc2 = [\n                            { name: 'PC2', value: d.metadata.variance[1] },\n                            { name: '', value: 100 - d.metadata.variance[1] }\n                        ];\n\n                        // Process Loadings\n                        var loadings = response.data[0].loadings\n                            .map(function(v) {\n                                v.max = Math.max.apply(null, v.d.map(function(v) { return Math.abs(v); }));\n                                return v;\n                            })\n                            .sort(function(a, b) {\n                                return b.max - a.max;\n                            })\n                            .slice(0, 50);\n\n                        var scale = d3.scaleLinear()\n                            .domain([loadings[loadings.length - 1].max, loadings[0].max])\n                            .range([0.1, 1]);\n\n\n                        vm.loadings = loadings.map(function(v) {\n                            return {\n                                tip: v.d.reduce(function(p, c) {\n                                    p.index += 1;\n                                    p.text += \"<br>PC\" + p.index + \": \" + (c * 100).toFixed(2);\n                                    return p;\n                                }, { text: v.id, index: 0 }).text,\n                                value: this(v.max)\n                            };\n                        }, scale);\n\n                        // Process Scores\n                        var range = [-5, 5];\n                        var domain = d.scores.reduce(function(p, c) {\n                            p[0] = Math.min(p[0], c.d[0], c.d[1], c.d[2]);\n                            p[1] = Math.max(p[1], c.d[0], c.d[1], c.d[2]);\n                            return p;\n                        }, [Infinity, -Infinity]);\n                        var scaleLinear = d3.scaleLinear().range(range).domain(domain);\n\n                        positions = new Float32Array(d.scores.length * 3);\n                        colors = new Float32Array(d.scores.length * 3);\n                        d.scores.forEach(function(c, i) {\n                            var posIndex = i * 3;\n                            positions[posIndex] = scaleLinear(c.d[0]);\n                            positions[posIndex + 1] = scaleLinear(c.d[1]);\n                            positions[posIndex + 2] = scaleLinear(c.d[2]);\n                            colors[posIndex] = 90;\n                            colors[posIndex + 1] = 90;\n                            colors[posIndex + 2] = 90;\n                        });\n                        pts = float32ArrayToVec3Array(positions);\n\n\n                        geom = particleGeometry();\n\n\n                        if (!initialized) {\n                            orbitControl.init(d3.select(angular.element(\"#scatter-axis-controller\")[0]), color, geom);\n                            selectControl.init(d3.select(angular.element(\"#scatter-select-controller\")[0]), color, pts, orbitControl);\n                            chart.init(d3.select(angular.element(\"#scatter-chart\")[0]), color, geom, orbitControl);\n                            var layout = osApi.getLayout();\n                            var width = $window.innerWidth - layout.left - layout.right;\n                            var height = $window.innerHeight - 130; //10\n                            orbitControl.resize(width, height, layout.left);\n                            //selectControl.resize(width, height, layout.left);\n\n                            initialized = true;\n                        } else {\n                            orbitControl.setData(geom);\n                            //selectControl.setData(pts);\n                            chart.setData(geom);\n                        }\n\n                        osApi.setBusy(false);\n                    });\n            };\n\n            // Load Data\n            osApi.query(osApi.getDataSource().disease + \"_cluster\", {\n                dataType: 'PCA',\n                $fields: ['input', 'geneset', 'source']\n            }).then(function(response) {\n                vm.layouts = response.data.map(function(v) {\n                    v.name = v.geneset + \" \" + v.input + \" \" + v.source;\n                    return v;\n                });\n                vm.setLayout(vm.layouts[2]);\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                // osApi.onResize.remove(plot.resize);\n                // osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n\n\n    //     function resize() {\n\n    // var layout = osApi.getLayout();\n    // width = $window.innerWidth - layout.left - layout.right;\n    // height = $window.innerHeight - 30; //10\n    //         chart2d.svg.style(\"position\", \"absolute\");\n    //         chart2d.svg.style(\"top\", height - 200 + \"px\");\n    //         chart2d.svg.style(\"left\", layout.left + \"px\");\n    //         chart2d.svg.style(\"width\", width + \"px\");\n    //         chart2d.svg.style(\"height\", \"160px\");\n    //         //chart2d.svg.style('background-color', 'rgba(0, 0, 0, 0.1)')\n    //         width = Math.floor(width * 0.5);\n    //         height = height - 255;\n    //         chartSpin.camera.aspect = width / height;\n    //         chartSpin.renderer.setSize(width, height);\n    // chartDrag.camera.left = width / -2;\n    // chartDrag.camera.right = width / 2;\n    // chartDrag.camera.top = height / 2;\n    // chartDrag.camera.bottom = height / -2;\n    // chartDrag.camera.near = 1;\n    // chartDrag.camera.far = 100;\n    // chartDrag.renderer.setSize(width, height);\n    // chartDrag.controls.handleResize();\n    //     }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length == 0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node) {\n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400;\n                    if (angular.element(\".tray-right\").attr(\"locked\") == \"false\") {\n                        width += 300;\n                    }\n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) {\n                        return d;\n                    });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\": width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()\n                                .duration(200)\n                                .style(\"opacity\", 1);\n                            d3Tooltip.html(d.name)\n                                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                                .style(\"top\", (d3.event.pageY - 15) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()\n                                .duration(500)\n                                .style(\"opacity\", 0);\n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                    circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) {\n                                return (v[0] > 0) ? \"start\" : \"end\"\n                            }\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function() {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) {\n                                return xScale(d[0]);\n                            },\n                            \"cy\": function(d) {\n                                return yScale(d[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                        .attr({\n                            \"x\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) {\n                                return xScale(v[0]);\n                            },\n                            \"y2\": function(v) {\n                                return yScale(v[1]);\n                            }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var brush;\n            var d3Brush = d3Chart.append(\"g\");\n\n            // Add Labels\n            d3xAxis.append(\"text\")\n                .attr(\"x\", 50)\n                .attr(\"y\", 15)\n                .text(\"PC1\");\n\n\n            d3yAxis.append(\"text\")\n                .attr(\"y\", 55)\n                .attr(\"x\", 25)\n                .text(\"PC2\");\n\n            // Properties\n            var clusterCollection = osApi.getDataSource().disease + \"_cluster\";\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model Update\n            var vm = (function(vm, osApi) {\n                vm.loadings = [];\n                vm.pc1 = vm.pc2 = [];\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                vm.selectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", true);\n                            allIds.push(d.id);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osApi.setCohort(allIds, \"PCA\", osApi.SAMPLE);\n                };\n                vm.deselectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", false);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osApi.setCohort(allIds, \"PCA\", osApi.SAMPLE);\n                };\n                return vm;\n            })(this, osApi);\n\n            // Setup Watches\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet === null) return;\n                vm.sources = vm.geneSet.sources;\n                if (angular.isUndefined(vm.source)) {\n                    vm.source = vm.sources[0];\n                } else {\n                    var newSource = vm.sources.filter(function(v) { return (v.name === vm.source.name); });\n                    vm.source = (newSource.length === 1) ? newSource[0] : vm.sources[0];\n                }\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet === null) return;\n                vm.pcaTypes = vm.source.types;\n                if (angular.isUndefined(vm.pcaType)) {\n                    vm.pcaType = vm.pcaTypes[0];\n                } else {\n                    var newSource = vm.pcaTypes.filter(function(v) { return (v.name === vm.pcaType.name); });\n                    vm.pcaType = (newSource.length === 1) ? newSource[0] : vm.pcaTypes[0];\n                }\n            });\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (angular.isUndefined(geneset)) return;\n                osApi.query(clusterCollection, {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        input: vm.pcaType.name,\n                        source: vm.source.name\n                    })\n                    .then(function(response) {\n\n                        var d = response.data[0];\n\n                        // Process PCA Variance\n                        vm.pc1 = [\n                            { name: 'PC1', value: d.metadata.variance[0] },\n                            { name: '', value: 100 - d.metadata.variance[0] }\n                        ];\n                        vm.pc2 = [\n                            { name: 'PC2', value: d.metadata.variance[1] },\n                            { name: '', value: 100 - d.metadata.variance[1] }\n                        ];\n\n                        // Process Loadings\n                        var loadings = response.data[0].loadings\n                            .map(function(v) {\n                                v.max = Math.max.apply(null, v.d.map(function(v) { return Math.abs(v); }));\n                                return v;\n                            })\n                            .sort(function(a, b) {\n                                return b.max - a.max;\n                            })\n                            .slice(0, 50);\n\n                        var scale = d3.scaleLinear()\n                            .domain([loadings[loadings.length - 1].max, loadings[0].max])\n                            .range([0.1, 1]);\n\n\n                        vm.loadings = loadings.map(function(v) {\n                            return {\n                                tip: v.d.reduce(function(p, c) {\n                                    p.index += 1;\n                                    p.text += \"<br>PC\" + p.index + \": \" + (c * 100).toFixed(2);\n                                    return p;\n                                }, { text: v.id, index: 0 }).text,\n                                value: this(v.max)\n                            };\n                        }, scale);\n\n\n                        // Process Scores\n                        data = d.scores.map(function(v) {\n                            v.d.id = v.id;\n                            return v.d;\n                        });\n\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n\n                        draw();\n                    });\n            });\n\n            // Utility Functions\n            function setSelected() {\n                var selectedIds = cohort.sampleIds;\n                d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                    return (selectedIds.indexOf(this.__data__.id) >= 0);\n                });\n            }\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (angular.isDefined(this[v.id])) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Brush.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                var circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"svg:circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 3)\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", 0.8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(3);\n                axisY = d3.axisLeft().scale(scaleY).ticks(3);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + height * 0.5 + \")\")\n                    .call(axisX);\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + width * 0.5 + \", 0)\")\n                    .call(axisY);\n\n\n                // Brush\n                brush = d3.brush()\n                    .on(\"end\", function() {\n\n                        if (!d3.event.selection) {\n                            osApi.setCohort([], osApi.ALL, osApi.SAMPLE);\n                            return;\n                        }\n\n                        var bv = d3.event.selection;\n                        var xMin = bv[0][0];\n                        var xMax = bv[1][0];\n                        var yMin = bv[0][1];\n                        var yMax = bv[1][1];\n\n                        var ids = d3Points.selectAll(\"circle\").data().filter(function(d) {\n                            var x = scaleX(d[0]);\n                            var y = scaleY(d[1]);\n                            return (x > xMin && x < xMax && y > yMin && y < yMax);\n                        }).map(function(d) {\n                            return d.id;\n                        });\n                        osApi.setCohort(ids, \"PCA\", osApi.SAMPLE);\n\n                    });\n\n                d3Brush.attr(\"class\", \"brush\").call(brush);\n                onCohortChange(osApi.getCohort());\n                osApi.setBusy(false);\n            }\n\n            // App Event :: Resize\n            osApi.onResize.add(draw);\n\n            // App Event :: Color change\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            };\n            osApi.onPatientColorChange.add(onPatientColorChange);\n\n            // App Event :: Cohort Change\n            var cohort = osApi.getCohorts();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n\n            osApi.query(clusterCollection, {\n                dataType: 'PCA',\n                $fields: ['input', 'geneset', 'source']\n            }).then(function(response) {\n                var data = response.data.map(function(v) {\n                    return {\n                        a: v.geneset,\n                        b: v.source,\n                        c: v.input\n                    };\n                });\n                var result = _.reduce(data, function(memo, val) {\n                    var tmp = memo;\n                    _.each(val, function(fldr) {\n                        if (!_.has(tmp, fldr)) {\n                            tmp[fldr] = {};\n                        }\n                        tmp = tmp[fldr];\n                    });\n                    return memo;\n                }, {});\n\n                vm.geneSets = Object.keys(result).map(function(geneset) {\n                    return {\n                        name: geneset,\n                        sources: Object.keys(result[geneset]).map(function(source) {\n                            return {\n                                name: source,\n                                types: Object.keys(result[geneset][source]).map(function(type) {\n                                    return {\n                                        name: type\n                                    };\n                                })\n                            };\n                        })\n                    };\n                });\n                vm.geneSet = vm.geneSets[0];\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(draw);\n                osApi.onPatientColorChange.remove(onPatientColorChange);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            };\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch();\n                csChart.nodes().map(function(ele) {\n                    if (len === 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                        container: elChart,\n                        elements: markersNetwork.elements,\n                        style: getStyle(),\n                        minZoom: 0.1,\n                        maxZoom: 5,\n                        zoom: 0.2,\n                        wheelSensitivity: 0.5,\n                        layout: {\n                            name: \"preset\",\n                            fit: true\n                        }\n                    })\n                    .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    });\n\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ];\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = \"/api/\";\n         //url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n(function() {\n    'use strict';\n    angular.module('oncoscape').directive('ngEnter', function() {\n        return function(scope, element, attrs) {\n            element.bind(\"keydown keypress\", function(event) {\n                if (event.which === 13) {\n                    scope.$apply(function() {\n                        scope.$eval(attrs.ngEnter);\n                    });\n\n                    event.preventDefault();\n                }\n            });\n        };\n    });\n    /*\n        angular\n            .module('oncoscape')\n            .provider({\n                $exceptionHandler:\n    */\n    /** @ngInject */\n    /*        \n            function exceptionFactory(){\n            \tvar handler = function (exception, cause){\n                    window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                    console.log(exception);\n                    exception.stack();\n                    if (angular.isDefined(cause)) console.log(cause);\n            \t}\n                this.$get = function() { return handler; };\n            }\n           });\n    */\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n            id: 'guest',\n            name: 'Guest',\n            icon: 'fa fa-user'\n        }, {\n            id: 'google',\n            name: 'Google',\n            icon: 'fa fa-google-plus',\n            key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }];\n\n        /*}, {\n            id: 'facebook',\n            name: 'Facebook',\n            icon: 'fa fa-facebook',\n            key: '142281766208909',\n            mode: 'implicit'\n        }, {\n            id: 'github',\n            name: 'GitHub',\n            icon: 'fa fa-github-alt',\n            key: '78b5dbe2ba756151169e',\n            mode: 'explicit'\n        },{\n            id: 'instagram',\n            name: 'Instagram',\n            icon: 'fa fa-instagram',\n            key: '3578c1b7c8c248c6ba80784b9ede0c52',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }, {\n            id: 'twitter',\n            name: 'Twitter',\n            icon: 'fa fa-twitter',\n            key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n            mode: 'implicit'\n        }, {\n            id: 'windows',\n            name: 'Win Live',\n            icon: 'fa fa-windows',\n            key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n            mode: 'implicit'\n        }, {\n            id: 'dropbox',\n            name: 'Dropbox',\n            icon: 'fa fa-dropbox',\n            key: 'dropbox',\n            mode: 'implicit'\n        }, {\n            id: 'flickr',\n            name: 'Flickr',\n            icon: 'fa fa-flickr',\n            key: '',\n            mode: 'implicit'\n        }*/\n\n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var loginGuest = function() {\n            user = {\n                network: 'guest',\n                id: 'x',\n                name: 'Guest',\n                thumb: 'Guest.png'\n            };\n            osApi.init().then(function() {\n                onLogin.dispatch();\n            });\n        }\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            loginGuest: loginGuest,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, jStat, $, $window, _, moment) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n        var onNavChange = new signals.Signal();\n        var onCohortToolInfo = new signals.Signal();\n        var onCohortChange = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        // Resize\n        angular.element($window).bind('resize', _.debounce(onResize.dispatch, 900));\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n\n        // Factories\n        var statsFactory = (function(jStat) {\n\n            var km = (function(jStat) {\n\n                var pluck,\n                    uniq,\n                    sortBy,\n                    groupBy,\n                    last,\n                    find;\n\n                function multiply(a, b) {\n                    var r = jStat.multiply(a, b);\n                    return r.length ? r : [\n                        [r]\n                    ];\n                }\n\n                function transpose(a) {\n                    var r = jStat.transpose(a);\n                    return r[0].length ? r : [r];\n                }\n\n                function timeTable(tte, ev) {\n                    var exits = sortBy(tte.map(function(x, i) { return { tte: x, ev: ev[i] }; }), 'tte'), // sort and collate\n                        uexits = uniq(pluck(exits, 'tte'), true), // unique tte\n                        gexits = groupBy(exits, function(x) { return x.tte; }); // group by common time of exit\n                    return uexits.reduce(function(a, tte) { // compute d_i, n_i for times t_i (including censor times)\n                        var group = gexits[tte],\n                            l = last(a) || { n: exits.length, e: 0 },\n                            events = group.filter(function(x) { return x.ev; });\n\n                        a.push({\n                            n: l.n - l.e, // at risk\n                            e: group.length, // number exiting\n                            d: events.length, // number events (death)\n                            t: group[0].tte // time\n                        });\n                        return a;\n                    }, []);\n                }\n\n                function compute(tte, ev) {\n                    var dini = timeTable(tte, ev);\n                    return dini.reduce(function(a, dn) { // survival at each t_i (including censor times)\n                        var l = last(a) || { s: 1 };\n                        if (dn.d) { // there were events at this t_i\n                            a.push({ t: dn.t, e: true, s: l.s * (1 - dn.d / dn.n), n: dn.n, d: dn.d, rate: dn.d / dn.n });\n                        } else { // only censors\n                            a.push({ t: dn.t, e: false, s: l.s, n: dn.n, d: dn.d, rate: null });\n                        }\n                        return a;\n                    }, []);\n                }\n\n                function expectedObservedEventNumber(si, tte, ev) {\n                    var data = timeTable(tte, ev),\n                        expectedNumber,\n                        observedNumber,\n                        dataByTimeTable = [];\n\n                    si = si.filter(function(item) { return item.e; });\n\n                    expectedNumber = si.reduce(function(memo, item) {\n                        var pointerInData = find(data, function(x) { return (x.t >= item.t); });\n\n                        if (pointerInData) {\n                            var expected = pointerInData.n * item.rate;\n                            dataByTimeTable.push(pointerInData);\n                            return memo + expected;\n                        } else {\n                            return memo;\n                        }\n\n                    }, 0);\n\n                    observedNumber = ev.filter(function(x) { return x; }).length;\n\n                    return {\n                        expected: expectedNumber,\n                        observed: observedNumber,\n                        dataByTimeTable: dataByTimeTable,\n                        timeNumber: dataByTimeTable.length\n                    };\n                }\n\n                function covariance(allGroupsRes, OETable) {\n                    var vv = jStat.zeros(OETable.length),\n                        i, j, //groups\n                        t, //timeIndex\n                        N, //total number of samples\n                        Ki, Kj, // at risk number from each group\n                        n; //total observed\n\n                    for (i = 0; i < OETable.length; i++) {\n                        for (j = i; j < OETable.length; j++) {\n                            for (t = 0; t < allGroupsRes.length; t++) {\n                                N = allGroupsRes[t].n;\n                                n = allGroupsRes[t].d;\n                                if (t < OETable[i].timeNumber && t < OETable[j].timeNumber) {\n                                    Ki = OETable[i].dataByTimeTable[t].n;\n                                    Kj = OETable[j].dataByTimeTable[t].n;\n                                    // when N==1: only 1 subject, no variance\n                                    if (i !== j && N !== 1) {\n                                        vv[i][j] -= n * Ki * Kj * (N - n) / (N * N * (N - 1));\n                                        vv[j][i] = vv[i][j];\n                                    } else if (N !== 1) { // i==j\n                                        vv[i][i] += n * Ki * (N - Ki) * (N - n) / (N * N * (N - 1));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return vv;\n                }\n\n                // This might be the mis-named.\n                function solve(a, b) {\n                    var bT = transpose(b),\n                        aInv = jStat.inv(a);\n                    return multiply(multiply(b, aInv), bT);\n                }\n\n                function allGroupsKm(groups) {\n                    var tte = [].concat.apply([], pluck(groups, 'tte')),\n                        ev = [].concat.apply([], pluck(groups, 'ev'));\n                    return compute(tte, ev).filter(function(t) { return t.e; });\n                }\n\n                // allGroupsRes: km of all groups combined?\n                // groupedDataTable: [{tte, ev}, ...]\n                function logranktest(groupedDataTable) {\n                    var allGroupsRes = allGroupsKm(groupedDataTable),\n                        pValue = 1,\n                        KMStats,\n                        dof, // degree of freedom\n                        OETable,\n                        OMinusEVector, // O-E\n                        vv; //covariant matrix\n\n                    // Table of observed and expected events, for each group.\n                    OETable = groupedDataTable\n                        .map(function(v) { return expectedObservedEventNumber(allGroupsRes, v.tte, v.ev); })\n                        .filter(function(r) { return r.expected; });\n\n                    // Find O-E and covariance, and drop one dimension from each\n                    OMinusEVector = OETable.map(function(r) { return r.observed - r.expected; }).slice(1);\n                    vv = covariance(allGroupsRes, OETable).slice(1).map(function(r) { return r.slice(1); }); // drop 1st row & 1st column\n\n                    dof = OETable.length - 1;\n\n                    if (dof > 0) {\n                        KMStats = solve(vv, [OMinusEVector])[0][0];\n                        pValue = 1 - jStat.chisquare.cdf(KMStats, dof);\n                    }\n\n                    return {\n                        dof: dof,\n                        KMStats: KMStats,\n                        pValue: pValue\n                    };\n                }\n\n                var exports = {\n                    init: function(obj) {\n                        pluck = obj.pluck;\n                        uniq = obj.uniq;\n                        sortBy = obj.sortBy;\n                        groupBy = obj.groupBy;\n                        last = obj.last;\n                        find = obj.find;\n                        return exports; // return the module for convenience of the caller\n                    },\n                    compute: compute,\n                    expectedObservedEventNumber: expectedObservedEventNumber,\n                    logranktest: logranktest\n                };\n                return exports;\n            })(jStat).init(_);\n\n            function getNumericStats(patients, attribute) {\n                var len = patients.length;\n                var bin =\n                    (len < 2) ? 1 :\n                    (len < 6) ? 2 :\n                    (len < 9) ? 3 :\n                    (len < 18) ? 6 :\n                    (len < 36) ? 8 :\n                    10;\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n\n                var data = {\n                    type: \"numeric\",\n                    min: jStat.min(props),\n                    max: jStat.max(props),\n                    range: jStat.range(props),\n                    sd: jStat.stdev(props),\n                    count: 0,\n                    hist: jStat.histogram(props, bin),\n                    histRange: [],\n                    bins: bin\n                };\n\n                data.histRange = [jStat.min(data.hist), jStat.max(data.hist)];\n                data.count = data.hist.reduce(function(p, c) { p += c; return p; }, 0);\n\n                bin = Math.round(data.range / bin);\n                data.hist = data.hist.map(function(pt) {\n                    var rv = {\n                        label: this.start + \"-\" + (this.start + this.bin),\n                        value: pt\n                    };\n                    this.start += this.bin;\n                    return rv;\n                }, {\n                    bin: bin,\n                    start: data.min\n                });\n                return data;\n            }\n\n            function getFactorStats(patients, attribute) {\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n                var factors = props\n                    .reduce(function(prev, curr) {\n                        prev[curr] = (prev.hasOwnProperty(curr)) ? prev[curr] + 1 : 1;\n                        return prev;\n                    }, {});\n\n                factors = Object.keys(factors).map(function(key) {\n                    return {\n                        label: key,\n                        value: this.factors[key]\n                    };\n                }, {\n                    factors: factors\n                });\n\n                var values = factors.map(function(v) {\n                    return v.value;\n                });\n                var data = {\n                    type: \"factor\",\n                    min: jStat.min(values),\n                    max: jStat.max(values),\n                    range: jStat.range(values),\n                    sd: jStat.stdev(values),\n                    count: 0,\n                    hist: factors,\n                    histRange: [],\n                    bins: factors.length\n                };\n                data.histRange = [data.min, data.max];\n                data.count = data.hist.reduce(function(p, c) { p += c.value; return p; }, 0);\n                return data;\n            }\n\n            var createHistogram = function(ids, data) {\n\n                // Transform Ids Into Clinical Records + Remove Nulls\n                var clinical = ids.map(function(v) {\n                    var patient = this[v];\n                    if (patient === null) return null;\n                    return patient.clinical;\n                }, data.patientMap).filter(function(v) { return v != null; })\n\n                return {\n                    total: Object.keys(data.patientMap).length,\n                    selected: clinical.length,\n                    features: [{\n                            label: \"Age At Diagnosis\",\n                            data: getNumericStats(clinical, \"age_at_diagnosis\"),\n                            prop: \"age_at_diagnosis\",\n                            type: \"numeric\"\n                        },\n                        //{label: \"Death\", data:getNumericStats(data,\"days_to_death\"), prop:\"days_to_death\" , type:\"numeric\"},\n                        {\n                            label: \"Gender\",\n                            data: getFactorStats(clinical, \"gender\"),\n                            prop: \"gender\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Race\",\n                            data: getFactorStats(clinical, \"race\"),\n                            prop: \"race\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Ethnicity\",\n                            data: getFactorStats(clinical, \"ethnicity\"),\n                            prop: \"ethnicity\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Vital\",\n                            data: getFactorStats(clinical, \"status_vital\"),\n                            prop: \"status_vital\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Disease Status\",\n                            data: getFactorStats(clinical, \"last_known_disease_status\"),\n                            prop: \"last_known_disease_status\",\n                            type: \"factor\"\n                        }\n                    ]\n                };\n            };\n\n            var createSurvival = function(ids, data, cohortAll) {\n\n                // Transform Ids Into Survival Records + Remove Nulls\n                var survival = ids.map(function(v) {\n                        var patient = this[v];\n                        if (patient === null) return null;\n                        return patient.survival;\n                    }, data.patientMap)\n                    .filter(function(v) { return angular.isDefined(v); });\n\n                if (survival.length == 0) return null;\n\n                /* \n                Transform Survival Records Into KM Data The Result Is A Value Object Containing The Following\n                t = time in days\n                c = array of censored patient ids\n                d = array of dead patient ids\n                n = numer of patients remaining\n                s = survival rate\n                p = previous survival rate \n                */\n                var te = survival.reduce(function(p, c) {\n                    p.tte.push(c.tte);\n                    p.ev.push(c.ev);\n                    return p;\n                }, { tte: [], ev: [] });\n\n                var compute = km.compute(te.tte, te.ev)\n                    .map(function(r) { return _.omit(r, ['rate', 'e', 'n', 'd']); })\n                compute.forEach(function(c) {\n                    var cd = this.survival.reduce(function(p, c) {\n                        if (p.time == c.tte) p[c.ev ? \"d\" : \"c\"].push(c.pid);\n                        return p;\n                    }, { c: [], d: [], time: c.t });\n                    c.c = cd.c;\n                    c.d = cd.d;\n                }, { survival: survival });\n\n\n                var lrt = (cohortAll === null) ? { \"KMStats\": \"NA\", \"pValue\": \"NA\", dof: \"NA\" } :\n                    km.logranktest([te, cohortAll.survival.data]);\n\n                var rv = {\n                    data: te,\n                    compute: compute,\n                    logrank: lrt\n                };\n\n                var firstEvent = rv.compute[0];\n                if (firstEvent.s !== 1 || firstEvent.t !== 0) {\n                    rv.compute.unshift({ c: [], d: [], s: 1, t: firstEvent.t });\n                    rv.compute.unshift({ c: [], d: [], s: 1, t: 0 });\n                }\n\n                return rv;\n            };\n\n            return {\n                km: km,\n                createHistogram: createHistogram,\n                createSurvival: createSurvival\n            };\n        })(jStat);\n\n\n        // Properties\n        var _dataSources; // All Data Sources\n        var _dataSource; // Selected Data Source\n        var _toolsAll; // List of All Tools\n        var _tools; // List of Tools For DataSource\n        var _data = null; // This is the clinical and sample to patient mapping data.\n        var _cohortAll; // Precalculated Cohort of All Patients / Samples \n        var _cohorts = null; // Collection of Cohorts\n        var _cohort = null; // Selected Cohorts\n        var _patientColor;\n        var _cohortToolInfo = { 'numSamples': 500, 'numPatients': 500 };\n        var _cohortDatasetInfo = { 'numSamples': 0, 'numPatients': 0 };\n\n\n\n        var getTools = function() { return _tools; };\n        var getCohorts = function() { return _cohorts; };\n        var getCohort = function() { return _cohort; };\n        var getCohortToolInfo = function() { return _cohortToolInfo; };\n        var getCohortDatasetInfo = function() { return _cohortDatasetInfo; };\n        var getData = function() { return _data; };\n        var getPatientColor = function() { return _patientColor; };\n        var getDataSources = function() { return _dataSources; };\n        var getDataSource = function() { return _dataSource; };\n        var setPatientColor = function(patientColor) {\n            _patientColor = patientColor;\n            onPatientColorChange.dispatch(patientColor);\n        };\n        var setCohortToolInfo = function(cohortToolData) {\n            _cohortToolInfo = cohortToolData;\n            onCohortToolInfo.dispatch(_cohortToolInfo);\n        };\n        var setDataSource = function(value) {\n\n            return new Promise(function(resolveDataSource) {\n\n                // Set Data Source Object Using String or Object\n                if (angular.isObject(value)) {\n                    if (_dataSource === value) {\n                        resolveDataSource();\n                        return;\n                    }\n                    _dataSource = value;\n                } else if (angular.isString(value)) {\n                    if (_dataSource.disease === value) {\n                        resolveDataSource();\n                        return;\n                    }\n                    _dataSource = _dataSources.filter(function(v) {\n                        return v.disease == this.key;\n                    }, {\n                        key: value\n                    })[0];\n                }\n\n                // Update What Tools Are Availible Based On Data Sources\n                _tools = _toolsAll.filter(function(item) {\n                    return (_dataSource.tools.indexOf(item.route) !== -1);\n                }).sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n\n\n                // Load Sample Maps\n                Promise.all([query(_dataSource.clinical.samplemap), query(_dataSource.clinical.patient)]).then(function(responses) {\n                    var data = {};\n\n                    // Map of Samples To Patients\n                    data.sampleMap = responses[0].data[0];\n\n                    // Map of Patients To Samples + Clinical Using Samples Ids\n                    data.patientMap = Object.keys(data.sampleMap).reduce(function(p, c) {\n                        var patient = data.sampleMap[c];\n                        var sample = c;\n                        if (p.hasOwnProperty(patient)) {\n                            p[patient].samples.push(sample);\n                        } else {\n                            p[patient] = { samples: [sample] };\n                        }\n                        return p;\n                    }, {});\n                    responses[1].data.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.patient_ID)) {\n                            p[c.patient_ID].clinical = c;\n                        } else {\n                            p[c.patient_ID] = { clinical: c, samples: [] };\n                        }\n                        return p;\n                    }, data.patientMap);\n\n                    _cohortDatasetInfo.numSamples = Object.keys(data.sampleMap).length;\n                    _cohortDatasetInfo.numPatients = Object.keys(data.patientMap).length;\n\n                    // Survival Data \n                    responses[1].data.map(function(v) {\n\n                        // No Status - Exclude\n                        if (!v.hasOwnProperty(\"status_vital\")) return null;\n                        if (v.status_vital === null) return null;\n\n                        // Get Time - Or Exclude    \n                        var status = v.status_vital.toString().trim().toUpperCase();\n                        var time;\n                        if (status == \"ALIVE\") { // Alive = Sensor 2\n                            if (!v.hasOwnProperty(\"days_to_last_follow_up\")) return null;\n                            time = parseInt(v.days_to_last_follow_up);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, ev: false, tte: time };\n                        }\n                        if (status == \"DEAD\") { // Dead = Sensor 1\n                            if (!v.hasOwnProperty(\"days_to_death\")) return null;\n                            time = parseInt(v.days_to_death);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, ev: true, tte: time };\n                        }\n                        return null;\n                    }).reduce(function(p, c) {\n                        if (c !== null) {\n                            p[c.pid].survival = c;\n                        }\n                        return p;\n                    }, data.patientMap);\n\n                    _data = data;\n                    _cohortAll = {\n                        color: '#039BE5',\n                        patientIds: [],\n                        sampleIds: [],\n                        name: 'All Patients + Samples',\n                        histogram: statsFactory.createHistogram(Object.keys(data.patientMap), data),\n                        survival: statsFactory.createSurvival(Object.keys(data.patientMap), data, null),\n                        numPatients: Object.keys(_data.patientMap).length,\n                        numSamples: Object.keys(_data.sampleMap).length,\n                        numClinical: Object.keys(_data.patientMap).reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                        show: true,\n                        type: 'ALL'\n                    };\n\n                    _cohorts = localStorage.getItem(_dataSource.disease + 'Cohorts');\n\n                    if (_cohorts !== null) {\n                        _cohorts = angular.fromJson(_cohorts);\n                        setCohort(_cohorts[0]);\n                    } else {\n                        _cohorts = [_cohortAll];\n                        setCohort(_cohortAll);\n                    }\n\n                    // Let everyone know what happened\n                    onCohortsChange.dispatch(_cohorts);\n                    onCohortChange.dispatch(_cohort);\n                    onDataSource.dispatch(_dataSource);\n\n                    // Resolve The Promise\n                    resolveDataSource();\n                });\n            });\n        };\n\n\n\n\n        var createWithSampleIds = function(name, sampleIds, data) {\n            if (sampleIds.length === 0) return _cohortAll;\n            var patientIds = sampleIds\n                .map(function(v) { return this.hasOwnProperty(v) ? this[v] : null; }, data.sampleMap)\n                .filter(function(v) { return (v !== null); }) // Remove Null\n                .filter(function(item, i, ar) { return ar.indexOf(item) === i; }); // Remove Dups\n\n            return create(name, patientIds, sampleIds);\n        };\n\n        var createWithPatientIds = function(name, patientIds, data) {\n\n            if (patientIds.length === 0) return _cohortAll;\n            var sampleIds = [].concat\n                .apply([], patientIds\n                    .map(function(v) { return this.hasOwnProperty(v) ? this[v].samples : null; }, data.patientMap))\n                .filter(function(item, i, ar) { return ar.indexOf(item) === i; });\n\n            return create(name, patientIds, sampleIds);\n        };\n\n        var create = function(name, patientIds, sampleIds) {\n            var survival = statsFactory.createSurvival(patientIds, _data, _cohortAll);\n            var rv = {\n                uuid: Math.random().toString().substr(2),\n                color: '#000',\n                patientIds: patientIds,\n                sampleIds: sampleIds,\n                name: name,\n                histogram: statsFactory.createHistogram(patientIds, _data),\n                survival: (survival === null) ? _cohortAll.survival : survival,\n                numPatients: patientIds.length,\n                numSamples: sampleIds.length,\n                numClinical: patientIds.reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                show: true,\n                type: 'UNSAVED'\n            };\n            return rv;\n        };\n\n\n        var setCohort = function(cohort, name, type) {\n            // Create Cohort If Array Passed\n            if (angular.isArray(cohort)) {\n                name += \"  (\" + moment().format('hh:mm:ss') + \")\";\n                cohort = (type == \"PATIENT\") ? createWithPatientIds(name, cohort, _data) : createWithSampleIds(name, cohort, _data);\n                cohort.type = (cohort.patientIds.length === 0) ? \"ALL\" : \"UNSAVED\";\n                if (cohort.type != \"ALL\") {\n                    var usedColors = _cohorts.map(function(v) { return v.color; });\n                    var availColors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70', '#B71C1C', '#880E4F', '#4A148C', '#311B92', '#0D47A1', '#006064', '#1B5E20'].filter(function(v) { return (usedColors.indexOf(v) == -1); });\n                    cohort.color = availColors[0];\n                }\n            }\n            //if (_cohort === cohort) return;\n            _cohort = cohort;\n            onCohortChange.dispatch(_cohort);\n        };\n\n        var saveCohort = function() {\n            _cohort.type = \"SAVED\";\n            _cohorts.push(_cohort);\n            localStorage.setItem(_dataSource.disease + 'Cohorts', angular.toJson(_cohorts));\n\n        };\n        var deleteCohort = function(cohort) {\n            _cohorts.splice(_cohorts.indexOf(cohort), 1);\n            localStorage.setItem(_dataSource.disease + 'Cohorts', angular.toJson(_cohorts));\n            setCohort([], \"\", \"PATIENT\");\n        };\n\n        // Converts Sample Ids To A List of Sample Ids\n        var importIds = function(ids, name) {\n            var sampleIds = _.union.apply(null, ids\n                .map(function(id) { // Convert All Ids to Patient Ids\n                    id = id.toUpperCase().trim(); // Clean input\n                    return _data.sampleMap.hasOwnProperty(id) ? _data.sampleMap[id] : id;\n                })\n                .filter(function(id) { // Remove Invalid Patient Ids\n                    return _data.patientMap.hasOwnProperty(id);\n                })\n                .map(function(id) { // Convert Patient Ids To Sample Arrays\n                    return _data.patientMap[id].samples;\n                })); // Union Merges Arrays + Removes Dups\n\n            setCohort(sampleIds, name, \"SAMPLE\");\n            saveCohort();\n        };\n\n\n\n\n        // Initialize (Load Tools Raw Data + DataSources)\n        var initialized = false;\n\n        function init() {\n            if (initialized) return new Promise(function(resolve) { resolve(_dataSources); });\n            initialized = true;\n            return Promise.all([\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_tools\").then(function(response) {\n                        _toolsAll = response.data;\n                        resolve();\n                    }, reject);\n                }),\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_datasources\", {\n                        beta: false\n                    }).then(function(response) {\n                        _dataSource = { disease: '' };\n                        _dataSources = response.data\n                            .filter(function(d) {\n                                return angular.isDefined(d.img);\n                            })\n                            .map(function(d) {\n                                d.name = d.name.trim();\n                                return d;\n                            })\n                            .sort(function(a, b) {\n                                return (a.img < b.img) ? -1 :\n                                    (a.img > b.img) ? 1 :\n                                    (a.disease < b.disease) ? -1 :\n                                    (a.disease > b.disease) ? 1 :\n                                    0;\n                            });\n                        resolve();\n                    }, reject);\n                })\n            ]);\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        return {\n\n            // Constants\n            ALL: \"All Patients\",\n            SAMPLE: \"SAMPLE\",\n            PATIENT: \"PATIENT\",\n\n            // Init\n            init: init,\n\n            // RPC\n            query: query,\n            queryString: queryString,\n\n            // Data Sources\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n\n            // Patient Colors\n            setPatientColor: setPatientColor,\n            getPatientColor: getPatientColor,\n\n            // Tools + Layouts\n            getTools: getTools,\n            getLayout: getLayout,\n\n            // Cohort Tool Info\n            setCohortToolInfo: setCohortToolInfo,\n            getCohortToolInfo: getCohortToolInfo,\n            getCohortDatasetInfo: getCohortDatasetInfo,\n\n\n            // Cohort Management\n            getCohorts: getCohorts,\n            getCohort: getCohort,\n            setCohort: setCohort,\n            saveCohort: saveCohort,\n            deleteCohort: deleteCohort,\n            importIds: importIds,\n\n            // Signals\n            onPatientColorChange: onPatientColorChange,\n            onCohortToolInfo: onCohortToolInfo,\n            onNavChange: onNavChange,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            onCohortChange: onCohortChange,\n            onCohortsChange: onCohortsChange,\n\n            // Random\n            setBusy: setBusy,\n            km: statsFactory.km,\n\n            getData: getData\n\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n\n            // State\n            var mpState = (function(osApi) {\n                // Retrieve State\n                var mp = localStorage.getItem(\"MP-\" + osApi.getDataSource().disease);\n                var hasState = (mp !== null);\n                if (hasState) mp = angular.fromJson(mp);\n\n\n                var _colors = null;\n                var setColors = function(c) {\n                    _colors = c;\n                };\n                var applyState = function(fn, cyChart) {\n                    if (!hasState) return;\n                    osApi.onPatientColorChange.dispatch(mp.optColors);\n                    requestAnimationFrame(function() {\n                        cyChart.startBatch();\n                        cyChart.add(mp.edges);\n                        cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (\n                                mp.moved.hasOwnProperty(node.id())\n                            ) {\n                                node.position(\n                                    mp.moved[node.id()]\n                                );\n                            }\n                        });\n                        cyChart.endBatch();\n                    });\n\n\n\n                };\n\n                var getOptEdgeColors = function() {\n\n                    if (hasState) return mp.optEdgeColors;\n                    return [{\n                        name: 'Mutation',\n                        abv: 'm',\n                        show: true,\n                        color: '#9C27B0',\n                        class: 'switch-mutation',\n                        count: '',\n                        id: 0\n                    }, {\n                        name: 'Amplification',\n                        abv: 'cnG2',\n                        show: true,\n                        color: '#3F51B5',\n                        class: 'switch-cnG2',\n                        count: '',\n                        id: 2\n                    }, {\n                        name: 'Gain',\n                        abv: 'cnG1',\n                        show: true,\n                        color: '#03A9F4',\n                        class: 'switch-cnG1',\n                        count: '',\n                        id: 1\n                    }, {\n                        name: 'Loss',\n                        abv: 'cnL1',\n                        show: true,\n                        color: '#FF9800',\n                        class: 'switch-cnL1',\n                        count: '',\n                        id: -1\n                    }, {\n                        name: 'Deletion',\n                        abv: 'cnL2',\n                        show: true,\n                        color: '#F44336',\n                        class: 'switch-cnL2',\n                        count: '',\n                        id: -2\n                    }];\n                };\n\n                var getGeneSet = function(genesets) {\n                    if (hasState) {\n                        return genesets.filter(function(v) {\n                            return v.name == mp.optGeneSet.name;\n                        }, mp.optGeneSet.name)[0];\n                    }\n\n                    var datasetGeneset = osApi.getDataSource().geneset;\n                    var gs = genesets.reduce(function(p, c) {\n                        if (c.name === datasetGeneset) { p = c; }\n                        return p;\n                    }, genesets[0]);\n                    return gs;\n                };\n\n                var getPatientLayout = function(layouts) {\n\n                    if (hasState) {\n                        return layouts.filter(function(v) {\n                            return v.name == mp.optPatientLayout.name;\n                        }, mp.optPatientLayout.name)[0];\n                    } else {\n                        return layouts.reduce(function(p, c) {\n                            if (c.hasOwnProperty(\"default\")) {\n                                if (c.default) p = c;\n                            }\n                            return p;\n                        }, layouts[0]);\n                    }\n                };\n\n\n                var save = function(vm, cyChart) {\n                    var s = {};\n                    s.moved = {};\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function(v) {\n                        if (!_.isMatch(v.data().position, v.position())) {\n                            s.moved[v.id()] = v.position();\n                        }\n                    });\n                    s.optEdgeColors = vm.optEdgeColors;\n                    s.optGeneSet = vm.optGeneSet;\n                    s.optPatientLayout = vm.optPatientLayout;\n                    s.optColors = _colors;\n                    s.edges = cyChart.$('edge[edgeType=\"cn\"]').jsons();\n                    localStorage.setItem(\"MP-\" + osApi.getDataSource().disease, angular.toJson(s));\n                };\n\n                return {\n                    applyState: applyState,\n                    getOptEdgeColors: getOptEdgeColors,\n                    getGeneSet: getGeneSet,\n                    getPatientLayout: getPatientLayout,\n                    setColors: setColors,\n                    save: save\n                };\n            })(osApi);\n\n\n\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    'container': elChart,\n                    'style': [{\n                        'selector': 'core',\n                        'style': {\n                            'selection-box-color': '#039BE5',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        'selector': 'node',\n                        'style': {\n                            'background-color': \"#039BE5\",\n                            'display': \"data(display)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"telomere\"]',\n                        'style': {\n                            'background-color': \"#039BE5\",\n                            'border-color': \"#039BE5\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]:selected',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'border-color': \"#000\",\n                            'border-width': 5\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]',\n                        'style': {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"data(halign)\",\n                            'text-margin-x': \"data(padding)\",\n                            'font-size': '8px',\n                            'color': '#aaa',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'background-color': \"#fc8400\",\n                            'border-color': \"#000000\",\n                            'color': '#000'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"centromere\"]',\n                        'style': {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#039BE5\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"annotation-text\"]',\n                        'style': {\n                            'font-size': '50px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFFFFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFFFFF',\n                            'height': '50px',\n                            'width': '50px',\n                            'shape': 'round',\n                            'label': 'data(label)',\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: 0.05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#039BE5\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })();\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi, mpState) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n                vm.optGeneSets = [];\n                vm.optGeneSet = null;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout = null;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n                vm.searchCount = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.exeSearch = function() {\n                    var needle = vm.search.toUpperCase().trim();\n                    var count = 0;\n                    var doSearch = (needle.length > 0);\n                    cyChart.$('node').forEach(function(el) {\n                        var found = (doSearch) ? (el.id().toUpperCase().indexOf(needle) === 0) : false;\n                        if (found) count += 1;\n                        el[found ? \"select\" : \"deselect\"]();\n                    });\n                    vm.searchCount = \"(\" + count + \" found)\";\n                    $timeout(function() { vm.searchCount = \"\"; }, 3000, true);\n                };\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                };\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id;\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function() {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = mpState.getOptEdgeColors();\n\n\n                // Populate Dropdowns + Draw Chromosome\n                //hg19_geneset\n                $q.all([\n                    osApi.query(\"hg19_geneset\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(osApi.getDataSource().disease + \"_cluster\", {\n                        $fields: ['input', 'geneset', 'dataType', 'source', 'default']\n                    })\n\n                ]).then(function(results) {\n\n                    var layouts = results[1].data.map(function(v) {\n                        v.name = v.dataType + \" \" + v.input + \" \" + v.geneset;\n                        return v;\n                    }).sort(function(a, b) {\n                        var x = a.name.toLowerCase();\n                        var y = b.name.toLowerCase();\n                        return x < y ? -1 : x > y ? 1 : 0;\n                    });\n\n                    vm.optGeneSets = _.uniq(osApi.getDataSource().edges.map(function(e) { return { name: e.geneset }; }), function(item) { return item.name; });\n                    vm.optGeneSet = mpState.getGeneSet(vm.optGeneSets);\n                    vm.optPatientLayouts = layouts;\n                    var patientLayout = mpState.getPatientLayout(vm.optPatientLayouts);\n                    vm.optPatientLayout = angular.isDefined(patientLayout) ? patientLayout : layouts[0];\n\n                });\n\n\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                };\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi, mpState);\n\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50);\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function() {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([0.005, 20]).range([5, 1]);\n            var nodeScale = d3.scaleLog().domain([0.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([0.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([0.01, 2]);\n\n\n            var resizeNodesByType = function(type) {\n\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"' + type + '\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n\n\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < 0.375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"' + type + '\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n                cyChart.endBatch();\n            };\n\n            var resizeNodes = function() {\n                resizeNodesByType('patient');\n                resizeNodesByType('gene');\n            };\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length === 0) return;\n                    var items = data.map(function(item) {\n                        return this.getElementById(item);\n                    }, cyChart);\n                    try {\n                        cyChart.collection(items).remove();\n                    } catch (e) {}\n                };\n                cmd.patients_html = function() {\n\n                };\n                cmd.patients_resize = function() {\n\n                };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n                        } catch (e) {\n                            node.data({\n                                'weight': 10\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                    //Initial Node Selection & Color\n                    var cohort = osApi.getCohort();\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (this.indexOf(node.id()) != -1) node.select();\n\n                    }, cohort.sampleIds);\n                    cyChart.endBatch();\n                    vm.zoom.reset();\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n                    mpState.applyState(onPatientColorChange, cyChart);\n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text']\").remove();\n\n                    var posX = 100;\n                    var posY = 3000;\n                    var numMissing = 0;\n\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (data.hasOwnProperty(node.id())) {\n                            var pos = data[node.id()];\n                            node.data().position = { x: pos.x, y: pos.y };\n                            node.position(pos);\n                            node.style({ display: 'element' });\n                        } else {\n                            node.style({ display: 'none' });\n                            //node.position({ x: -10000, y: -10000 });\n                            // node.position({ x: posX, y: posY });\n                            // posX += 80;\n                            // if (posX > 3000) {\n                            //     posX = 100;\n                            //     posY += 80;\n                            // }\n                            // numMissing += 1;\n                        }\n                    });\n\n                    if (numMissing > 0) { // uncomment to show grid of missing\n                        // cyChart.add({\n                        //     group: \"nodes\",\n                        //     grabbable: false,\n                        //     locked: true,\n                        //     selectable: false,\n                        //     position: { x: 50, y: 2850 },\n                        //     data: {\n                        //         id: \"annotation\",\n                        //         color: \"rgb(0, 0, 0)\",\n                        //         display: \"element\",\n                        //         nodeType: \"annotation-text\",\n                        //         sizeEle: 800,\n                        //         weight: 0,\n                        //         sizeLbl: 500,\n                        //         degree: 0,\n                        //         sizeBdr: 50,\n                        //         label: \"The following \" + numMissing + \" samples lacked the requisite data to be clustered.\"\n                        //     }\n                        // });\n                    }\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n                        } catch (e) {\n                            node.data({\n                                'weight': 0\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        try {\n                            cyChart.add(data.edges);\n                        } catch (e) {}\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    // var edges = osApi.getDataSource().edges.filter(function(f) {\n                    //     return f.name == this.geneset;\n                    // }, {\n                    //     geneset: geneset\n                    // })[0];\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id;\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id;\n                            })\n                        },\n                        edges: {\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.geneset == this);\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show;\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                };\n            })(cyChart, vm);\n\n            vm.cmd = function() {};\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function(vm, $scope) {\n                var watches = 2;\n\n                var update = function() {\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n\n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize();\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length === 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var _stopLength = 0; // Hack - need to fix\n            var skipCohortRefresh = false;\n\n            function onCohortChange(cohort) {\n                if (cohort.sampleIds.length == _stopLength) return; // Preform more robust check\n                skipCohortRefresh = true;\n                _stopLength = cohort.sampleIds.length;\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (cohort.sampleIds.indexOf(node.id()) != -1) node.select();\n                });\n                cyChart.endBatch();\n            }\n            osApi.onCohortChange.add(onCohortChange);\n\n            function setPatientCohort() {\n                var cohort = cyChart.$('node[nodeType=\"patient\"]:selected');\n                if (cohort.length == _stopLength) return; // Preform more robust check\n                _stopLength = cohort.length;\n                if (!skipCohortRefresh)\n                    osApi.setCohort(\n                        cohort.map(function(p) {\n                            return p.data().id;\n                        }),\n                        \"Markers + Patients\",\n                        osApi.SAMPLE\n                    );\n                skipCohortRefresh = false;\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length === 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        };\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n                        };\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                if (colors === null) return;\n                mpState.setColors(colors);\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5');\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            };\n\n            osApi.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                mpState.save(vm, cyChart);\n                osApi.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLayoutPanel', layoutPanel);\n\n    /** @ngInject */\n    function layoutPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/layoutPanel/layoutPanel.html',\n            controller: LayoutPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LayoutPanelController(osApi, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v }; });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length !== 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n\n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osApi.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    });\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name === \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    });\n\n                    osApi.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length === 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status !== \"\"; }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (angular.isDefined(types.Removed) && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \"; });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (angular.isDefined(types.Converted) && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key]; }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i === 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\";\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color;\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            });\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            });\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osApi.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n\n            angular.element(\".marquee-x\").marquee({\n                particlesNumber: 79,\n                color: '#1396de',\n                particle: {\n                    speed: 39\n                }\n            });\n\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n\n            vm.getStarted = function() {\n                $state.go(\"datasource\");\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                { name: 'Blues', value: [\"#303f9f\", \"#03a9f4\"] },\n                { name: 'Black / Blue', value: [\"#000000\", \"#1d85cb\"] },\n                { name: 'Black / Red', value: [\"#000000\", \"#D32F2F\"] },\n                { name: 'Red / Yellow', value: [\"#D32F2F\", \"#FFEB3B\"] }\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{ name: 'None' }, { name: 'Row' }, { name: 'Column' }]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                { name: 'One', value: 1 },\n                { name: 'Two', value: 2 },\n                { name: 'Three', value: 3 },\n                { name: 'Four', value: 4 },\n                { name: 'Five', value: 5 },\n                { name: 'Six', value: 6 },\n                { name: 'Seven', value: 7 },\n                { name: 'Eight', value: 8 },\n                { name: 'Nine', value: 9 },\n                { name: 'Ten', value: 10 }\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            //var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            //var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            //var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n\n            // Load Inital Data\n            var args;\n            var data;\n\n\n            function axis(svg, data, width, height, x, y, rotated) {\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n\n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\", \"absolute\")\n                    .style(\"left\", x)\n                    .style(\"top\", y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width : height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n\n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d, i) { return yScale(i + .8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\", \"12px\")\n                    .text(function(d) { return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width, height] : [height, width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width, 0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l) {\n                    return {\n                        source: { x: l.source.x, y: l.source.data.height },\n                        target: { x: l.target.x, y: l.target.data.height },\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n\n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\", \"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\", \"#FFF\")\n\n                if (rotated) {\n                    var transform = \"rotate(90,\" + height / 2 + \",\" + height / 2 + \") translate(0,\" + (-width + height) + \")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n\n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d) {\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                            y(d.source.y) + \",\" + d.target.x + \" \" +\n                            y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d) {\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g: dendrG,\n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height, x, y) {\n\n\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\", x).style(\"top\", y).style(\"position\", \"absolute\");\n\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n\n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n\n                var cols = data.dim[0];\n                var rows = data.dim[1];\n\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n\n\n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend() {\n\n\n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    //var colBounds = \n                    d3.event.selection.map(function(v) { return this.invert(v[0], v[1]); }, xScale).map(Math.round);\n                    //var span = colBounds[1] - colBounds[0];\n                    //var start = colBounds[0];\n                    //var ids = data.cols.splice(start, span);\n\n                    var coords = d3.event.selection;\n                    //coords[0][0] = colBounds[0] * width;\n                    coords[0][1] = 0;\n                    //coords[1][0] = colBounds[1] * width;\n                    coords[1][1] = height;\n\n                    d3.select(this)\n                        .transition()\n                        .call(d3.event.target.move, coords);\n\n\n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n\n                var boxW = xScale(1) - grid;\n                var boxH = yScale(1) - grid;\n\n                var boxes = map.selectAll('rect').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .attr(\"class\", \"box\")\n                    .attr(\"colIndex\", function(d, i) { return i % cols; })\n                    .attr(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(i % rows); })\n                    .attr(\"width\", boxW)\n                    .attr(\"height\", boxH)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data.data,\n                    cols: cols,\n                    rows: rows,\n                    boxW: boxW,\n                    boxH: boxH\n                }\n            }\n\n            function zoom() {\n\n                /*\n                                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                                colDendObj.g.call(xZoomBehavior);\n                                rowDendObj.g.call(yZoomBehavior);\n                                xZoomBehavior.on('zoom', function() {\n\n                                    var map = colmapObj;\n                                    var mapX = d3.event.transform.rescaleY(map.scaleX);\n\n                                    var boxW = map.scaleX(1);\n\n                                    map.g.selectAll('.box').data(map.data)\n                                        .attr(\"x\", function(d, i) { return mapX(i % map.cols); })\n                                        .attr(\"y\", function(d, i) { return map.scaleY(i % map.rows); })\n                                        .attr(\"width\", boxW)\n\n                                    var col = colDendObj;\n                                    var colY = col.scaleY;\n                                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                                    \n                                    col.g.selectAll(\"polyline\")\n                                        .data(col.data)\n                                        .attr(\"points\", function(d){\n                                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                                        });\n                                });\n                                yZoomBehavior.on('zoom', function() {\n\n                                    var row = rowDendObj;\n                                    var rowY = row.scaleY;\n                                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                                    \n                                    var map = colmapObj;\n                                    var mapY = d3.event.transform.rescaleX(map.scaleY);\n\n                                    var boxW = scaleX(1);\n                                    var boxH = yScale(1)-grid;\n\n                                    map.g.selectAll('.box').data(map.data)\n                                        .attr(\"x\", function(d, i) { return map.scaleY(i % map.cols); })\n                                        .attr(\"y\", function(d, i) { return mapY(i % map.rows); })\n                                        .attr(\"width\", boxW)\n                                    \n                                    row.g.selectAll(\"polyline\")\n                                        .data(row.data)\n                                        .attr(\"points\", function(d){\n                                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                                        });\n                                });\n                */\n            }\n\n            osApi.setBusy(true);\n            vm.loadData = function() {\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {\n                        data: response.data.map(function(v) {\n                            Object.keys(v.patients).forEach(function(key) {\n                                if (this[key] == null) this[key] = 0;\n                            }, v.patients);\n                            return v.patients;\n                        })\n                    };\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function() {\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v) {\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function() {\n\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                //colmapObj = \n                heatmap(colmap, data.matrix,\n                    hmWidth,\n                    hmHeight,\n                    (vm.rowDendrogram ? 80 : 0) + layout.left + 20,\n                    (vm.colDendrogram ? 80 : 0));\n\n                //rowDendObj = \n                dendrogram(rowDend, data.rows,\n                    80, hmHeight,\n                    layout.left + 20, (vm.colDendrogram ? 80 : 0), false);\n\n                //colDendObj = \n                dendrogram(colDend, data.cols,\n                    hmWidth, 80,\n                    (vm.rowDendrogram ? 80 : 0) + layout.left + 20, 0, true);\n\n                axis(xaxis,\n                    data.matrix.rows,\n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0) + layout.left + 20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0) + layout.left + 20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n\n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw, 300));\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osAuth, $stateParams, $state, $window) {\n\n            // View Model\n            var vm = this;\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.datasources = [];\n            vm.tools = [];\n            vm.cohorts = [];\n\n            // State Management\n            osApi.onNavChange.add(function(state) {\n                switch (state) {\n                    case \"TOOLS\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                    case \"TOOL\":\n                        vm.showTools = true;\n                        vm.showDatasets = true;\n                        vm.datasources = osApi.getDataSources();\n                        vm.tools = osApi.getTools();\n                        vm.cohorts = osApi.getCohorts();\n                        break;\n                    default:\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                }\n            });\n\n            // Cohort Commands\n            vm.addPatientCohort = function() {\n                osApi.saveCohort();\n            };\n\n            // State Command\n            vm.setPatientCohort = function(cohort) {\n                osApi.setCohort(cohort);\n            };\n\n            // Import Cohorts Command \n            vm.importIds = \"\";\n            vm.importCohort = function() {\n                var ids = vm.importIds.split(\",\").map(function(v) { return v.trim(); });\n                osApi.importIds(ids, vm.importName);\n                vm.importIds = \"\";\n                vm.importName = \"\";\n                vm.showImport = false;\n            };\n            vm.logout = function() {\n\n\n                localStorage.clear();\n                //$window.reload(true);\n                $window.location.href = \"#\";\n                //$window.reload();\n            };\n            vm.showHelp = function() {\n                $window.open(\"\\\\documentation\" + $state.current.help.toString());\n            };\n\n            // Update Cohorts When Datasource Changes\n            osApi.onCohortsChange.add(function() {\n                vm.cohorts = osApi.getCohorts();\n            });\n\n\n            // Load Dataset Command - Navigation\n            vm.loadDataset = function(dataset) {\n                angular.element('.navbar-collapse').collapse('hide');\n                $state.go($state.current.url.split(\"/\")[1], { datasource: dataset });\n\n            };\n\n            // Load Tool Command - Navigation\n            vm.loadTool = function(tool) {\n                $state.go(tool, { datasource: osApi.getDataSource().disease });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, { datasource: datasource.disease });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n\n            function zoomed() {\n                elPlots.forEach(function(plot) {\n                    plot.attr(\"transform\", d3.event.transform);\n                });\n            }\n\n            var layout = osApi.getLayout();\n            var width = ($window.innerWidth - layout.left - layout.right);\n            var height = ($window.innerHeight - 120);\n            var zoom = d3.zoom()\n                .scaleExtent([1, 40])\n                .translateExtent([\n                    [-100, -100],\n                    [width + 90, height + 100]\n                ])\n                .on(\"zoom\", zoomed);\n\n            // Cohort\n            var cohort = osApi.getCohort();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n            // Datasource\n            var datasource = osApi.getDataSource();\n\n            // View Model\n            var vm = this;\n            vm.optionColors = [];\n            vm.optionLayouts = [];\n\n            // State\n            var clusterIndexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n            var clusterColors = [];\n            var clusterLayouts = [];\n\n            // Elements\n            var elChart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n            var elBrushes = clusterIndexes.map(function() { return d3.brush(); });\n            elChart.call(zoom);\n            var elPlots = clusterIndexes.map(function() { return elChart.append(\"svg:g\"); });\n            var elHitareas = elPlots.map(function(elPlot) { return elPlot.append(\"svg:rect\"); });\n            elHitareas.forEach(function(hitArea) {\n                hitArea.attr(\"fill\", \"black\");\n                hitArea.attr(\"opacity\", 0);\n            });\n            var elLines = [0, 1, 2, 3].map(function() { return elChart.append(\"svg:line\"); });\n            elLines.forEach(function(line) {\n                line.attr(\"stroke\", \"#cbcbcb\");\n                line.attr(\"stroke-width\", \"1px\");\n            });\n\n            // State Management\n            var setSelected = function() {\n                var selectedIds = cohort.sampleIds;\n                clusterIndexes.forEach(function(clusterIndex) {\n                    elPlots[clusterIndex].selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                });\n            };\n            // var saveState = function() {\n\n            // }\n            var loadState = function() {\n                vm.optionLayouts = datasource.calculated.filter(function(v) { return (v.type === \"pcaScores\" || v.type === \"mds\"); });\n                return new Promise(function(resolve) {\n                    osApi.query('brain_color_tcga_import').then(function(v) {\n\n                        // This piece of magic creates an object who's key is a sampleID and value is a color\n                        vm.optionColors = v.data.map(function(colorOption) {\n                            colorOption.lookup = colorOption.data.map(function(c) {\n                                var colorMap = c.values.reduce(function(p, c) {\n                                    p[c] = p.color;\n                                    return p;\n                                }, { color: (c.color === null) ? \"black\" : c.color });\n                                delete colorMap.color;\n                                //delete c.values;\n                                return colorMap;\n                            }).reduce(function(p, c) {\n                                _.extend(p, c);\n                                return p;\n                            }, {});\n                            return colorOption;\n                        });\n\n                        // Set Default Cluster Colors + layouts\n                        clusterLayouts = vm.optionLayouts.splice(0, 9).map(function(v) { return { name: v.collection }; });\n                        clusterColors = vm.optionColors.splice(0, 9);\n                        resolve();\n                    });\n                });\n            };\n\n            // Brushes\n            var brushStart = function() {\n                if (d3.event.selection === null) return;\n                var target = d3.event.target;\n                elBrushes\n                    .filter(function(b) {\n                        return b.brush !== target;\n                    })\n                    .forEach(function(b) {\n                        elPlots[b.index].call(b.move, null);\n                    });\n            };\n            var brushEnd = function() {\n\n                if (d3.event.selection === null) {\n\n                    elChart.selectAll(\"circle\")\n                        .classed(\"pca-node-selected\", false);\n                    return;\n                }\n                var target = d3.event.target;\n                var bv = d3.event.selection;\n                var xScale = target.xScale;\n                var yScale = target.yScale;\n                var xMin = xScale.invert(bv[0][0]);\n                var xMax = xScale.invert(bv[1][0]);\n                var yMin = yScale.invert(bv[0][1]);\n                var yMax = yScale.invert(bv[1][1]);\n\n                elChart.selectAll(\"circle\")\n                    .classed(\"pca-node-selected\", function(v) {\n                        return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                        //return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                // Convert To PIDs\n                // var sids = data.filter(function(v) {\n                //     return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                // }).map(function(v) { return v.id; });\n\n                // elPlots[target.index].call(elBrushes[target.index].move, null);\n\n            };\n\n            // Layout Methods\n            var loadLayout = function(clusterIndex) {\n                return new Promise(function(resolve) {\n\n                    var collection = clusterLayouts[clusterIndex].name;\n\n                    osApi.query(collection).then(function(result) {\n\n                        var data = result.data[0].data;\n                        result.data[0].domain = Object.keys(data).reduce(function(p, c) {\n                            var datum = data[c];\n                            if (isNaN(datum.x) || isNaN(datum.y)) return p;\n                            p.pc1[0] = Math.min(p.pc1[0], datum.x);\n                            p.pc1[1] = Math.max(p.pc1[1], datum.x);\n                            p.pc2[0] = Math.min(p.pc2[0], datum.y);\n                            p.pc2[1] = Math.max(p.pc2[1], datum.y);\n                            return p;\n                        }, { pc1: [Infinity, -Infinity], pc2: [Infinity, -Infinity] });\n                        result.data[0].bind = Object.keys(data).map(function(v) {\n                            var rv = data[v];\n                            rv.id = v;\n                            return rv;\n                        });\n                        clusterLayouts[clusterIndex].data = result.data[0];\n                        resolve(result.data[0]);\n                    });\n                });\n            };\n\n            loadState().then(function() {\n                Promise.all(\n                    clusterIndexes.map(function(clusterIndex) { return loadLayout(clusterIndex); })\n                ).then(function() {\n                    draw();\n                    setSelected();\n                });\n            });\n\n            var draw = function() {\n                drawLines();\n                clusterIndexes.forEach(drawCluster);\n            };\n\n            var drawLines = function() {\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elLines[0].attr(\"x1\", 0).attr(\"y1\", height * (1 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 1 / 3));\n                elLines[1].attr(\"x1\", 0).attr(\"y1\", height * (2 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 2 / 3));\n                elLines[2].attr(\"x1\", width * (1 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (1 / 3)).attr(\"y2\", height);\n                elLines[3].attr(\"x1\", width * (2 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (2 / 3)).attr(\"y2\", height);\n            };\n\n            var drawCluster = function(clusterIndex) {\n\n                // Inefficent\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elChart.attr(\"width\", width).attr(\"height\", height);\n                var boxWidth = Math.floor(width / 3);\n                var boxHeight = Math.floor(height / 3);\n\n                // Resize Hitarea\n                var elHitarea = elHitareas[clusterIndex];\n                elHitarea\n                    .attr(\"width\", boxWidth)\n                    .attr(\"height\", boxHeight);\n\n                // Figure Out Scale Hitarea\n                var data = clusterLayouts[clusterIndex].data;\n                var xScale = d3.scaleLinear().domain(data.domain.pc1).range([5, Math.min(boxWidth) - 5]);\n                var yScale = d3.scaleLinear().domain(data.domain.pc2).range([5, Math.min(boxHeight) - 5]);\n                var elPlot = elPlots[clusterIndex];\n\n\n                var brush = elBrushes[clusterIndex];\n                brush.on(\"start\", brushStart);\n                brush.on(\"end\", brushEnd);\n                brush.extent([\n                    [0, 0],\n                    [boxWidth, boxHeight]\n                ]);\n\n                elPlot.call(brush);\n                brush.index = clusterIndex;\n                brush.xScale = xScale;\n                brush.yScale = yScale;\n                elPlot.attr(\"transform\", \"translate(\" + ((clusterIndex % 3) * boxWidth) + \",\" + (parseInt(clusterIndex / 3) * boxHeight) + \")\");\n                var circles = elPlot.selectAll(\"circle\")\n                    .data(data.bind);\n\n\n                circles.enter()\n                    .append(\"svg:circle\")\n                    .attr(\"cx\", 0).attr(\"cy\", 0)\n                    .attr(\"class\", \"point\")\n                    .attr(\"r\", 1)\n                    .style(\"fill\", function(d) { return clusterColors[clusterIndex].lookup[d.id]; })\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n                circles\n                    .transition()\n                    .duration(750)\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n\n            };\n\n            // // Listen For Resize\n            osApi.onResize.add(draw);\n            // angular.element($window).bind('resize',\n            //     _.debounce(resize, 300)\n            // );\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v }; });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length !== 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                var regx = /(\\d+%)/i;\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key]\n                            .filter(function(v) {\n                                var result = v.name.match(regx);\n                                if (result === null) return true;\n                                // 30% Threashold\n                                if (parseInt(result[0]) > 10) return true;\n                            })\n                            .sort(function(a, b) {\n                                if (a.name > b.name) return 1;\n                                if (a.name < b.name) return -1;\n                                return 0;\n                            })\n                    };\n                }, data);\n\n            });\n            vm.resetColor = function() {\n                osApi.setPatientColor({\n                    \"dataset\": osApi.getDataSource().disease,\n                    \"type\": \"color\",\n                    \"name\": \"None\",\n                    \"data\": [],\n                    show: true\n                });\n            };\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osApi.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    });\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name === \"\" || name == \"null\" || angular.isUndefined(name)) {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    });\n\n                    // debugger;\n                    osApi.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length === 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status !== \"\"; }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (angular.isDefined(types.Removed) && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \"; });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (angular.isDefined(types.Converted) && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key]; }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i === 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\";\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color;\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            });\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            });\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osApi.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, 0.1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], 0.08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (0.1 + Math.random()),\n                        y = 2 * Math.random() - 0.5,\n                        z = 10 / (0.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope: {},\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, $state, $scope, $sce, $timeout, $rootScope, $filter, d3) {\n\n\n            // View Model\n            var vm = this;\n            vm.cohorts = [];\n            vm.cohort = null;\n            vm.cohortFeatures = [];\n            vm.cohortFeature = null;\n            vm.cohortSummary = \"\";\n\n            // Cohort Service Integration\n            osApi.onCohortsChange.add(function(cohorts) {\n                vm.cohorts = cohorts;\n                updateSurvival(cohorts);\n            });\n            osApi.onCohortChange.add(function(cohort) {\n\n                var dataInfo = osApi.getCohortDatasetInfo();\n                var summary =\n                    $filter('number')(dataInfo.numSamples) + \" Samples In Dataset<br /> \" +\n                    $filter('number')(dataInfo.numPatients) + \" Patients In Dataset<br /> \" +\n                    $filter('number')(cohort.numSamples) + \" Samples In Current Cohort<br /> \" +\n                    $filter('number')(cohort.numPatients) + \" Patients In Current Cohort<br />\" +\n                    $filter('number')(cohort.numClinical) + \" Patients with Clinical Data<br />\" +\n                    $filter('number')(cohort.survival.data.tte.length) + \" Patients with Survival Outcome<br />\";\n                //$filter('number')(toolInfo.numSamplesVisible) + \" Samples In Current Cohort Showing<br />\" +\n                //$filter('number')(toolInfo.numPatients) + \" Patients In Current Cohort Showing<br />\";\n\n                vm.cohortSummary = $sce.trustAsHtml(summary);\n\n                if (angular.isUndefined(cohort)) return;\n                $timeout(function() {\n                    var featureIdx = (vm.cohortFeature !== null) ? vm.cohortFeatures.indexOf(vm.cohortFeature) : 0;\n                    vm.cohort = cohort;\n                    vm.cohortFeatures = cohort.histogram.features;\n                    vm.cohortFeature = cohort.histogram.features[featureIdx];\n                });\n                updateSurvival(vm.cohorts.concat([cohort]));\n            });\n\n            // Cohort edit\n            vm.setCohort = function(cohort) {\n                if (angular.isString(cohort)) {\n                    osApi.setCohort([], osApi.ALL, osApi.SAMPLE);\n                } else {\n                    osApi.setCohort(cohort);\n                }\n            };\n\n            vm.updateCohort = function() {\n                if (vm.cohort.type == \"UNSAVED\") {\n                    osApi.saveCohort(vm.cohort);\n                } else {\n                    osApi.deleteCohort(vm.cohort);\n                }\n            };\n\n            // Tray Expand / Collapse\n            var elTray = angular.element(\".cohort-menu\");\n            var isLocked = true;\n            var mouseOver = function() { elTray.removeClass(\"tray-collapsed-left\"); };\n            var mouseOut = function() { elTray.addClass(\"tray-collapsed-left\"); };\n            vm.toggle = function() {\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                }\n                osApi.onResize.dispatch();\n            };\n\n            // Histogram \n            var histSvg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 260)\n                .attr(\"height\", 150)\n                .append(\"g\");\n            var histSingleValueLabel = angular.element(\"#cohortmenu-single-value\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return \"Range: \" + d.label + \"<br>Count: \" + d.value + \" of \" + vm.cohortFeature.data.count + \"<br>Percent: \" + $filter('number')((d.value / vm.cohortFeature.data.count) * 100, 2) + \"%\";\n            });\n            histSvg.call(elTip);\n            $scope.$watch('vm.cohortFeature', function() {\n\n                // Histogram\n                if (vm.cohortFeature === null) return;\n                var data = vm.cohortFeature.data;\n                if (data.type == \"factor\") {\n                    if (data.hist.length == 1) {\n                        histSingleValueLabel.text(data.hist[0].label).css(\"display\", \"block\").removeClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                } else {\n                    if (data.min == data.max) {\n                        histSingleValueLabel.text(data.min).css(\"display\", \"block\").addClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                }\n                histSingleValueLabel.text('').css(\"display\", \"none\");\n                histSvg.classed(\"cohort-chart-hide\", false);\n                var barWidth = Math.floor((250 - data.bins) / data.bins);\n\n\n                if (data.histRange[0] > 0) data.histRange[0] -= 2;\n                var yScale = d3.scaleLinear()\n                    .domain([0, data.histRange[1]])\n                    .range([0, 135]);\n                var bars = histSvg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n                bars.enter()\n                    .append(\"rect\")\n                    .attr(\"class\", \"cohort-menu-chart-bar\")\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                bars\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth);\n                bars.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n                var labels = histSvg\n                    .selectAll(\"text\")\n                    .data(data.hist);\n                labels.enter()\n                    .append(\"text\")\n                    .attr(\"x\", function(d, i) { return ((4 + (barWidth + 1) * i) + (barWidth * 0.5)) + 1; })\n                    .attr(\"y\", function(d) { return 145 - yScale(d.value); })\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .attr(\"font-size\", \"8px\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .text(function(d) { return d.label; });\n                labels\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return (((barWidth + 1) * i) + (barWidth * 0.5)) + 5; })\n                    .attr(\"y\", function(d) {\n                        var y = 145 - yScale(d.value);\n                        if (y < 0) y = 20;\n                        return y;\n                    })\n                    .text(function(d) { return d.label; });\n                labels.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n\n            });\n\n\n            var formatDays = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Mos\";\n                return Math.round((d / 365) * 10) / 10 + \" Yrs\";\n            };\n\n\n\n            // Survival\n            var surSvg = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            var surLines = surSvg.append(\"g\")\n                .selectAll(\"cohortmenu-survival-percent-line\")\n                .data([0.25, 0.5, 0.75]);\n\n            surLines.enter()\n                .append(\"line\").attr(\"class\", \"cohortmenu-survival-percent-line\")\n                .attr(\"stroke-width\", 1)\n                .attr(\"stroke\", \"#EAEAEA\")\n                .attr(\"x1\", 0).attr(\"x2\", 250).attr(\"y1\", function(d) {\n                    return (d * 140);\n                }).attr(\"y2\", function(d) {\n                    return (d * 140);\n                });\n\n            var surXAxis = surSvg.append(\"g\").attr(\"class\", \"axisCohort\");\n            var surLayout = {\n                width: 250,\n                height: 170,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(4).tickFormat(formatDays)\n            };\n            surSvg.attr(\"width\", '100%').attr(\"height\", surLayout.height);\n\n            var updateSurvival = function(cohorts) {\n\n                var xDomain = cohorts.reduce(function(p, c) {\n                    p[0] = Math.min(p[0], c.survival.compute[0].t);\n                    p[1] = Math.max(p[1], c.survival.compute[c.survival.compute.length - 1].t);\n                    return p;\n                }, [Infinity, -Infinity]);\n\n                surLayout.xScale = d3.scaleLinear()\n                    .domain(xDomain)\n                    .range([0, surLayout.width - 1]);\n\n                surLayout.yScale = d3.scaleLinear()\n                    .domain([0, 1])\n                    .range([surLayout.height - 30, 0]);\n\n                var lineFunction = d3.line()\n                    .curve(d3.curveStepBefore)\n                    .x(function(d) { return Math.round(surLayout.xScale(d.t)); })\n                    .y(function(d) { return Math.round(surLayout.yScale(d.s)); });\n\n                surLayout.xAxis.scale(surLayout.xScale);\n                surXAxis.attr(\"transform\", \"translate(0, \" + (surLayout.yScale(0)) + \")\")\n                    .call(surLayout.xAxis)\n                    .selectAll(\"text\")\n                    .style(\"text-anchor\", function(d, i) { return (i === 0) ? \"start\" : \"center\"; });\n\n                surSvg.selectAll(\".survival-line\").remove();\n\n                for (var i = 0; i < cohorts.length; i++) {\n                    var cohort = cohorts[i];\n                    surSvg.append(\"path\")\n                        .datum(cohort.survival.compute)\n                        .attr(\"class\", \"survival-line\")\n                        .style(\"stroke\", cohort.color)\n                        .attr(\"d\", lineFunction);\n                }\n\n            };\n\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($window, $exceptionHandler) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n            if (!error) {\n                error = new Error(message);\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = (columnNumber || 0);\n            }\n            $exceptionHandler(error);\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        // Resolutions\n        var resolveDatasource = function(osApi) {\n            osApi.setBusy(true);\n            return new Promise(function(resolve) {\n                osApi.init().then(function() {\n                    resolve();\n                    angular.element(\"#main\").removeClass(\"container-main-full\");\n                    angular.element(\"#header\").css({ display: \"block\" });\n                    angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                    osApi.onNavChange.dispatch(\"\");\n                });\n            });\n        };\n\n        var resolveTools = function(osApi, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveDatasource(osApi).then(function() {\n                    osApi.setDataSource($stateParams.datasource).then(function() {\n                        resolve();\n                        angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                        osApi.onNavChange.dispatch(\"TOOLS\");\n                    });\n\n                });\n            });\n        };\n\n\n        var prevDatasource = \"\";\n        var resolveTool = function(osApi, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveTools(osApi, $stateParams).then(function() {\n                    if (osApi.getCohort() === null || $stateParams.datasource !== prevDatasource) {\n                        osApi.setDataSource($stateParams.datasource).then(function() {\n                            resolve();\n                            angular.element(\"#cohortMenu\").css({ display: \"block\" });\n                            osApi.onNavChange.dispatch(\"TOOL\");\n                        });\n\n                    } else {\n                        angular.element(\"#cohortMenu\").css({ display: \"block\" });\n                        osApi.onNavChange.dispatch(\"TOOL\");\n                        resolve();\n                    }\n                    prevDatasource = $stateParams.datasource;\n\n                });\n            });\n\n        };\n\n        var resolveLanding = function(osApi, $timeout) {\n            $timeout(function() {\n                angular.element(\"#main\").addClass(\"container-main-full\");\n                angular.element(\"#header\").css({ display: \"none\" });\n                angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                osApi.onNavChange.dispatch(\"\");\n            }, 200);\n        };\n\n\n        // States\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveLanding: resolveLanding\n                }\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveDatasource: resolveDatasource\n                }\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTools: resolveTools\n                }\n            })\n            .state('scatter', {\n                url: '/scatter/{datasource}',\n                template: '<os-scatter>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('spreadsheet', {\n                url: '/spreadsheet/{datasource}',\n                template: '<os-spreadsheet>',\n                datasource: true,\n                help: \"/spreadsheet.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                datasource: true,\n                help: \"/pca.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('comparecluster', {\n                url: '/cc/{datasource}',\n                template: '<os-compare-cluster>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                datasource: true,\n                help: \"/markerspatients.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                datasource: true,\n                help: \"/pathways.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                datasource: true,\n                help: \"/timelines.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                datasource: true,\n                help: \"/survival.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n/* global d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, jStat:false, THREE:false*, saveAs:false, TextEncoder:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('THREE', THREE)\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('jStat', jStat)\n        .constant('localStorage', localStorage)\n        .constant('saveAs', saveAs)\n        .constant('TextEncoder', TextEncoder)\n        .constant('_', _);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n\n})();\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div id=\\\"cohortMenu\\\" style=\\\"display:none\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label>Selected Cohort</label><div class=\\\"input-group\\\"><input ng-readonly=\\\"vm.cohort.type==\\'ALL\\'\\\" style=\\\"background:#FFF;border-left-width:10px;border-left-color:{{vm.cohort.color}};\\\" class=\\\"form-control\\\" aria-label=\\\"Text input with segmented button dropdown\\\" ng-model=\\\"vm.cohort.name\\\" onfocus=\\\"this.select();\\\"><div class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" tooltip=\\\"{{vm.cohort.type == \\'UNSAVED\\' ? \\'Save Cohort\\' : \\'Delete Cohort\\'}}\\\" tooltip-placement=\\\"left\\\" ng-if=\\\"vm.cohort.type!=\\'ALL\\'\\\" ng-click=\\\"vm.updateCohort()\\\"><span class=\\\"fa {{vm.cohort.type == \\'UNSAVED\\' ? \\'fa-plus\\' : \\'fa-times\\'}}\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" tooltip=\\\"Change Cohort\\\" tooltip-placement=\\\"left\\\"><span class=\\\"caret\\\"></span> <span class=\\\"sr-only\\\">Toggle Dropdown</span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" style=\\\"width:260px;padding:0px;\\\"><li class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"height:25px;border-color:{{item.color}};width:100%;padding-left:10px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-histogram\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Clinical Histogram <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-histogram\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;\\\"><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"><div id=\\\"cohortmenu-single-value\\\" class=\\\"cohortmenu-single-value\\\"></div></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;border:0px solid #eaeaea;border-top-width:1px;\\\">{{vm.cohortFeature.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" style=\\\"width:260px;padding:0px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.cohortFeatures\\\" ng-click=\\\"vm.cohortFeature=item\\\">{{item.label}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-survival-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Survival Curve <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-survival-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\"><div id=\\\"cohortmenu-survival\\\"></div><label>Cohorts</label><div ng-repeat=\\\"item in vm.cohorts\\\" class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"border-color:{{item.color}};padding-left:10px;\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</div><label>Selected Cohort</label><div class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"height:25px;border-color:{{vm.cohort.color}};padding-left:10px;\\\">{{vm.cohort.name}} ({{vm.cohort.type}})</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-summary-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Cohort Summary <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-summary-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\" ng-bind-html=\\\"vm.cohortSummary\\\"></div></div><div id=\\\"cohortmenu-legand\\\"></div></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"left\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.resetColor()\\\">Reset Color Options</button></div></div><div ng-repeat=\\\"item in vm.optPatientColors\\\"><br><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\">{{item.name}}</div></div><div class=\\\"row\\\"><div class=\\\"col-xs-4\\\" ng-repeat=\\\"color in item.values\\\"><a class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></div></div></div></div>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div id=\\\"header\\\" class=\\\"header\\\" style=\\\"display:none\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#header-navbar\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"position:relative;\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo-white.png\\\" class=\\\"header-logo-img\\\"> <span class=\\\"header-logo-text\\\">Oncoscape</span></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"header-navbar\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Tools</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:80vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.desc}}</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Datasets</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:88vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.datasources\\\" style=\\\"padding-bottom:10px\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.source}} | 11-17-2016</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click create cohort.<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient or sample IDs below and click import<br><input ng-model=\\\"vm.importName\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"Enter Cohort Name\\\"> <input ng-model=\\\"vm.importIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-9\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right header-cohort-btn\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.numPatients}} patients<br>{{item.numSamples}} samples<br>{{item.numClinical}} clinical records</p></div></div></div></div></li><li><a href=\\\"\\\" ng-click=\\\"vm.showHelp()\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"http://resources.sttrcancer.org/oncoscape-contact\\\" class=\\\"header-link\\\"><span class=\\\"fa fa-comments\\\"></span>Feedback</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logout()\\\" class=\\\"header-link\\\"><span class=\\\"fa fa-power-off\\\"></span>Logout</a></li></ul></div></div></nav></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><br><p style=\\\"float:right;padding-top:22px;\\\"><a href=\\\"https://cancergenome.nih.gov/publications/publicationguidelines\\\" target=\\\"_blank\\\">Publication Guidelines</a></p><h1>Disease Datasets</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{dataset.img}}\\\"><p class=\\\"datasource-h1\\\">{{dataset.name}}</p><p class=\\\"datasource-h2\\\">{{dataset.source}} | 11-17-2016</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/help/help.html\",\"<div class=\\\"help\\\"><iframe src=\\\"http://resources.sttrcancer.org/pca?embed=true\\\"></iframe></div>\");\n$templateCache.put(\"app/components/layoutpanel/layoutpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing\\\"><header class=\\\"landing container\\\"><div class=\\\"row marquee marquee-bg\\\"><div class=\\\"col-sm-12\\\"><div class=\\\"marquee-x\\\"></div><div class=\\\"header-content\\\" style=\\\"text-align:center;z-index: 999;pointer-events:none;\\\"><h1 class=\\\"landing-h1\\\">Oncoscape</h1><p class=\\\"landing-h2\\\">Cancer Explorer</p><span class=\\\"landing-buttons\\\" style=\\\"pointer-events:all;\\\"><a class=\\\"btn btn-outline btn-xl page-scroll\\\" ng-click=\\\"vm.getStarted()\\\">Explore</a> <a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"/documentation/\\\" target=\\\"_blank\\\">Learn More</a></span></div></div></div></header><div class=\\\"container-fluid\\\" style=\\\"background-color:#000; color:#FFF;padding-top:150px;padding-bottom:150px;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-7\\\"><h1 style=\\\"font-size:50px;pointer-events:none;\\\">Our Mission</h1><p style=\\\"font-size:30px;line-height:50px;\\\">Empower researchers to discover novel patterns and relationships between clinical and molecular factors.</p><a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">Publishing Guidelines</a></div><div class=\\\"hidden-xs col-sm-5\\\" style=\\\"text-align:center\\\"><img src=\\\"assets/images/thumb.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\" style=\\\"display:inline-block;height:100%;\\\"></div></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><div class=\\\"login-body\\\"><h3 class=\\\"login-header\\\">Sign in</h3><div ng-repeat=\\\"item in vm.networks\\\" class=\\\"login-option\\\" ng-click=\\\"vm.login(item);\\\"><span class=\\\"{{item.icon}} login-icon\\\"></span> {{item.name}}</div></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\" tooltip=\\\"Toggle Visibility\\\" tooltip-placement=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button tooltip=\\\"Deselect\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#039BE5;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button tooltip=\\\"Select\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#039BE5;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#gene-sets\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Search {{vm.searchCount}}</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" ng-enter=\\\"vm.exeSearch()\\\" placeholder=\\\"\\\"><div class=\\\"input-group-addon btn-help-icon\\\" ng-click=\\\"vm.exeSearch()\\\">Go</div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Fit</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> &mdash; <span class=\\\"h3-tool\\\">{{vm.optPatientLayout.name}}</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"legend\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><table class=\\\"tbl\\\"><thead><tr><th>Method</th><th>Gene Set</th><th>Input Data</th><th>Data Source</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\"><td>{{item.dataType}}</td><td>{{item.geneset}}</td><td>{{item.input}}</td><td>{{item.source}}</td></tr></tbody></table></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#gene-sets\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#data-content\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Type</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button style=\\\"max-width:220px\\\" class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#cluster\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button tooltip=\\\"Deselect\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button tooltip=\\\"Select\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Variance Explained</label><div><os-tray-piechart chart-data1=\\\"vm.pc1\\\" chart-data2=\\\"vm.pc2\\\" chart-height=\\\"130\\\"></os-tray-piechart><div class=\\\"pca-pc1-label\\\"><span>PC1</span><br>{{vm.pc1[0].value}}%</div><div class=\\\"pca-pc2-label\\\"><span>PC2</span><br>{{vm.pc2[0].value}}%</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Loadings</label><os-tray-barchart chart-data=\\\"vm.loadings\\\" chart-height=\\\"100\\\"></os-tray-barchart></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/scatter/scatter.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Cluster</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" style=\\\"max-width: 220px;\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.layout.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.layouts\\\" ng-click=\\\"vm.setLayout(item)\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#gene-sets\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>3D View</label><div style=\\\"background-color:#FFF; border: 1px solid #EAEAEA;cursor: hand;position: relative;width:260px;height:260px;\\\"><div id=\\\"scatter-chart\\\" class=\\\"scatter\\\"></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Variance Explained</label><div><os-tray-piechart chart-data1=\\\"vm.pc1\\\" chart-data2=\\\"vm.pc2\\\" chart-height=\\\"130\\\"></os-tray-piechart><div class=\\\"pca-pc1-label\\\"><span>PC1</span><br>{{vm.pc1[0].value}}%</div><div class=\\\"pca-pc2-label\\\"><span>PC2</span><br>{{vm.pc2[0].value}}%</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Loadings</label><os-tray-barchart chart-data=\\\"vm.loadings\\\" chart-height=\\\"100\\\"></os-tray-barchart></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">3D Scatter Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"scatter-select-controller\\\" style=\\\"position:absolute;width:100%;height:100%;\\\"></div><div id=\\\"scatter-axis-controller\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.cohortsLegend.length>0\\\"><label>Cohorts</label><div ng-repeat=\\\"cohort in vm.cohortsLegend track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><span>{{cohort.name}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle(cohort)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Cohort</label><div class=\\\"legend-bar\\\" style=\\\"border-color:{{vm.cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><span>{{vm.cohort.name}} (selected)</span></div><br><label>P-Values for Selected Cohort</label><div class=\\\"tray-chart\\\"><div ng-repeat=\\\"p in vm.pValues track by $index\\\" style=\\\"height:25px;line-height:25px;margin-bottom:1px;\\\">&nbsp; {{p.p}}<div ng-repeat=\\\"c in p.c track by $index\\\" style=\\\"background-color:{{c}};width:10px;height:25px;margin-right:1px;display:inline-block;float:left;\\\"></div></div></div></div></div></section></os-tray><section class=\\\"tray-content-block survival\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.displayMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.displayModes\\\" ng-click=\\\"vm.displayMode=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4\\\" ng-click=\\\"vm.explore(tool.route)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\"><p class=\\\"datasource-h1\\\" style=\\\"padding-top:10px;\\\">{{tool.name}}</p><p class=\\\"datasource-h2\\\">{{tool.desc}}</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/spreadsheet/spreadsheet.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a style=\\\"color:#000;\\\" href=\\\"http://resources.sttrcancer.org/api/#clinical-data\\\" target=\\\"_blank\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>CSV Export</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'selected\\')\\\">Selected</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'all\\')\\\">All</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Spreadsheet</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <button ng-click=\\\"vm.sortSelected()\\\" class=\\\"btn btn-default\\\" style=\\\"position:absolute; left: 310px;top: 30px;\\\" tooltip=\\\"Move Selected Rows To The Top Of The Grid\\\" tooltip-placement=\\\"right\\\">Selected On Top</button> <button ng-click=\\\"vm.showPanelColumns=true\\\" class=\\\"btn btn-default\\\" style=\\\"position:absolute; right: 310px;top: 30px;\\\" tooltip=\\\"Toggle Columns On + Off\\\" tooltip-placement=\\\"right\\\">Select Columns</button><div class=\\\"grid\\\" id=\\\"spreadsheet-grid\\\" ui-grid=\\\"vm.options\\\" ui-grid-selection=\\\"\\\" ui-grid-resize-columns=\\\"\\\" ui-grid-move-columns=\\\"\\\" ui-grid-pinning=\\\"\\\" ui-grid-autoresize=\\\"\\\" ui-grid-grouping=\\\"\\\"></div></div></section><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelColumns\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Visible Columns</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.closePanelColumns()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\" style=\\\"padding-top:0px;\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.showColumns()\\\">Select All</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.hideColumns()\\\">Deselect All</button></div></div><div class=\\\"row\\\"><div class=\\\"col-md-4\\\" ng-repeat=\\\"col in vm.options.columnDefs | orderBy:\\'name\\'\\\" style=\\\"text-transform:capitalize;\\\"><div class=\\\"checkbox\\\" style=\\\"margin-bottom:0px\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"col.visible\\\">{{col.name}}</label></div></div></div></div></div>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"left\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}