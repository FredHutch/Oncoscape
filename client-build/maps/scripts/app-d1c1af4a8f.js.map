{"version":3,"sources":["scripts/app-d1c1af4a8f.js"],"names":[],"mappings":"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","file":"scripts/app-d1c1af4a8f.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui.grid',\n            'ui.grid.selection',\n            'ui.grid.cellNav',\n            'ui.grid.resizeColumns',\n            'ui.grid.moveColumns',\n            'ui.grid.pinning',\n            'ui.grid.grouping',\n            'ui.grid.autoResize',\n            'ui-rangeSlider',\n            'toastr'\n        ]);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayPiechart', trayPiechart);\n\n    /** @ngInject */\n    function trayPiechart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data1: '=chartData1',\n                data2: '=chartData2',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var chart1 = chart.append(\"g\").classed(\"chartLayer\", true);\n            var chart2 = chart.append(\"g\").classed(\"chartLayer\", true);\n\n            // var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n            //     return d.tip;\n            // });\n            // chart.call(elTip);\n            scope.$watch('data1', function(data) { draw(chart1, data, 0); });\n            scope.$watch('data2', function(data) { draw(chart2, data, scope.height - 10); });\n\n\n            var draw = function(el, data, offset) {\n\n                var arcs = d3.pie()\n                    .sort(null)\n                    .value(function(d) {\n                        return d.value;\n                    })\n                    (data);\n\n                var arc = d3.arc()\n                    .outerRadius((scope.height / 3) + 3)\n                    .innerRadius((scope.height / 3) - 13)\n                    .padAngle(0.03)\n                    .cornerRadius(0);\n\n\n                el.attr(\"transform\", \"translate(\" + [(scope.height / 2) + offset, scope.height / 2] + \")\");\n                var colors = [\"#039BE5\", \"#EAEAEA\"];\n                var block = el.selectAll(\".arc\")\n                    .data(arcs)\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n                var newBlock = block.enter().append(\"g\").classed(\"arc\", true);\n\n                newBlock.append(\"path\")\n                    .attr(\"d\", arc)\n                    .attr(\"id\", function(d, i) { return \"arc-\" + i })\n                    //.attr(\"stroke\", \"gray\")\n                    .attr(\"fill\", function(d, i) { return colors[i]; });\n\n\n\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController(osApi, $timeout) {\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n\n            var isLocked = true;\n            vm.toggle = function() {\n                var elTray = angular.element(\".\" + vm.trayClass);\n                var elIcon = angular.element(\".\" + vm.iconClass);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function() {\n                        vm.change();\n                    });\n\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function() {\n                        vm.change();\n                    });\n                }\n\n                osApi.onResize.dispatch();\n            };\n\n            var mouseOver = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function() {\n                angular.element(\".\" + vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTrayBarchart', trayBarchart);\n\n    /** @ngInject */\n    function trayBarchart(d3) {\n\n        var directive = {\n            restrict: 'E',\n            scope: {\n                data: '=chartData',\n                height: '=chartHeight'\n            },\n            link: TrayChartLink,\n            replace: false\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayChartLink(scope, element) {\n            var chart = d3.select(element[0]).append(\"svg\").attr(\"class\", \"tray-chart\").style(\"height\", scope.height + \"px\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return d.tip;\n            });\n            chart.call(elTip);\n            scope.$watch('data', function(newValue) {\n                var barHeight = scope.height - 10;\n                var barWidth = (250 / newValue.length) - 1;\n                var binding = chart\n                    .selectAll(\"rect\")\n                    .data(scope.data);\n                binding.enter()\n                    .append(\"rect\")\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide)\n                    .transition()\n                    .attr(\"class\", \"tray-bar\")\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; })\n                    .text(function(d) { return d.label; });\n                binding.exit().remove();\n                binding\n                    .transition()\n                    .style(\"width\", barWidth + \"px\")\n                    .style(\"x\", function(d, i) { return (((barWidth + 1) * i) + 5) + \"px\"; })\n                    .style(\"height\", function(d) { return (d.value * barHeight) + \"px\"; })\n                    .style(\"y\", function(d) { return (barHeight - (d.value * barHeight) + 5) + \"px\"; });\n\n\n\n            });\n\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state) {\n            var vm = this;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $scope, $stateParams, $window, $document, moment, d3, _) {\n\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var patientsAll = []; // All Patient Data\n            var patientsVisible = []; // Visible Patient Data\n            var patientsDomain = []; // Min + Max Times\n            var rowHeight = 20;\n            var baseZoomX = 1;\n            var baseZoomY = 1;\n            var xZoom, yZoom, xTran, yTran;\n            var scaleX;\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.cohort = osApi.getCohort();\n            vm.timescales = [{\n                    name: 'Log',\n                    valFn: function(val) {\n\n                        return (val < 0 ? -1 : 1) * Math.log(Math.abs((val * 1000) / 86400000) + 1) / Math.log(2);\n                    }\n                },\n                { name: 'Linear', valFn: function(val) { return moment.duration(val * 1000).asDays(); } }\n            ];\n            vm.filters = [\n                { name: 'Alive + Dead' },\n                { name: 'Only Alive' },\n                { name: 'Only Dead' }\n            ];\n            vm.modes = [\n                { name: \"Highlight\" },\n                { name: \"Filter\" }\n            ];\n            vm.displayModes = [\n                { name: 'All Patients' },\n                { name: 'Selected Patients' }\n            ];\n            vm.timescale = vm.timescales[0];\n            vm.filter = vm.filters[0];\n            vm.mode = vm.modes[0];\n            vm.displayMode = vm.displayModes[0];\n            vm.events = null;\n            vm.align = null;\n            vm.sort = null;\n            vm.resetZoom = function() {\n                osApi.setCohort([], osApi.ALL, osApi.PATIENT);\n                elScrollY.call(brushY.move, null);\n                elScrollX.call(brushX.move, null);\n            };\n\n            // Elements\n            var brushY = d3.brushY().handleSize(3);\n            var brushX = d3.brushX().handleSize(3);\n            var brushSelect = d3.brushY().handleSize(1);\n            var elContainer = d3.select(\".timelines-content\");\n            var elAxis = elContainer.append(\"svg\").attr(\"class\", \"timeline-axis\");\n            var elScrollY = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-y\");\n            var elScrollX = elContainer.append(\"svg\").attr(\"class\", \"timeline-scroll-x\");\n            var elChart = elContainer.append(\"svg\").attr(\"class\", \"timeline-chart\");\n            var elSelected = elChart.append(\"g\");\n            var elHitarea = elChart.append(\"g\");\n            var elPatients = elChart.append(\"g\");\n\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) { return d.tip; });\n            elChart.call(elTip);\n\n            elContainer = angular.element(\".timelines-content\");\n\n            var drawScrollbars = function() {\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n                var height = $window.innerHeight - 200;\n                elScrollY.call(\n                    brushY\n                    .on(\"end\", function() {\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = height;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            yZoom = (baseZoomY / deltaPercent);\n                            yTran = (rowHeight * patientsVisible.length * yZoom) * -lowerPercent;\n                        } else {\n                            if (yZoom == baseZoomY && yTran === 0) return;\n                            yZoom = baseZoomY;\n                            yTran = 0;\n                            elScrollY.call(brushY.move, null);\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                        elSelected\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n\n                    })\n                );\n                elScrollX.call(\n                    brushX\n                    .on(\"end\", function() {\n\n\n\n                        if (d3.event.selection !== null) {\n                            var lower = d3.event.selection[0];\n                            var upper = d3.event.selection[1];\n                            var domain = width - 20;\n                            var lowerPercent = lower / domain;\n                            var upperPercent = upper / domain;\n                            var deltaPercent = upperPercent - lowerPercent;\n                            xZoom = (baseZoomX / deltaPercent);\n                            xTran = (width * xZoom) * -lowerPercent;\n                        } else {\n                            if (xZoom == baseZoomX && xTran === 0) return;\n                            xZoom = baseZoomX;\n                            xTran = 0;\n                            elScrollX.call(brushX.move, null);\n\n                        }\n                        elPatients\n                            .transition()\n                            .duration(750)\n                            .attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n                        drawAxis();\n                    })\n                );\n            };\n\n\n            var daysToUnit = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n\n            var drawAxis = function() {\n\n                var zi = d3.zoomIdentity.translate(xTran).scale(xZoom);\n                var ns = zi.rescaleX(scaleX);\n                var axis = d3.axisBottom(ns).ticks(5);\n\n                if (vm.timescale.name == 'Linear') {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(d);\n                    });\n                } else {\n                    axis.tickFormat(function(d) {\n                        return daysToUnit(Math.round((d < 0 ? -1 : 1) * (Math.pow(2, (Math.abs(d))) - 1) * 100) / 100);\n                    });\n                }\n                elAxis.transition().duration(900).call(axis);\n            };\n\n\n            function onCohortChange() {\n                updatePatientsVisible();\n                drawSelected();\n            }\n\n            function calculateSelection() {\n                if (d3.event.selection === null) return;\n                var lowerIndex = Math.round(Math.round(d3.event.selection[0] - yTran) / yZoom / 20);\n                var upperIndex = Math.round(Math.round(d3.event.selection[1] - yTran) / yZoom / 20);\n                if (lowerIndex < 0) lowerIndex = 0;\n                if (upperIndex >= patientsVisible.length) upperIndex = patientsVisible.length - 1;\n                if (lowerIndex == upperIndex) upperIndex = lowerIndex + 1;\n                var ids = [];\n                for (var i = lowerIndex; i <= upperIndex; i++) {\n                    ids.push(patientsVisible[i].id);\n                }\n                ids.pop();\n                osApi.setCohort(ids, \"Timelines\", osApi.PATIENT);\n                elHitarea.call(d3.event.target.move, null);\n            }\n\n            function drawSelected() {\n\n                // Transform Selections Into Index Positions - Don't need to render unselected\n                var selectedIndexes = patientsVisible.map(function(v, i) {\n                    return (v.selected) ? i : -1;\n                }).filter(function(v) { return v != -1; });\n\n                var selectedRows = elSelected.selectAll(\"rect\").data(selectedIndexes);\n\n                selectedRows.exit()\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"0\")\n                    .remove();\n\n                selectedRows.enter()\n                    .append('rect')\n                    .attr('width', '0')\n                    .attr('height', rowHeight - 2)\n                    .attr('y', 1)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; })\n                    .style(\"fill\", \"#cacaca\")\n                    .transition()\n                    .duration(600)\n                    .attr(\"width\", \"100%\");\n\n                selectedRows\n                    .transition()\n                    .duration(600)\n                    .attr('transform', function(d) { return \"translate(0,\" + (d * rowHeight) + \")\"; });\n            }\n\n            function drawPatients() {\n\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n\n                // Set Scale\n                scaleX = d3.scaleLinear().domain(patientsDomain).range([0, width]).nice();\n                var patients = elPatients.selectAll(\"g.patient\").data(patientsVisible);\n                patients.exit()\n                    .transition()\n                    .delay(200)\n                    .duration(500)\n                    .style('opacity', 0.0)\n                    .remove();\n\n                var patientEnter = patients.enter()\n                    .append('g')\n                    .attr(\"class\", \"patient\")\n                    .attr('transform', function(d, i) {\n                        return \"translate(0,\" + (i * rowHeight) + \")\";\n                    });\n\n                drawEvents(patients.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n                drawEvents(patientEnter.selectAll(\".event\").data(function(d) {\n                    return d.events.filter(function(v) { return v.visible; });\n                }));\n\n\n            }\n\n            // Gets called by Draw Patients Don't call manually\n            function drawEvents(evts) {\n                evts.exit()\n                    .on(\"mouseover\", null)\n                    .on(\"mouseout\", null)\n                    .remove();\n                evts.enter().append(\"rect\")\n                    .attr('class', 'event')\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? (rowHeight - 2) / 2 : rowHeight - 2; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 1); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; })\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                evts\n                    .attr('width', function(d) { return Math.max((scaleX(d.tsEndAligned) - scaleX(d.tsStartAligned)), 2); })\n                    .attr('height', function(d) { return (d.name == \"Radiation\" || d.name == \"Drug\") ? rowHeight / 2 : rowHeight; })\n                    .attr('y', function(d) { return ((d.name == \"Radiation\") ? rowHeight / 2 : 0); })\n                    .attr('x', function(d) { return scaleX(d.tsStartAligned); })\n                    .style('fill', function(d) { return d.color; });\n            }\n\n            function updateScale() {\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 80;\n                var height = $window.innerHeight - 200;\n                elContainer.css(\"background\", \"#FAFAFA\").css(\"margin-left\", layout.left + 30).css(\"margin-right\", layout.right).css(\"width\", width + 20).css(\"height\", height + 20);\n                elScrollY.attr(\"height\", height);\n                elScrollX.attr(\"width\", width);\n                elChart.attr(\"height\", height).attr(\"width\", width).attr(\"fill\", \"blue\").attr('transform', 'translate(0,0)');\n                elPatients.attr(\"height\", height).attr(\"width\", width);\n                elSelected.attr(\"height\", height).attr(\"width\", width);\n                elAxis.style(\"top\", height + 20).attr(\"width\", width);\n                elHitarea.attr(\"width\", width).attr(\"height\", height);\n\n                // Set Zoom + Transition Data\n                baseZoomY = height / (patientsVisible.length * rowHeight);\n                baseZoomX = 1;\n                xZoom = baseZoomX;\n                yZoom = baseZoomY;\n                xTran = 0;\n                yTran = 0;\n                if (baseZoomY == Infinity) baseZoomY = 10;\n\n                // Scale + Transform\n                elPatients.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n                elSelected.attr(\"transform\", \"translate(\" + xTran + \",\" + yTran + \") scale(\" + xZoom + \",\" + yZoom + \")\");\n            }\n\n            // Filter + Sort Patients = Set patientsFiltered\n            function updatePatientsVisible() {\n\n                vm.cohort = osApi.getCohort();\n                var align = vm.align.name;\n                var sort = vm.sort.name;\n                var filter = vm.filter.name;\n                var events = vm.events.filter(function(e) {\n                    return e.selected;\n                }).map(function(e) {\n                    return e.name.toLowerCase();\n                });\n\n                // Filter Dataset + Calculate Domain\n                patientsDomain = [Infinity, -Infinity];\n                patientsAll.forEach(function(patient) {\n\n                    // Set Selected\n                    patient.selected = (vm.cohort.patientIds.indexOf(patient.id) !== -1);\n                    patient.visible = true;\n\n                    // Filter Patients W/O Align, Sort or Filter\n                    if (!patient.hash.hasOwnProperty(this.align) || !patient.hash.hasOwnProperty(this.sort) || !patient.hash.hasOwnProperty(\"Status\")) {\n                        patient.visible = false;\n                        return;\n                    }\n\n                    // Filter Based On Alive Dead Status\n                    var status = patient.hash.Status.data.status.trim().toLowerCase();\n                    if ((this.filter == \"Only Alive\" && status == \"dead\") || (this.filter == \"Only Dead\" && status != \"dead\")) {\n                        patient.visible = false;\n                        return;\n                    }\n\n\n                    // Filter Selected\n                    if (vm.displayMode.name == \"Selected Patients\" && !patient.selected) {\n                        patient.visible = false;\n                        return;\n                    }\n\n                    this.offset = 0 - patient.hash[this.align].tsStart;\n\n                    // Filter Events\n                    patient.events.forEach(function(event) {\n                        event.visible = (this.events.indexOf(event.name.toLowerCase()) != -1);\n                        // Calculate Start + End Based On Alignment\n                        if (event.visible) {\n                            event.tsStartAligned = vm.timescale.valFn(event.tsStart + this.offset);\n                            event.tsEndAligned = vm.timescale.valFn(event.tsEnd + this.offset);\n                            this.domain[0] = Math.min(this.domain[0], event.tsStartAligned);\n                            this.domain[1] = Math.max(this.domain[1], event.tsEndAligned);\n                        }\n                    }, this);\n\n                }, {\n                    align: align,\n                    sort: sort,\n                    filter: filter,\n                    events: events,\n                    domain: patientsDomain,\n                    offset: 0\n                });\n\n                // Sort Patients\n                patientsVisible = patientsAll.filter(function(v) { return v.visible; }).sort(function(a, b) {\n                    if (a.status == b.status) {\n                        var aTime = a.events.filter(function(e) { return (e.name == sort && e.order == 1); })[0].tsStartAligned;\n                        var bTime = b.events.filter(function(e) { return (e.name == sort && e.order == 1); })[0].tsStartAligned;\n                        if (aTime > bTime) return 1;\n                        if (bTime > aTime) return -1;\n                        return 0;\n                    } else {\n                        return (a.status == \"dead\") ? 1 : -1;\n                    }\n                });\n\n            }\n\n            // Load Data\n            osApi.query(osApi.getDataSource().clinical.events, {}).then(function(response) {\n\n                var colorFn = function(status) {\n                    return (status == \"Birth\") ? \"#E91E63\" :\n                        (status == \"Diagnosis\") ? \"#673AB7\" :\n                        (status == \"Pathology\") ? \"#2196F3\" :\n                        (status == \"Progression\") ? \"#00BCD4\" :\n                        (status == \"Absent\") ? \"#CDDC39\" :\n                        (status == \"Status\") ? \"#FFC107\" :\n                        (status == \"Radiation\") ? \"#FF5722\" :\n                        (status == \"Procedure\") ? \"#795548\" :\n                        (status == \"Encounter\") ? \"#607D8B\" :\n                        (status == \"Drug\") ? \"#03A9F4\" :\n                        \"black\";\n                };\n                var data = response.data[0];\n                var events = {};\n                data = Object.keys(data).map(function(key) {\n                    // Loop Throug Events\n                    var evtArray = this.data[key]\n                        .filter(function(v) {\n                            return v.start !== null;\n                        })\n                        .map(function(v) {\n                            this.events[v.name] = null;\n                            if (v.hasOwnProperty(\"data\")) {\n                                v.tip = Object.keys(v.data).reduce(function(p, c) {\n                                    try {\n                                        if (v.data[c] !== null) {\n                                            p += \"<br>\" + c\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .replace(/\\w\\S*/g, function(txt) {\n                                                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                                                }) + \": \" + v.data[c].toString()\n                                                .replace(/\\w\\S*/g, function(txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n                                        }\n                                    } catch (e) {\n                                        return \"\";\n                                    }\n                                    return p;\n                                }, v.name);\n                            } else if (v.hasOwnProperty(\"name\")) {\n                                v.tip = v.name;\n                            } else {\n                                v.tip = \"Unknown\";\n                            }\n                            v.tsStart = moment(v.start, \"MM/DD/YYYY\").unix();\n                            v.tsEnd = (v.end === null) ? v.tsStart : moment(v.end, \"MM/DD/YYYY\").unix();\n                            v.tsStartAligned = \"\";\n                            v.tsEndAligned = \"\";\n                            v.end = (v.end === null) ? v.start : v.end;\n                            v.color = this.colorFn(v.name);\n                            v.visible = true;\n                            v.order = 1;\n                            return v;\n                        }, {\n                            events: this.events,\n                            colorFn: this.colorFn\n                        });\n                    var evtHash = evtArray.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.name)) {\n                            if (p[c.name].tsStart > c.tsStart) p[c.name] = c;\n                        } else {\n                            p[c.name] = c;\n                        }\n                        return p;\n                    }, {});\n                    return {\n                        id: key,\n                        events: evtArray,\n                        hash: evtHash\n                    };\n                }, {\n                    data: data,\n                    events: events,\n                    colorFn: colorFn\n                });\n                data.forEach(function(patient) {\n                    var groups = _.groupBy(patient.events, 'name');\n                    var keys = Object.keys(groups).filter(function(prop) {\n                        return (this[prop].length > 1);\n                    }, groups);\n                    keys.forEach(function(v) {\n                        var i = 1;\n                        patient.events\n                            .filter(function(e) { return e.name == v; })\n                            .sort(function(a, b) {\n                                return a.tsStart - b.tsStart;\n                            }).forEach(function(v) {\n                                v.order = i;\n                                i++;\n                            });\n                    });\n                });\n                patientsAll = data.filter(function(v) {\n                    try {\n\n                        v.status = v.hash.Status.data.status.toLowerCase();\n                        return true;\n                    } catch (e) {\n                        return false;\n                    }\n                });\n                vm.events = Object.keys(events).map(function(v) {\n                    return {\n                        name: v,\n                        selected: ([\"Birth\", \"Pathology\", \"Absent\", \"Procedure\"].indexOf(v) == -1),\n                        color: this(v)\n                    };\n                }, colorFn);\n                vm.align = vm.events.filter(function(v) {\n                    if (v.name == \"Diagnosis\") return true;\n                })[0];\n                vm.sort = vm.events.filter(function(v) {\n                    if (v.name == \"Status\") return true;\n                })[0];\n\n\n\n                updatePatientsVisible();\n                updateScale(); // Depends on Visible Patients\n\n                drawPatients();\n                drawSelected();\n                drawScrollbars();\n                drawAxis();\n                elHitarea.call(brushSelect);\n                brushSelect.on(\"end\", calculateSelection);\n                osApi.onCohortChange.add(onCohortChange);\n                osApi.setBusy(false);\n            });\n\n            vm.update = function() {\n\n                elScrollY.call(brushY.move, null);\n                elScrollX.call(brushX.move, null);\n\n                updatePatientsVisible();\n                updateScale(); // Depends on Visible Patients\n                drawPatients();\n                drawScrollbars();\n                drawSelected();\n                drawAxis();\n            };\n            osApi.onResize.add(vm.update);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onCohortChange.remove(onCohortChange);\n                brushX.on(\"end\", null);\n                brushY.on(\"end\", null);\n                brushSelect.on(\"end\", null);\n                osApi.onResize.remove(vm.update);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // Loading . . . \n            osApi.setBusy(true);\n\n            // View Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            vm.cohort = osApi.getCohort();\n            vm.cohorts = (osApi.getCohorts().indexOf(vm.cohort) == -1) ?\n                osApi.getCohorts().concat([vm.cohort]) : osApi.getCohorts();\n\n            vm.pValues = [];\n            vm.setCohort = function(cohort) {\n                osApi.setCohort(cohort);\n            };\n\n            // Format Elements\n            var formatPercent = function(d) { return Math.round(d * 100) + \"%\"; };\n            var formatDays = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Months\";\n                return Math.round((d / 365) * 10) / 10 + \" Years\";\n            };\n\n            // Create D3 Elements\n            var elContainer = angular.element(\"#survival-chart\");\n            var elChart = d3.select(\"#survival-chart\").append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n            var elBrush = elChart.append(\"g\");\n            var elCurves = elChart.append(\"g\");\n            var elXAxis = elChart.append(\"g\").attr(\"class\", \"axis\");\n            var elYAxis = elChart.append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(50, 10)\");\n            var brush = d3.brush();\n\n            // Base Layout\n            var layout = {\n                width: 0,\n                height: 0,\n                xScale: d3.scaleLinear(),\n                yScale: d3.scaleLinear(),\n                xDomain: [0, 1], // Effected By Survival Min Max\n                yDomain: [0, 1],\n                xAxis: d3.axisBottom().ticks(5).tickFormat(formatDays),\n                yAxis: d3.axisLeft().ticks(5).tickFormat(formatPercent)\n            };\n\n            // Curve Functions + Events\n            var curveFunction = d3.line()\n                .curve(d3.curveStepAfter)\n                .x(function(d) { return Math.round(layout.xScale(d.t)); })\n                .y(function(d) {\n                    return layout.yScale(d.s);\n                });\n            var onCurveMouseOver = function() {}; // d3.event.target.style.strokeWidth = \"3px\"; };\n            var onCurveMouseOut = function() {}; // d3.event.target.style.strokeWidth = \"1px\"; };\n\n            var addCurve = function(cohort) {\n\n                // Create Group To Hold Curve\n                var g = elCurves.append(\"g\")\n                    .attr(\"class\", \"curve\")\n                    .attr(\"transform\", \"translate(0, 10)\");\n\n                // Add Ticks\n                var ticks = cohort.survival.compute.filter(function(v) { return v.c.length > 0; });\n                ticks.forEach(function(t) {\n                    var tx = Math.round(layout.xScale(t.t));\n                    var ty = Math.round(layout.yScale(t.s));\n                    g.append(\"line\")\n                        .attr(\"class\", \"survival-tick\")\n                        .style(\"stroke\", cohort.color)\n                        .attr(\"x1\", tx)\n                        .attr(\"x2\", tx)\n                        .attr(\"y1\", ty - 3)\n                        .attr(\"y2\", ty + 3);\n                });\n\n                // Append Path\n                g.append(\"path\")\n                    .datum(cohort.survival.compute)\n                    .attr(\"tip\", cohort.name + \" Vs. All Patients + Samples<br> p : \" + cohort.survival.logrank.pValue)\n                    .attr(\"class\", \"survival-line\")\n                    .style(\"stroke\", cohort.color)\n                    .attr(\"d\", curveFunction)\n                    .on(\"mouseover\", onCurveMouseOver)\n                    .on(\"mouseout\", onCurveMouseOut)\n                    .on(\"click\", function() {\n                        osApi.setCohort(cohort);\n                    });\n            };\n\n            // Drawing Methods\n            var dataChange = function() {\n\n                // Determine The XDomain\n                layout.xDomain = vm.cohorts\n                    .filter(function(v) { return v.show; })\n                    .reduce(function(p, c) {\n                        p[0] = Math.min(p[0], c.survival.compute[0].t);\n                        p[1] = Math.max(p[1], c.survival.compute[c.survival.compute.length - 1].t);\n                        return p;\n                    }, [Infinity, -Infinity]);\n\n                // Trigger Resize\n                resize();\n            };\n\n\n            var onBrushEnd = function() {\n                if (!d3.event.selection) {\n                    osApi.setCohort(vm.cohorts.filter(function(c) { return c.type == \"ALL\"; })[0]);\n                    return;\n                }\n                var s = d3.event.selection;\n                osApi.setBusy(true);\n\n                // Calculate Bounds Of Selection\n                var rangeSort = function(a, b) { return a - b; };\n                var timeRange = [s[0][0], s[1][0]].map(layout.xScale.invert).sort(rangeSort);\n                var percentRange = [s[0][1] - 10, s[1][1] - 10].map(layout.yScale.invert).sort(rangeSort);\n                var visibleCohorts = vm.cohorts.filter(function(v) { return v.show; });\n                var visibleCompute = visibleCohorts.reduce(function(p, c) { return p.concat(c.survival.compute); }, []);\n                var computeInRange = visibleCompute.filter(function(v) {\n                    return (\n                        (v.t >= this.timeRange[0]) &&\n                        (v.t <= this.timeRange[1]) &&\n                        (v.s >= this.percentRange[0]) &&\n                        (v.s <= this.percentRange[1])\n                    );\n                }, { timeRange: timeRange, percentRange: percentRange });\n\n                var combinedIds = computeInRange.reduce(function(p, c) { return p.concat(c.c, c.d); }, []);\n                var uniqueIds = _.unique(combinedIds);\n                osApi.setCohort(uniqueIds, \"Survival\", osApi.PATIENT);\n                osApi.setBusy(false);\n            };\n\n            var resize = function() {\n\n                // Get Screen Dimensions\n                var osLayout = osApi.getLayout();\n                layout.width = $window.innerWidth - osLayout.left - osLayout.right - ((osLayout.left === 0) ? 20 : 0) - ((osLayout.right === 0) ? 20 : 0);\n                layout.height = $window.innerHeight - 125;\n\n                // Position container\n                elContainer.css({ 'width': layout.width, 'height': layout.height, 'margin-left': (osLayout.left === 0) ? 20 : osLayout.left });\n\n                // Scale Axis\n                layout.xScale.domain(layout.xDomain).range([40, layout.width - 40]);\n                layout.yScale.domain(layout.yDomain).range([layout.height - 40, 10]);\n                layout.xAxis.scale(layout.xScale);\n                layout.yAxis.scale(layout.yScale);\n                elXAxis.attr(\"transform\", \"translate(0, \" + (layout.height - 30) + \")\").call(layout.xAxis);\n                elYAxis.attr(\"transform\", \"translate(40, 10)\").call(layout.yAxis);\n\n                // Draw Cohorts\n                elCurves.selectAll(\".curve\").remove();\n                vm.cohorts\n                    .filter(function(v) { return v.show; })\n                    .map(addCurve);\n                if (vm.cohorts.indexOf(vm.cohort) == -1) {\n                    addCurve(vm.cohort);\n                }\n\n                // Set Selected + Set P Values\n                var selectedColor = d3.rgb(vm.cohort.color).toString();\n                elCurves.selectAll(\".curve\").each(function() {\n                    var me = d3.select(this);\n                    var selected = (d3.select(this).select(\".survival-line\").style(\"stroke\") == selectedColor);\n                    me.classed(\"survival-line-selected\", selected);\n                });\n\n                var pValues = vm.cohorts.filter(function(v) { return v != vm.cohort; }).map(function(v) {\n                    return {\n                        c: [vm.cohort.color, v.color],\n                        n: v.name,\n                        p: osApi.km.logranktest([vm.cohort.survival.data, v.survival.data]).pValue\n                    };\n\n                });\n\n                var all = vm.cohorts.filter(function(v) { return v.show; });\n                if (all.length !== 1) {\n\n\n                    if (vm.cohorts.indexOf(vm.cohort) == -1) {\n                        all.unshift(vm.cohort);\n                    }\n                    all.sort(function(a) {\n                        if (vm.cohort.color == a.color) return -1;\n                        if (a.color == \"#E91E63\") return -1;\n                        return 0;\n                    });\n                }\n\n                pValues.unshift({\n                    c: all.map(function(v) { return v.color; }),\n                    n: 'Visible Cohorts',\n                    p: osApi.km.logranktest(all.map(function(v) { return v.survival.data; })).pValue\n                });\n                vm.pValues = pValues;\n\n                brush.extent([\n                    [40, 20],\n                    [layout.width - 30, layout.height - 30]\n                ]);\n                brush.on(\"end\", onBrushEnd);\n                elBrush.call(brush);\n            };\n\n            var onCohortsChange = function() {\n                vm.cohorts = osApi.getCohorts();\n                vm.cohort = osApi.getCohort();\n                vm.cohort.show = true;\n                vm.cohortsLegend = vm.cohorts.filter(function(v) { return v != vm.cohort; });\n                resize();\n            };\n\n            var onCohortChange = function() {\n                onCohortsChange();\n            };\n\n            vm.toggle = function(cohort) {\n                if (vm.cohorts.reduce(function(p, c) { p += c.show ? 1 : 0; return p; }, 0) === 0) {\n                    alert(\"You must have at least one cohort visible\");\n                    cohort.show = true;\n                    return;\n                }\n                dataChange();\n                var lrt = osApi.km.logranktest(vm.cohorts.filter(function(v) { return v.show; }).map(function(v) { return v.survival.data; }));\n                vm.pSelected = \"P: \" + lrt.pValue + \" DOF: \" + lrt.dof;\n            };\n\n\n            // Create\n            osApi.onResize.add(resize);\n            osApi.onCohortChange.add(onCohortChange);\n            osApi.onCohortsChange.add(onCohortsChange);\n            dataChange();\n            onCohortChange(osApi.getCohort());\n            osApi.setBusy(false);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(resize);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSunburst', sunburst);\n\n    /** @ngInject */\n    function sunburst() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/sunburst/sunburst.html',\n            controller: SunburstController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SunburstController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            var colorMap;\n            var vm = this;\n            vm.patients = [];\n            vm.patient = null;\n            vm.datasource = osApi.getDataSource();\n            vm.charts = [];\n\n            var getColorMap = function(data) {\n                var colors = [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#0277BD\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#C51162\", \"#B388FF\"];\n                var tags = data.reduce(function(p, c) {\n                    tags = c.groups.reduce(function(p, c) {\n                        return _.union(p, c.tags)\n                    }, []);\n                    return _.union(p, tags)\n                }, []);\n                colors.length = tags.length;\n                var colorMap = _.object(tags, colors);\n                colorMap[\"Tumor\"] = \"#FEFEFE\";\n                colorMap[\"Normal\"] = \"#EAEAEA\";\n                return colorMap;\n            };\n\n\n            osApi.setBusy(true);\n            osApi.query(\"biomarker_immune_tree\").then(function(response) {\n                osApi.setBusy(false);\n                colorMap = getColorMap(response.data[0].barcharts);\n                response.data.forEach(function(v) {\n                    v.barcharts.forEach(function(v) {\n                        v.groups.forEach(function(v) {\n                            v.show = true;\n                            v.tags = v.tags.map(function(v) {\n                                return { name: v, color: colorMap[v] };\n                            });\n                        })\n                    })\n                });\n                vm.patients = response.data;\n                vm.patient = vm.patients[0];\n                vm.draw()\n            });\n\n            vm.draw = function() {\n                sunburst.draw(vm, colorMap);\n                bars.draw(vm, colorMap);\n            }\n\n            // Sunburst\n            var sunburst = (function() {\n                var color = d3.scaleOrdinal(d3.schemeCategory20);\n                //var formatNumber = d3.format(\",d\");\n                var arc,\n                    radius,\n                    x,\n                    y,\n                    data,\n                    svg,\n                    labelTumor,\n                    labelNormal,\n                    sunburstNormal,\n                    sunburstTumor;\n\n                var tooltip = d3.select(\"#sunburst-chart\").append(\"div\")\n                    .attr(\"class\", \"tooltip\")\n                    .style(\"opacity\", 0);\n                var w = d3.select(window);\n\n                var init = function(chart) {\n                    svg = chart;\n                    labelTumor = svg.append(\"text\").text(\"Tumor\");\n                    labelNormal = svg.append(\"text\").text(\"Normal\");\n                    sunburstNormal = svg.append(\"g\");\n                    sunburstTumor = svg.append(\"g\");\n                }\n\n                var mousemove = function() {\n                    tooltip\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                }\n                var mouseover = function(d) {\n                    tooltip.html(d.data.name)\n                        .style(\"opacity\", 1)\n                        .style('top', (d3.event.layerY + 10) + 'px')\n                        .style('left', (d3.event.layerX + 10) + 'px');\n                    w.on(\"mousemove\", mousemove).on(\"mouseup\", null);\n                }\n\n                var mouseout = function(d) {\n                    tooltip.html(d.data.Name)\n                        .style(\"opacity\", 0)\n                }\n\n                var click = function(d) {\n                    var root = d;\n                    while (root.parent) root = root.parent\n                    var sunburst = (root.data.name == \"Normal\") ? sunburstNormal : sunburstTumor;\n                    sunburst\n                        .transition()\n                        .duration(750)\n                        .tween(\"scale\", function() {\n                            var xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                                yd = d3.interpolate(y.domain(), [d.y0, 1]),\n                                yr = d3.interpolate(y.range(), [d.y0 ? 20 : 0, radius]);\n                            return function(t) {\n                                x.domain(xd(t));\n                                y.domain(yd(t)).range(yr(t));\n                            };\n                        })\n                        .selectAll(\"path\")\n                        .attrTween(\"d\", function(d) {\n                            return function() {\n                                return arc(d);\n                            };\n                        });\n                };\n\n                var drawSunburst = function(data, g) {\n\n                    var partition = d3.partition();\n                    var root = d3.hierarchy(data);\n                    root.sum(function(d) {\n                        return d.size;\n                    });\n\n                    var decendants = partition(root).descendants()\n                    var path = g.selectAll(\"path\").data(decendants)\n                        .enter().append(\"g\");\n\n                    path.append(\"path\")\n                        .attr(\"d\", arc)\n                        .style(\"fill\", function(d) {\n                            return color((d.children ? d : d.parent).data.name);\n                        })\n                        .style(\"stroke\", \"#FFF\")\n                        .style(\"stroke-width\", \"2\")\n                        .on(\"click\", click)\n                        .on(\"mouseover\", mouseover)\n                        .on(\"mouseout\", mouseout)\n                };\n\n                var draw = function(vm) {\n                    data = vm.patient;\n                    var layout = osApi.getLayout();\n                    var height = $window.innerHeight - 180;\n                    var width = ($window.innerWidth - layout.left - layout.right);\n                    radius = (Math.min((width * .5), height - 200) / 2) - 10;\n                    x = d3.scaleLinear().range([0, 2 * Math.PI]);\n                    y = d3.scaleSqrt().range([0, radius]);\n                    arc = d3.arc()\n                        .startAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x0)));\n                        })\n                        .endAngle(function(d) {\n                            return Math.max(0, Math.min(2 * Math.PI, x(d.x1)));\n                        })\n                        .innerRadius(function(d) {\n                            return Math.max(0, y(d.y0));\n                        })\n                        .outerRadius(function(d) {\n                            return Math.max(0, y(d.y1));\n                        });\n\n                    svg.attr(\"width\", width).attr(\"height\", height);\n                    labelNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + 20 + \")\");\n                    labelTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + 20 + \")\");\n\n                    sunburstNormal.attr(\"transform\", \"translate(\" + (radius + 10) + \",\" + (radius) + \")\");\n                    sunburstTumor.attr(\"transform\", \"translate(\" + (width - radius - 10) + \",\" + (radius) + \")\");\n\n                    drawSunburst(data.tumor, sunburstTumor, x, y);\n                    drawSunburst(data.normal, sunburstNormal, x, y);\n                };\n\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            // Bars\n            var bars = (function() {\n\n                // Elements\n                var svg;\n                var charts;\n                var layout, transformedData;\n                var vm;\n\n                var init = function(chart, viewModel) {\n                    svg = chart;\n                    charts = svg.append(\"g\");\n                    vm = viewModel;\n                };\n\n                var getLayoutMetrics = function(data) {\n                    var layout = osApi.getLayout();\n                    var widthTotal = ($window.innerWidth - layout.left - layout.right) - 40;\n                    var widthChart = Math.floor(widthTotal / data.length);\n                    var heightChart = 200; // Constant\n                    var yChart = (Math.min((($window.innerWidth - layout.left - layout.right) * .5), ($window.innerHeight - 50) - 200)) - 10;\n                    var xChart = 20;\n                    return {\n                        layout: layout,\n                        widthTotal: widthTotal,\n                        widthChart: widthChart,\n                        heightChart: heightChart,\n                        yChart: yChart,\n                        xChart: xChart,\n                        numCharts: data.length\n                    };\n                };\n\n                var getTransformedData = function(data, colorMap) {\n\n                    // Cartesian Product\n                    function cartesianProductOf() {\n                        return _.reduce(arguments, function(a, b) {\n                            return _.flatten(_.map(a, function(x) {\n                                return _.map(b, function(y) {\n                                    return x.concat([y]);\n                                });\n                            }), true);\n                        }, [\n                            []\n                        ]);\n                    }\n\n                    // Transform Data To Be Both Tree + List (Bar) Oriented\n                    return data.map(function(chart) {\n\n\n                        // Get Cartesian Product Of All Tags From Selected Groups \n                        var bars = cartesianProductOf.apply(this, chart.groups\n                                .filter(function(c) {\n                                    return c.show\n                                })\n                                .map(function(c) {\n                                    return c.tags.map(function(v) { return v.name; });\n                                }))\n                            .map(function(v) {\n                                return {\n                                    value: 0,\n                                    tags: v\n                                }\n                            });\n\n                        // Sort Data On All Tags\n                        bars.sort(function(a, b) {\n                            for (var i = a.tags.length - 1; i >= 0; i--) {\n                                if (a.tags[i] > b.tags[i]) return 1;\n                                if (a.tags[i] < b.tags[i]) return -1;\n                            }\n                            return 0;\n                        });\n\n                        // Calculate Bar Values\n                        //var values = chart.values;\n                        bars.forEach(function(bar) {\n                            chart.values.forEach(function(value) {\n                                if (_.difference(bar.tags, value.tags).length == 0) bar.value += value.data;\n                            });\n                        });\n\n                        // Convert Array Into A Tree Structure\n                        var tree = bars.reduce(function(p, c) {\n                            var barNode = p;\n                            c.tags.reverse().forEach(function(tag) {\n                                var tagIndex = barNode.children.map(function(v) {\n                                    return v.name;\n                                }).indexOf(tag.name);\n                                if (tagIndex == -1) {\n                                    barNode.children.push({\n                                        name: tag,\n                                        children: [],\n                                        value: 1,\n                                        color: colorMap[tag]\n                                    });\n                                    barNode = barNode.children[barNode.children.length - 1];\n                                } else {\n                                    barNode = barNode.children[tagIndex];\n                                    barNode.value += 1;\n                                }\n                            });\n                            c.tags.reverse();\n                            return p;\n                        }, {\n                            name: chart.name,\n                            children: [],\n                            value: bars.length,\n                            color: '#DDD'\n                        });\n\n                        // Return Tree\n                        return {\n                            bars: bars,\n                            tree: tree\n                        };\n\n                    });\n                };\n\n                var drawTree = function(el) {\n\n                    // Chart G Element\n                    var chartLayer = d3.select(this);\n\n                    // Chart Background\n                    chartLayer.append(\"rect\")\n                        .style(\"fill\", \"#EEE\")\n                        .attr(\"width\", layout.widthChart - 5)\n                        .attr(\"height\", layout.heightChart);\n\n                    // Chart Label\n                    chartLayer.append(\"text\").text(el.tree.name)\n                        .attr(\"y\", 20)\n                        .attr(\"x\", Math.round((layout.widthChart - 5) / 2))\n                        .attr(\"text-anchor\", \"middle\");\n\n                    // Draw Bars\n                    var bars = chartLayer.selectAll(\".cat-bar\").data(el.bars);\n                    var yMax = _.max(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yMin = _.min(el.bars, function(bar) {\n                        return bar.value;\n                    }).value;\n                    var yScale = d3.scaleLinear();\n                    yScale.range([0, 110]);\n                    yScale.domain([yMin, yMax]);\n                    var barWidth = layout.widthChart / el.bars.length;\n\n                    bars.enter()\n                        .append(\"rect\")\n                        .attr(\"x\", function(d, i) {\n                            return barWidth * i\n                        })\n                        .attr(\"y\", function(d) {\n                            return 140 - yScale(d.value)\n                        })\n                        .attr(\"width\", barWidth)\n                        .attr(\"height\", function(d) {\n                            return yScale(d.value);\n                        })\n                        .attr(\"fill\", function(d) {\n                            return (d.tags[0].name == \"Normal\") ? \"#1476b6\" : \"#adc7ea\";\n                        });\n\n                    // Create Partition Tree Legend \n                    var tree = d3.hierarchy(el.tree, function(d) {\n                        return d.children;\n                    });\n\n                    var chartHeight = (1 / tree.height + 1) * 60;\n\n                    var partition = d3.partition()\n                        .size([layout.widthChart - 5, chartHeight]);\n\n                    var nodes = partition(tree).descendants();\n\n                    var node = chartLayer.selectAll(\".cat-node\")\n                        .data(nodes);\n\n                    node.enter()\n                        .append(\"rect\")\n                        .attr(\"class\", \"cat-node\")\n                        .attr(\"x\", function(d) {\n                            return d.x0;\n                        })\n                        .attr(\"y\", function(d) {\n                            return (200 - chartHeight) - (d.y0 - chartHeight);\n                        })\n                        .attr(\"width\", function(d) {\n                            return d.x1 - d.x0;\n                        })\n                        .attr(\"height\", function(d) {\n                            return d.y1 - d.y0;\n                        })\n                        .attr(\"fill\", function(d) {\n                            return d.data.color;\n                        })\n                        .style(\"visibility\", function(d) {\n                            return d.data.name == 'chart' ? \"hidden\" : \"visible\";\n                        });\n\n                }\n\n                var draw = function(data, colorMap) {\n\n                    vm.charts = data = vm.patient.barcharts;\n                    layout = getLayoutMetrics(data);\n\n                    transformedData = getTransformedData(data, colorMap);\n\n                    // Chart Spaces\n                    var chart = charts.selectAll(\".sunburst-barchart\").data(transformedData);\n                    chart.enter()\n                        .append(\"g\")\n                        .attr(\"class\", \"sun-chart-g\")\n                        .attr(\"transform\", function(d, i) {\n                            return \"translate(\" + ((i * layout.widthChart) + layout.xChart) + \",\" + ($window.innerHeight - 380) + \")\";\n                        });\n                    charts.selectAll(\".sun-chart-g\")\n                        .each(drawTree);\n                };\n                return {\n                    init: init,\n                    draw: draw\n                };\n            })();\n\n            var svg = d3.select(\"#sunburst-chart\").append(\"svg\");\n            sunburst.init(svg);\n            bars.init(svg, vm);\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSpreadsheet', spreadsheet);\n\n    /** @ngInject */\n    function spreadsheet() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/spreadsheet/spreadsheet.html',\n            controller: SpreadsheetController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SpreadsheetController(osApi, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window, uiGridConstants, saveAs) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            var selectHandler;\n\n            // View Model\n            var vm = this;\n            vm.showPanelColumns = false;\n            vm.closePanelColumns = function() {\n                vm.showPanelColumns = false;\n                vm.gridApi.grid.refresh();\n            };\n\n            vm.setSize = function() {\n                var elGrid = angular.element(\"#spreadsheet-grid\")[0];\n                var osLayout = osApi.getLayout();\n                var ml = osLayout.left - 1;\n                var mr = osLayout.right - 1;\n                if (ml === -1) ml = 19;\n                if (mr === -1) mr = 19;\n                elGrid.style[\"margin-left\"] = ml + \"px\";\n                elGrid.style[\"margin-right\"] = mr + \"px\";\n                elGrid.style.width = ($window.innerWidth - ml - mr - 2) + \"px\";\n                elGrid.style.height = ($window.innerHeight - 140) + \"px\";\n                vm.gridApi.core.handleWindowResize();\n            };\n            vm.collections = Object.keys(osApi.getDataSource().clinical)\n                .map(function(key) {\n                    var v = this.data[key];\n                    return {\n                        name: key,\n                        collection: v\n                    };\n                }, {\n                    data: osApi.getDataSource().clinical\n                }).filter(function(o) {\n                    return (o.name != \"events\" && o.name != \"samplemap\");\n                });\n            vm.collection = vm.collections.reduce(function(p, c) {\n                if (c.name == \"patient\") p = c;\n                return p;\n            }, vm.collections[0]);\n            vm.options = {\n                treeRowHeaderAlwaysVisible: false,\n                enableSelectionBatchEvent: false,\n                enableGridMenu: false,\n                enableSelectAll: true,\n                onRegisterApi: function(gridApi) {\n                    vm.gridApi = gridApi;\n                    selectHandler = gridApi.selection.on.rowSelectionChanged($scope, _.debounce(rowSelectionChange, 300));\n                }\n            };\n            vm.exportCsv = function(type) {\n                var cols = vm.options.columnDefs.filter(function(c) { return c.visible; }).map(function(v) { return v.field; });\n                var data = \"\\\"\" + cols.join(\"\\\",\\\"\") + \"\\\"\\n\";\n\n                var records = (type == \"selected\") ? vm.gridApi.grid.api.selection.getSelectedRows() : vm.options.data;\n\n                records\n                    .forEach(function(v) {\n                        var datum = cols.map(function(v) {\n                            return this[v];\n                        }, v);\n                        data += \"\\\"\" + datum.join(\"\\\",\\\"\") + \"\\\"\\n\";\n                    });\n\n                var blob = new Blob([data], { type: 'text/csv;charset=windows-1252;' });\n                saveAs(blob, 'oncoscape.csv');\n\n            };\n            vm.showColumns = function() {\n                vm.options.columnDefs.forEach(function(v) { v.visible = true; });\n                vm.gridApi.grid.refresh();\n            };\n            vm.hideColumns = function() {\n                vm.options.columnDefs.forEach(function(v) { v.visible = false; });\n                vm.gridApi.grid.refresh();\n            };\n\n            var sortSelectedFn = function(a, b, rowA, rowB) {\n                if (!rowA.hasOwnProperty(\"isSelected\")) rowA.isSelected = false;\n                if (!rowB.hasOwnProperty(\"isSelected\")) rowB.isSelected = false;\n                if (rowA.isSelected === rowB.isSelected) return 0;\n                if (rowA.isSelected) return -1;\n                return 1;\n            };\n\n            vm.sortSelected = function() {\n                var col = vm.gridApi.grid.columns[0];\n                col.sortingAlgorithm = sortSelectedFn;\n                vm.gridApi.grid.sortColumn(col, \"asc\", false);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.OPTIONS);\n                vm.gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN);\n            };\n\n            var selectedIds = [];\n\n\n            var supressEvents = false;\n\n            var rowSelectionChange = function() {\n\n                if (supressEvents) return;\n                selectedIds = vm.gridApi.grid.api.selection.getSelectedRows().map(function(v) { return v.patient_ID; });\n\n\n                osApi.onCohortChange.remove(onCohortChange);\n                if (selectedIds.length == vm.options.data.length || selectedIds.length == 0) {\n                    osApi.setCohort([], osApi.ALL, osApi.PATIENT);\n                } else {\n                    osApi.setCohort(_.unique(selectedIds), \"Spreadsheet\", osApi.PATIENT);\n                }\n                osApi.onCohortChange.add(onCohortChange);\n            };\n\n            // Initialize\n            vm.datasource = osApi.getDataSource();\n\n            // App Event :: Resize\n            osApi.onResize.add(vm.setSize);\n\n            // App Event :: Cohort Change\n            var onCohortChange = function(cohort) {\n                selectHandler();\n\n\n                vm.gridApi.grid.api.selection.clearSelectedRows();\n                selectedIds = cohort.patientIds;\n                var selected = vm.options.data.filter(function(v) {\n                    return selectedIds.indexOf(v.patient_ID) != -1;\n                });\n                selected.forEach(function(i) { vm.gridApi.grid.api.selection.selectRow(i); });\n                selectHandler = vm.gridApi.selection.on.rowSelectionChanged($scope, _.debounce(rowSelectionChange, 300));\n\n\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n            // Setup Watches\n            $scope.$watch(\"vm.collection\", function() {\n                osApi.setBusy(true);\n                osApi.query(vm.collection.collection)\n                    .then(function(response) {\n                        angular.element(\".ui-grid-icon-menu\").text(\"Columns\");\n                        var cols = Object.keys(response.data[0])\n                            .map(function(col) {\n                                return { field: col, name: col.replace(/_/gi, ' '), width: 250, visible: true };\n                            });\n                        vm.options.columnDefs = cols;\n                        vm.options.data = response.data.map(function(v) {\n                            v.color = \"#F0DDC0\";\n                            v.selected = false;\n                            return v;\n                        });\n                        $timeout(function() {\n                            onCohortChange(osApi.getCohort());\n                        }, 1);\n                        vm.setSize();\n                        osApi.setBusy(false);\n                    });\n            });\n\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(vm.setSize);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    // Add Line of Origin\n    // Recalculate On select\n    // Filters\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $http, $window, $scope, $q, d3, $timeout, _) {\n\n\n            // Elements\n            var elDiv = angular.element(\"#plsr-chart\");\n            var elChart = d3.select(\"#plsr-chart\").append(\"svg\");\n            var elGroup = elChart.append(\"g\");\n            var elCircles;\n            var elLines;\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) { return d.id; });\n            elChart.call(elTip);\n\n            // vm\n            var vm = this;\n            vm.genesets = [];\n            vm.datasource = osApi.getDataSource();\n            vm.collection = vm.datasource.molecular[0];\n            vm.dd = {\n                bound: { min: 0, max: 100 },\n                value: { min: 0, max: 100 }\n            };\n            vm.dx = {\n                bound: { min: 0, max: 100 },\n                value: { min: 0, max: 100 }\n            };\n            // vm.geneset\n\n\n            // State\n            var data;\n            var patients;\n            var xScale = new d3.scaleLinear().nice();\n            var yScale = new d3.scaleLinear().nice();\n\n            // Lasso\n            var lasso;\n            var lasso_start = function() {\n                lasso.items()\n                    .attr(\"r\", 3.5) // reset size\n                    .classed(\"not_possible\", true)\n                    .classed(\"selected\", false);\n            };\n            var lasso_draw = function() {\n                lasso.possibleItems()\n                    .classed(\"not_possible\", false)\n                    .classed(\"possible\", true);\n                lasso.notPossibleItems()\n                    .classed(\"not_possible\", true)\n                    .classed(\"possible\", false);\n            };\n\n            var lasso_end = function() {\n\n                lasso.items()\n                    .classed(\"not_possible\", false)\n                    .classed(\"possible\", false);\n                var ids = lasso.selectedItems().data().map(function(d) {\n                    return d.id;\n                });\n\n                var selectedGenes = lasso.selectedItems().data().map(function(v) { return v.id; });\n                if (selectedGenes.length < 2) {\n                    if (vm.geneset.name != 'Custom') {\n                        alert(\"Please select more than 1 gene\");\n                        return;\n                    } else {\n                        $timeout(function() {\n                            vm.geneset = prevGeneset;\n                        });\n                        return;\n                    }\n                }\n                $timeout(function() {\n                    if (vm.geneset.name != 'Custom') {\n                        prevGeneset = vm.geneset;\n                    }\n\n                    vm.geneset = { name: 'Custom', genes: selectedGenes };\n                });\n            };\n            var prevGeneset;\n\n            lasso = d3.lasso()\n                .closePathSelect(true)\n                .closePathDistance(100)\n                .targetArea(elChart)\n                .on(\"start\", lasso_start)\n                .on(\"draw\", lasso_draw)\n                .on(\"end\", lasso_end);\n\n            // Api\n            function setData(value) {\n\n                if (data === null) return;\n                data = value;\n\n                data.vectors = data.vectors.map(function(v) { return [{ id: v.id, value: [0, 0] }, v]; });\n\n                var range = data.points.reduce(function(p, c) {\n                    var x = c.value[0];\n                    var y = c.value[1];\n                    if (x > p.xMax) p.xMax = x;\n                    if (x < p.xMin) p.xMin = x;\n                    if (y > p.yMax) p.yMax = y;\n                    if (y < p.yMin) p.yMin = y;\n                    return p;\n                }, { xMin: Infinity, xMax: -Infinity, yMin: Infinity, yMax: -Infinity });\n                xScale.domain([range.xMin, range.xMax]);\n                yScale.domain([range.yMin, range.yMax]);\n                draw();\n            }\n\n            function resize() {\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right;\n                var height = $window.innerHeight - 120; //10\n                elDiv.css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n                elChart.attr(\"width\", width).attr(\"height\", height);\n                elGroup.attr(\"width\", width).attr(\"height\", height);\n                xScale.range([50, width - 50]);\n                yScale.range([50, height - 50]);\n                draw();\n            }\n\n            // Render\n            function draw() {\n                if (angular.isUndefined(data)) return;\n                elCircles = elGroup.selectAll(\"circle\").data(data.points);\n                elCircles.enter().append(\"circle\")\n                    .attr(\"class\", \"plsr-node\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.value[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.value[1]);\n                    })\n                    .attr(\"r\", 4)\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                elCircles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                elCircles\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 4)\n                    .attr(\"cx\", function(d) {\n                        return xScale(d.value[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d.value[1]);\n                    });\n                // .style(\"fill\", function(d) {\n                //     return d.color;\n                // })\n                //.style(\"fill-opacity\", 0.8);\n\n\n                var line = d3.line()\n                    .x(function(d) { return xScale(d.value[0]); })\n                    .y(function(d) { return yScale(d.value[1]); });\n\n                elLines = elGroup.selectAll(\".plsr-line\").data(data.vectors);\n\n                elLines.enter().append(\"path\")\n                    .attr(\"class\", \"plsr-line\")\n                    .attr(\"d\", line)\n                    .style(\"stroke\", function(d) {\n                        return (d[0].id == \"age_at_diagnosis\") ? \"#FF9800\" : \"#38347b\";\n                    });\n                elLines.exit().remove();\n                elLines\n                    .transition()\n                    .duration(750)\n                    .attr(\"d\", line);\n\n                lasso.items(elGroup.selectAll(\".plsr-node\"));\n                elChart.call(lasso);\n                osApi.setBusy(false);\n            }\n\n\n\n            // Move To Service \n            function query(disease, genes, samples, features, molecular_collection, clinical_collection, n_components) {\n   \n                \n                var data = { disease: disease, genes: genes, samples: samples, features: features, molecular_collection: molecular_collection, clinical_collection: clinical_collection, n_components: n_components };\n\n                return $http({\n                    method: 'POST',\n                    url: \"http://localhost:11111/plsr\",\n                    data: data,\n                    headers: {\n                        apikey: 'password'\n                    }\n                });\n                \n\n            }\n\n            // Load Data\n            $q.all([\n                osApi.query('lookup_genesets'),\n                osApi.query(osApi.getDataSource().clinical.patient, {\n                    $fields: ['patient_ID', 'gender', 'race', 'age_at_diagnosis', 'days_to_death', 'status_vital']\n                })\n            ]).then(function(responses) {\n                patients = responses[1].data;\n\n                var minMax = patients.reduce(function(p, c) {\n                    if (c.age_at_diagnosis !== null) {\n                        if (p.dx.max < c.age_at_diagnosis) p.dx.max = c.age_at_diagnosis;\n                        if (p.dx.min > c.age_at_diagnosis) p.dx.min = c.age_at_diagnosis;\n                    }\n                    if (c.days_to_death !== null) {\n                        if (p.dd.max < c.days_to_death) p.dd.max = c.days_to_death;\n                        if (p.dd.min > c.days_to_death) p.dd.min = c.days_to_death;\n                    }\n                    return p;\n                }, {\n                    dd: { min: Infinity, max: -Infinity },\n                    dx: { min: Infinity, max: -Infinity }\n                });\n                vm.dd.bound = minMax.dd;\n                vm.dd.value = _.clone(minMax.dd);\n                vm.dx.bound = minMax.dx;\n                vm.dx.value = _.clone(minMax.dx);\n\n                vm.genesets = responses[0].data;\n                vm.geneset = vm.genesets[6];\n\n\n            });\n\n\n            // Watches\n            vm.filterChange = function() {\n                var patientIds = patients.filter(function(patient) {\n                    return (patient.age_at_diagnosis >= vm.dx.value.min && patient.age_at_diagnosis <= vm.dx.value.max && patient.days_to_death >= vm.dd.value.min && patient.days_to_death <= vm.dd.value.max);\n                }).map(function(patient) {\n                    return patient.patient_ID;\n                });\n                if (patientIds.length == 0) {\n                    alert(\"Filter Does Not Contain Any Patients\");\n                    return;\n                }\n                osApi.setBusy(true);\n                osApi.setCohort(patientIds, \"PCA\", osApi.PATIENT);\n            };\n            var onGeneset = $scope.$watch(\"vm.geneset\", function() {\n                if (angular.isUndefined(vm.geneset)) return;\n                osApi.setBusy(true);\n                loadData();\n\n            });\n\n            function loadData() {\n\n                var samples = osApi.getCohort().sampleIds;\n                if (samples.length === 0) samples = Object.keys(osApi.getData().sampleMap);\n\n                query(\"brain\", vm.geneset.genes, samples, [\"age_at_diagnosis\", \"days_to_death\"],\n                    \"tcga_gbmlgg_exp_hiseqv2_ucsc-xena\",\n                    osApi.getDataSource().clinical.patient,\n                    2\n                ).then(function(response) {\n                    data = response.data;\n                    setData({ vectors: data[\"y.loadings\"], points: data[\"x.loadings\"] });\n                    osApi.setBusy(false);\n                });\n            }\n\n            osApi.onResize.add(resize);\n            osApi.onCohortChange.add(loadData);\n            resize();\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, $window, moment, cytoscape) {\n\n            var markersNetwork;\n            var vm = this;\n\n            // Elements\n            var elChart = angular.element(\"#pathways-chart\");\n            var csChart;\n\n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function() {\n                elChart.width('100%');\n                elChart.height($window.innerHeight - 90);\n                if (csChart) {\n                    csChart.resize();\n                    csChart.center();\n                }\n            };\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch();\n                csChart.nodes().map(function(ele) {\n                    if (len === 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result) {\n                markersNetwork = result.data[0];\n\n                csChart = cytoscape({\n                        container: elChart,\n                        elements: markersNetwork.elements,\n                        style: getStyle(),\n                        minZoom: 0.1,\n                        maxZoom: 5,\n                        zoom: 0.2,\n                        wheelSensitivity: 0.5,\n                        layout: {\n                            name: \"preset\",\n                            fit: true\n                        }\n                    })\n                    .on('click', 'node', function(e) {\n                        if (e.cyTarget.data().nodeType != \"gene\") return;\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                        });\n                    })\n                    .on('click', 'edge', function(e) {\n\n                        // links =[\n                        //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                        //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                        //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                        //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                        // ];\n                        // $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        // $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                        // $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n\n                        angular.element('#gbm-webpage').modal();\n                        $scope.$apply(function() {\n                            vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                        });\n\n                    }).on('mouseover', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().source + \" Extract\";\n                        });\n\n                        e.cyTarget.style({\n                            'width': '4px'\n                        });\n                    }).on('mouseout', 'edge', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                        e.cyTarget.style({\n                            'width': '2px'\n                        });\n                    }).on('mouseover', 'node', function(e) {\n                        $scope.$apply(function() {\n                            vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                        });\n                    }).on('mouseout', 'node', function() {\n                        $scope.$apply(function() {\n                            vm.tip = null;\n                        });\n                    });\n\n                vm.resize();\n                osApi.setBusy(false);\n            });\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ];\n            }\n\n            // Listen For Resize\n            osApi.onResize.add(vm.resize);\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController($q, osApi, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            // Loading ...\n            osApi.setBusy(true);\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\");\n            var d3Points = d3Chart.append(\"g\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var circles;\n\n            // Add Labels\n            d3xAxis.append(\"text\")\n                .attr(\"x\", 50)\n                .attr(\"y\", 15)\n                .text(\"PC1\");\n\n\n            d3yAxis.append(\"text\")\n                .attr(\"y\", 55)\n                .attr(\"x\", 25)\n                .text(\"PC2\");\n\n            // Properties\n            var clusterCollection = osApi.getDataSource().disease + \"_cluster\";\n            var scaleX, scaleY, axisX, axisY;\n            var data, minMax;\n            var width, height;\n            var colors = {\n                data: [],\n                dataset: osApi.getDataSource().disease,\n                name: \"None\",\n                type: \"color\"\n            };\n\n            // View Model Update\n            var vm = (function(vm, osApi) {\n                vm.loadings = [];\n                vm.pc1 = vm.pc2 = [];\n                vm.datasource = osApi.getDataSource();\n                vm.geneSets = [];\n                vm.geneSet = null;\n                vm.search = \"\";\n                vm.selectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", true);\n                            allIds.push(d.id);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osApi.setCohort(allIds, \"PCA\", osApi.SAMPLE);\n                };\n                vm.deselectColor = function(e) {\n                    var ids = e.values;\n                    var allIds = [];\n                    d3.selectAll(\"circle\").each(function(d) {\n                        if (ids.indexOf(d.id) != -1) {\n                            d3.select(this).classed(\"pca-node-selected\", false);\n                        } else {\n                            if (d3.select(this).classed(\"pca-node-selected\")) allIds.push(d.id);\n                        }\n                    });\n                    osApi.setCohort(allIds, \"PCA\", osApi.SAMPLE);\n                };\n                return vm;\n            })(this, osApi);\n\n            // Setup Watches\n            $scope.$watch('vm.geneSet', function() {\n                if (vm.geneSet === null) return;\n                vm.sources = vm.geneSet.sources;\n                if (angular.isUndefined(vm.source)) {\n                    vm.source = vm.sources[0];\n                } else {\n                    var newSource = vm.sources.filter(function(v) { return (v.name === vm.source.name); });\n                    vm.source = (newSource.length === 1) ? newSource[0] : vm.sources[0];\n                }\n            });\n            $scope.$watch('vm.source', function() {\n                if (vm.geneSet === null) return;\n                vm.pcaTypes = vm.source.types;\n                if (angular.isUndefined(vm.pcaType)) {\n                    vm.pcaType = vm.pcaTypes[0];\n                } else {\n                    var newSource = vm.pcaTypes.filter(function(v) { return (v.name === vm.pcaType.name); });\n                    vm.pcaType = (newSource.length === 1) ? newSource[0] : vm.pcaTypes[0];\n                }\n            });\n            $scope.$watch('vm.pcaType', function(geneset) {\n                if (angular.isUndefined(geneset)) return;\n                osApi.query(clusterCollection, {\n                        disease: vm.datasource.disease,\n                        geneset: vm.geneSet.name,\n                        input: vm.pcaType.name,\n                        source: vm.source.name\n                    })\n                    .then(function(response) {\n\n                        var d = response.data[0];\n\n                        // Process PCA Variance\n                        vm.pc1 = [\n                            { name: 'PC1', value: d.metadata.variance[0] },\n                            { name: '', value: 100 - d.metadata.variance[0] }\n                        ];\n                        vm.pc2 = [\n                            { name: 'PC2', value: d.metadata.variance[1] },\n                            { name: '', value: 100 - d.metadata.variance[1] }\n                        ];\n\n                        // Process Loadings\n                        var loadings = response.data[0].loadings\n                            .map(function(v) {\n                                v.max = Math.max.apply(null, v.d.map(function(v) { return Math.abs(v); }));\n                                return v;\n                            })\n                            .sort(function(a, b) {\n                                return b.max - a.max;\n                            })\n                            .slice(0, 50);\n\n                        var scale = d3.scaleLinear()\n                            .domain([loadings[loadings.length - 1].max, loadings[0].max])\n                            .range([0.1, 1]);\n\n\n                        vm.loadings = loadings.map(function(v) {\n                            return {\n                                tip: v.d.reduce(function(p, c) {\n                                    p.index += 1;\n                                    p.text += \"<br>PC\" + p.index + \": \" + (c * 100).toFixed(2);\n                                    return p;\n                                }, { text: v.id, index: 0 }).text,\n                                value: this(v.max)\n                            };\n                        }, scale);\n\n\n                        // Process Scores\n                        data = d.scores.map(function(v) {\n                            v.d.id = v.id;\n                            return v.d;\n                        });\n\n                        minMax = data.reduce(function(p, c) {\n                            p.xMin = Math.min(p.xMin, c[0]);\n                            p.xMax = Math.max(p.xMax, c[0]);\n                            p.yMin = Math.min(p.yMin, c[1]);\n                            p.yMax = Math.max(p.yMax, c[1]);\n                            return p;\n                        }, {\n                            xMin: Infinity,\n                            yMin: Infinity,\n                            xMax: -Infinity,\n                            yMax: -Infinity\n                        });\n\n\n                        draw();\n                    });\n            });\n\n            // Utility Functions\n            function setSelected() {\n                var selectedIds = cohort.sampleIds;\n                d3Points.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                    return (selectedIds.indexOf(this.__data__.id) >= 0);\n                });\n\n            }\n\n            function setColors() {\n\n                // Set Legend\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                // If No Color Specified\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    data.forEach(function(v) {\n                        v.color = '#0096d5';\n                    });\n\n                    // Color Based On V\n                } else {\n                    var degMap = colors.data.reduce(function(p, c) {\n                        for (var i = 0; i < c.values.length; i++) {\n                            p[c.values[i]] = c.color;\n                        }\n                        return p;\n                    }, {});\n                    data = data.map(function(v) {\n                        v.color = (angular.isDefined(this[v.id])) ? this[v.id] : \"#DDD\";\n                        return v;\n                    }, degMap);\n                }\n            }\n\n            var lasso_start = function() {\n\n                lasso.items()\n                    .attr(\"r\", 3.5) // reset size\n                    .classed(\"not_possible\", true)\n                    .classed(\"selected\", false);\n            };\n\n            var lasso_draw = function() {\n\n\n                // Style the possible dots\n                lasso.possibleItems()\n                    .classed(\"not_possible\", false)\n                    .classed(\"possible\", true);\n\n                // Style the not possible dot\n                lasso.notPossibleItems()\n                    .classed(\"not_possible\", true)\n                    .classed(\"possible\", false);\n            };\n\n            var lasso_end = function() {\n\n                // Reset the color of all dots\n                lasso.items()\n                    .classed(\"not_possible\", false)\n                    .classed(\"possible\", false);\n\n                var ids = lasso.selectedItems().data().map(function(d) {\n                    return d.id;\n                });\n                osApi.setCohort(ids, \"PCA\", osApi.SAMPLE);\n\n            };\n\n            var lasso = d3.lasso()\n                .closePathSelect(true)\n                .closePathDistance(100)\n                .targetArea(d3Chart)\n                .on(\"start\", lasso_start)\n                .on(\"draw\", lasso_draw)\n                .on(\"end\", lasso_end);\n\n            function draw() {\n\n                // Colorize\n                setColors();\n\n                // Size\n                var layout = osApi.getLayout();\n                width = $window.innerWidth - layout.left - layout.right;\n                height = $window.innerHeight - 120; //10\n                angular.element(\"#pca-chart\").css({\n                    \"width\": width + \"px\",\n                    \"padding-left\": layout.left + \"px\"\n                });\n\n                d3Chart.attr(\"width\", width).attr(\"height\", height);\n                d3Points.attr(\"width\", width).attr(\"height\", height);\n\n                // Scale\n                scaleX = d3.scaleLinear().domain([minMax.xMin, minMax.xMax]).range([50, width - 50]).nice();\n                scaleY = d3.scaleLinear().domain([minMax.yMin, minMax.yMax]).range([50, height - 50]).nice();\n\n                // Draw\n                circles = d3Points.selectAll(\"circle\").data(data);\n                circles.enter().append(\"circle\")\n                    .attr(\"class\", \"pca-node\")\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .attr(\"r\", 3)\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    });\n\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n                circles\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .attr(\"r\", 3)\n                    .attr(\"cx\", function(d) {\n                        return scaleX(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return scaleY(d[1]);\n                    })\n                    .style(\"fill\", function(d) {\n                        return d.color;\n                    })\n                    .style(\"fill-opacity\", 0.8);\n\n                // Axis\n                axisX = d3.axisTop().scale(scaleX).ticks(3);\n                axisY = d3.axisLeft().scale(scaleY).ticks(3);\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + height * 0.5 + \")\")\n                    .call(axisX);\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + width * 0.5 + \", 0)\")\n                    .call(axisY);\n\n\n                lasso.items(d3Points.selectAll(\"circle\"));\n                d3Chart.call(lasso);\n\n                onCohortChange(osApi.getCohort());\n                osApi.setBusy(false);\n\n\n            }\n\n\n            // App Event :: Resize\n            osApi.onResize.add(draw);\n\n            // App Event :: Color change\n            var onPatientColorChange = function(value) {\n                colors = value;\n                vm.showPanelColor = false;\n                draw();\n            };\n            osApi.onPatientColorChange.add(onPatientColorChange);\n\n            // App Event :: Cohort Change\n            var cohort = osApi.getCohorts();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n\n            osApi.query(clusterCollection, {\n                dataType: 'PCA',\n                $fields: ['input', 'geneset', 'source']\n            }).then(function(response) {\n                var data = response.data.map(function(v) {\n                    return {\n                        a: v.geneset,\n                        b: v.source,\n                        c: v.input\n                    };\n                });\n                var result = _.reduce(data, function(memo, val) {\n                    var tmp = memo;\n                    _.each(val, function(fldr) {\n                        if (!_.has(tmp, fldr)) {\n                            tmp[fldr] = {};\n                        }\n                        tmp = tmp[fldr];\n                    });\n                    return memo;\n                }, {});\n\n                vm.geneSets = Object.keys(result).map(function(geneset) {\n                    return {\n                        name: geneset,\n                        sources: Object.keys(result[geneset]).map(function(source) {\n                            return {\n                                name: source,\n                                types: Object.keys(result[geneset][source]).map(function(type) {\n                                    return {\n                                        name: type\n                                    };\n                                })\n                            };\n                        })\n                    };\n                });\n                vm.geneSet = vm.geneSets[0];\n\n\n            });\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                osApi.onResize.remove(draw);\n                osApi.onPatientColorChange.remove(onPatientColorChange);\n                osApi.onCohortChange.remove(onCohortChange);\n            });\n        }\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n\n        function beep() {\n            _beep.play();\n        }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http) {\n         //window.collections = {};\n         var url = \"/api/\";\n         url = \"https://dev.oncoscape.sttrcancer.io/api/\";\n         var queryString = function(req) {\n             //window.collections[req.table] = 1;\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/\" + encodeURIComponent(angular.toJson(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n             return $http({\n                 method: 'GET',\n                 url: queryString(req),\n                 headers: {\n                     apikey: 'password'\n                 }\n             });\n         };\n\n         // Return Object\n         return {\n             queryString: queryString,\n             query: query\n         };\n     }\n })();\n(function() {\n    'use strict';\n    angular.module('oncoscape').directive('ngEnter', function() {\n        return function(scope, element, attrs) {\n            element.bind(\"keydown keypress\", function(event) {\n                if (event.which === 13) {\n                    scope.$apply(function() {\n                        scope.$eval(attrs.ngEnter);\n                    });\n\n                    event.preventDefault();\n                }\n            });\n        };\n    });\n    /*\n        angular\n            .module('oncoscape')\n            .provider({\n                $exceptionHandler:\n    */\n    /** @ngInject */\n    /*        \n            function exceptionFactory(){\n            \tvar handler = function (exception, cause){\n                    window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                    console.log(exception);\n                    exception.stack();\n                    if (angular.isDefined(cause)) console.log(cause);\n            \t}\n                this.$get = function() { return handler; };\n            }\n           });\n    */\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osAuth', osAuth);\n\n    /** @ngInject */\n    function osAuth(osHttp, $http, signals, $location, auth, osApi) {\n\n        // Events\n        var onLogin = new signals.Signal(); // Fired When Data Changes\n        var onLogout = new signals.Signal(); // Fired When Selection changes\n\n        // User Object\n        var user = null;\n        var getUser = function() {\n            return user;\n        };\n        var isAuthenticated = function() {\n            return user != null;\n        };\n\n        // Authentication Sources\n        var authSource = null;\n        var authSources = [{\n            id: 'guest',\n            name: 'Guest',\n            icon: 'fa fa-user'\n        }, {\n            id: 'google',\n            name: 'Google',\n            icon: 'fa fa-google-plus',\n            key: '428912153446-7c82srcvu1bk1nramiqqctne005epl6s.apps.googleusercontent.com',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }];\n\n        /*}, {\n            id: 'facebook',\n            name: 'Facebook',\n            icon: 'fa fa-facebook',\n            key: '142281766208909',\n            mode: 'implicit'\n        }, {\n            id: 'github',\n            name: 'GitHub',\n            icon: 'fa fa-github-alt',\n            key: '78b5dbe2ba756151169e',\n            mode: 'explicit'\n        },{\n            id: 'instagram',\n            name: 'Instagram',\n            icon: 'fa fa-instagram',\n            key: '3578c1b7c8c248c6ba80784b9ede0c52',\n            mode: 'implicit'\n        }, {\n            id: 'linkedin',\n            name: 'LinkedIn',\n            icon: 'fa fa-linkedin',\n            key: '7869gkuwwnacez',\n            mode: 'explicit'\n        }, {\n            id: 'twitter',\n            name: 'Twitter',\n            icon: 'fa fa-twitter',\n            key: 'vrbGiMB0LCtuHeShKE6v5IIFa',\n            mode: 'implicit'\n        }, {\n            id: 'windows',\n            name: 'Win Live',\n            icon: 'fa fa-windows',\n            key: 'caee23ac-d4aa-41c7-9bda-166b86c52de3',\n            mode: 'implicit'\n        }, {\n            id: 'dropbox',\n            name: 'Dropbox',\n            icon: 'fa fa-dropbox',\n            key: 'dropbox',\n            mode: 'implicit'\n        }, {\n            id: 'flickr',\n            name: 'Flickr',\n            icon: 'fa fa-flickr',\n            key: '',\n            mode: 'implicit'\n        }*/\n\n        var getAuthSources = function() {\n            return authSources;\n        };\n\n        var loginGuest = function() {\n            user = {\n                network: 'guest',\n                id: 'x',\n                name: 'Guest',\n                thumb: 'Guest.png'\n            };\n            osApi.init().then(function() {\n                onLogin.dispatch();\n            });\n        }\n        var login = function(source) {\n            if (source.id == 'guest') {\n                user = {\n                    network: 'guest',\n                    id: 'x',\n                    name: 'Guest',\n                    thumb: 'Guest.png'\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n                return;\n            }\n            auth().login(source.id, {\n                response_type: 'code',\n                display: 'page',\n                force: false,\n                scope: \"email\"\n            });\n        };\n\n        var logout = function() {\n            auth().logout(authSource, {\n                force: false\n            }, onLogout.dispatch);\n        };\n\n        auth.init(\n            authSources.reduce(function(prev, curr) {\n                prev[curr.id] = curr.key;\n                return prev;\n            }, {}), {\n                oauth_proxy: '/api/auth',\n                redirect_uri: 'https://dev.oncoscape.sttrcancer.io/'\n            }\n        );\n\n        auth.on('auth.login', function(e) {\n            osApi.setBusy();\n            authSource = e.network;\n            auth(authSource).api(\"/me\", \"get\", null, function(e) {\n                user = {\n                    network: authSource,\n                    id: e.id,\n                    name: e.name,\n                    thumb: e.thumbnail\n                };\n                osApi.init().then(function() {\n                    onLogin.dispatch();\n                });\n            });\n        });\n\n        return {\n            isAuthenticated: isAuthenticated,\n            loginGuest: loginGuest,\n            getUser: getUser,\n            getAuthSources: getAuthSources,\n            login: login,\n            logout: logout,\n            onLogin: onLogin,\n            onLogout: onLogout\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', osApi);\n\n    /** @ngInject */\n    function osApi(osHttp, $http, signals, $location, $q, jStat, $, $window, _, moment) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n        var onResize = new signals.Signal();\n        var onNavChange = new signals.Signal();\n        var onCohortToolInfo = new signals.Signal();\n        var onCohortChange = new signals.Signal();\n        var onCohortsChange = new signals.Signal();\n        var onPatientColorChange = new signals.Signal();\n\n        // Resize\n        angular.element($window).bind('resize', _.debounce(onResize.dispatch, 900));\n\n        // Layout Metrics\n        var getLayout = function() {\n            var rt = angular.element(\".tray-right\").attr(\"locked\");\n            if (angular.isUndefined(rt)) rt = \"true\";\n            return {\n                left: (angular.element('#cohortmenu-lock').attr(\"locked\") == \"true\") ? 300 : 0,\n                right: (rt === \"true\") ? 300 : 0\n            };\n        };\n        var setBusy = function(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n        };\n\n\n        // Factories\n        var statsFactory = (function(jStat) {\n\n            var km = (function(jStat) {\n\n                var pluck,\n                    uniq,\n                    sortBy,\n                    groupBy,\n                    last,\n                    find;\n\n                function multiply(a, b) {\n                    var r = jStat.multiply(a, b);\n                    return r.length ? r : [\n                        [r]\n                    ];\n                }\n\n                function transpose(a) {\n                    var r = jStat.transpose(a);\n                    return r[0].length ? r : [r];\n                }\n\n                function timeTable(tte, ev) {\n                    var exits = sortBy(tte.map(function(x, i) { return { tte: x, ev: ev[i] }; }), 'tte'), // sort and collate\n                        uexits = uniq(pluck(exits, 'tte'), true), // unique tte\n                        gexits = groupBy(exits, function(x) { return x.tte; }); // group by common time of exit\n                    return uexits.reduce(function(a, tte) { // compute d_i, n_i for times t_i (including censor times)\n                        var group = gexits[tte],\n                            l = last(a) || { n: exits.length, e: 0 },\n                            events = group.filter(function(x) { return x.ev; });\n\n                        a.push({\n                            n: l.n - l.e, // at risk\n                            e: group.length, // number exiting\n                            d: events.length, // number events (death)\n                            t: group[0].tte // time\n                        });\n                        return a;\n                    }, []);\n                }\n\n                function compute(tte, ev) {\n                    var dini = timeTable(tte, ev);\n                    return dini.reduce(function(a, dn) { // survival at each t_i (including censor times)\n                        var l = last(a) || { s: 1 };\n                        if (dn.d) { // there were events at this t_i\n                            a.push({ t: dn.t, e: true, s: l.s * (1 - dn.d / dn.n), n: dn.n, d: dn.d, rate: dn.d / dn.n });\n                        } else { // only censors\n                            a.push({ t: dn.t, e: false, s: l.s, n: dn.n, d: dn.d, rate: null });\n                        }\n                        return a;\n                    }, []);\n                }\n\n                function expectedObservedEventNumber(si, tte, ev) {\n                    var data = timeTable(tte, ev),\n                        expectedNumber,\n                        observedNumber,\n                        dataByTimeTable = [];\n\n                    si = si.filter(function(item) { return item.e; });\n\n                    expectedNumber = si.reduce(function(memo, item) {\n                        var pointerInData = find(data, function(x) { return (x.t >= item.t); });\n\n                        if (pointerInData) {\n                            var expected = pointerInData.n * item.rate;\n                            dataByTimeTable.push(pointerInData);\n                            return memo + expected;\n                        } else {\n                            return memo;\n                        }\n\n                    }, 0);\n\n                    observedNumber = ev.filter(function(x) { return x; }).length;\n\n                    return {\n                        expected: expectedNumber,\n                        observed: observedNumber,\n                        dataByTimeTable: dataByTimeTable,\n                        timeNumber: dataByTimeTable.length\n                    };\n                }\n\n                function covariance(allGroupsRes, OETable) {\n                    var vv = jStat.zeros(OETable.length),\n                        i, j, //groups\n                        t, //timeIndex\n                        N, //total number of samples\n                        Ki, Kj, // at risk number from each group\n                        n; //total observed\n\n                    for (i = 0; i < OETable.length; i++) {\n                        for (j = i; j < OETable.length; j++) {\n                            for (t = 0; t < allGroupsRes.length; t++) {\n                                N = allGroupsRes[t].n;\n                                n = allGroupsRes[t].d;\n                                if (t < OETable[i].timeNumber && t < OETable[j].timeNumber) {\n                                    Ki = OETable[i].dataByTimeTable[t].n;\n                                    Kj = OETable[j].dataByTimeTable[t].n;\n                                    // when N==1: only 1 subject, no variance\n                                    if (i !== j && N !== 1) {\n                                        vv[i][j] -= n * Ki * Kj * (N - n) / (N * N * (N - 1));\n                                        vv[j][i] = vv[i][j];\n                                    } else if (N !== 1) { // i==j\n                                        vv[i][i] += n * Ki * (N - Ki) * (N - n) / (N * N * (N - 1));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return vv;\n                }\n\n                // This might be the mis-named.\n                function solve(a, b) {\n                    var bT = transpose(b),\n                        aInv = jStat.inv(a);\n                    return multiply(multiply(b, aInv), bT);\n                }\n\n                function allGroupsKm(groups) {\n                    var tte = [].concat.apply([], pluck(groups, 'tte')),\n                        ev = [].concat.apply([], pluck(groups, 'ev'));\n                    return compute(tte, ev).filter(function(t) { return t.e; });\n                }\n\n                // allGroupsRes: km of all groups combined?\n                // groupedDataTable: [{tte, ev}, ...]\n                function logranktest(groupedDataTable) {\n                    var allGroupsRes = allGroupsKm(groupedDataTable),\n                        pValue = 1,\n                        KMStats,\n                        dof, // degree of freedom\n                        OETable,\n                        OMinusEVector, // O-E\n                        vv; //covariant matrix\n\n                    // Table of observed and expected events, for each group.\n                    OETable = groupedDataTable\n                        .map(function(v) { return expectedObservedEventNumber(allGroupsRes, v.tte, v.ev); })\n                        .filter(function(r) { return r.expected; });\n\n                    // Find O-E and covariance, and drop one dimension from each\n                    OMinusEVector = OETable.map(function(r) { return r.observed - r.expected; }).slice(1);\n                    vv = covariance(allGroupsRes, OETable).slice(1).map(function(r) { return r.slice(1); }); // drop 1st row & 1st column\n\n                    dof = OETable.length - 1;\n\n                    if (dof > 0) {\n                        KMStats = solve(vv, [OMinusEVector])[0][0];\n                        pValue = 1 - jStat.chisquare.cdf(KMStats, dof);\n                    }\n\n                    return {\n                        dof: dof,\n                        KMStats: KMStats,\n                        pValue: pValue\n                    };\n                }\n\n                var exports = {\n                    init: function(obj) {\n                        pluck = obj.pluck;\n                        uniq = obj.uniq;\n                        sortBy = obj.sortBy;\n                        groupBy = obj.groupBy;\n                        last = obj.last;\n                        find = obj.find;\n                        return exports; // return the module for convenience of the caller\n                    },\n                    compute: compute,\n                    expectedObservedEventNumber: expectedObservedEventNumber,\n                    logranktest: logranktest\n                };\n                return exports;\n            })(jStat).init(_);\n\n            function getNumericStats(patients, attribute) {\n                var len = patients.length;\n                var bin =\n                    (len < 2) ? 1 :\n                    (len < 6) ? 2 :\n                    (len < 9) ? 3 :\n                    (len < 18) ? 6 :\n                    (len < 36) ? 8 :\n                    10;\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n\n                var data = {\n                    type: \"numeric\",\n                    min: jStat.min(props),\n                    max: jStat.max(props),\n                    range: jStat.range(props),\n                    sd: jStat.stdev(props),\n                    count: 0,\n                    hist: jStat.histogram(props, bin),\n                    histRange: [],\n                    bins: bin\n                };\n\n                data.histRange = [jStat.min(data.hist), jStat.max(data.hist)];\n                data.count = data.hist.reduce(function(p, c) { p += c; return p; }, 0);\n\n                bin = Math.round(data.range / bin);\n                data.hist = data.hist.map(function(pt) {\n                    var rv = {\n                        label: this.start + \"-\" + (this.start + this.bin),\n                        value: pt\n                    };\n                    this.start += this.bin;\n                    return rv;\n                }, {\n                    bin: bin,\n                    start: data.min\n                });\n                return data;\n            }\n\n            function getFactorStats(patients, attribute) {\n\n                var props = patients.map(function(pd) {\n                    return pd[attribute];\n                });\n                var factors = props\n                    .reduce(function(prev, curr) {\n                        prev[curr] = (prev.hasOwnProperty(curr)) ? prev[curr] + 1 : 1;\n                        return prev;\n                    }, {});\n\n                factors = Object.keys(factors).map(function(key) {\n                    return {\n                        label: key,\n                        value: this.factors[key]\n                    };\n                }, {\n                    factors: factors\n                });\n\n                var values = factors.map(function(v) {\n                    return v.value;\n                });\n                var data = {\n                    type: \"factor\",\n                    min: jStat.min(values),\n                    max: jStat.max(values),\n                    range: jStat.range(values),\n                    sd: jStat.stdev(values),\n                    count: 0,\n                    hist: factors,\n                    histRange: [],\n                    bins: factors.length\n                };\n                data.histRange = [data.min, data.max];\n                data.count = data.hist.reduce(function(p, c) { p += c.value; return p; }, 0);\n                return data;\n            }\n\n            var createHistogram = function(ids, data) {\n\n                // Transform Ids Into Clinical Records + Remove Nulls\n                var clinical = ids.map(function(v) {\n                    var patient = this[v];\n                    if (patient === null) return null;\n                    return patient.clinical;\n                }, data.patientMap).filter(function(v) { return v != null; })\n\n                return {\n                    total: Object.keys(data.patientMap).length,\n                    selected: clinical.length,\n                    features: [{\n                            label: \"Age At Diagnosis\",\n                            data: getNumericStats(clinical, \"age_at_diagnosis\"),\n                            prop: \"age_at_diagnosis\",\n                            type: \"numeric\"\n                        },\n                        //{label: \"Death\", data:getNumericStats(data,\"days_to_death\"), prop:\"days_to_death\" , type:\"numeric\"},\n                        {\n                            label: \"Gender\",\n                            data: getFactorStats(clinical, \"gender\"),\n                            prop: \"gender\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Race\",\n                            data: getFactorStats(clinical, \"race\"),\n                            prop: \"race\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Ethnicity\",\n                            data: getFactorStats(clinical, \"ethnicity\"),\n                            prop: \"ethnicity\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Vital\",\n                            data: getFactorStats(clinical, \"status_vital\"),\n                            prop: \"status_vital\",\n                            type: \"factor\"\n                        }, {\n                            label: \"Disease Status\",\n                            data: getFactorStats(clinical, \"last_known_disease_status\"),\n                            prop: \"last_known_disease_status\",\n                            type: \"factor\"\n                        }\n                    ]\n                };\n            };\n\n            var createSurvival = function(ids, data, cohortAll) {\n\n                // Transform Ids Into Survival Records + Remove Nulls\n                var survival = ids.map(function(v) {\n                        var patient = this[v];\n                        if (patient === null) return null;\n                        return patient.survival;\n                    }, data.patientMap)\n                    .filter(function(v) { return angular.isDefined(v); });\n\n                if (survival.length == 0) return null;\n\n                /* \n                Transform Survival Records Into KM Data The Result Is A Value Object Containing The Following\n                t = time in days\n                c = array of censored patient ids\n                d = array of dead patient ids\n                n = numer of patients remaining\n                s = survival rate\n                p = previous survival rate \n                */\n                var te = survival.reduce(function(p, c) {\n                    p.tte.push(c.tte);\n                    p.ev.push(c.ev);\n                    return p;\n                }, { tte: [], ev: [] });\n\n                var compute = km.compute(te.tte, te.ev)\n                    .map(function(r) { return _.omit(r, ['rate', 'e', 'n', 'd']); })\n                compute.forEach(function(c) {\n                    var cd = this.survival.reduce(function(p, c) {\n                        if (p.time == c.tte) p[c.ev ? \"d\" : \"c\"].push(c.pid);\n                        return p;\n                    }, { c: [], d: [], time: c.t });\n                    c.c = cd.c;\n                    c.d = cd.d;\n                }, { survival: survival });\n\n\n                var lrt = (cohortAll === null) ? { \"KMStats\": \"NA\", \"pValue\": \"NA\", dof: \"NA\" } :\n                    km.logranktest([te, cohortAll.survival.data]);\n\n                var rv = {\n                    data: te,\n                    compute: compute,\n                    logrank: lrt\n                };\n\n                var firstEvent = rv.compute[0];\n                if (firstEvent.s !== 1 || firstEvent.t !== 0) {\n                    rv.compute.unshift({ c: [], d: [], s: 1, t: firstEvent.t });\n                    rv.compute.unshift({ c: [], d: [], s: 1, t: 0 });\n                }\n\n                return rv;\n            };\n\n            return {\n                km: km,\n                createHistogram: createHistogram,\n                createSurvival: createSurvival\n            };\n        })(jStat);\n\n\n        // Properties\n        var _dataSources; // All Data Sources\n        var _dataSource; // Selected Data Source\n        var _toolsAll; // List of All Tools\n        var _tools; // List of Tools For DataSource\n        var _data = null; // This is the clinical and sample to patient mapping data.\n        var _cohortAll; // Precalculated Cohort of All Patients / Samples \n        var _cohorts = null; // Collection of Cohorts\n        var _cohort = null; // Selected Cohorts\n        var _patientColor;\n        var _cohortToolInfo = { 'numSamples': 500, 'numPatients': 500 };\n        var _cohortDatasetInfo = { 'numSamples': 0, 'numPatients': 0 };\n\n\n\n        var getTools = function() { return _tools; };\n        var getCohorts = function() { return _cohorts; };\n        var getCohort = function() { return _cohort; };\n        var getCohortToolInfo = function() { return _cohortToolInfo; };\n        var getCohortDatasetInfo = function() { return _cohortDatasetInfo; };\n        var getData = function() { return _data; };\n        var getPatientColor = function() { return _patientColor; };\n        var getDataSources = function() { return _dataSources; };\n        var getDataSource = function() { return _dataSource; };\n        var setPatientColor = function(patientColor) {\n            _patientColor = patientColor;\n            onPatientColorChange.dispatch(patientColor);\n        };\n        var setCohortToolInfo = function(cohortToolData) {\n            _cohortToolInfo = cohortToolData;\n            onCohortToolInfo.dispatch(_cohortToolInfo);\n        };\n        var setDataSource = function(value) {\n\n            return new Promise(function(resolveDataSource) {\n\n                // Set Data Source Object Using String or Object\n                if (angular.isObject(value)) {\n                    if (_dataSource === value) {\n                        resolveDataSource();\n                        return;\n                    }\n                    _dataSource = value;\n                } else if (angular.isString(value)) {\n                    if (_dataSource.disease === value) {\n                        resolveDataSource();\n                        return;\n                    }\n                    _dataSource = _dataSources.filter(function(v) {\n                        return v.disease == this.key;\n                    }, {\n                        key: value\n                    })[0];\n                }\n\n                // Update What Tools Are Availible Based On Data Sources\n                _tools = _toolsAll.filter(function(item) {\n                    return (_dataSource.tools.indexOf(item.route) !== -1);\n                }).sort(function(a, b) {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                });\n\n\n                // Load Sample Maps\n                Promise.all([query(_dataSource.clinical.samplemap), query(_dataSource.clinical.patient)]).then(function(responses) {\n                    var data = {};\n\n                    // Map of Samples To Patients\n                    data.sampleMap = responses[0].data[0];\n\n                    // Map of Patients To Samples + Clinical Using Samples Ids\n                    data.patientMap = Object.keys(data.sampleMap).reduce(function(p, c) {\n                        var patient = data.sampleMap[c];\n                        var sample = c;\n                        if (p.hasOwnProperty(patient)) {\n                            p[patient].samples.push(sample);\n                        } else {\n                            p[patient] = { samples: [sample] };\n                        }\n                        return p;\n                    }, {});\n                    responses[1].data.reduce(function(p, c) {\n                        if (p.hasOwnProperty(c.patient_ID)) {\n                            p[c.patient_ID].clinical = c;\n                        } else {\n                            p[c.patient_ID] = { clinical: c, samples: [] };\n                        }\n                        return p;\n                    }, data.patientMap);\n\n                    _cohortDatasetInfo.numSamples = Object.keys(data.sampleMap).length;\n                    _cohortDatasetInfo.numPatients = Object.keys(data.patientMap).length;\n\n                    // Survival Data \n                    responses[1].data.map(function(v) {\n\n                        // No Status - Exclude\n                        if (!v.hasOwnProperty(\"status_vital\")) return null;\n                        if (v.status_vital === null) return null;\n\n                        // Get Time - Or Exclude    \n                        var status = v.status_vital.toString().trim().toUpperCase();\n                        var time;\n                        if (status == \"ALIVE\") { // Alive = Sensor 2\n                            if (!v.hasOwnProperty(\"days_to_last_follow_up\")) return null;\n                            time = parseInt(v.days_to_last_follow_up);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, ev: false, tte: time };\n                        }\n                        if (status == \"DEAD\") { // Dead = Sensor 1\n                            if (!v.hasOwnProperty(\"days_to_death\")) return null;\n                            time = parseInt(v.days_to_death);\n                            if (time < 0) time = 0;\n                            if (isNaN(time)) return null;\n                            return { pid: v.patient_ID, ev: true, tte: time };\n                        }\n                        return null;\n                    }).reduce(function(p, c) {\n                        if (c !== null) {\n                            p[c.pid].survival = c;\n                        }\n                        return p;\n                    }, data.patientMap);\n\n                    _data = data;\n                    _cohortAll = {\n                        color: '#039BE5',\n                        patientIds: [],\n                        sampleIds: [],\n                        name: 'All Patients + Samples',\n                        histogram: statsFactory.createHistogram(Object.keys(data.patientMap), data),\n                        survival: statsFactory.createSurvival(Object.keys(data.patientMap), data, null),\n                        numPatients: Object.keys(_data.patientMap).length,\n                        numSamples: Object.keys(_data.sampleMap).length,\n                        numClinical: Object.keys(_data.patientMap).reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                        show: true,\n                        type: 'ALL'\n                    };\n\n                    _cohorts = localStorage.getItem(_dataSource.disease + 'Cohorts');\n\n                    if (_cohorts !== null) {\n                        _cohorts = angular.fromJson(_cohorts);\n                        setCohort(_cohorts[0]);\n                    } else {\n                        _cohorts = [_cohortAll];\n                        setCohort(_cohortAll);\n                    }\n\n                    // Let everyone know what happened\n                    onCohortsChange.dispatch(_cohorts);\n                    onCohortChange.dispatch(_cohort);\n                    onDataSource.dispatch(_dataSource);\n\n                    // Resolve The Promise\n                    resolveDataSource();\n                });\n            });\n        };\n\n\n\n\n        var createWithSampleIds = function(name, sampleIds, data) {\n            if (sampleIds.length === 0) return _cohortAll;\n            var patientIds = sampleIds\n                .map(function(v) { return this.hasOwnProperty(v) ? this[v] : null; }, data.sampleMap)\n                .filter(function(v) { return (v !== null); }) // Remove Null\n                .filter(function(item, i, ar) { return ar.indexOf(item) === i; }); // Remove Dups\n\n            return create(name, patientIds, sampleIds);\n        };\n\n        var createWithPatientIds = function(name, patientIds, data) {\n\n            if (patientIds.length === 0) return _cohortAll;\n            var sampleIds = [].concat\n                .apply([], patientIds\n                    .map(function(v) { return this.hasOwnProperty(v) ? this[v].samples : null; }, data.patientMap))\n                .filter(function(item, i, ar) { return ar.indexOf(item) === i; });\n\n            return create(name, patientIds, sampleIds);\n        };\n\n        var create = function(name, patientIds, sampleIds) {\n            var survival = statsFactory.createSurvival(patientIds, _data, _cohortAll);\n            var rv = {\n                uuid: Math.random().toString().substr(2),\n                color: '#000',\n                patientIds: patientIds,\n                sampleIds: sampleIds,\n                name: name,\n                histogram: statsFactory.createHistogram(patientIds, _data),\n                survival: (survival === null) ? _cohortAll.survival : survival,\n                numPatients: patientIds.length,\n                numSamples: sampleIds.length,\n                numClinical: patientIds.reduce(function(p, c) { p += (_data.patientMap[c].hasOwnProperty('clinical')) ? 1 : 0; return p; }, 0),\n                show: true,\n                type: 'UNSAVED'\n            };\n            return rv;\n        };\n\n\n        var setCohort = function(cohort, name, type) {\n            // Create Cohort If Array Passed\n            if (angular.isArray(cohort)) {\n                name += \"  (\" + moment().format('hh:mm:ss') + \")\";\n                cohort = (type == \"PATIENT\") ? createWithPatientIds(name, cohort, _data) : createWithSampleIds(name, cohort, _data);\n                cohort.type = (cohort.patientIds.length === 0) ? \"ALL\" : \"UNSAVED\";\n                if (cohort.type != \"ALL\") {\n                    var usedColors = _cohorts.map(function(v) { return v.color; });\n                    var availColors = [\"#E91E63\", \"#673AB7\", \"#4CAF50\", \"#CDDC39\", \"#FFC107\", \"#FF5722\", \"#795548\", \"#607D8B\", \"#03A9F4\", \"#03A9F4\", '#004358', '#800080', '#BEDB39', '#FD7400', '#1F8A70', '#B71C1C', '#880E4F', '#4A148C', '#311B92', '#0D47A1', '#006064', '#1B5E20'].filter(function(v) { return (usedColors.indexOf(v) == -1); });\n                    cohort.color = availColors[0];\n                }\n            }\n            //if (_cohort === cohort) return;\n            _cohort = cohort;\n            onCohortChange.dispatch(_cohort);\n        };\n\n        var saveCohort = function() {\n            _cohort.type = \"SAVED\";\n            _cohorts.push(_cohort);\n            localStorage.setItem(_dataSource.disease + 'Cohorts', angular.toJson(_cohorts));\n\n        };\n        var deleteCohort = function(cohort) {\n            _cohorts.splice(_cohorts.indexOf(cohort), 1);\n            localStorage.setItem(_dataSource.disease + 'Cohorts', angular.toJson(_cohorts));\n            setCohort([], \"\", \"PATIENT\");\n        };\n\n        // Converts Sample Ids To A List of Sample Ids\n        var importIds = function(ids, name) {\n            var sampleIds = _.union.apply(null, ids\n                .map(function(id) { // Convert All Ids to Patient Ids\n                    id = id.toUpperCase().trim(); // Clean input\n                    return _data.sampleMap.hasOwnProperty(id) ? _data.sampleMap[id] : id;\n                })\n                .filter(function(id) { // Remove Invalid Patient Ids\n                    return _data.patientMap.hasOwnProperty(id);\n                })\n                .map(function(id) { // Convert Patient Ids To Sample Arrays\n                    return _data.patientMap[id].samples;\n                })); // Union Merges Arrays + Removes Dups\n\n            setCohort(sampleIds, name, \"SAMPLE\");\n            saveCohort();\n        };\n\n\n\n\n        // Initialize (Load Tools Raw Data + DataSources)\n        var initialized = false;\n\n        function init() {\n            if (initialized) return new Promise(function(resolve) { resolve(_dataSources); });\n            initialized = true;\n            return Promise.all([\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_tools\").then(function(response) {\n                        _toolsAll = response.data;\n                        resolve();\n                    }, reject);\n                }),\n                new Promise(function(resolve, reject) {\n                    query(\"lookup_oncoscape_datasources\", {\n                        beta: false\n                    }).then(function(response) {\n                        _dataSource = { disease: '' };\n                        _dataSources = response.data\n                            .filter(function(d) {\n                                return angular.isDefined(d.img);\n                            })\n                            .map(function(d) {\n                                d.name = d.name.trim();\n                                return d;\n                            })\n                            .sort(function(a, b) {\n                                return (a.img < b.img) ? -1 :\n                                    (a.img > b.img) ? 1 :\n                                    (a.disease < b.disease) ? -1 :\n                                    (a.disease > b.disease) ? 1 :\n                                    0;\n                            });\n                        resolve();\n                    }, reject);\n                })\n            ]);\n        }\n\n        // Query Api\n        var queryString = function(table, query) {\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        };\n        var query = function(table, query) {\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        };\n\n        return {\n\n            // Constants\n            ALL: \"All Patients\",\n            SAMPLE: \"SAMPLE\",\n            PATIENT: \"PATIENT\",\n\n            // Init\n            init: init,\n\n            // RPC\n            query: query,\n            queryString: queryString,\n\n            // Data Sources\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n\n            // Patient Colors\n            setPatientColor: setPatientColor,\n            getPatientColor: getPatientColor,\n\n            // Tools + Layouts\n            getTools: getTools,\n            getLayout: getLayout,\n\n            // Cohort Tool Info\n            setCohortToolInfo: setCohortToolInfo,\n            getCohortToolInfo: getCohortToolInfo,\n            getCohortDatasetInfo: getCohortDatasetInfo,\n\n\n            // Cohort Management\n            getCohorts: getCohorts,\n            getCohort: getCohort,\n            setCohort: setCohort,\n            saveCohort: saveCohort,\n            deleteCohort: deleteCohort,\n            importIds: importIds,\n\n            // Signals\n            onPatientColorChange: onPatientColorChange,\n            onCohortToolInfo: onCohortToolInfo,\n            onNavChange: onNavChange,\n            onDataSource: onDataSource,\n            onResize: onResize,\n            onCohortChange: onCohortChange,\n            onCohortsChange: onCohortsChange,\n\n            // Random\n            setBusy: setBusy,\n            km: statsFactory.km,\n\n            getData: getData\n\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, d3, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n\n            var tmpdata, worker;\n\n            var signal = (function() {\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function() {\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })();\n\n\n            // State\n            var mpState = (function(osApi) {\n                // Retrieve State\n                var mp = localStorage.getItem(\"MP-\" + osApi.getDataSource().disease);\n                var hasState = (mp !== null);\n                if (hasState) mp = angular.fromJson(mp);\n\n\n                var _colors = null;\n                var setColors = function(c) {\n                    _colors = c;\n                };\n                var applyState = function(fn, cyChart) {\n                    if (!hasState) return;\n                    osApi.onPatientColorChange.dispatch(mp.optColors);\n                    requestAnimationFrame(function() {\n                        cyChart.startBatch();\n                        cyChart.add(mp.edges);\n                        cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                            if (\n                                mp.moved.hasOwnProperty(node.id())\n                            ) {\n                                node.position(\n                                    mp.moved[node.id()]\n                                );\n                            }\n                        });\n                        cyChart.endBatch();\n                    });\n\n\n\n                };\n\n                var getOptEdgeColors = function() {\n\n                    if (hasState) return mp.optEdgeColors;\n                    return [{\n                        name: 'Mutation',\n                        abv: 'm',\n                        show: true,\n                        color: '#9C27B0',\n                        class: 'switch-mutation',\n                        count: '',\n                        id: 0\n                    }, {\n                        name: 'Amplification',\n                        abv: 'cnG2',\n                        show: true,\n                        color: '#3F51B5',\n                        class: 'switch-cnG2',\n                        count: '',\n                        id: 2\n                    }, {\n                        name: 'Gain',\n                        abv: 'cnG1',\n                        show: true,\n                        color: '#03A9F4',\n                        class: 'switch-cnG1',\n                        count: '',\n                        id: 1\n                    }, {\n                        name: 'Loss',\n                        abv: 'cnL1',\n                        show: true,\n                        color: '#FF9800',\n                        class: 'switch-cnL1',\n                        count: '',\n                        id: -1\n                    }, {\n                        name: 'Deletion',\n                        abv: 'cnL2',\n                        show: true,\n                        color: '#F44336',\n                        class: 'switch-cnL2',\n                        count: '',\n                        id: -2\n                    }];\n                };\n\n                var getGeneSet = function(genesets) {\n                    if (hasState) {\n                        return genesets.filter(function(v) {\n                            return v.name == mp.optGeneSet.name;\n                        }, mp.optGeneSet.name)[0];\n                    }\n\n                    var datasetGeneset = osApi.getDataSource().geneset;\n                    var gs = genesets.reduce(function(p, c) {\n                        if (c.name === datasetGeneset) { p = c; }\n                        return p;\n                    }, genesets[0]);\n                    return gs;\n                };\n\n                var getPatientLayout = function(layouts) {\n\n                    if (hasState) {\n                        return layouts.filter(function(v) {\n                            return v.name == mp.optPatientLayout.name;\n                        }, mp.optPatientLayout.name)[0];\n                    } else {\n                        return layouts.reduce(function(p, c) {\n                            if (c.hasOwnProperty(\"default\")) {\n                                if (c.default) p = c;\n                            }\n                            return p;\n                        }, layouts[0]);\n                    }\n                };\n\n\n                var save = function(vm, cyChart) {\n                    var s = {};\n                    s.moved = {};\n                    cyChart.$('node[nodeType=\"patient\"]').forEach(function(v) {\n                        if (!_.isMatch(v.data().position, v.position())) {\n                            s.moved[v.id()] = v.position();\n                        }\n                    });\n                    s.optEdgeColors = vm.optEdgeColors;\n                    s.optGeneSet = vm.optGeneSet;\n                    s.optPatientLayout = vm.optPatientLayout;\n                    s.optColors = _colors;\n                    s.edges = cyChart.$('edge[edgeType=\"cn\"]').jsons();\n                    localStorage.setItem(\"MP-\" + osApi.getDataSource().disease, angular.toJson(s));\n                };\n\n                return {\n                    applyState: applyState,\n                    getOptEdgeColors: getOptEdgeColors,\n                    getGeneSet: getGeneSet,\n                    getPatientLayout: getPatientLayout,\n                    setColors: setColors,\n                    save: save\n                };\n            })(osApi);\n\n\n\n\n            /*\n             *  Cytoscape Chart\n             *  + Node & Edge Styles\n             */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    'container': elChart,\n                    'style': [{\n                        'selector': 'core',\n                        'style': {\n                            'selection-box-color': '#039BE5',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        'selector': 'node',\n                        'style': {\n                            'background-color': \"#039BE5\",\n                            'display': \"data(display)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"telomere\"]',\n                        'style': {\n                            'background-color': \"#039BE5\",\n                            'border-color': \"#039BE5\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"patient\"]:selected',\n                        'style': {\n                            'background-color': 'data(color)',\n                            'border-color': \"#000\",\n                            'border-width': 5\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]',\n                        'style': {\n                            'background-color': \"data(color)\",\n                            'border-color': \"data(colorBdr)\",\n                            'text-halign': \"data(halign)\",\n                            'text-margin-x': \"data(padding)\",\n                            'font-size': '8px',\n                            'color': '#aaa',\n                            'label': \"data(id)\",\n                            'border-width': \"data(sizeBdr)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'background-color': \"#fc8400\",\n                            'border-color': \"#000000\",\n                            'color': '#000'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"centromere\"]',\n                        'style': {\n                            'font-size': '20px',\n                            'text-halign': 'center',\n                            'background-color': \"#039BE5\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '40px',\n                            'width': '40px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"annotation-text\"]',\n                        'style': {\n                            'font-size': '50px',\n                            'text-halign': 'right',\n                            'text-valign': 'bottom',\n                            'background-color': \"#FFFFFF\",\n                            'color': \"#000\",\n                            'border-color': '#FFFFFF',\n                            'height': '50px',\n                            'width': '50px',\n                            'shape': 'round',\n                            'label': 'data(label)',\n                            'text-transform': 'uppercase'\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    wheelSensitivity: 0.2,\n                    zoom: 0.08,\n                    pan: {\n                        x: 650,\n                        y: 160\n                    },\n                    minZoom: 0.05,\n                    maxZoom: 20,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n             *  Draw Chromosome\n             */\n            (function() {\n\n                osApi.query(\"render_chromosome\", {\n                    type: \"chromosome\"\n                }).then(function(result) {\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key) {\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push({\n                            group: \"edges\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            data: {\n                                color: \"#039BE5\",\n                                id: \"ce\" + key, // Chromosome Edge (CE)\n                                display: \"element\",\n                                edgeType: \"chromosome\",\n                                sizeBdr: 0,\n                                sizeEle: 3, // Style?\n                                source: \"cp\" + key, // Chromosome P (CP)\n                                target: \"cq\" + key // Chromosome Q (CQ)\n                            }\n                        });\n\n                        // Telemere P\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.p\n                            },\n                            data: {\n                                id: \"cp\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 1,\n                                sizeEle: 1,\n                                sizeLbl: 1,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Telemere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.q\n                            },\n                            data: {\n                                id: \"cq\" + key,\n                                display: \"element\",\n                                nodeType: \"telomere\",\n                                degree: 1,\n                                sizeBdr: 5,\n                                sizeEle: 5,\n                                sizeLbl: 5,\n                                subType: \"unassigned\"\n                            }\n                        });\n                        // Centromere Q\n                        this.elements.push({\n                            group: \"nodes\",\n                            grabbable: false,\n                            locked: true,\n                            selectable: false,\n                            position: {\n                                x: chromosome.x,\n                                y: chromosome.c\n                            },\n                            data: {\n                                id: key,\n                                display: \"element\",\n                                sizeBdr: 1,\n                                sizeEle: 10,\n                                sizeLbl: 10,\n                                nodeType: \"centromere\",\n                                degree: 1\n                            }\n                        });\n\n                    }, {\n                        chromosomes: chromosomes,\n                        elements: elements\n                    });\n                    cyChart.add(elements);\n                });\n            })();\n\n            /*\n             * View Model + Initial Data Load \n             * + Initial Data Load\n             * + View Port Resize Event\n             */\n            var vm = (function(vm, osApi, mpState) {\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.detail = {\n                    show: false,\n                    html: \"\",\n                    title: \"\"\n                };\n                vm.optGeneSets = [];\n                vm.optGeneSet = null;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout = null;\n                vm.showPanelLayout = false;\n                vm.showPanelColor = false;\n                vm.showPanelColorRna = false;\n                vm.search = \"\";\n                vm.searchCount = \"\";\n\n                vm.optCommandModes = [{\n                    name: 'Sequential'\n                }, {\n                    name: 'Set'\n                }, {\n                    name: 'Ad Hoc'\n                }];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.exeSearch = function() {\n                    var needle = vm.search.toUpperCase().trim();\n                    var count = 0;\n                    var doSearch = (needle.length > 0);\n                    cyChart.$('node').forEach(function(el) {\n                        var found = (doSearch) ? (el.id().toUpperCase().indexOf(needle) === 0) : false;\n                        if (found) count += 1;\n                        el[found ? \"select\" : \"deselect\"]();\n                    });\n                    vm.searchCount = \"(\" + count + \" found)\";\n                    $timeout(function() { vm.searchCount = \"\"; }, 3000, true);\n                };\n                vm.hideModal = function() {\n                    angular.element('#modalEdge').modal('hide');\n                };\n                vm.filterModelEdge = function() {\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c) {\n                            return c.show;\n                        })\n                        .map(function(c) {\n                            return c.id;\n                        });\n                    var edges = tmpdata.edges.filter(function(edge) {\n                        return (vals.indexOf(edge.data.cn) != -1);\n                    }, {\n                        vals: vals\n                    });\n\n                    cyChart.startBatch();\n                    cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function() {\n                    vm.cmd('ShowSelectedEdges');\n                };\n\n                vm.selectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.select();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n                vm.deselectColor = function(item) {\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node) {\n                        if (node.data().color == this) {\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type) {\n                    switch (type) {\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node) {\n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                };\n\n                vm.optEdgeColors = mpState.getOptEdgeColors();\n\n\n                // Populate Dropdowns + Draw Chromosome\n                //hg19_geneset\n                $q.all([\n                    osApi.query(\"hg19_geneset\", {\n                        type: 'geneset',\n                        $fields: ['name']\n                    }),\n                    osApi.query(osApi.getDataSource().disease + \"_cluster\", {\n                        $fields: ['input', 'geneset', 'dataType', 'source', 'default']\n                    })\n\n                ]).then(function(results) {\n\n                    var layouts = results[1].data.map(function(v) {\n                        v.name = v.dataType + \" \" + v.input + \" \" + v.geneset;\n                        return v;\n                    }).sort(function(a, b) {\n                        var x = a.name.toLowerCase();\n                        var y = b.name.toLowerCase();\n                        return x < y ? -1 : x > y ? 1 : 0;\n                    });\n\n                    vm.optGeneSets = _.uniq(osApi.getDataSource().edges.map(function(e) { return { name: e.geneset }; }), function(item) { return item.name; });\n                    vm.optGeneSet = mpState.getGeneSet(vm.optGeneSets);\n                    vm.optPatientLayouts = layouts;\n                    var patientLayout = mpState.getPatientLayout(vm.optPatientLayouts);\n                    vm.optPatientLayout = angular.isDefined(patientLayout) ? patientLayout : layouts[0];\n\n                });\n\n\n                vm.resize = function() {\n                    var width = $window.innerWidth;\n                    //    if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n                    elChart.width(width);\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                };\n                angular.element($window).bind('resize',\n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi, mpState);\n\n\n            /*\n             * Zoom Control Functions\n             * - reset\n             * - fit\n             */\n            var zoom = (function(cyChart, vm) {\n                var reset = function() {\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function() {\n                    cyChart.fit(cyChart.$(':selected'), 50);\n                };\n                vm.zoom = {\n                    reset: reset,\n                    fit: fit\n                };\n                cyChart.on('pan', _.debounce(function() {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart, vm);\n\n            var borderScale = d3.scaleLog().domain([0.005, 20]).range([5, 1]);\n            var nodeScale = d3.scaleLog().domain([0.005, 20]).range([80, 1]);\n            var labelScale = d3.scaleLog().domain([0.005, 20]).range([50, 1]);\n            var expressionScale = d3.scalePow().range([0.01, 2]);\n\n\n            var resizeNodesByType = function(type) {\n\n                expressionScale.domain(\n                    cyChart.$('node[nodeType=\"' + type + '\"]').toArray()\n                    .reduce(function(p, c) {\n                        var w = c.data().weight;\n                        p[0] = Math.min(p[0], w);\n                        p[1] = Math.max(p[1], w);\n                        return p;\n                    }, [Infinity, -Infinity])\n                );\n\n\n\n\n                var zoom = cyChart.zoom();\n                var sizeNode = nodeScale(zoom);\n                var sizeLbl = (zoom < 0.375) ? 0 : labelScale(zoom);\n                var sizeBdr = borderScale(zoom);\n\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"' + type + '\"]').forEach(function(node) {\n                    node.data({\n                        'sizeEle': Math.round(this.sizeNode * expressionScale(node.data().weight)),\n                        'sizeLbl': this.sizeLbl,\n                        'sizeBdr': this.sizeBdr\n                    });\n                }, {\n                    sizeNode: sizeNode,\n                    sizeBdr: sizeBdr,\n                    sizeLbl: sizeLbl,\n                    scale: expressionScale\n                });\n                cyChart.endBatch();\n            };\n\n            var resizeNodes = function() {\n                resizeNodesByType('patient');\n                resizeNodesByType('gene');\n            };\n\n            /* \n             *  Interop Between UI and Worker Thread\n             *  - setGeneSet(name:String)\n             *  - setPatientLayout(name:String)\n             *  - setDataSource(name:String)\n             *  - setOptions(options:Object)\n             */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal) {\n\n                // Instatiate Worker\n                var cmd = {};\n                worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) {\n                    cmd[msg.data.cmd](msg.data.data);\n                }, false);\n\n                var remove = function(selector, data) {\n                    if (angular.isUndefined(data)) {\n                        cyChart.remove(selector);\n                        return;\n                    }\n\n                    if (data.length === 0) return;\n                    var items = data.map(function(item) {\n                        return this.getElementById(item);\n                    }, cyChart);\n                    try {\n                        cyChart.collection(items).remove();\n                    } catch (e) {}\n                };\n                cmd.patients_html = function() {\n\n                };\n                cmd.patients_resize = function() {\n\n                };\n                cmd.patients_delete = function(data) {\n                    remove('node[nodeType=\"patient\"]', data);\n                };\n                cmd.patients_insert = function(data) {\n                    cyChart.startBatch();\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signal.patients.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.patients.over.dispatch);\n                    elements.on(\"mouseout\", signal.patients.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n                        } catch (e) {\n                            node.data({\n                                'weight': 10\n                            });\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                    //Initial Node Selection & Color\n                    var cohort = osApi.getCohort();\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (this.indexOf(node.id()) != -1) node.select();\n\n                    }, cohort.sampleIds);\n                    cyChart.endBatch();\n                    vm.zoom.reset();\n                    cyChart.center();\n                    cyChart.fit(cyChart.nodes(), 400);\n                    mpState.applyState(onPatientColorChange, cyChart);\n\n                };\n                cmd.patients_layout = function(data) {\n                    cyChart.startBatch();\n                    cyChart.$(\"node[nodeType='annotation-text']\").remove();\n\n                    var posX = 100;\n                    var posY = 3000;\n                    var numMissing = 0;\n\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        if (data.hasOwnProperty(node.id())) {\n                            var pos = data[node.id()];\n                            node.data().position = { x: pos.x, y: pos.y };\n                            node.position(pos);\n                            node.style({ display: 'element' });\n                        } else {\n                            node.style({ display: 'none' });\n                            //node.position({ x: -10000, y: -10000 });\n                            // node.position({ x: posX, y: posY });\n                            // posX += 80;\n                            // if (posX > 3000) {\n                            //     posX = 100;\n                            //     posY += 80;\n                            // }\n                            // numMissing += 1;\n                        }\n                    });\n\n                    if (numMissing > 0) { // uncomment to show grid of missing\n                        // cyChart.add({\n                        //     group: \"nodes\",\n                        //     grabbable: false,\n                        //     locked: true,\n                        //     selectable: false,\n                        //     position: { x: 50, y: 2850 },\n                        //     data: {\n                        //         id: \"annotation\",\n                        //         color: \"rgb(0, 0, 0)\",\n                        //         display: \"element\",\n                        //         nodeType: \"annotation-text\",\n                        //         sizeEle: 800,\n                        //         weight: 0,\n                        //         sizeLbl: 500,\n                        //         degree: 0,\n                        //         sizeBdr: 50,\n                        //         label: \"The following \" + numMissing + \" samples lacked the requisite data to be clustered.\"\n                        //     }\n                        // });\n                    }\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n\n                cmd.genes_html = function() {\n\n                };\n                cmd.genes_delete = function(data) {\n                    remove('node[nodeType=\"gene\"]', data);\n                };\n                cmd.genes_insert = function(data) {\n                    cyChart.startBatch();\n                    //var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signal.genes.select.dispatch, 300));\n                    elements.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch, 300));\n                    elements.on(\"mouseover\", signal.genes.over.dispatch);\n                    elements.on(\"mouseout\", signal.genes.out.dispatch);\n                    elements.forEach(function(node) {\n                        try {\n                            node.data({\n                                'weight': data.degrees[node.id()].weight\n                            });\n                        } catch (e) {\n                            node.data({\n                                'weight': 0\n                            });\n                        }\n                    });\n                    cyChart.endBatch();\n                    resizeNodes();\n                    osApi.setBusy(false);\n                };\n                cmd.edges_delete = function(data) {\n                    remove('edge[edgeType=\"cn\"]', data);\n\n                };\n                cmd.edges_insert = function(data) {\n                    tmpdata = data;\n                    if (data.counts.total > 5000) {\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function() {\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                    if (vm.optCommandMode.name == \"Ad Hoc\") {\n\n                        cyChart.startBatch();\n                        cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        var elements = cyChart.add(data.edges);\n\n                        if (mouseIsOver == \"patient\") {\n\n                            var geneColors = elements\n                                .map(function(v) {\n                                    return [v.data().source, v.data().color];\n                                })\n                                .reduce(function(p, c) {\n                                    p[c[0]] = c[1];\n                                    return p;\n                                }, {});\n\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    var id = ele.id();\n                                    var selected = this.hasOwnProperty(id);\n                                    ele.data(\"sizeBdr\", (selected) ? 10 : 1);\n                                    ele.data(\"colorBdr\", (selected) ? this[id] : \"#FFFFFF\");\n                                    ele.data(\"color\", (selected) ? this[id] : \"#0096d5\");\n\n                                }, geneColors);\n                        }\n\n                        cyChart.endBatch();\n\n                    } else {\n                        cyChart.startBatch();\n                        try {\n                            cyChart.add(data.edges);\n                        } catch (e) {}\n                        vm.edgeCounts = data.counts;\n                        cyChart.endBatch();\n                    }\n\n                };\n\n                // Outbound\n                return function(options) {\n                    worker.postMessage({\n                        cmd: \"setOptions\",\n                        data: options\n                    });\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm) {\n\n                return function(cmd) {\n\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n\n                    // Could add ability to select from cBio or UCSC for edges\n                    // var edges = osApi.getDataSource().edges.filter(function(f) {\n                    //     return f.name == this.geneset;\n                    // }, {\n                    //     geneset: geneset\n                    // })[0];\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        dataset: osApi.getDataSource().disease,\n                        patients: {\n                            data: vm.datasource.clinical.patient,\n                            layout: vm.optPatientLayout,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p) {\n                                return p.data().id;\n                            })\n                        },\n                        genes: {\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p) {\n                                return p.data().id;\n                            })\n                        },\n                        edges: {\n                            layout: vm.datasource.edges\n                                .filter(function(v) {\n                                    return (v.geneset == this);\n                                }, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f) {\n                                    return f.show;\n                                })\n                                .map(function(f) {\n                                    return {\n                                        id: f.id,\n                                        color: f.color\n                                    };\n                                })\n                        }\n                    };\n\n                    return opts;\n                };\n            })(cyChart, vm);\n\n            vm.cmd = function() {};\n\n            /*\n             *  Watch View Model\n             *  + vm.optGeneSet\n             *  + vm.optPatientLayout\n             */\n            (function(vm, $scope) {\n                var watches = 2;\n\n                var update = function() {\n                    setOptions(createOptions());\n                };\n\n                // GeneSet\n                watches += 0;\n                $scope.$watch('vm.optGeneSet', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    if (angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    update();\n\n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                });\n\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function() {\n                    if (watches > 0) {\n                        watches -= 1;\n                        return;\n                    }\n                    update();\n                    vm.resize();\n                });\n            })(vm, $scope);\n\n            var mouseIsOver = \"\";\n            var updatePatientCounts = function() {\n\n                angular.element(\".legend-count\").text(\"\");\n                var selectedPatients = cyChart.$('node[nodeType=\"patient\"]:selected').toArray();\n                if (selectedPatients.length === 0) selectedPatients = cyChart.$('node[nodeType=\"patient\"]').toArray();\n\n                var counts = selectedPatients.reduce(function(p, c) {\n                    var color = c.data().color;\n                    if (!p.hasOwnProperty(color)) p[color] = 0;\n                    p[color] += 1;\n                    return p;\n                }, {});\n\n                Object.keys(counts).forEach(function(key) {\n                    angular.element(\"#legend-\" + key.substr(1)).text(\" (\" + this[key] + \")\");\n                }, counts);\n\n            };\n\n            var setPatientInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n\n                    } else {\n                        mouseIsOver = \"patient\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id() + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var setGeneInfo = function(e) {\n\n                $scope.$apply(function() {\n                    if (e.type == \"mouseout\") {\n                        //angular.element(\"#cohortmenu-legand\").html(\"\");\n                    } else {\n                        mouseIsOver = \"gene\";\n                        //angular.element(\"#cohortmenu-legand\").html(e.cyTarget.id()); // + patientHtml[e.cyTarget.id()]);\n                    }\n                });\n            };\n\n            var _stopLength = 0; // Hack - need to fix\n            var skipCohortRefresh = false;\n\n            function onCohortChange(cohort) {\n                if (cohort.sampleIds.length == _stopLength) return; // Preform more robust check\n                skipCohortRefresh = true;\n                _stopLength = cohort.sampleIds.length;\n                cyChart.startBatch();\n                cyChart.$('node[nodeType=\"patient\"]:selected').deselect();\n                cyChart.$('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (cohort.sampleIds.indexOf(node.id()) != -1) node.select();\n                });\n                cyChart.endBatch();\n            }\n            osApi.onCohortChange.add(onCohortChange);\n\n            function setPatientCohort() {\n                var cohort = cyChart.$('node[nodeType=\"patient\"]:selected');\n                if (cohort.length == _stopLength) return; // Preform more robust check\n                _stopLength = cohort.length;\n                if (!skipCohortRefresh)\n                    osApi.setCohort(\n                        cohort.map(function(p) {\n                            return p.data().id;\n                        }),\n                        \"Markers + Patients\",\n                        osApi.SAMPLE\n                    );\n                skipCohortRefresh = false;\n            }\n\n            function setGeneCohort() {\n\n            }\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function() {\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name) {\n                    case \"Sequential\":\n                        //try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd) {\n                            var opts;\n                            switch (cmd) {\n                                case \"ShowSelectedEdges\":\n                                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected');\n                                    if (nodes.length === 0) return;\n                                    nodes.neighborhood(\"edge\").remove();\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach(function(ele) {\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach(function(ele) {\n                                        ele[ele._private.selected ? \"deselect\" : \"select\"]();\n                                    });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'none'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item) {\n                                            item.style({\n                                                display: 'element'\n                                            });\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.genes.select.add(setGeneCohort);\n                        signal.genes.unselect.add(setGeneCohort);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(setPatientCohort);\n                        signal.patients.unselect.add(setPatientCohort);\n                        break;\n\n                    case \"Set\":\n                        var patientsUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var patientsSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setPatientCohort(opts);\n                        };\n                        var genesUnselect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length > 0 || opts.genes.selected.length > 0) setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n                        var genesSelect = function() {\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            setOptions(opts);\n                            setGeneCohort(opts);\n                        };\n\n                        signal.patients.select.add(updatePatientCounts);\n                        signal.patients.unselect.add(updatePatientCounts);\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.select.add(patientsSelect);\n                        signal.patients.unselect.add(patientsUnselect);\n                        signal.genes.select.add(genesSelect);\n                        signal.genes.unselect.add(genesUnselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e) {\n                            cyChart.nodes().unselect();\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        };\n                        var out = function(e) {\n                            e.cyTarget.unselect();\n                            cyChart.startBatch();\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            cyChart.$('node[nodeType=\"gene\"]')\n                                .forEach(function(ele) {\n                                    ele.data(\"color\", \"#0096d5\");\n                                    ele.data(\"sizeBdr\", 1);\n                                    ele.data(\"colorBdr\", \"#FFFFFF\");\n                                });\n                            cyChart.endBatch();\n                        };\n                        signal.genes.over.add(setGeneInfo);\n                        signal.genes.out.add(setGeneInfo);\n                        signal.patients.over.add(setPatientInfo);\n                        signal.patients.out.add(setPatientInfo);\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n\n            var onPatientColorChange = function(colors) {\n\n                if (colors === null) return;\n                mpState.setColors(colors);\n\n                vm.showPanelColor = false;\n                vm.legendCaption = colors.name;\n                vm.legendNodes = colors.data;\n\n                if (colors.name == \"None\") {\n                    vm.legendCaption = \"\";\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                        node.data('color', '#0096d5');\n                    });\n                    cyChart.endBatch();\n\n                    return;\n                }\n\n                var degMap = colors.data.reduce(function(p, c) {\n                    for (var i = 0; i < c.values.length; i++) {\n                        p[c.values[i]] = c.color;\n                    }\n                    return p;\n                }, {});\n\n                cyChart.startBatch();\n                cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node) {\n                    if (degMap.hasOwnProperty(node.id())) {\n                        node.data('color', degMap[node.id()]);\n                    } else {\n                        node.data('color', '#DDD');\n                    }\n\n                });\n                cyChart.endBatch();\n                $timeout(updatePatientCounts);\n            };\n\n            osApi.onPatientColorChange.add(onPatientColorChange);\n\n            // Destroy\n            $scope.$on('$destroy', function() {\n                mpState.save(vm, cyChart);\n                osApi.onPatientColorChange.remove(onPatientColorChange);\n                worker.terminate();\n                signal.clear();\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state, $scope, osAuth) {\n\n            var vm = this;\n            vm.networks = osAuth.getAuthSources();\n            vm.login = osAuth.login;\n\n            var loginSuccess = function() {\n                $state.go(\"datasource\");\n            };\n\n            osAuth.onLogin.add(loginSuccess);\n\n            // Desotroy\n            $scope.$on('$destroy', function() {\n                osAuth.onLogin.remove(loginSuccess);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLayoutPanel', layoutPanel);\n\n    /** @ngInject */\n    function layoutPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/layoutPanel/layoutPanel.html',\n            controller: LayoutPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LayoutPanelController(osApi, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v }; });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length !== 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key].sort(function(a, b) {\n                            if (a.name > b.name) return 1;\n                            if (a.name < b.name) return -1;\n                            return 0;\n                        })\n                    };\n                }, data);\n\n            });\n\n\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osApi.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    });\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name === \"\" || name == \"null\" || name == \"undefined\") {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    });\n\n                    osApi.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n\n\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length === 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status !== \"\"; }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (angular.isDefined(types.Removed) && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \"; });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (angular.isDefined(types.Converted) && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key]; }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i === 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\";\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color;\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            });\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            });\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osApi.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n\n            angular.element(\".marquee-x\").marquee({\n                particlesNumber: 79,\n                color: '#1396de',\n                particle: {\n                    speed: 39\n                }\n            });\n\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n\n            vm.getStarted = function() {\n                $state.go(\"datasource\");\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeatmap', heatmap);\n\n    /** @ngInject */\n    function heatmap() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/heatmap/heatmap.html',\n            controller: HeatmapController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeatmapController(d3, osApi, $state, $timeout, $scope, $stateParams, $window, _) {\n\n            // view Model\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n            vm.rowLabels = vm.colLabels = vm.gridlines = false;\n            vm.rowDendrogram = vm.colDendrogram = true;\n            vm.colorSchemes = [\n                { name: 'Blues', value: [\"#303f9f\", \"#03a9f4\"] },\n                { name: 'Black / Blue', value: [\"#000000\", \"#1d85cb\"] },\n                { name: 'Black / Red', value: [\"#000000\", \"#D32F2F\"] },\n                { name: 'Red / Yellow', value: [\"#D32F2F\", \"#FFEB3B\"] }\n            ]\n            vm.colorScheme = vm.colorSchemes[0]\n            vm.scales = [{ name: 'None' }, { name: 'Row' }, { name: 'Column' }]\n            vm.scale = vm.scales[2];\n            vm.dendrogramClusters = [\n                { name: 'One', value: 1 },\n                { name: 'Two', value: 2 },\n                { name: 'Three', value: 3 },\n                { name: 'Four', value: 4 },\n                { name: 'Five', value: 5 },\n                { name: 'Six', value: 6 },\n                { name: 'Seven', value: 7 },\n                { name: 'Eight', value: 8 },\n                { name: 'Nine', value: 9 },\n                { name: 'Ten', value: 10 }\n            ];\n            vm.dendrogramCluster = vm.dendrogramClusters[6];\n\n            // Element References\n            var elChart = d3.select(\"#heatmap-chart\");\n            var colDend = elChart.append(\"svg\").classed(\"dendrogram colDend\", true);\n            //var colDendObj;\n            var rowDend = elChart.append(\"svg\").classed(\"dendrogram rowDend\", true);\n            //var rowDendObj;\n            var colmap = elChart.append(\"svg\").classed(\"colormap\", true);\n            //var colmapObj;\n            var xaxis = elChart.append(\"svg\").classed(\"axis xaxis\", true);\n            var yaxis = elChart.append(\"svg\").classed(\"axis yaxis\", true);\n\n            // Load Inital Data\n            var args;\n            var data;\n\n\n            function axis(svg, data, width, height, x, y, rotated) {\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colLabels : !vm.rowLabels) return;\n\n                svg\n                    .attr(\"width\", width).attr(\"height\", height)\n                    .style(\"position\", \"absolute\")\n                    .style(\"left\", x)\n                    .style(\"top\", y);\n\n                var g = svg.append(\"g\");\n                var yScale = d3.scaleLinear().domain([0, data.length]).range([0, rotated ? width : height]);\n\n                var textAnchor = (rotated) ? \"start\" : \"start\";\n                var textX = (rotated) ? 20 : 10;\n                var labels = g.selectAll('label').data(data);\n\n                labels\n                    .enter().append(\"text\")\n                    .attr(rotated ? \"x\" : \"y\", function(d, i) { return yScale(i + .8); })\n                    .attr(rotated ? \"y\" : \"x\", textX)\n                    .attr(\"text-anchor\", textAnchor)\n                    .attr(\"font-size\", \"12px\")\n                    .text(function(d) { return d; });\n            }\n\n            function dendrogram(svg, data, width, height, xPos, yPos, rotated) {\n\n                svg.select(\"g\").remove();\n                if (rotated ? !vm.colDendrogram : !vm.rowDendrogram) return;\n\n                var hierarchy = d3.hierarchy(data);\n\n                var cluster = d3.cluster()\n                    .separation(function() { return 1; })\n                    .size((rotated) ? [width, height] : [height, width]);\n\n                var x = d3.scaleLinear()\n                    .domain([0, (rotated) ? height : width])\n                    .range([0, (rotated) ? height : width]);\n\n                var y = d3.scaleLinear()\n                    .domain([0, data.height])\n                    .range([(rotated) ? height : width, 0]);\n\n                var c = cluster(hierarchy);\n\n                var links = c.links().map(function(l) {\n                    return {\n                        source: { x: l.source.x, y: l.source.data.height },\n                        target: { x: l.target.x, y: l.target.data.height },\n                        edgePar: l.target.data.edgePar\n                    };\n                });\n\n                var dendrG = svg\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .style(\"position\", \"absolute\")\n                    .style(\"left\", xPos)\n                    .style(\"top\", yPos)\n                    .append(\"g\")\n\n                dendrG.append(\"rect\")\n                    .attr(\"width\", (rotated) ? height : width)\n                    .attr(\"height\", (rotated) ? width : height)\n                    .style(\"fill\", \"#FFF\")\n\n                if (rotated) {\n                    var transform = \"rotate(90,\" + height / 2 + \",\" + height / 2 + \") translate(0,\" + (-width + height) + \")\"\n                    dendrG.attr(\"transform\", transform);\n                }\n\n                var lines = dendrG.selectAll(\"polyline\").data(links);\n                lines\n                    .enter().append(\"polyline\")\n                    .attr(\"class\", \"denolink\")\n                    .attr(\"points\", function(d) {\n                        return y(d.source.y) + \",\" + d.source.x + \" \" +\n                            y(d.source.y) + \",\" + d.target.x + \" \" +\n                            y(d.target.y) + \",\" + d.target.x;\n                    })\n                    .style(\"stroke\", function(d) {\n                        return d.edgePar.col;\n                    });\n\n                return {\n                    g: dendrG,\n                    scaleY: y,\n                    scaleX: x,\n                    rotated: rotated,\n                    data: links\n                }\n            }\n\n            function heatmap(svg, data, width, height, x, y) {\n\n\n                svg.select(\"g\").remove();\n                svg.attr(\"width\", width).attr(\"height\", height).style(\"left\", x).style(\"top\", y).style(\"position\", \"absolute\");\n\n                var map = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height);\n                var brush = svg.append(\"g\").attr(\"width\", width).attr(\"height\", height).attr(\"class\", \"brush\");\n\n                var maxValue = Math.max.apply(null, data.data);\n                var minValue = Math.min.apply(null, data.data);\n\n                var color = d3.scaleLinear().domain([minValue, maxValue]).range(vm.colorScheme.value);\n\n                var cols = data.dim[0];\n                var rows = data.dim[1];\n\n                var xScale = d3.scaleLinear().domain([0, cols]).range([0, width]);\n                var yScale = d3.scaleLinear().domain([0, rows]).range([0, height]);\n\n\n                var grid = (vm.gridlines) ? 1 : -1;\n\n                function brushend() {\n\n\n                    if (!d3.event.sourceEvent) return; // Only transition after input.\n                    if (!d3.event.selection) return; // Ignore empty selections.\n                    //var colBounds = \n                    d3.event.selection.map(function(v) { return this.invert(v[0], v[1]); }, xScale).map(Math.round);\n                    //var span = colBounds[1] - colBounds[0];\n                    //var start = colBounds[0];\n                    //var ids = data.cols.splice(start, span);\n\n                    var coords = d3.event.selection;\n                    //coords[0][0] = colBounds[0] * width;\n                    coords[0][1] = 0;\n                    //coords[1][0] = colBounds[1] * width;\n                    coords[1][1] = height;\n\n                    d3.select(this)\n                        .transition()\n                        .call(d3.event.target.move, coords);\n\n\n                }\n                brush.call(\n                    d3.brush().on(\"end\", brushend)\n                )\n\n                var boxW = xScale(1) - grid;\n                var boxH = yScale(1) - grid;\n\n                var boxes = map.selectAll('rect').data(data.data);\n                boxes\n                    .enter().append(\"rect\")\n                    .attr(\"class\", \"box\")\n                    .attr(\"colIndex\", function(d, i) { return i % cols; })\n                    .attr(\"rowIndex\", function(d, i) { return Math.floor(i / cols); })\n                    .attr(\"x\", function(d, i) { return xScale(i % cols); })\n                    .attr(\"y\", function(d, i) { return yScale(i % rows); })\n                    .attr(\"width\", boxW)\n                    .attr(\"height\", boxH)\n                    .attr(\"fill\", function(d) { return color(d); });\n\n                return {\n                    g: map,\n                    scaleY: yScale,\n                    scaleX: xScale,\n                    data: data.data,\n                    cols: cols,\n                    rows: rows,\n                    boxW: boxW,\n                    boxH: boxH\n                }\n            }\n\n            function zoom() {\n\n                /*\n                                var xZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                                var yZoomBehavior = d3.zoom().scaleExtent([1, 5]);\n                                colDendObj.g.call(xZoomBehavior);\n                                rowDendObj.g.call(yZoomBehavior);\n                                xZoomBehavior.on('zoom', function() {\n\n                                    var map = colmapObj;\n                                    var mapX = d3.event.transform.rescaleY(map.scaleX);\n\n                                    var boxW = map.scaleX(1);\n\n                                    map.g.selectAll('.box').data(map.data)\n                                        .attr(\"x\", function(d, i) { return mapX(i % map.cols); })\n                                        .attr(\"y\", function(d, i) { return map.scaleY(i % map.rows); })\n                                        .attr(\"width\", boxW)\n\n                                    var col = colDendObj;\n                                    var colY = col.scaleY;\n                                    var colX = d3.event.transform.rescaleY(col.scaleX);\n                                    \n                                    col.g.selectAll(\"polyline\")\n                                        .data(col.data)\n                                        .attr(\"points\", function(d){\n                                            return colY(d.source.y) + \",\" + colX(d.source.x) + \" \" +\n                                            colY(d.source.y)+ \",\" + colX(d.target.x) + \" \" +\n                                            colY(d.target.y)+ \",\" + colX(d.target.x);\n                                        });\n                                });\n                                yZoomBehavior.on('zoom', function() {\n\n                                    var row = rowDendObj;\n                                    var rowY = row.scaleY;\n                                    var rowX = d3.event.transform.rescaleY(row.scaleX);\n                                    \n                                    var map = colmapObj;\n                                    var mapY = d3.event.transform.rescaleX(map.scaleY);\n\n                                    var boxW = scaleX(1);\n                                    var boxH = yScale(1)-grid;\n\n                                    map.g.selectAll('.box').data(map.data)\n                                        .attr(\"x\", function(d, i) { return map.scaleY(i % map.cols); })\n                                        .attr(\"y\", function(d, i) { return mapY(i % map.rows); })\n                                        .attr(\"width\", boxW)\n                                    \n                                    row.g.selectAll(\"polyline\")\n                                        .data(row.data)\n                                        .attr(\"points\", function(d){\n                                            return rowY(d.source.y) + \",\" + rowX(d.source.x) + \" \" +\n                                            rowY(d.source.y)+ \",\" + rowX(d.target.x) + \" \" +\n                                            rowY(d.target.y)+ \",\" + rowX(d.target.x);\n                                        });\n                                });\n                */\n            }\n\n            osApi.setBusy(true);\n            vm.loadData = function() {\n                osApi.query(\"brca_psi_bradleylab_miso\", {\n                    '$limit': 100\n                }).then(function(response) {\n                    args = {\n                        data: response.data.map(function(v) {\n                            Object.keys(v.patients).forEach(function(key) {\n                                if (this[key] == null) this[key] = 0;\n                            }, v.patients);\n                            return v.patients;\n                        })\n                    };\n                    vm.loadHeatmap();\n                });\n            };\n            vm.loadHeatmap = function() {\n                osApi.setBusy(true);\n                rowDend.select(\"g\").remove();\n                colDend.select(\"g\").remove();\n                colmap.select(\"g\").remove();\n                args.scale = vm.scale.name.toLowerCase();\n                args.kcol = args.krow = vm.dendrogramCluster.value;\n                osApi.getCpuApi().getHeatmap(args).then(function(v) {\n                    data = angular.fromJson(v);\n                    vm.draw();\n                    osApi.setBusy(false);\n                });\n            }\n            vm.draw = function() {\n\n                var layout = osApi.getLayout();\n                var width = $window.innerWidth - layout.left - layout.right - 40;\n                var height = $window.innerHeight - 160; //10\n                var hmWidth = width - ((vm.rowLabels) ? 160 : 0) - ((vm.rowDendrogram) ? 80 : 0);\n                var hmHeight = height - ((vm.colLabels) ? 160 : 0) - ((vm.colDendrogram) ? 80 : 0);\n                //colmapObj = \n                heatmap(colmap, data.matrix,\n                    hmWidth,\n                    hmHeight,\n                    (vm.rowDendrogram ? 80 : 0) + layout.left + 20,\n                    (vm.colDendrogram ? 80 : 0));\n\n                //rowDendObj = \n                dendrogram(rowDend, data.rows,\n                    80, hmHeight,\n                    layout.left + 20, (vm.colDendrogram ? 80 : 0), false);\n\n                //colDendObj = \n                dendrogram(colDend, data.cols,\n                    hmWidth, 80,\n                    (vm.rowDendrogram ? 80 : 0) + layout.left + 20, 0, true);\n\n                axis(xaxis,\n                    data.matrix.rows,\n                    160, hmHeight, hmWidth + (vm.rowDendrogram ? 80 : 0) + layout.left + 20, (vm.colDendrogram ? 80 : 0), false);\n\n                axis(yaxis, data.matrix.cols,\n                    hmWidth, 160, (vm.rowDendrogram ? 80 : 0) + layout.left + 20, hmHeight + (vm.colDendrogram ? 80 : 0), true);\n\n                zoom();\n            };\n\n            vm.loadData();\n\n            osApi.onResize.add(vm.draw);\n            angular.element($window).bind('resize', _.debounce(vm.draw, 300));\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, { datasource: datasource.disease });\n            };\n            osApi.setBusy(false);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osAuth, $stateParams, $state, $window) {\n\n            // View Model\n            var vm = this;\n            vm.showImport = false;\n            vm.showTools = false;\n            vm.showDatasets = false;\n            vm.datasources = [];\n            vm.tools = [];\n            vm.cohorts = [];\n\n            // State Management\n            osApi.onNavChange.add(function(state) {\n                switch (state) {\n                    case \"TOOLS\":\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                    case \"TOOL\":\n                        vm.showTools = true;\n                        vm.showDatasets = true;\n                        vm.datasources = osApi.getDataSources();\n                        vm.tools = osApi.getTools();\n                        vm.cohorts = osApi.getCohorts();\n                        break;\n                    default:\n                        vm.showTools = false;\n                        vm.showDatasets = false;\n                        break;\n                }\n            });\n\n            // Cohort Commands\n            vm.addPatientCohort = function() {\n                osApi.saveCohort();\n            };\n\n            // State Command\n            vm.setPatientCohort = function(cohort) {\n                osApi.setCohort(cohort);\n            };\n\n            // Import Cohorts Command \n            vm.importIds = \"\";\n            vm.importCohort = function() {\n                var ids = vm.importIds.split(\",\").map(function(v) { return v.trim(); });\n                osApi.importIds(ids, vm.importName);\n                vm.importIds = \"\";\n                vm.importName = \"\";\n                vm.showImport = false;\n            };\n            vm.login = function() {\n                $state.go(\"login\");\n            };\n            vm.logout = function() {\n\n\n                localStorage.clear();\n                //$window.reload(true);\n                $window.location.href = \"#\";\n                //$window.reload();\n            };\n            vm.showHelp = function() {\n                $window.open(\"\\\\documentation\" + $state.current.help.toString());\n            };\n\n            // Update Cohorts When Datasource Changes\n            osApi.onCohortsChange.add(function() {\n                vm.cohorts = osApi.getCohorts();\n            });\n\n\n            // Load Dataset Command - Navigation\n            vm.loadDataset = function(dataset) {\n                angular.element('.navbar-collapse').collapse('hide');\n                $state.go($state.current.url.split(\"/\")[1], { datasource: dataset });\n\n            };\n\n            // Load Tool Command - Navigation\n            vm.loadTool = function(tool) {\n                $state.go(tool, { datasource: osApi.getDataSource().disease });\n                angular.element('.navbar-collapse').collapse('hide');\n            };\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompareCluster', compareCluster);\n\n    /** @ngInject */\n    function compareCluster() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compareclusters/compareclusters.html',\n            controller: CompareClusterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareClusterController(osApi, d3, $state, $timeout, $scope, moment, $stateParams, _, $, $q, $window) {\n\n\n            function zoomed() {\n                elPlots.forEach(function(plot) {\n                    plot.attr(\"transform\", d3.event.transform);\n                });\n            }\n\n            var layout = osApi.getLayout();\n            var width = ($window.innerWidth - layout.left - layout.right);\n            var height = ($window.innerHeight - 120);\n            var zoom = d3.zoom()\n                .scaleExtent([1, 40])\n                .translateExtent([\n                    [-100, -100],\n                    [width + 90, height + 100]\n                ])\n                .on(\"zoom\", zoomed);\n\n            // Cohort\n            var cohort = osApi.getCohort();\n            var onCohortChange = function(c) {\n                cohort = c;\n                setSelected();\n            };\n            osApi.onCohortChange.add(onCohortChange);\n\n            // Datasource\n            var datasource = osApi.getDataSource();\n\n            // View Model\n            var vm = this;\n            vm.optionColors = [];\n            vm.optionLayouts = [];\n\n            // State\n            var clusterIndexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n            var clusterColors = [];\n            var clusterLayouts = [];\n\n            // Elements\n            var elChart = d3.select(\"#compareclusterChart\").append(\"svg:svg\");\n            var elBrushes = clusterIndexes.map(function() { return d3.brush(); });\n            elChart.call(zoom);\n            var elPlots = clusterIndexes.map(function() { return elChart.append(\"svg:g\"); });\n            var elHitareas = elPlots.map(function(elPlot) { return elPlot.append(\"svg:rect\"); });\n            elHitareas.forEach(function(hitArea) {\n                hitArea.attr(\"fill\", \"black\");\n                hitArea.attr(\"opacity\", 0);\n            });\n            var elLines = [0, 1, 2, 3].map(function() { return elChart.append(\"svg:line\"); });\n            elLines.forEach(function(line) {\n                line.attr(\"stroke\", \"#cbcbcb\");\n                line.attr(\"stroke-width\", \"1px\");\n            });\n\n            // State Management\n            var setSelected = function() {\n                var selectedIds = cohort.sampleIds;\n                clusterIndexes.forEach(function(clusterIndex) {\n                    elPlots[clusterIndex].selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                });\n            };\n            // var saveState = function() {\n\n            // }\n            var loadState = function() {\n                vm.optionLayouts = datasource.calculated.filter(function(v) { return (v.type === \"pcaScores\" || v.type === \"mds\"); });\n                return new Promise(function(resolve) {\n                    osApi.query('brain_color_tcga_import').then(function(v) {\n\n                        // This piece of magic creates an object who's key is a sampleID and value is a color\n                        vm.optionColors = v.data.map(function(colorOption) {\n                            colorOption.lookup = colorOption.data.map(function(c) {\n                                var colorMap = c.values.reduce(function(p, c) {\n                                    p[c] = p.color;\n                                    return p;\n                                }, { color: (c.color === null) ? \"black\" : c.color });\n                                delete colorMap.color;\n                                //delete c.values;\n                                return colorMap;\n                            }).reduce(function(p, c) {\n                                _.extend(p, c);\n                                return p;\n                            }, {});\n                            return colorOption;\n                        });\n\n                        // Set Default Cluster Colors + layouts\n                        clusterLayouts = vm.optionLayouts.splice(0, 9).map(function(v) { return { name: v.collection }; });\n                        clusterColors = vm.optionColors.splice(0, 9);\n                        resolve();\n                    });\n                });\n            };\n\n            // Brushes\n            var brushStart = function() {\n                if (d3.event.selection === null) return;\n                var target = d3.event.target;\n                elBrushes\n                    .filter(function(b) {\n                        return b.brush !== target;\n                    })\n                    .forEach(function(b) {\n                        elPlots[b.index].call(b.move, null);\n                    });\n            };\n            var brushEnd = function() {\n\n                if (d3.event.selection === null) {\n\n                    elChart.selectAll(\"circle\")\n                        .classed(\"pca-node-selected\", false);\n                    return;\n                }\n                var target = d3.event.target;\n                var bv = d3.event.selection;\n                var xScale = target.xScale;\n                var yScale = target.yScale;\n                var xMin = xScale.invert(bv[0][0]);\n                var xMax = xScale.invert(bv[1][0]);\n                var yMin = yScale.invert(bv[0][1]);\n                var yMax = yScale.invert(bv[1][1]);\n\n                elChart.selectAll(\"circle\")\n                    .classed(\"pca-node-selected\", function(v) {\n                        return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                        //return (selectedIds.indexOf(this.__data__.id) >= 0);\n                    });\n                // Convert To PIDs\n                // var sids = data.filter(function(v) {\n                //     return (v.x >= xMin && v.x <= xMax && v.y >= yMin && v.y <= yMax);\n                // }).map(function(v) { return v.id; });\n\n                // elPlots[target.index].call(elBrushes[target.index].move, null);\n\n            };\n\n            // Layout Methods\n            var loadLayout = function(clusterIndex) {\n                return new Promise(function(resolve) {\n\n                    var collection = clusterLayouts[clusterIndex].name;\n\n                    osApi.query(collection).then(function(result) {\n\n                        var data = result.data[0].data;\n                        result.data[0].domain = Object.keys(data).reduce(function(p, c) {\n                            var datum = data[c];\n                            if (isNaN(datum.x) || isNaN(datum.y)) return p;\n                            p.pc1[0] = Math.min(p.pc1[0], datum.x);\n                            p.pc1[1] = Math.max(p.pc1[1], datum.x);\n                            p.pc2[0] = Math.min(p.pc2[0], datum.y);\n                            p.pc2[1] = Math.max(p.pc2[1], datum.y);\n                            return p;\n                        }, { pc1: [Infinity, -Infinity], pc2: [Infinity, -Infinity] });\n                        result.data[0].bind = Object.keys(data).map(function(v) {\n                            var rv = data[v];\n                            rv.id = v;\n                            return rv;\n                        });\n                        clusterLayouts[clusterIndex].data = result.data[0];\n                        resolve(result.data[0]);\n                    });\n                });\n            };\n\n            loadState().then(function() {\n                Promise.all(\n                    clusterIndexes.map(function(clusterIndex) { return loadLayout(clusterIndex); })\n                ).then(function() {\n                    draw();\n                    setSelected();\n                });\n            });\n\n            var draw = function() {\n                drawLines();\n                clusterIndexes.forEach(drawCluster);\n            };\n\n            var drawLines = function() {\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elLines[0].attr(\"x1\", 0).attr(\"y1\", height * (1 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 1 / 3));\n                elLines[1].attr(\"x1\", 0).attr(\"y1\", height * (2 / 3)).attr(\"x2\", width).attr(\"y2\", (height * 2 / 3));\n                elLines[2].attr(\"x1\", width * (1 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (1 / 3)).attr(\"y2\", height);\n                elLines[3].attr(\"x1\", width * (2 / 3)).attr(\"y1\", 0).attr(\"x2\", width * (2 / 3)).attr(\"y2\", height);\n            };\n\n            var drawCluster = function(clusterIndex) {\n\n                // Inefficent\n                var layout = osApi.getLayout();\n                var width = ($window.innerWidth - layout.left - layout.right);\n                var height = ($window.innerHeight - 120);\n                elChart.attr(\"width\", width).attr(\"height\", height);\n                var boxWidth = Math.floor(width / 3);\n                var boxHeight = Math.floor(height / 3);\n\n                // Resize Hitarea\n                var elHitarea = elHitareas[clusterIndex];\n                elHitarea\n                    .attr(\"width\", boxWidth)\n                    .attr(\"height\", boxHeight);\n\n                // Figure Out Scale Hitarea\n                var data = clusterLayouts[clusterIndex].data;\n                var xScale = d3.scaleLinear().domain(data.domain.pc1).range([5, Math.min(boxWidth) - 5]);\n                var yScale = d3.scaleLinear().domain(data.domain.pc2).range([5, Math.min(boxHeight) - 5]);\n                var elPlot = elPlots[clusterIndex];\n\n\n                var brush = elBrushes[clusterIndex];\n                brush.on(\"start\", brushStart);\n                brush.on(\"end\", brushEnd);\n                brush.extent([\n                    [0, 0],\n                    [boxWidth, boxHeight]\n                ]);\n\n                elPlot.call(brush);\n                brush.index = clusterIndex;\n                brush.xScale = xScale;\n                brush.yScale = yScale;\n                elPlot.attr(\"transform\", \"translate(\" + ((clusterIndex % 3) * boxWidth) + \",\" + (parseInt(clusterIndex / 3) * boxHeight) + \")\");\n                var circles = elPlot.selectAll(\"circle\")\n                    .data(data.bind);\n\n\n                circles.enter()\n                    .append(\"svg:circle\")\n                    .attr(\"cx\", 0).attr(\"cy\", 0)\n                    .attr(\"class\", \"point\")\n                    .attr(\"r\", 1)\n                    .style(\"fill\", function(d) { return clusterColors[clusterIndex].lookup[d.id]; })\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n                circles.exit()\n                    .transition()\n                    .duration(200)\n                    .delay(function(d, i) {\n                        return i / 300 * 100;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n                circles\n                    .transition()\n                    .duration(750)\n                    .attr(\"cx\", function(d) { return xScale(d.x); })\n                    .attr(\"cy\", function(d) { return yScale(d.y); });\n\n\n            };\n\n            // // Listen For Resize\n            osApi.onResize.add(draw);\n            // angular.element($window).bind('resize',\n            //     _.debounce(resize, 300)\n            // );\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osColorPanel', colorPanel);\n\n    /** @ngInject */\n    function colorPanel() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/colorpanel/colorpanel.html',\n            controller: ColorPanelController,\n            controllerAs: 'vm',\n            bindToController: true,\n            scope: {\n                close: \"&\"\n            }\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ColorPanelController(osApi, d3, _) {\n\n            // Properties\n            var vm = this;\n            vm.showPanelColorRna = false;\n            vm.colorScales = [{ name: \"Quantile\" }, { name: \"Quantize\" }];\n            vm.colorScale = vm.colorScales[0];\n            vm.colorBins = [2, 3, 4, 5, 6, 7, 8].map(function(v) { return { name: v + \" Bins\", value: v }; });\n            vm.colorBin = vm.colorBins[2];\n            vm.colorOptions = osApi.getDataSource().colors;\n\n            if (angular.isDefined(vm.colorOptions)) {\n                if (vm.colorOptions.length !== 0) vm.colorOption = vm.colorOptions[0];\n            }\n\n\n            var tbl = osApi.getDataSource().category.filter(function(v) {\n                return v.type == 'color';\n            })[0].collection;\n\n            osApi.query(tbl, {\n                type: 'color',\n                dataset: osApi.getDataSource().disease,\n                $fields: ['name', 'subtype']\n            }).then(function(v) {\n\n                var data = v.data.reduce(function(p, c) {\n                    if (!p.hasOwnProperty(c.subtype)) p[c.subtype] = [];\n                    p[c.subtype].push(c);\n                    return p;\n                }, {});\n\n                var regx = /(\\d+%)/i;\n                vm.optPatientColors = Object.keys(data).map(function(key) {\n                    return {\n                        name: key,\n                        values: this[key]\n                            .filter(function(v) {\n                                var result = v.name.match(regx);\n                                if (result === null) return true;\n                                // 30% Threashold\n                                if (parseInt(result[0]) > 10) return true;\n                            })\n                            .sort(function(a, b) {\n                                if (a.name > b.name) return 1;\n                                if (a.name < b.name) return -1;\n                                return 0;\n                            })\n                    };\n                }, data);\n\n            });\n            vm.resetColor = function() {\n                osApi.setPatientColor({\n                    \"dataset\": osApi.getDataSource().disease,\n                    \"type\": \"color\",\n                    \"name\": \"None\",\n                    \"data\": [],\n                    show: true\n                });\n            };\n\n            vm.setColor = function(item) {\n                osApi.setBusy(true);\n                vm.close();\n                if (item.name == \"None\") {\n                    osApi.setPatientColor({\n                        \"dataset\": osApi.getDataSource().disease,\n                        \"type\": \"color\",\n                        \"name\": \"None\",\n                        \"data\": [],\n                        show: true\n                    });\n                    return;\n                }\n\n                osApi.query(tbl, {\n                    type: 'color',\n                    dataset: osApi.getDataSource().disease,\n                    name: item.name\n                }).then(function(v) {\n                    var data = v.data[0];\n                    data.data = data.data.map(function(v) {\n                        var name = v.name.toLowerCase().trim();\n                        if (name === \"\" || name == \"null\" || angular.isUndefined(name)) {\n                            v.name = \"Null\";\n                            v.color = \"#DDDDDD\";\n                        }\n                        v.id = \"legend-\" + v.color.substr(1);\n                        return v;\n                    }).sort(function(a, b) {\n                        var aname = (isNaN(a.name)) ? a.name : parseInt(a.name);\n                        var bname = (isNaN(b.name)) ? b.name : parseInt(b.name);\n                        if (aname < bname) return -1;\n                        if (aname > bname) return 1;\n                        if (a.name == \"Null\") return 1;\n                        if (b.name == \"Null\") return -1;\n                        return 0;\n                    });\n\n                    // debugger;\n                    osApi.setPatientColor(v.data[0]);\n                    osApi.setBusy(false);\n                    vm.close();\n                });\n            };\n            vm.setGeneColor = function() {\n                var genes = (\"+\" + vm.geneColor.replace(/\\s/g, '').toUpperCase()).match(/[-+]\\w*/gi).map(function(v) {\n                    return {\n                        op: v.substr(0, 1),\n                        gene: v.substr(1).toLowerCase(),\n                        message: \"\",\n                        status: \"\"\n                    };\n                });\n                osApi.setBusy(true);\n                osApi.query(\"lookup-genes\", { symbols: { $in: genes.map(function(v) { return v.gene; }) } }).then(function(result) {\n                    vm.close();\n                    genes.map(function(v) {\n                        var gene = this.filter(function(s) {\n                            return (s.symbols.indexOf(this) != -1);\n                        }, v.gene);\n\n                        if (gene.length === 0) {\n                            v.message = v.gene.toUpperCase();\n                            v.status = \"Removed\";\n                        } else if (gene.length > 1) {\n                            v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                            v.status = \"Converted\";\n                        } else if (gene.length == 1) {\n                            if (v.gene != gene[0].hugo) {\n                                v.message = v.gene.toUpperCase() + \" -> \" + gene[0].hugo.toUpperCase();\n                                v.status = \"Converted\";\n                            }\n                        }\n                    }, result.data);\n\n                    var msgs = _.sortBy(\n                        genes.filter(function(v) { return v.status !== \"\"; }), \"length\");\n\n                    var types = _.groupBy(msgs, function(gene) { return gene.status; });\n\n                    var msg = \"\";\n\n                    if (angular.isDefined(types.Removed) && types.Removed.length > 0) {\n                        msg += \"Removed: \" + types.Removed.map(function(v) { return v.message + \" - \"; });\n                    }\n                    if (msg.length > 0) msg = msg.substr(0, msg.length - 2) + \"\\r\\n\";\n                    if (angular.isDefined(types.Converted) && types.Converted.length > 0) {\n                        msg += \"Converted: \" + types.Converted.map(function(v) { return v.message + \"\\r\\n\"; });\n                    }\n                    if (msg.trim().length > 0) alert(msg);\n                    var geneset = genes.filter(function(v) { return v.status != \"Removed\"; }).map(function(v) {\n                        return v.gene.toUpperCase();\n                    });\n                    osApi.query(vm.colorOption.collection, {\n                        gene: {\n                            '$in': geneset\n                        }\n                    }).then(function(results) {\n\n                        if (results.data.length > 0) {\n                            var data;\n                            if (results.data.length == 1)\n                                data = results.data[0];\n                            else {\n                                data = {};\n                                data.patients = results.data.reduce(function(p, c) {\n                                    var fn = p.lookup[c.gene];\n                                    for (var i = 0; i < p.pids.length; i++) {\n                                        var pid = p.pids[i];\n                                        var iv = p.output.hasOwnProperty(pid) ? p.output[pid] : 0;\n                                        if (fn === \"+\") p.output[pid] = iv + c.patients[pid];\n                                        if (fn === \"-\") p.output[pid] = iv - c.patients[pid];\n                                    }\n                                    return p;\n                                }, {\n                                    pids: Object.keys(results.data[0].patients),\n                                    lookup: genes.reduce(function(p, c) {\n                                        p[c.gene] = c.op;\n                                        return p;\n                                    }, {}),\n                                    output: {}\n                                }).output;\n\n                                var range = Object.keys(data.patients).reduce(function(p, c) {\n                                    p.min = Math.min(p.min, p.values[c]);\n                                    p.max = Math.max(p.min, p.values[c]);\n                                    return p;\n                                }, {\n                                    values: data.patients,\n                                    min: Infinity,\n                                    max: -Infinity\n                                });\n                                data.min = range.min;\n                                data.max = range.max;\n                            }\n\n                            // Color Patients\n                            var colors = [\"#9d1cb2\", \"#00a7f7\", \"#3d4eb8\", \"#ff9900\", \"#f7412d\", \"#795548\", \"#E91E63\", \"#673AB7\"];\n                            var values = colors.splice(0, vm.colorBin.value);\n\n                            var scale = (vm.colorScale.name == \"Quantile\") ? d3.scaleQuantile() : d3.scaleQuantize();\n\n\n\n                            // Combine Colors + Scale Into Name + Value\n                            var labels;\n                            if (vm.colorScale.name == \"Quantile\") {\n                                scale.domain(Object.keys(data).map(function(key) { return data[key]; }, { data: data })).range(values);\n                                labels = scale.quantiles().map(function(v) { return parseFloat(v).toFixed(3); });\n                                labels.unshift(\"\");\n                                labels = labels.map(function(c, i, a) {\n                                    if (i === 0) { return \"-\\u221e \\u2194 \" + a[1]; } else if (i == a.length - 1) {\n                                        return a[i] + \" \\u2194 +\\u221e\";\n                                    }\n                                    return a[i] + \" \\u2194 \" + a[i + 1];\n                                });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            } else {\n                                scale\n                                    .domain([data.min, data.max])\n                                    .range(values);\n                                labels = scale.ticks(values.length).map(function(v) { return \"~\" + parseFloat(v).toFixed(2); });\n                                values = _.zip(values, labels).map(function(v) { return { color: v[0], name: v[1] }; });\n                            }\n                            data = Object.keys(data.patients).map(function(id) {\n                                    return {\n                                        id: id,\n                                        color: this.scale(this.patients[id]),\n                                        value: this.patients[id]\n                                    };\n                                }, {\n                                    patients: data.patients,\n                                    scale: scale\n                                })\n                                .reduce(function(p, c) {\n                                    if (!p.hasOwnProperty(c.color)) p[c.color] = [];\n                                    p[c.color].push(c.id);\n                                    return p;\n                                }, {});\n\n                            data = Object.keys(data).map(function(key) {\n                                return {\n                                    color: key,\n                                    name: this.names.filter(function(f) {\n                                        return f.color == this.color;\n                                    }, {\n                                        color: key\n                                    })[0].name,\n                                    values: this.data[key]\n                                };\n                            }, {\n                                data: data,\n                                names: values\n                            });\n\n                            data = data.sort(function(a, b) {\n                                if (a.name.indexOf(\"-\\u221e\") != -1) return -1;\n                                if (b.name.indexOf(\"-\\u221e\") != -1) return 1;\n                                if (a.name.indexOf(\"+\\u221e\") != -1) return 1;\n                                if (b.name.indexOf(\"+\\u221e\") != -1) return -1;\n                                if (a.name < b.name) return -1;\n                                if (a.name > b.name) return 1;\n                                return 0;\n                            });\n                            data.push({\n                                color: '#DDD',\n                                name: 'Null',\n                                values: []\n                            });\n\n                            colors = {\n                                dataset: osApi.getDataSource().disease,\n                                type: 'color',\n                                name: genes.reduce(function(p, c) {\n                                    p += c.op + c.gene + \" \";\n                                    return p;\n                                }, \"\"),\n                                data: data\n                            };\n                            osApi.setPatientColor(colors);\n                        }\n                        osApi.setBusy(false);\n                    });\n                });\n\n            };\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortMenu', cohortMenu);\n\n    /** @ngInject */\n    function cohortMenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortmenu/cohortmenu.html',\n            controller: CohortMenuController,\n            controllerAs: 'vm',\n            scope: {},\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortMenuController(osApi, $state, $scope, $sce, $timeout, $rootScope, $filter, d3) {\n\n\n            // View Model\n            var vm = this;\n            vm.cohorts = [];\n            vm.cohort = null;\n            vm.cohortFeatures = [];\n            vm.cohortFeature = null;\n            vm.cohortSummary = \"\";\n\n            // Cohort Service Integration\n            osApi.onCohortsChange.add(function(cohorts) {\n                vm.cohorts = cohorts;\n                updateSurvival(cohorts);\n            });\n            osApi.onCohortChange.add(function(cohort) {\n\n                var dataInfo = osApi.getCohortDatasetInfo();\n                var summary =\n                    $filter('number')(dataInfo.numSamples) + \" Samples In Dataset<br /> \" +\n                    $filter('number')(dataInfo.numPatients) + \" Patients In Dataset<br /> \" +\n                    $filter('number')(cohort.numSamples) + \" Samples In Current Cohort<br /> \" +\n                    $filter('number')(cohort.numPatients) + \" Patients In Current Cohort<br />\" +\n                    $filter('number')(cohort.numClinical) + \" Patients with Clinical Data<br />\" +\n                    $filter('number')(cohort.survival.data.tte.length) + \" Patients with Survival Outcome<br />\";\n                //$filter('number')(toolInfo.numSamplesVisible) + \" Samples In Current Cohort Showing<br />\" +\n                //$filter('number')(toolInfo.numPatients) + \" Patients In Current Cohort Showing<br />\";\n\n                vm.cohortSummary = $sce.trustAsHtml(summary);\n\n                if (angular.isUndefined(cohort)) return;\n                $timeout(function() {\n                    var featureIdx = (vm.cohortFeature !== null) ? vm.cohortFeatures.indexOf(vm.cohortFeature) : 0;\n                    vm.cohort = cohort;\n                    vm.cohortFeatures = cohort.histogram.features;\n                    vm.cohortFeature = cohort.histogram.features[featureIdx];\n                });\n                updateSurvival(vm.cohorts.concat([cohort]));\n            });\n\n            // Cohort edit\n            vm.setCohort = function(cohort) {\n                if (angular.isString(cohort)) {\n                    osApi.setCohort([], osApi.ALL, osApi.SAMPLE);\n                } else {\n                    osApi.setCohort(cohort);\n                }\n            };\n\n            vm.updateCohort = function() {\n                if (vm.cohort.type == \"UNSAVED\") {\n                    osApi.saveCohort(vm.cohort);\n                } else {\n                    osApi.deleteCohort(vm.cohort);\n                }\n            };\n\n            // Tray Expand / Collapse\n            var elTray = angular.element(\".cohort-menu\");\n            var isLocked = true;\n            var mouseOver = function() { elTray.removeClass(\"tray-collapsed-left\"); };\n            var mouseOut = function() { elTray.addClass(\"tray-collapsed-left\"); };\n            vm.toggle = function() {\n                isLocked = !isLocked;\n                angular.element(\"#cohortmenu-lock\")\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock')\n                    .attr(\"locked\", isLocked ? \"true\" : \"false\");\n                if (isLocked) {\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed-left\");\n                } else {\n                    elTray\n                        .addClass(\"tray-collapsed-left\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                }\n                osApi.onResize.dispatch();\n            };\n\n            // Histogram \n            var histSvg = d3.select(\"#cohortmenu-chart\").append(\"svg\")\n                .attr(\"width\", 260)\n                .attr(\"height\", 150)\n                .append(\"g\");\n            var histSingleValueLabel = angular.element(\"#cohortmenu-single-value\");\n            var elTip = d3.tip().attr(\"class\", \"tip\").offset([-8, 0]).html(function(d) {\n                return \"Range: \" + d.label + \"<br>Count: \" + d.value + \" of \" + vm.cohortFeature.data.count + \"<br>Percent: \" + $filter('number')((d.value / vm.cohortFeature.data.count) * 100, 2) + \"%\";\n            });\n            histSvg.call(elTip);\n            $scope.$watch('vm.cohortFeature', function() {\n\n                // Histogram\n                if (vm.cohortFeature === null) return;\n                var data = vm.cohortFeature.data;\n                if (data.type == \"factor\") {\n                    if (data.hist.length == 1) {\n                        histSingleValueLabel.text(data.hist[0].label).css(\"display\", \"block\").removeClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                } else {\n                    if (data.min == data.max) {\n                        histSingleValueLabel.text(data.min).css(\"display\", \"block\").addClass(\"cohortmenu-single-value-numeric\");\n                        histSvg.classed(\"cohort-chart-hide\", true);\n                        return;\n                    }\n                }\n                histSingleValueLabel.text('').css(\"display\", \"none\");\n                histSvg.classed(\"cohort-chart-hide\", false);\n                var barWidth = Math.floor((250 - data.bins) / data.bins);\n\n\n                if (data.histRange[0] > 0) data.histRange[0] -= 2;\n                var yScale = d3.scaleLinear()\n                    .domain([0, data.histRange[1]])\n                    .range([0, 135]);\n                var bars = histSvg\n                    .selectAll(\".cohort-menu-chart-bar\")\n                    .data(data.hist);\n                bars.enter()\n                    .append(\"rect\")\n                    .attr(\"class\", \"cohort-menu-chart-bar\")\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .on(\"mouseover\", elTip.show)\n                    .on(\"mouseout\", elTip.hide);\n                bars\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return ((barWidth + 1) * i) + 5; })\n                    .attr(\"y\", function(d) { return 150 - yScale(d.value); })\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth);\n                bars.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n                var labels = histSvg\n                    .selectAll(\"text\")\n                    .data(data.hist);\n                labels.enter()\n                    .append(\"text\")\n                    .attr(\"x\", function(d, i) { return ((4 + (barWidth + 1) * i) + (barWidth * 0.5)) + 1; })\n                    .attr(\"y\", function(d) { return 145 - yScale(d.value); })\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"height\", function(d) { return yScale(d.value); })\n                    .attr(\"width\", barWidth)\n                    .attr(\"font-size\", \"8px\")\n                    .attr(\"text-anchor\", \"middle\")\n                    .text(function(d) { return d.label; });\n                labels\n                    .transition()\n                    .duration(300)\n                    .attr(\"x\", function(d, i) { return (((barWidth + 1) * i) + (barWidth * 0.5)) + 5; })\n                    .attr(\"y\", function(d) {\n                        var y = 145 - yScale(d.value);\n                        if (y < 0) y = 20;\n                        return y;\n                    })\n                    .text(function(d) { return d.label; });\n                labels.exit()\n                    .transition()\n                    .duration(300)\n                    .attr(\"y\", 150)\n                    .attr(\"height\", 0)\n                    .style('fill-opacity', 1e-6)\n                    .remove();\n\n            });\n\n\n            var formatDays = function(d) {\n                if (Math.abs(d) === 0) return d;\n                if (Math.abs(d) < 30) return d + \" Days\";\n                if (Math.abs(d) < 360) return Math.round((d / 30.4) * 10) / 10 + \" Mos\";\n                return Math.round((d / 365) * 10) / 10 + \" Yrs\";\n            };\n\n\n\n            // Survival\n            var surSvg = d3.select(\"#cohortmenu-survival\").append(\"svg\");\n            var surLines = surSvg.append(\"g\")\n                .selectAll(\"cohortmenu-survival-percent-line\")\n                .data([0.25, 0.5, 0.75]);\n\n            surLines.enter()\n                .append(\"line\").attr(\"class\", \"cohortmenu-survival-percent-line\")\n                .attr(\"stroke-width\", 1)\n                .attr(\"stroke\", \"#EAEAEA\")\n                .attr(\"x1\", 0).attr(\"x2\", 250).attr(\"y1\", function(d) {\n                    return (d * 140);\n                }).attr(\"y2\", function(d) {\n                    return (d * 140);\n                });\n\n            var surXAxis = surSvg.append(\"g\").attr(\"class\", \"axisCohort\");\n            var surLayout = {\n                width: 250,\n                height: 170,\n                xScale: null,\n                yScale: null,\n                xAxis: d3.axisBottom().ticks(4).tickFormat(formatDays)\n            };\n            surSvg.attr(\"width\", '100%').attr(\"height\", surLayout.height);\n\n            var updateSurvival = function(cohorts) {\n\n                var xDomain = cohorts.reduce(function(p, c) {\n                    p[0] = Math.min(p[0], c.survival.compute[0].t);\n                    p[1] = Math.max(p[1], c.survival.compute[c.survival.compute.length - 1].t);\n                    return p;\n                }, [Infinity, -Infinity]);\n\n                surLayout.xScale = d3.scaleLinear()\n                    .domain(xDomain)\n                    .range([0, surLayout.width - 1]);\n\n                surLayout.yScale = d3.scaleLinear()\n                    .domain([0, 1])\n                    .range([surLayout.height - 30, 0]);\n\n                var lineFunction = d3.line()\n                    .curve(d3.curveStepBefore)\n                    .x(function(d) { return Math.round(surLayout.xScale(d.t)); })\n                    .y(function(d) { return Math.round(surLayout.yScale(d.s)); });\n\n                surLayout.xAxis.scale(surLayout.xScale);\n                surXAxis.attr(\"transform\", \"translate(0, \" + (surLayout.yScale(0)) + \")\")\n                    .call(surLayout.xAxis)\n                    .selectAll(\"text\")\n                    .style(\"text-anchor\", function(d, i) { return (i === 0) ? \"start\" : \"center\"; });\n\n                surSvg.selectAll(\".survival-line\").remove();\n\n                for (var i = 0; i < cohorts.length; i++) {\n                    var cohort = cohorts[i];\n                    surSvg.append(\"path\")\n                        .datum(cohort.survival.compute)\n                        .attr(\"class\", \"survival-line\")\n                        .style(\"stroke\", cohort.color)\n                        .attr(\"d\", lineFunction);\n                }\n\n            };\n\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osBarchart', barchart);\n\n    /** @ngInject */\n    function barchart() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/barchart/barchart.html',\n            controller: BarchartController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function BarchartController(d3, osApi, $state, $timeout) {\n\n            var vm = this;\n            vm.datasource = osApi.getDataSource();\n\n            var n = 5, // number of layers\n                m = 58, // number of samples per layer\n                stack = d3.layout.stack(),\n                layers = stack(d3.range(n).map(function() {\n                    return bumpLayer(m, 0.1);\n                })),\n                yGroupMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y;\n                    });\n                }),\n                yStackMax = d3.max(layers, function(layer) {\n                    return d3.max(layer, function(d) {\n                        return d.y0 + d.y;\n                    });\n                });\n\n            var margin = {\n                    top: 40,\n                    right: 10,\n                    bottom: 20,\n                    left: 10\n                },\n                width = 960 - margin.left - margin.right,\n                height = 500 - margin.top - margin.bottom;\n\n            var x = d3.scaleOrdinal()\n                .domain(d3.range(m))\n                .rangeRoundBands([0, width], 0.08);\n\n            var y = d3.scaleLinear()\n                .domain([0, yStackMax])\n                .range([height, 0]);\n\n            var color = d3.scaleLinear()\n                .domain([0, n - 1])\n                .range([\"#aad\", \"#556\"]);\n\n            var xAxis = d3.svg.axis()\n                .scale(x)\n                .tickSize(0)\n                .tickPadding(6)\n                .orient(\"bottom\");\n\n            var svg = d3.select(\"body\").append(\"svg\")\n                .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            var layer = svg.selectAll(\".layer\")\n                .data(layers)\n                .enter().append(\"g\")\n                .attr(\"class\", \"layer\")\n                .style(\"fill\", function(d, i) {\n                    return color(i);\n                });\n\n            var rect = layer.selectAll(\"rect\")\n                .data(function(d) {\n                    return d;\n                })\n                .enter().append(\"rect\")\n                .attr(\"x\", function(d) {\n                    return x(d.x);\n                })\n                .attr(\"y\", height)\n                .attr(\"width\", x.rangeBand())\n                .attr(\"height\", 0);\n\n            rect.transition()\n                .delay(function(d, i) {\n                    return i * 10;\n                })\n                .attr(\"y\", function(d) {\n                    return y(d.y0 + d.y);\n                })\n                .attr(\"height\", function(d) {\n                    return y(d.y0) - y(d.y0 + d.y);\n                });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(xAxis);\n\n            d3.selectAll(\"input\").on(\"change\", change);\n\n            var timeout = $timeout(function() {\n                d3.select(\"input[value=\\\"grouped\\\"]\").property(\"checked\", true).each(change);\n            }, 2000);\n\n            function change() {\n                clearTimeout(timeout);\n                if (this.value === \"grouped\") transitionGrouped();\n                else transitionStacked();\n            }\n\n            function transitionGrouped() {\n                y.domain([0, yGroupMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"x\", function(d, i, j) {\n                        return x(d.x) + x.rangeBand() / n * j;\n                    })\n                    .attr(\"width\", x.rangeBand() / n)\n                    .transition()\n                    .attr(\"y\", function(d) {\n                        return y(d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return height - y(d.y);\n                    });\n            }\n\n            function transitionStacked() {\n                y.domain([0, yStackMax]);\n\n                rect.transition()\n                    .duration(500)\n                    .delay(function(d, i) {\n                        return i * 10;\n                    })\n                    .attr(\"y\", function(d) {\n                        return y(d.y0 + d.y);\n                    })\n                    .attr(\"height\", function(d) {\n                        return y(d.y0) - y(d.y0 + d.y);\n                    })\n                    .transition()\n                    .attr(\"x\", function(d) {\n                        return x(d.x);\n                    })\n                    .attr(\"width\", x.rangeBand());\n            }\n\n            // Inspired by Lee Byron's test data generator.\n            function bumpLayer(n, o) {\n\n                function bump(a) {\n                    var x = 1 / (0.1 + Math.random()),\n                        y = 2 * Math.random() - 0.5,\n                        z = 10 / (0.1 + Math.random());\n                    for (var i = 0; i < n; i++) {\n                        var w = (i / n - y) * z;\n                        a[i] += x * Math.exp(-w * w);\n                    }\n                }\n\n                var a = [],\n                    i;\n                for (i = 0; i < n; ++i) a[i] = o + o * Math.random();\n                for (i = 0; i < 5; ++i) bump(a);\n                return a.map(function(d, i) {\n                    return {\n                        x: i,\n                        y: Math.max(0, d)\n                    };\n                });\n            }\n\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($window, $exceptionHandler) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError(message, fileName, lineNumber, columnNumber, error) {\n            if (!error) {\n                error = new Error(message);\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = (columnNumber || 0);\n            }\n            $exceptionHandler(error);\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n        // Resolutions\n        var resolveDatasource = function(osApi) {\n            osApi.setBusy(true);\n            return new Promise(function(resolve) {\n                osApi.init().then(function() {\n                    resolve();\n                    angular.element(\"#main\").removeClass(\"container-main-full\");\n                    angular.element(\"#header\").css({ display: \"block\" });\n                    angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                    osApi.onNavChange.dispatch(\"\");\n                });\n            });\n        };\n\n        var resolveTools = function(osApi, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveDatasource(osApi).then(function() {\n                    osApi.setDataSource($stateParams.datasource).then(function() {\n                        resolve();\n                        angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                        osApi.onNavChange.dispatch(\"TOOLS\");\n                    });\n\n                });\n            });\n        };\n\n\n        var prevDatasource = \"\";\n        var resolveTool = function(osApi, $stateParams) {\n            return new Promise(function(resolve) {\n                resolveTools(osApi, $stateParams).then(function() {\n                    if (osApi.getCohort() === null || $stateParams.datasource !== prevDatasource) {\n                        osApi.setDataSource($stateParams.datasource).then(function() {\n                            resolve();\n                            angular.element(\"#cohortMenu\").css({ display: \"block\" });\n                            osApi.onNavChange.dispatch(\"TOOL\");\n                        });\n\n                    } else {\n                        angular.element(\"#cohortMenu\").css({ display: \"block\" });\n                        osApi.onNavChange.dispatch(\"TOOL\");\n                        resolve();\n                    }\n                    prevDatasource = $stateParams.datasource;\n\n                });\n            });\n\n        };\n\n        var resolveLanding = function(osApi, $timeout) {\n            $timeout(function() {\n                angular.element(\"#main\").addClass(\"container-main-full\");\n                angular.element(\"#header\").css({ display: \"none\" });\n                angular.element(\"#cohortMenu\").css({ display: \"none\" });\n                osApi.onNavChange.dispatch(\"\");\n            }, 200);\n        };\n\n\n        // States\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveLanding: resolveLanding\n                }\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveDatasource: resolveDatasource\n                }\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTools: resolveTools\n                }\n            })\n            .state('scatter', {\n                url: '/scatter/{datasource}',\n                template: '<os-scatter>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('spreadsheet', {\n                url: '/spreadsheet/{datasource}',\n                template: '<os-spreadsheet>',\n                datasource: true,\n                help: \"/spreadsheet.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                datasource: true,\n                help: \"/pca.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('comparecluster', {\n                url: '/cc/{datasource}',\n                template: '<os-compare-cluster>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                datasource: true,\n                help: \"/markerspatients.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            // .state('ms', {\n            //     url: '/ms/{datasource}',\n            //     template: '<os-ms>',\n            //     datasource: true,\n            //     resolve: {\n            //         resolveTool: resolveTool\n            //     }\n            // })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                datasource: true,\n                help: \"/pathways.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                datasource: true,\n                help: \"/timelines.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                datasource: true,\n                help: \"/survival.html\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('sunburst', {\n                url: '/sunburst/{datasource}',\n                template: '<os-sunburst>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('heatmap', {\n                url: '/heatmap/{datasource}',\n                template: '<os-heatmap>',\n                datasource: false,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            })\n            .state('login', {\n                url: '/login/',\n                template: '<os-login>',\n                datasource: false,\n                help: \"/\",\n                resolve: {}\n            })\n            .state('barcharts', {\n                url: '/barchart/{datasource}',\n                template: '<os-barchart>',\n                datasource: true,\n                help: \"/\",\n                resolve: {\n                    resolveTool: resolveTool\n                }\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n/* global hello:false, ML:false, jStat:false, TWEEN:false, d3:false, $:false, signals:false, cytoscape:false, document:false, moment:false, _:false, hello:false, localStorage:false, jStat:false, saveAs:false, TextEncoder:false */\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('ML', ML)\n        .constant('TWEEN', TWEEN)\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('$', $)\n        .constant('auth', hello)\n        .constant('jStat', jStat)\n        .constant('localStorage', localStorage)\n        .constant('saveAs', saveAs)\n        .constant('TextEncoder', TextEncoder)\n        .constant('jStat', jStat)\n        .constant('hello', hello)\n        .constant('_', _);\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        $logProvider.debugEnabled(false);\n    }\n\n})();\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/barchart/barchart.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"barchart-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/cohortmenu/cohortmenu.html\",\"<div id=\\\"cohortMenu\\\" style=\\\"display:none\\\"><label class=\\\"tray-label tray-label-left\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"cohort-menu tray tray-left\\\"><section><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label>Selected Cohort</label><div class=\\\"input-group\\\"><input ng-readonly=\\\"vm.cohort.type==\\'ALL\\'\\\" style=\\\"background:#FFF;border-left-width:10px;border-left-color:{{vm.cohort.color}};\\\" class=\\\"form-control\\\" aria-label=\\\"Text input with segmented button dropdown\\\" ng-model=\\\"vm.cohort.name\\\" onfocus=\\\"this.select();\\\"><div class=\\\"input-group-btn\\\"><button type=\\\"button\\\" class=\\\"btn btn-default\\\" tooltip=\\\"{{vm.cohort.type == \\'UNSAVED\\' ? \\'Save Cohort\\' : \\'Delete Cohort\\'}}\\\" tooltip-placement=\\\"left\\\" ng-if=\\\"vm.cohort.type!=\\'ALL\\'\\\" ng-click=\\\"vm.updateCohort()\\\"><span class=\\\"fa {{vm.cohort.type == \\'UNSAVED\\' ? \\'fa-plus\\' : \\'fa-times\\'}}\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" tooltip=\\\"Change Cohort\\\" tooltip-placement=\\\"left\\\"><span class=\\\"caret\\\"></span> <span class=\\\"sr-only\\\">Toggle Dropdown</span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" style=\\\"width:260px;padding:0px;\\\"><li class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"height:25px;border-color:{{item.color}};width:100%;padding-left:10px;\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-histogram\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Clinical Histogram <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-histogram\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;\\\"><div id=\\\"cohortmenu-chart\\\" style=\\\"width:100%;height:150px;\\\"><div id=\\\"cohortmenu-single-value\\\" class=\\\"cohortmenu-single-value\\\"></div></div><div class=\\\"dropdown\\\" style=\\\"width:100%\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\" style=\\\"width:100%;border:0px solid #eaeaea;border-top-width:1px;\\\">{{vm.cohortFeature.label}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" style=\\\"width:260px;padding:0px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.cohortFeatures\\\" ng-click=\\\"vm.cohortFeature=item\\\">{{item.label}}</li></ul></div></div></div><div class=\\\"col-xs-12 form-item cohortmenu-hr\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-survival-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Survival Curve <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-survival-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\"><div id=\\\"cohortmenu-survival\\\"></div><label>Cohorts</label><div ng-repeat=\\\"item in vm.cohorts\\\" class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"border-color:{{item.color}};padding-left:10px;\\\" ng-click=\\\"vm.setCohort(item)\\\">{{item.name}}</div><label>Selected Cohort</label><div class=\\\"legend-bar markers-command hvr-sweep-to-right\\\" style=\\\"height:25px;border-color:{{vm.cohort.color}};padding-left:10px;\\\">{{vm.cohort.name}} ({{vm.cohort.type}})</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label class=\\\"cohortmenu-toggle-btn\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#cohortmenu-summary-box\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"right\\\">Cohort Summary <i class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></i></label><div id=\\\"cohortmenu-summary-box\\\" class=\\\"collapse in\\\" style=\\\"background:#FFF;border:1px solid #EAEAEA;padding:5px;\\\" ng-bind-html=\\\"vm.cohortSummary\\\"></div></div><div id=\\\"cohortmenu-legand\\\"></div></div><i id=\\\"cohortmenu-lock\\\" class=\\\"fa fa-lock tray-sticky-icon\\\" ng-click=\\\"vm.toggle()\\\" locked=\\\"true\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"left\\\"></i></section></div></div>\");\n$templateCache.put(\"app/components/colorpanel/colorpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.resetColor()\\\">Reset Color Options</button></div></div><div ng-repeat=\\\"item in vm.optPatientColors\\\"><br><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\">{{item.name}}</div></div><div class=\\\"row\\\"><div class=\\\"col-xs-4\\\" ng-repeat=\\\"color in item.values\\\"><a class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></div></div></div></div>\");\n$templateCache.put(\"app/components/compareclusters/compareclusters.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Grid</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Layout Options</button></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Compare Clusters</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><br><div id=\\\"compareclusterChart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><br><p style=\\\"float:right;padding-top:22px;\\\"><a href=\\\"https://cancergenome.nih.gov/publications/publicationguidelines\\\" target=\\\"_blank\\\">Publication Guidelines</a></p><h1>Disease Datasets</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{dataset.img}}\\\"><p class=\\\"datasource-h1\\\">{{dataset.name}}</p><p class=\\\"datasource-h2\\\">{{dataset.source}} | 11-17-2016</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div id=\\\"header\\\" class=\\\"header\\\" style=\\\"display:none\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#header-navbar\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"position:relative;\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo-white.png\\\" class=\\\"header-logo-img\\\"> <span class=\\\"header-logo-text\\\">Oncoscape</span></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"header-navbar\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"dropdown\\\" ng-show=\\\"vm.showTools\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-stats\\\"></span>Tools</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:80vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadTool(item.route)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.desc}}</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Datasets</a><ul class=\\\"dropdown-menu row\\\" style=\\\"max-height:88vh;overflow:scroll;\\\"><li ng-repeat=\\\"item in vm.datasources\\\" style=\\\"padding-bottom:10px\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.loadDataset(item.disease)\\\"><div class=\\\"datasource-btn\\\" style=\\\"color:#000\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/img{{item.img}}\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.source}} | 11-17-2016</p></div></li></ul></li><li class=\\\"dropdown\\\" ng-show=\\\"vm.showDatasets\\\"><a href=\\\"\\\" class=\\\"dropdown-toggle header-link\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><span class=\\\"fa fa-users\\\"></span>Cohorts</a><div class=\\\"dropdown-menu container-fluid\\\"><div class=\\\"row\\\"><div ng-if=\\\"!vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Create A Cohort</h2>Oncoscape allows you to pass cohorts of patients from one tool to the next. To create a cohort out of your current selection click create cohort.<br><button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.addPatientCohort(); $event.stopPropagation();\\\">Create Cohort</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=true; $event.stopPropagation();\\\">Import Cohort</button></div><div ng-if=\\\"vm.showImport\\\" class=\\\"col-xs-12 col-sm-3\\\" style=\\\"border:0px solid #DDD; border-right-width:1px;\\\"><h2 style=\\\"margin-top:0px;\\\">Import A Cohort</h2>Enter a comma seperated list of patient or sample IDs below and click import<br><input ng-model=\\\"vm.importName\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"Enter Cohort Name\\\"> <input ng-model=\\\"vm.importIds\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"margin-top:5px;\\\" placeholder=\\\"eg. TCGA-01-0110, TCGA-02-0220\\\"> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.importCohort(); $event.stopPropagation();\\\">Save</button> <button class=\\\"btn btn-primary\\\" style=\\\"margin-top:15px;\\\" ng-click=\\\"vm.showImport=false; $event.stopPropagation();\\\">Cancel</button></div><div class=\\\"col-xs-12 col-sm-9\\\"><h2 style=\\\"margin-top:0px;\\\">Your Cohorts</h2><div class=\\\"markers-command hvr-sweep-to-right header-cohort-btn\\\" ng-repeat=\\\"item in vm.cohorts\\\" ng-click=\\\"vm.setPatientCohort(item)\\\"><p class=\\\"datasource-h1\\\">{{item.name}}</p><p class=\\\"datasource-h2\\\">{{item.numPatients}} patients<br>{{item.numSamples}} samples<br>{{item.numClinical}} clinical records</p></div></div></div></div></li><li><a href=\\\"\\\" ng-click=\\\"vm.showHelp()\\\" target=\\\"_blank\\\" class=\\\"header-link\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"http://resources.sttrcancer.org/oncoscape-contact\\\" class=\\\"header-link\\\"><span class=\\\"fa fa-comments\\\"></span>Feedback</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.login()\\\" class=\\\"header-link\\\"><span class=\\\"fa fa-user-circle\\\"></span>Login</a></li></ul></div></div></nav></div>\");\n$templateCache.put(\"app/components/heatmap/heatmap.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><br><label></label></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Options</label><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Row Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.rowLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Dendrograms <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colDendrogram\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Column Labels <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.colLabels\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div><div class=\\\"legend-bar\\\" style=\\\"border-color:#000;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">Grid Lines <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"vm.gridlines\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Color Scheme</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.colorScheme.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.colorSchemes\\\" ng-click=\\\"vm.colorScheme=item;vm.draw()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Scale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.scale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.scales\\\" ng-click=\\\"vm.scale=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Dendrogram Clusters</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dendrogramCluster.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.dendrogramClusters\\\" ng-click=\\\"vm.dendrogramCluster=item;vm.loadHeatmap()\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Heatmap</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"heatmap-chart\\\" style=\\\"position:relative\\\"></div><div id=\\\"tooltip\\\" class=\\\"hidden\\\"><p><span id=\\\"value\\\"></span></p></div></div></section>\");\n$templateCache.put(\"app/components/help/help.html\",\"<div class=\\\"help\\\"><iframe src=\\\"http://resources.sttrcancer.org/pca?embed=true\\\"></iframe></div>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing\\\"><header class=\\\"landing container\\\"><div class=\\\"row marquee marquee-bg\\\"><div class=\\\"col-sm-12\\\"><div class=\\\"marquee-x\\\"></div><div class=\\\"header-content\\\" style=\\\"text-align:center;z-index: 999;pointer-events:none;\\\"><h1 class=\\\"landing-h1\\\">Oncoscape</h1><p class=\\\"landing-h2\\\">Cancer Explorer</p><span class=\\\"landing-buttons\\\" style=\\\"pointer-events:all;\\\"><a class=\\\"btn btn-outline btn-xl page-scroll\\\" ng-click=\\\"vm.getStarted()\\\">Explore</a> <a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"/documentation/\\\" target=\\\"_blank\\\">Learn More</a></span></div></div></div></header><div class=\\\"container-fluid\\\" style=\\\"background-color:#000; color:#FFF;padding-top:150px;padding-bottom:150px;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-7\\\"><h1 style=\\\"font-size:50px;pointer-events:none;\\\">Our Mission</h1><p style=\\\"font-size:30px;line-height:50px;\\\">Empower researchers to discover novel patterns and relationships between clinical and molecular factors.</p><a class=\\\"btn btn-outline btn-xl page-scroll\\\" href=\\\"http://cancergenome.nih.gov/publications/publicationguidelines\\\">Publishing Guidelines</a></div><div class=\\\"hidden-xs col-sm-5\\\" style=\\\"text-align:center\\\"><img src=\\\"assets/images/thumb.png\\\" class=\\\"img-responsive\\\" alt=\\\"\\\" style=\\\"display:inline-block;height:100%;\\\"></div></div></div></div>\");\n$templateCache.put(\"app/components/layoutpanel/layoutpanel.html\",\"<div class=\\\"panel panel-default mdi\\\" style=\\\"padding-bottom:30px;\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Color Options</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.close()\\\" role=\\\"button\\\" tabindex=\\\"0\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\" ng-if=\\\"vm.colorOptions.length>0\\\"><div class=\\\"col-xs-12 col-sm-9\\\"><h3>Enter Hugo Gene(s) Seperated By + And - Operators. (eg BRCA1 + BRCA2 - p53)</h3><div class=\\\"input-group\\\"><div class=\\\"input-group-btn\\\"><button style=\\\"width:150px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorOption.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorOption=item;\\\" ng-repeat=\\\"item in vm.colorOptions\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorScale.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorScale=item;\\\" ng-repeat=\\\"item in vm.colorScales\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-btn\\\"><button style=\\\"width:100px;border-radius:0px;\\\" type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{vm.colorBin.name}}&nbsp;<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\"><li ng-click=\\\"vm.colorBin=item;\\\" ng-repeat=\\\"item in vm.colorBins\\\">{{item.name}}</li></ul></div><input ng-model=\\\"vm.geneColor\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hugo Gene Symbol\\\" style=\\\"border-right-width: 0px; border-left-width: 0px; height:33px;\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"vm.setGeneColor()\\\">Submit</button></span></div></div></div><div class=\\\"row\\\"><h3 class=\\\"col-sm-3\\\" ng-repeat=\\\"item in vm.optPatientColors\\\">{{item.name}}<br><div ng-repeat=\\\"color in item.values\\\"><a href=\\\"\\\" style=\\\"font-size:12px;\\\" class=\\\"hvr-sweep-to-right markers-command\\\" ng-click=\\\"vm.setColor(color)\\\">{{color.name}}</a></div></h3></div></div><div style=\\\"position:absolute;bottom:0px;width:100%;padding:10px;font-size:10px;text-align:center;\\\">Percentages Indicate Data Availibility</div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-12\\\"><br><h1>Login</h1><button ng-click=\\\"vm.login();\\\">Grant Permission</button></div></div></div></section>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} {{item.count}} <label class=\\\"switch\\\" style=\\\"float:right\\\" tooltip=\\\"Toggle Visibility\\\" tooltip-placement=\\\"left\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div><div ng-if=\\\"vm.legendNodes.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div class=\\\"legend-bar-container\\\"><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button tooltip=\\\"Deselect\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#039BE5;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button tooltip=\\\"Select\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#039BE5;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\" ng-click=\\\"vm.showPanelLayout = true\\\">Layouts</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\" ng-click=\\\"vm.showPanelColor = true\\\">Colors</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#gene-sets\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Search {{vm.searchCount}}</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" ng-enter=\\\"vm.exeSearch()\\\" placeholder=\\\"\\\"><div class=\\\"input-group-addon btn-help-icon\\\" ng-click=\\\"vm.exeSearch()\\\">Go</div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-12 form-item\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Fit</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Markers + Patients</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> &mdash; <span class=\\\"h3-tool\\\">{{vm.optPatientLayout.name}}</span></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"legend\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><div style=\\\"position:absolute;right:10px;bottom:10px;\\\"><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.hideModal()\\\">Cancel</button> <button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div></div></div><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelLayout\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Patient Layout</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.showPanelLayout=false\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\"><div class=\\\"row\\\"><table class=\\\"tbl\\\"><thead><tr><th>Method</th><th>Gene Set</th><th>Input Data</th><th>Data Source</th></tr></thead><tbody><tr ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item;vm.showPanelLayout=false;\\\"><td>{{item.dataType}}</td><td>{{item.geneset}}</td><td>{{item.input}}</td><td>{{item.source}}</td></tr></tbody></table></div></div></div>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\" style=\\\"padding-right:0px;\\\"><div id=\\\"pathways-chart\\\" class=\\\"pathways-chart\\\"></div><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#gene-sets\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.source.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.sources\\\" ng-click=\\\"vm.source=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#data-content\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Type</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button style=\\\"max-width:220px\\\" class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.pcaType.name}}<span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.pcaTypes\\\" ng-click=\\\"vm.pcaType=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a href=\\\"http://resources.sttrcancer.org/api/#cluster\\\" target=\\\"_blank\\\"><i style=\\\"color:#000\\\" class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div ng-if=\\\"vm.legendCaption.length>0\\\" class=\\\"col-xs-12 form-item\\\"><label>Patient {{vm.legendCaption}}</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar legend-bar-button\\\" style=\\\"border-color:{{item.color}};\\\">{{item.name}}<span id=\\\"{{item.id}}\\\" class=\\\"legend-count\\\"></span> <label style=\\\"float:right;padding-top:5px;\\\" class=\\\"btn-group\\\"><button tooltip=\\\"Deselect\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.deselectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-right:1px;\\\"><i class=\\\"fa fa-circle-o\\\"></i></button> <button tooltip=\\\"Select\\\" tooltip-placement=\\\"left\\\" ng-click=\\\"vm.selectColor(item)\\\" class=\\\"btn btn-xs btn-default\\\" style=\\\"background-color:#47a8d8;color:#FFF;text-shadow: 0 1px rgba(0, 0, 0, 0.2);width:24px;margin-left:1px;\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i></button></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:100%;font-weight: 300;\\\" ng-click=\\\"vm.showPanelColor = true\\\">Color Options</button></div><div class=\\\"col-xs-12 form-item\\\"><label>Variance Explained</label><div><os-tray-piechart chart-data1=\\\"vm.pc1\\\" chart-data2=\\\"vm.pc2\\\" chart-height=\\\"130\\\"></os-tray-piechart><div class=\\\"pca-pc1-label\\\"><span>PC1</span><br>{{vm.pc1[0].value}}%</div><div class=\\\"pca-pc2-label\\\"><span>PC2</span><br>{{vm.pc2[0].value}}%</div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Loadings</label><os-tray-barchart chart-data=\\\"vm.loadings\\\" chart-height=\\\"100\\\"></os-tray-barchart></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section><os-color-panel ng-if=\\\"vm.showPanelColor\\\" close=\\\"vm.showPanelColor=false\\\"></os-color-panel>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneset.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.genesets\\\" ng-click=\\\"vm.geneset=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Data Source</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.source}} - {{vm.collection.type}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.datasource.molecular\\\" ng-click=\\\"vm.collection=item\\\">{{item.source}} - {{item.type}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis (Years)</label><div range-slider=\\\"\\\" min=\\\"vm.dx.bound.min\\\" model-min=\\\"vm.dx.value.min\\\" max=\\\"vm.dx.bound.max\\\" model-max=\\\"vm.dx.value.max\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.filterChange()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival (Days)</label><div range-slider=\\\"\\\" min=\\\"vm.dd.bound.min\\\" model-min=\\\"vm.dd.value.min\\\" max=\\\"vm.dd.bound.max\\\" model-max=\\\"vm.dd.value.max\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.filterChange()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #FF9800\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#039BE5\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"plsr-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/spreadsheet/spreadsheet.html\",\"<os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\"><label>Clinical Collections</label><div class=\\\"input-group\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.collection.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:260px;\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.collections\\\" ng-click=\\\"vm.collection=item\\\">{{item.name}}</li></ul></div><div class=\\\"input-group-addon btn-help-icon\\\"><a style=\\\"color:#000;\\\" href=\\\"http://resources.sttrcancer.org/api/#clinical-data\\\" target=\\\"_blank\\\"><i class=\\\"glyphicon glyphicon-question-sign\\\"></i></a></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>CSV Export</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'selected\\')\\\">Selected</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" style=\\\"width:50%; font-weight: 300;\\\" ng-click=\\\"vm.exportCsv(\\'all\\')\\\">All</button></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"tool-container\\\"><h2 class=\\\"h2-tool\\\">Spreadsheet</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span> <button ng-click=\\\"vm.sortSelected()\\\" class=\\\"btn btn-default\\\" style=\\\"position:absolute; left: 310px;top: 30px;\\\" tooltip=\\\"Move Selected Rows To The Top Of The Grid\\\" tooltip-placement=\\\"right\\\">Selected On Top</button> <button ng-click=\\\"vm.showPanelColumns=true\\\" class=\\\"btn btn-default\\\" style=\\\"position:absolute; right: 310px;top: 30px;\\\" tooltip=\\\"Toggle Columns On + Off\\\" tooltip-placement=\\\"right\\\">Select Columns</button><div class=\\\"grid\\\" id=\\\"spreadsheet-grid\\\" ui-grid=\\\"vm.options\\\" ui-grid-selection=\\\"\\\" ui-grid-resize-columns=\\\"\\\" ui-grid-move-columns=\\\"\\\" ui-grid-pinning=\\\"\\\" ui-grid-autoresize=\\\"\\\" ui-grid-grouping=\\\"\\\"></div></div></section><div class=\\\"panel panel-default mdi\\\" ng-if=\\\"vm.showPanelColumns\\\"><div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\">Visible Columns</h3><span class=\\\"pull-right clickable\\\" data-effect=\\\"fadeOut\\\" ng-click=\\\"vm.closePanelColumns()\\\"><i class=\\\"fa fa-times\\\"></i></span></div><div class=\\\"panel-body\\\" style=\\\"padding-top:0px;\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.showColumns()\\\">Select All</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.hideColumns()\\\">Deselect All</button></div></div><div class=\\\"row\\\"><div class=\\\"col-md-4\\\" ng-repeat=\\\"col in vm.options.columnDefs | orderBy:\\'name\\'\\\" style=\\\"text-transform:capitalize;\\\"><div class=\\\"checkbox\\\" style=\\\"margin-bottom:0px\\\"><label><input type=\\\"checkbox\\\" ng-model=\\\"col.visible\\\">{{col.name}}</label></div></div></div></div></div>\");\n$templateCache.put(\"app/components/sunburst/sunburst.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.patient.patient_ID}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.patients\\\">{{item.patient_ID}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-repeat=\\\"chart in vm.charts\\\"><label>{{chart.name}}</label><div ng-repeat=\\\"group in chart.groups\\\" class=\\\"legend-bar\\\" style=\\\"border-color:#FFF;position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><label class=\\\"switch\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"group.show\\\" ng-change=\\\"vm.draw()\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> {{group.name}}<div ng-repeat=\\\"tag in group.tags\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{tag.color}}; position: relative; padding: 2px 10px; line-height: 25px; background-color: rgb(255, 255, 255);\\\">{{tag.name}}</div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Sunburst</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"sunburst-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.cohortsLegend.length>0\\\"><label>Cohorts</label><div ng-repeat=\\\"cohort in vm.cohortsLegend track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><span>{{cohort.name}}</span> <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"cohort.show\\\" ng-change=\\\"vm.toggle(cohort)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Cohort</label><div class=\\\"legend-bar\\\" style=\\\"border-color:{{vm.cohort.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\"><span>{{vm.cohort.name}} (selected)</span></div><br><label>P-Values for Selected Cohort</label><div class=\\\"tray-chart\\\"><div ng-repeat=\\\"p in vm.pValues track by $index\\\" style=\\\"height:25px;line-height:25px;margin-bottom:1px;\\\">&nbsp; {{p.p}}<div ng-repeat=\\\"c in p.c track by $index\\\" style=\\\"background-color:{{c}};width:10px;height:25px;margin-right:1px;display:inline-block;float:left;\\\"></div></div></div></div></div></section></os-tray><section class=\\\"tray-content-block survival\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Survival Curves</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div id=\\\"survival-chart\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.align=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.events track by $index\\\" ng-click=\\\"vm.sort=item; vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Status</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Display Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.displayMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li class=\\\"markers-command hvr-sweep-to-right\\\" ng-repeat=\\\"item in vm.displayModes\\\" ng-click=\\\"vm.displayMode=item;vm.update();\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" ng-click=\\\"vm.resetZoom()\\\" style=\\\"text-align:center;\\\">Clear Selection + Reset Zoom</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Events</label><div ng-repeat=\\\"item in vm.events track by $index\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.selected\\\" ng-change=\\\"vm.update();\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div style=\\\"position:absolute;top:10px;text-align:center;width:100%;\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><span class=\\\"h3-tool\\\">{{vm.datasource.source}} {{vm.datasource.name}}</span><div class=\\\"timelines-content\\\" style=\\\"margin-top:20px;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-12 col-md-8\\\"><br><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4\\\" ng-click=\\\"vm.explore(tool.route)\\\"><div class=\\\"datasource-btn\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/{{tool.img}}\\\"><p class=\\\"datasource-h1\\\" style=\\\"padding-top:10px;\\\">{{tool.name}}</p><p class=\\\"datasource-h2\\\">{{tool.desc}}</p></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\"><i class=\\\"fa fa-chevron-left\\\" aria-hidden=\\\"true\\\"></i></label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\" tooltip=\\\"Show / Hide\\\" tooltip-placement=\\\"left\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}